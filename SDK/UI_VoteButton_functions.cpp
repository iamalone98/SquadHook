#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_VoteButton

#include "Basic.hpp"

#include "UI_VoteButton_classes.hpp"
#include "UI_VoteButton_parameters.hpp"


namespace SDK
{

// Function UI_VoteButton.UI_VoteButton_C.VoteSelected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_VoteId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_VoteButton_C::VoteSelected__DelegateSignature(class FName Param_VoteId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteButton_C", "VoteSelected__DelegateSignature");

	Params::UI_VoteButton_C_VoteSelected__DelegateSignature Parms{};

	Parms.Param_VoteId = Param_VoteId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteButton.UI_VoteButton_C.ExecuteUbergraph_UI_VoteButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_VoteButton_C::ExecuteUbergraph_UI_VoteButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteButton_C", "ExecuteUbergraph_UI_VoteButton");

	Params::UI_VoteButton_C_ExecuteUbergraph_UI_VoteButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteButton.UI_VoteButton_C.BndEvt__UI_VoteButton_VoteNone_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bHovered                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_VoteButton_C::BndEvt__UI_VoteButton_VoteNone_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature(bool bHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteButton_C", "BndEvt__UI_VoteButton_VoteNone_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature");

	Params::UI_VoteButton_C_BndEvt__UI_VoteButton_VoteNone_K2Node_ComponentBoundEvent_0_OnHover__DelegateSignature Parms{};

	Parms.bHovered = bHovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteButton.UI_VoteButton_C.BndEvt__UI_VoteNone_VoteNone_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UW_MainMenuButton_C*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_VoteButton_C::BndEvt__UI_VoteNone_VoteNone_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, class UW_MainMenuButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteButton_C", "BndEvt__UI_VoteNone_VoteNone_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");

	Params::UI_VoteButton_C_BndEvt__UI_VoteNone_VoteNone_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature Parms{};

	Parms.bSelected = bSelected;
	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteButton.UI_VoteButton_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_VoteButton_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteButton_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_VoteButton.UI_VoteButton_C.OnVoteUpdated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             VoteSession                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerCurrentVotes                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_VoteButton_C::OnVoteUpdated(class USQVoteSessionClient* VoteSession, int32 PlayerCurrentVotes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteButton_C", "OnVoteUpdated");

	Params::UI_VoteButton_C_OnVoteUpdated Parms{};

	Parms.VoteSession = VoteSession;
	Parms.PlayerCurrentVotes = PlayerCurrentVotes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteButton.UI_VoteButton_C.MarkSelected
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_VoteButton_C::MarkSelected(bool Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteButton_C", "MarkSelected");

	Params::UI_VoteButton_C_MarkSelected Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteButton.UI_VoteButton_C.SetDisplayText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewText                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_VoteButton_C::SetDisplayText(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteButton_C", "SetDisplayText");

	Params::UI_VoteButton_C_SetDisplayText Parms{};

	Parms.NewText = std::move(NewText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteButton.UI_VoteButton_C.SetVotesCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             VotesText                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_VoteButton_C::SetVotesCount(const class FText& VotesText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteButton_C", "SetVotesCount");

	Params::UI_VoteButton_C_SetVotesCount Parms{};

	Parms.VotesText = std::move(VotesText);

	UObject::ProcessEvent(Func, &Parms);
}

}


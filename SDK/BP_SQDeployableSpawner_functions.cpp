#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQDeployableSpawner

#include "Basic.hpp"

#include "BP_SQDeployableSpawner_classes.hpp"
#include "BP_SQDeployableSpawner_parameters.hpp"


namespace SDK
{

// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.ExecuteUbergraph_BP_SQDeployableSpawner
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::ExecuteUbergraph_BP_SQDeployableSpawner(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "ExecuteUbergraph_BP_SQDeployableSpawner");

	Params::BP_SQDeployableSpawner_C_ExecuteUbergraph_BP_SQDeployableSpawner Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SQDeployableSpawner_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_SQDeployableSpawner_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.OnDeployableDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::OnDeployableDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "OnDeployableDestroyed");

	Params::BP_SQDeployableSpawner_C_OnDeployableDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.OnDeployableSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASQDeployable*                    OutDeployable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::OnDeployableSpawned(class ASQDeployable* OutDeployable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "OnDeployableSpawned");

	Params::BP_SQDeployableSpawner_C_OnDeployableSpawned Parms{};

	Parms.OutDeployable = OutDeployable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SQDeployableSpawner_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.GenerateReservedAreaDisplay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SQDeployableSpawner_C::GenerateReservedAreaDisplay(bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "GenerateReservedAreaDisplay");

	Params::BP_SQDeployableSpawner_C_GenerateReservedAreaDisplay Parms{};

	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.GeneratePreviewMesh
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SQDeployableSpawner_C::GeneratePreviewMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "GeneratePreviewMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.RefreshPreview
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SQDeployableSpawner_C::RefreshPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "RefreshPreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.SetPreviewMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::SetPreviewMesh(class UStaticMeshComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "SetPreviewMesh");

	Params::BP_SQDeployableSpawner_C_SetPreviewMesh Parms{};

	Parms.Mesh = Mesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.LoadPreviewMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             AssetClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::LoadPreviewMesh(TSoftClassPtr<class UClass> AssetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "LoadPreviewMesh");

	Params::BP_SQDeployableSpawner_C_LoadPreviewMesh Parms{};

	Parms.AssetClass = AssetClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.GetDebugTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESQTeam                                 Out_Debug_Team                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::GetDebugTeam(ESQTeam* Out_Debug_Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "GetDebugTeam");

	Params::BP_SQDeployableSpawner_C_GetDebugTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Debug_Team != nullptr)
		*Out_Debug_Team = Parms.Out_Debug_Team;
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.GetDebugPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Out_Position                                           (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_SQDeployableSpawner_C::GetDebugPosition(struct FTransform* Out_Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "GetDebugPosition");

	Params::BP_SQDeployableSpawner_C_GetDebugPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Position != nullptr)
		*Out_Position = std::move(Parms.Out_Position);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.SetPreviewText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InTextColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::SetPreviewText(const struct FLinearColor& InTextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "SetPreviewText");

	Params::BP_SQDeployableSpawner_C_SetPreviewText Parms{};

	Parms.InTextColor = std::move(InTextColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.ApplyHealthSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQDeployable*                    In_Deployable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::ApplyHealthSetting(class ASQDeployable* In_Deployable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "ApplyHealthSetting");

	Params::BP_SQDeployableSpawner_C_ApplyHealthSetting Parms{};

	Parms.In_Deployable = In_Deployable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.ApplyFlagsOverrides
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQDeployable*                    In_Deployable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::ApplyFlagsOverrides(class ASQDeployable* In_Deployable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "ApplyFlagsOverrides");

	Params::BP_SQDeployableSpawner_C_ApplyFlagsOverrides Parms{};

	Parms.In_Deployable = In_Deployable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.ApplyLifeSpan
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQDeployable*                    In_Deployable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Out_KeepSpawnerAlive                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SQDeployableSpawner_C::ApplyLifeSpan(class ASQDeployable* In_Deployable, bool* Out_KeepSpawnerAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "ApplyLifeSpan");

	Params::BP_SQDeployableSpawner_C_ApplyLifeSpan Parms{};

	Parms.In_Deployable = In_Deployable;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_KeepSpawnerAlive != nullptr)
		*Out_KeepSpawnerAlive = Parms.Out_KeepSpawnerAlive;
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.GetSpawnerBound
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutBounds                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::GetSpawnerBound(struct FVector* OutBounds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "GetSpawnerBound");

	Params::BP_SQDeployableSpawner_C_GetSpawnerBound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutBounds != nullptr)
		*OutBounds = std::move(Parms.OutBounds);
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.CanSpawnDeployable
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USQDeployableSettings*            InAvailableDeployable                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SQDeployableSpawner_C::CanSpawnDeployable(const class USQDeployableSettings* InAvailableDeployable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "CanSpawnDeployable");

	Params::BP_SQDeployableSpawner_C_CanSpawnDeployable Parms{};

	Parms.InAvailableDeployable = InAvailableDeployable;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.IsConfigurationValid
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SQDeployableSpawner_C::IsConfigurationValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "IsConfigurationValid");

	Params::BP_SQDeployableSpawner_C_IsConfigurationValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.GetDeployableReference
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USQDeployableSettings*            InDeployableSettings                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             OutDeployableReference                                 (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)

void ABP_SQDeployableSpawner_C::GetDeployableReference(class USQDeployableSettings* InDeployableSettings, TSoftClassPtr<class UClass>* OutDeployableReference) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "GetDeployableReference");

	Params::BP_SQDeployableSpawner_C_GetDeployableReference Parms{};

	Parms.InDeployableSettings = InDeployableSettings;

	UObject::ProcessEvent(Func, &Parms);

	if (OutDeployableReference != nullptr)
		*OutDeployableReference = Parms.OutDeployableReference;
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.IsSpawnerAvailable
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SQDeployableSpawner_C::IsSpawnerAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "IsSpawnerAvailable");

	Params::BP_SQDeployableSpawner_C_IsSpawnerAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SQDeployableSpawner.BP_SQDeployableSpawner_C.GetDeployablePriority
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FSQAvailabilityState_Deployable  InAvailableDeployable                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_SQDeployableSpawner_C::GetDeployablePriority(const struct FSQAvailabilityState_Deployable& InAvailableDeployable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQDeployableSpawner_C", "GetDeployablePriority");

	Params::BP_SQDeployableSpawner_C_GetDeployablePriority Parms{};

	Parms.InAvailableDeployable = std::move(InAvailableDeployable);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


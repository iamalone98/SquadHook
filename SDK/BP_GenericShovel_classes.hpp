#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GenericShovel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_GenericEquippableItem_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GenericShovel.BP_GenericShovel_C
// 0x0048 (0x04C0 - 0x0478)
class ABP_GenericShovel_C : public ABP_GenericEquippableItem_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0478(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<EObjectTypeQuery>                      Interact_Object_Types;                             // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Trace_Length;                                      // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCurrentlyBuilding;                              // 0x0494(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D7[0x3];                                     // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Objects_To_Ignore;                                 // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bCouldBuild;                                       // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D8[0x3];                                     // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BuildHealthAmount;                                 // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceSphereRadius;                                 // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBuilding;                                        // 0x04B4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          bIsRemovingHealth;                                 // 0x04B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDestroying;                                      // 0x04B6(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          BPCachedDig;                                       // 0x04B7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BuildPercentage;                                   // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DestroyPercentage;                                 // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GenericShovel(int32 EntryPoint);
	void Event_Destroy(bool Destroying);
	void Event_Dig(bool Digging);
	void MovementWasBlocked();
	void ServerStopBuilding();
	void ServerStartBuilding(bool IsConstructing);
	void BlueprintOnUnequip();
	void BPEndAltUse();
	void BPBeginAltUse();
	void BPEndUse();
	void BPBeginUse();
	void ApplyHealth(class ASQDeployable* DeployableToBuild, float HealAmount);
	void HitDeployable();
	void MovementBlock(bool* AllowHit);
	void TryShovel(class ASQDeployable** Deployable);
	void CleanUpBuildingState();
	void OnRep_IsBuilding();
	void OnRep_IsDestroying();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GenericShovel_C">();
	}
	static class ABP_GenericShovel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GenericShovel_C>();
	}
};
static_assert(alignof(ABP_GenericShovel_C) == 0x000008, "Wrong alignment on ABP_GenericShovel_C");
static_assert(sizeof(ABP_GenericShovel_C) == 0x0004C0, "Wrong size on ABP_GenericShovel_C");
static_assert(offsetof(ABP_GenericShovel_C, UberGraphFrame) == 0x000478, "Member 'ABP_GenericShovel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, Interact_Object_Types) == 0x000480, "Member 'ABP_GenericShovel_C::Interact_Object_Types' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, Trace_Length) == 0x000490, "Member 'ABP_GenericShovel_C::Trace_Length' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, bIsCurrentlyBuilding) == 0x000494, "Member 'ABP_GenericShovel_C::bIsCurrentlyBuilding' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, Objects_To_Ignore) == 0x000498, "Member 'ABP_GenericShovel_C::Objects_To_Ignore' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, bCouldBuild) == 0x0004A8, "Member 'ABP_GenericShovel_C::bCouldBuild' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, BuildHealthAmount) == 0x0004AC, "Member 'ABP_GenericShovel_C::BuildHealthAmount' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, TraceSphereRadius) == 0x0004B0, "Member 'ABP_GenericShovel_C::TraceSphereRadius' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, IsBuilding) == 0x0004B4, "Member 'ABP_GenericShovel_C::IsBuilding' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, bIsRemovingHealth) == 0x0004B5, "Member 'ABP_GenericShovel_C::bIsRemovingHealth' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, IsDestroying) == 0x0004B6, "Member 'ABP_GenericShovel_C::IsDestroying' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, BPCachedDig) == 0x0004B7, "Member 'ABP_GenericShovel_C::BPCachedDig' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, BuildPercentage) == 0x0004B8, "Member 'ABP_GenericShovel_C::BuildPercentage' has a wrong offset!");
static_assert(offsetof(ABP_GenericShovel_C, DestroyPercentage) == 0x0004BC, "Member 'ABP_GenericShovel_C::DestroyPercentage' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GenericEquippableAmmobag

#include "Basic.hpp"

#include "BP_GenericEquippableAmmobag_classes.hpp"
#include "BP_GenericEquippableAmmobag_parameters.hpp"


namespace SDK
{

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.ExecuteUbergraph_BP_GenericEquippableAmmobag
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GenericEquippableAmmobag_C::ExecuteUbergraph_BP_GenericEquippableAmmobag(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "ExecuteUbergraph_BP_GenericEquippableAmmobag");

	Params::BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.OnServerValidatedItemPlacement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQDeployableItem*                Deployable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GenericEquippableAmmobag_C::OnServerValidatedItemPlacement(class ASQDeployableItem* Deployable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "OnServerValidatedItemPlacement");

	Params::BP_GenericEquippableAmmobag_C_OnServerValidatedItemPlacement Parms{};

	Parms.Deployable = Deployable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.InitializeAmmoValues
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSQInventoryData                 ItemClass                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bSpawnMaxAmmo                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSQPersistedAmmoCount            PersistedAmmo                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_GenericEquippableAmmobag_C::InitializeAmmoValues(const struct FSQInventoryData& ItemClass, bool bSpawnMaxAmmo, const struct FSQPersistedAmmoCount& PersistedAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "InitializeAmmoValues");

	Params::BP_GenericEquippableAmmobag_C_InitializeAmmoValues Parms{};

	Parms.ItemClass = std::move(ItemClass);
	Parms.bSpawnMaxAmmo = bSpawnMaxAmmo;
	Parms.PersistedAmmo = std::move(PersistedAmmo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.Rearm
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_GenericEquippableAmmobag_C::Rearm(int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "Rearm");

	Params::BP_GenericEquippableAmmobag_C_Rearm Parms{};

	Parms.Quantity = Quantity;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.SortAmmoCounts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GenericEquippableAmmobag_C::SortAmmoCounts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "SortAmmoCounts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.IsAmmoFull
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_GenericEquippableAmmobag_C::IsAmmoFull() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "IsAmmoFull");

	Params::BP_GenericEquippableAmmobag_C_IsAmmoFull Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.CreatePersistingAmmoCount
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FSQPersistedAmmoCount            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FSQPersistedAmmoCount ABP_GenericEquippableAmmobag_C::CreatePersistingAmmoCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "CreatePersistingAmmoCount");

	Params::BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.CalculateMaxAmmoCost
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   MaxCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_GenericEquippableAmmobag_C::CalculateMaxAmmoCost(int32 MaxCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "CalculateMaxAmmoCost");

	Params::BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost Parms{};

	Parms.MaxCount = MaxCount;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.CalculateRearmAmmoCost
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   QuantityToRearm                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_GenericEquippableAmmobag_C::CalculateRearmAmmoCost(int32 QuantityToRearm) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "CalculateRearmAmmoCost");

	Params::BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost Parms{};

	Parms.QuantityToRearm = QuantityToRearm;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.CalculateMissingRearmItems
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_GenericEquippableAmmobag_C::CalculateMissingRearmItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "CalculateMissingRearmItems");

	Params::BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.GetRearmMaxItemCount
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_GenericEquippableAmmobag_C::GetRearmMaxItemCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GenericEquippableAmmobag_C", "GetRearmMaxItemCount");

	Params::BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


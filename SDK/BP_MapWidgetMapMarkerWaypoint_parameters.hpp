#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetMapMarkerWaypoint

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Squad_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_MapWidgetMapMarkerWaypoint.BP_MapWidgetMapMarkerWaypoint_C.ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint
// 0x0068 (0x0068 - 0x0000)
struct BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_473A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_473B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_473C[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerController_C> K2Node_DynamicCast_AsBPI_Player_Controller;        // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_473D[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
	float                                         K2Node_Event_UniformScale;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint) == 0x000008, "Wrong alignment on BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint");
static_assert(sizeof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint) == 0x000068, "Wrong size on BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, EntryPoint) == 0x000000, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000020, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, CallFunc_Less_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, K2Node_DynamicCast_AsBPI_Player_Controller) == 0x000030, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::K2Node_DynamicCast_AsBPI_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint, K2Node_Event_UniformScale) == 0x000060, "Member 'BP_MapWidgetMapMarkerWaypoint_C_ExecuteUbergraph_BP_MapWidgetMapMarkerWaypoint::K2Node_Event_UniformScale' has a wrong offset!");

// Function BP_MapWidgetMapMarkerWaypoint.BP_MapWidgetMapMarkerWaypoint_C.OnScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MapWidgetMapMarkerWaypoint_C_OnScaleChanged final
{
public:
	float                                         UniformScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetMapMarkerWaypoint_C_OnScaleChanged) == 0x000004, "Wrong alignment on BP_MapWidgetMapMarkerWaypoint_C_OnScaleChanged");
static_assert(sizeof(BP_MapWidgetMapMarkerWaypoint_C_OnScaleChanged) == 0x000004, "Wrong size on BP_MapWidgetMapMarkerWaypoint_C_OnScaleChanged");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_OnScaleChanged, UniformScale) == 0x000000, "Member 'BP_MapWidgetMapMarkerWaypoint_C_OnScaleChanged::UniformScale' has a wrong offset!");

// Function BP_MapWidgetMapMarkerWaypoint.BP_MapWidgetMapMarkerWaypoint_C.Update Waypoint Visibility
// 0x0008 (0x0008 - 0x0000)
struct BP_MapWidgetMapMarkerWaypoint_C_Update_Waypoint_Visibility final
{
public:
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetMapMarkerWaypoint_C_Update_Waypoint_Visibility) == 0x000008, "Wrong alignment on BP_MapWidgetMapMarkerWaypoint_C_Update_Waypoint_Visibility");
static_assert(sizeof(BP_MapWidgetMapMarkerWaypoint_C_Update_Waypoint_Visibility) == 0x000008, "Wrong size on BP_MapWidgetMapMarkerWaypoint_C_Update_Waypoint_Visibility");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Waypoint_Visibility, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000000, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Waypoint_Visibility::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");

// Function BP_MapWidgetMapMarkerWaypoint.BP_MapWidgetMapMarkerWaypoint_C.Update Visual
// 0x0058 (0x0058 - 0x0000)
struct BP_MapWidgetMapMarkerWaypoint_C_Update_Visual final
{
public:
	bool                                          L_Local_Squad;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Same_Squad_ID_Same;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_473E[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_473F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
};
static_assert(alignof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual) == 0x000008, "Wrong alignment on BP_MapWidgetMapMarkerWaypoint_C_Update_Visual");
static_assert(sizeof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual) == 0x000058, "Wrong size on BP_MapWidgetMapMarkerWaypoint_C_Update_Visual");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, L_Local_Squad) == 0x000000, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::L_Local_Squad' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, Temp_bool_Variable) == 0x000001, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, Temp_byte_Variable) == 0x000002, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, Temp_byte_Variable_1) == 0x000003, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, Temp_bool_Variable_1) == 0x000004, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, Temp_byte_Variable_2) == 0x000005, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, CallFunc_Get_Same_Squad_ID_Same) == 0x000006, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::CallFunc_Get_Same_Squad_ID_Same' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, CallFunc_Less_IntInt_ReturnValue) == 0x000007, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, K2Node_Select_Default) == 0x000008, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, K2Node_Select_Default_1) == 0x000009, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x000010, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, CallFunc_Max_ReturnValue) == 0x000018, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, CallFunc_GetColor_ReturnValue) == 0x00001C, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Update_Visual, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Update_Visual::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BP_MapWidgetMapMarkerWaypoint.BP_MapWidgetMapMarkerWaypoint_C.Set Visibility
// 0x0030 (0x0030 - 0x0000)
struct BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4740[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value_1;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_1;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Is_My_Fireteam_Same;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Same_Squad_ID_Same;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility) == 0x000008, "Wrong alignment on BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility");
static_assert(sizeof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility) == 0x000030, "Wrong size on BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_bool_Variable) == 0x000000, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_byte_Variable) == 0x000001, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_bool_Variable_1) == 0x000002, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_byte_Variable_2) == 0x000004, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_bool_Variable_2) == 0x000005, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_byte_Variable_3) == 0x000006, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_byte_Variable_4) == 0x000007, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_bool_Variable_3) == 0x000008, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_byte_Variable_5) == 0x000009, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_bool_Variable_4) == 0x00000A, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_byte_Variable_6) == 0x00000B, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, Temp_bool_Variable_5) == 0x00000C, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, CallFunc_GetSquadPlayerController_Return_Value) == 0x000010, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::CallFunc_GetSquadPlayerController_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, CallFunc_GetSquadPlayerController_Return_Value_1) == 0x000018, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::CallFunc_GetSquadPlayerController_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, CallFunc_IsSquadLeader_ReturnValue) == 0x000020, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, CallFunc_IsSquadLeader_ReturnValue_1) == 0x000021, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::CallFunc_IsSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, CallFunc_Get_Is_My_Fireteam_Same) == 0x000022, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::CallFunc_Get_Is_My_Fireteam_Same' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, CallFunc_Less_IntInt_ReturnValue) == 0x000023, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, K2Node_Select_Default) == 0x000025, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, K2Node_Select_Default_1) == 0x000026, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, K2Node_Select_Default_2) == 0x000027, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, CallFunc_Get_Same_Squad_ID_Same) == 0x000028, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::CallFunc_Get_Same_Squad_ID_Same' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x000029, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, K2Node_Select_Default_3) == 0x00002A, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, K2Node_Select_Default_4) == 0x00002B, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility, K2Node_Select_Default_5) == 0x00002C, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Set_Visibility::K2Node_Select_Default_5' has a wrong offset!");

// Function BP_MapWidgetMapMarkerWaypoint.BP_MapWidgetMapMarkerWaypoint_C.Get Same Squad ID
// 0x0020 (0x0020 - 0x0000)
struct BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID final
{
public:
	bool                                          Same;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4741[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID) == 0x000008, "Wrong alignment on BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID");
static_assert(sizeof(BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID) == 0x000020, "Wrong size on BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID, Same) == 0x000000, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID::Same' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000010, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001A, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Same_Squad_ID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetMapMarkerWaypoint.BP_MapWidgetMapMarkerWaypoint_C.Get Is My Fireteam
// 0x0038 (0x0038 - 0x0000)
struct BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam final
{
public:
	bool                                          Same;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4742[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value_1;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4743[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4744[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam) == 0x000008, "Wrong alignment on BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam");
static_assert(sizeof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam) == 0x000038, "Wrong size on BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, Same) == 0x000000, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::Same' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, CallFunc_GetSquadPlayerController_Return_Value) == 0x000008, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::CallFunc_GetSquadPlayerController_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, CallFunc_GetSquadPlayerController_Return_Value_1) == 0x000010, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::CallFunc_GetSquadPlayerController_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, K2Node_DynamicCast_AsSQPlayer_State) == 0x000020, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, CallFunc_GetFireTeamIndex_ReturnValue) == 0x00002C, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_MapWidgetMapMarkerWaypoint_C_Get_Is_My_Fireteam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


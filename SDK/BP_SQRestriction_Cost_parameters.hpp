#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQRestriction_Cost

#include "Basic.hpp"

#include "SQCostEntry_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.CanPlayerBuy
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SQRestriction_Cost_C_CanPlayerBuy final
{
public:
	class ASQPlayerController*                    InPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    OutRestrictionReason;                              // 0x0008(0x0010)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_TryGetLocalVehicle_OutVehicle;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalVehicle_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQForwardBase*                         CallFunc_TryGetLocalFOB_OutFOB;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalFOB_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1E[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1F[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleResourceWeaponInventoryComponent* CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D20[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D21[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQCostEntry                           CallFunc_Array_Get_Item;                           // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D22[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Map_Find_Value;                           // 0x0080(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D23[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQCostEntry                           CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D24[0x5];                                     // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Map_Find_Value_1;                         // 0x00A8(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQRestriction_Cost_C_CanPlayerBuy) == 0x000008, "Wrong alignment on BP_SQRestriction_Cost_C_CanPlayerBuy");
static_assert(sizeof(BP_SQRestriction_Cost_C_CanPlayerBuy) == 0x0000C0, "Wrong size on BP_SQRestriction_Cost_C_CanPlayerBuy");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, InPlayer) == 0x000000, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::InPlayer' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, OutRestrictionReason) == 0x000008, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::OutRestrictionReason' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, ReturnValue) == 0x000018, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_TryGetLocalVehicle_OutVehicle) == 0x000020, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_TryGetLocalVehicle_OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_TryGetLocalVehicle_ReturnValue) == 0x000028, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_TryGetLocalVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_TryGetLocalFOB_OutFOB) == 0x000030, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_TryGetLocalFOB_OutFOB' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_TryGetLocalFOB_ReturnValue) == 0x000038, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_TryGetLocalFOB_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_FCeil_ReturnValue) == 0x00003C, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_FCeil_ReturnValue_1) == 0x000040, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Array_Get_Item) == 0x000074, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00007C, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007D, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, K2Node_SwitchEnum_CmpSuccess) == 0x00007E, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Map_Find_Value) == 0x000080, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, K2Node_SwitchEnum_CmpSuccess_1) == 0x000091, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000A1, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000A2, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Map_Find_Value_1) == 0x0000A8, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, CallFunc_Map_Find_ReturnValue_1) == 0x0000B8, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanPlayerBuy, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000B9, "Member 'BP_SQRestriction_Cost_C_CanPlayerBuy::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.CanTeamBuy
// 0x0058 (0x0058 - 0x0000)
struct BP_SQRestriction_Cost_C_CanTeamBuy final
{
public:
	class ASQTeam*                                InTeam;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    OutRestrictionReason;                              // 0x0008(0x0010)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D25[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTickets_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQCostEntry                           CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D26[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Map_Find_Value;                           // 0x0040(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQRestriction_Cost_C_CanTeamBuy) == 0x000008, "Wrong alignment on BP_SQRestriction_Cost_C_CanTeamBuy");
static_assert(sizeof(BP_SQRestriction_Cost_C_CanTeamBuy) == 0x000058, "Wrong size on BP_SQRestriction_Cost_C_CanTeamBuy");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, InTeam) == 0x000000, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::InTeam' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, OutRestrictionReason) == 0x000008, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::OutRestrictionReason' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, ReturnValue) == 0x000018, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, CallFunc_GetTickets_ReturnValue) == 0x000020, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::CallFunc_GetTickets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000039, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, K2Node_SwitchEnum_CmpSuccess) == 0x000051, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_CanTeamBuy, K2Node_SwitchEnum_CmpSuccess_1) == 0x000052, "Member 'BP_SQRestriction_Cost_C_CanTeamBuy::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.HasPlayerBasedCost
// 0x0002 (0x0002 - 0x0000)
struct BP_SQRestriction_Cost_C_HasPlayerBasedCost final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQRestriction_Cost_C_HasPlayerBasedCost) == 0x000001, "Wrong alignment on BP_SQRestriction_Cost_C_HasPlayerBasedCost");
static_assert(sizeof(BP_SQRestriction_Cost_C_HasPlayerBasedCost) == 0x000002, "Wrong size on BP_SQRestriction_Cost_C_HasPlayerBasedCost");
static_assert(offsetof(BP_SQRestriction_Cost_C_HasPlayerBasedCost, ReturnValue) == 0x000000, "Member 'BP_SQRestriction_Cost_C_HasPlayerBasedCost::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_HasPlayerBasedCost, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_SQRestriction_Cost_C_HasPlayerBasedCost::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.HasTeamBasedCost
// 0x0002 (0x0002 - 0x0000)
struct BP_SQRestriction_Cost_C_HasTeamBasedCost final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQRestriction_Cost_C_HasTeamBasedCost) == 0x000001, "Wrong alignment on BP_SQRestriction_Cost_C_HasTeamBasedCost");
static_assert(sizeof(BP_SQRestriction_Cost_C_HasTeamBasedCost) == 0x000002, "Wrong size on BP_SQRestriction_Cost_C_HasTeamBasedCost");
static_assert(offsetof(BP_SQRestriction_Cost_C_HasTeamBasedCost, ReturnValue) == 0x000000, "Member 'BP_SQRestriction_Cost_C_HasTeamBasedCost::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_HasTeamBasedCost, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_SQRestriction_Cost_C_HasTeamBasedCost::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.PayCostForTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_SQRestriction_Cost_C_PayCostForTeam final
{
public:
	class ASQTeam*                                InTeam;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTickets_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQCostEntry                           CallFunc_Array_Get_Item;                           // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D27[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D28[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQRestriction_Cost_C_PayCostForTeam) == 0x000008, "Wrong alignment on BP_SQRestriction_Cost_C_PayCostForTeam");
static_assert(sizeof(BP_SQRestriction_Cost_C_PayCostForTeam) == 0x000038, "Wrong size on BP_SQRestriction_Cost_C_PayCostForTeam");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, InTeam) == 0x000000, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::InTeam' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, CallFunc_GetTickets_ReturnValue) == 0x00000C, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::CallFunc_GetTickets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, CallFunc_Array_Get_Item) == 0x000014, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForTeam, K2Node_SwitchEnum_CmpSuccess_1) == 0x000030, "Member 'BP_SQRestriction_Cost_C_PayCostForTeam::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.PayCostForPlayer
// 0x00A0 (0x00A0 - 0x0000)
struct BP_SQRestriction_Cost_C_PayCostForPlayer final
{
public:
	class ASQPlayerController*                    InPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D29[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_TryGetLocalVehicle_OutVehicle;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalVehicle_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleResourceWeaponInventoryComponent* CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleResource*                     CallFunc_FindConstructionWeapon_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleResource*                     CallFunc_FindAmmoWeapon_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2D[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQForwardBase*                         CallFunc_TryGetLocalFOB_OutFOB;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalFOB_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2E[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQCostEntry                           CallFunc_Array_Get_Item;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2F[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D30[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQCostEntry                           CallFunc_Array_Get_Item_1;                         // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D31[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConsumeFOBAmmo_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ConsumeConstructionPoints_ReturnValue;    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQRestriction_Cost_C_PayCostForPlayer) == 0x000008, "Wrong alignment on BP_SQRestriction_Cost_C_PayCostForPlayer");
static_assert(sizeof(BP_SQRestriction_Cost_C_PayCostForPlayer) == 0x0000A0, "Wrong size on BP_SQRestriction_Cost_C_PayCostForPlayer");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, InPlayer) == 0x000000, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::InPlayer' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_TryGetLocalVehicle_OutVehicle) == 0x000010, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_TryGetLocalVehicle_OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_TryGetLocalVehicle_ReturnValue) == 0x000018, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_TryGetLocalVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_FindConstructionWeapon_ReturnValue) == 0x000030, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_FindConstructionWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_FindAmmoWeapon_ReturnValue) == 0x000040, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_FindAmmoWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_TryGetLocalFOB_OutFOB) == 0x000050, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_TryGetLocalFOB_OutFOB' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_TryGetLocalFOB_ReturnValue) == 0x000058, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_TryGetLocalFOB_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Array_Get_Item) == 0x00006C, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00007C, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, K2Node_SwitchEnum_CmpSuccess_1) == 0x000081, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Array_Get_Item_1) == 0x000084, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000094, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_ConsumeFOBAmmo_ReturnValue) == 0x000098, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_ConsumeFOBAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, CallFunc_ConsumeConstructionPoints_ReturnValue) == 0x000099, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::CallFunc_ConsumeConstructionPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_PayCostForPlayer, K2Node_SwitchEnum_CmpSuccess_2) == 0x00009A, "Member 'BP_SQRestriction_Cost_C_PayCostForPlayer::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.RefundCostForTeam
// 0x0040 (0x0040 - 0x0000)
struct BP_SQRestriction_Cost_C_RefundCostForTeam final
{
public:
	class ASQTeam*                                InTeam;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InPercentage;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTickets_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQCostEntry                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D32[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D33[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQRestriction_Cost_C_RefundCostForTeam) == 0x000008, "Wrong alignment on BP_SQRestriction_Cost_C_RefundCostForTeam");
static_assert(sizeof(BP_SQRestriction_Cost_C_RefundCostForTeam) == 0x000040, "Wrong size on BP_SQRestriction_Cost_C_RefundCostForTeam");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, InTeam) == 0x000000, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::InTeam' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, InPercentage) == 0x000008, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::InPercentage' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, CallFunc_GetTickets_ReturnValue) == 0x000010, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::CallFunc_GetTickets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, CallFunc_Multiply_IntInt_ReturnValue) == 0x000028, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, CallFunc_Divide_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForTeam, K2Node_SwitchEnum_CmpSuccess_1) == 0x00003C, "Member 'BP_SQRestriction_Cost_C_RefundCostForTeam::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.RefundCostForPlayer
// 0x00E8 (0x00E8 - 0x0000)
struct BP_SQRestriction_Cost_C_RefundCostForPlayer final
{
public:
	class ASQPlayerController*                    InPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InPercentage;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             CallFunc_TryGetLocalVehicle_OutVehicle;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalVehicle_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D34[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQForwardBase*                         CallFunc_TryGetLocalFOB_OutFOB;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalFOB_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D35[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleResourceWeaponInventoryComponent* CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D36[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D37[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleResource*                     CallFunc_FindConstructionWeapon_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicleResource*                     CallFunc_FindAmmoWeapon_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D38[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D39[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQCostEntry                           CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQCostEntry                           CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D3A[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D3B[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQRestriction_Cost_C_RefundCostForPlayer) == 0x000008, "Wrong alignment on BP_SQRestriction_Cost_C_RefundCostForPlayer");
static_assert(sizeof(BP_SQRestriction_Cost_C_RefundCostForPlayer) == 0x0000E8, "Wrong size on BP_SQRestriction_Cost_C_RefundCostForPlayer");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, InPlayer) == 0x000000, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::InPlayer' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, InPercentage) == 0x000008, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::InPercentage' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_TryGetLocalVehicle_OutVehicle) == 0x000018, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_TryGetLocalVehicle_OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_TryGetLocalVehicle_ReturnValue) == 0x000020, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_TryGetLocalVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_TryGetLocalFOB_OutFOB) == 0x000028, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_TryGetLocalFOB_OutFOB' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_TryGetLocalFOB_ReturnValue) == 0x000030, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_TryGetLocalFOB_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_FindConstructionWeapon_ReturnValue) == 0x000050, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_FindConstructionWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_FindAmmoWeapon_ReturnValue) == 0x000058, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_FindAmmoWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_IsValid_ReturnValue_2) == 0x000061, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, K2Node_SwitchEnum_CmpSuccess) == 0x00006C, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000080, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000084, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000090, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000094, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Conv_FloatToString_ReturnValue) == 0x000098, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000D0, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000D4, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000D5, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQRestriction_Cost_C_RefundCostForPlayer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E1, "Member 'BP_SQRestriction_Cost_C_RefundCostForPlayer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Brit_Util_Truck

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Brit_Util_Truck.BP_Brit_Util_Truck_C.ExecuteUbergraph_BP_Brit_Util_Truck
// 0x0048 (0x0048 - 0x0000)
struct BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FF8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQDriveTrainComponent*                 K2Node_Event_DriveTrainComponent;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleWheel*                        K2Node_DynamicCast_AsSQVehicle_Wheel;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FF9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQDriveTrainComponent*                 K2Node_Event_DriveTrainComponent_1;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleWheel*                        K2Node_DynamicCast_AsSQVehicle_Wheel_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FFA[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetBoneName_ReturnValue_1;                // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck) == 0x000008, "Wrong alignment on BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck");
static_assert(sizeof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck) == 0x000048, "Wrong size on BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck");
static_assert(offsetof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck, EntryPoint) == 0x000000, "Member 'BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck, K2Node_Event_DriveTrainComponent) == 0x000008, "Member 'BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck::K2Node_Event_DriveTrainComponent' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck, K2Node_DynamicCast_AsSQVehicle_Wheel) == 0x000010, "Member 'BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck::K2Node_DynamicCast_AsSQVehicle_Wheel' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck, K2Node_Event_DriveTrainComponent_1) == 0x000020, "Member 'BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck::K2Node_Event_DriveTrainComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck, CallFunc_GetBoneName_ReturnValue) == 0x000028, "Member 'BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck::CallFunc_GetBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck, K2Node_DynamicCast_AsSQVehicle_Wheel_1) == 0x000030, "Member 'BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck::K2Node_DynamicCast_AsSQVehicle_Wheel_1' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck, CallFunc_GetBoneName_ReturnValue_1) == 0x00003C, "Member 'BP_Brit_Util_Truck_C_ExecuteUbergraph_BP_Brit_Util_Truck::CallFunc_GetBoneName_ReturnValue_1' has a wrong offset!");

// Function BP_Brit_Util_Truck.BP_Brit_Util_Truck_C.DrivetrainComponentRepaired
// 0x0008 (0x0008 - 0x0000)
struct BP_Brit_Util_Truck_C_DrivetrainComponentRepaired final
{
public:
	class USQDriveTrainComponent*                 DriveTrainComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Brit_Util_Truck_C_DrivetrainComponentRepaired) == 0x000008, "Wrong alignment on BP_Brit_Util_Truck_C_DrivetrainComponentRepaired");
static_assert(sizeof(BP_Brit_Util_Truck_C_DrivetrainComponentRepaired) == 0x000008, "Wrong size on BP_Brit_Util_Truck_C_DrivetrainComponentRepaired");
static_assert(offsetof(BP_Brit_Util_Truck_C_DrivetrainComponentRepaired, DriveTrainComponent) == 0x000000, "Member 'BP_Brit_Util_Truck_C_DrivetrainComponentRepaired::DriveTrainComponent' has a wrong offset!");

// Function BP_Brit_Util_Truck.BP_Brit_Util_Truck_C.DrivetrainComponentDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_Brit_Util_Truck_C_DrivetrainComponentDestroyed final
{
public:
	class USQDriveTrainComponent*                 DriveTrainComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Brit_Util_Truck_C_DrivetrainComponentDestroyed) == 0x000008, "Wrong alignment on BP_Brit_Util_Truck_C_DrivetrainComponentDestroyed");
static_assert(sizeof(BP_Brit_Util_Truck_C_DrivetrainComponentDestroyed) == 0x000008, "Wrong size on BP_Brit_Util_Truck_C_DrivetrainComponentDestroyed");
static_assert(offsetof(BP_Brit_Util_Truck_C_DrivetrainComponentDestroyed, DriveTrainComponent) == 0x000000, "Member 'BP_Brit_Util_Truck_C_DrivetrainComponentDestroyed::DriveTrainComponent' has a wrong offset!");

// Function BP_Brit_Util_Truck.BP_Brit_Util_Truck_C.Update Damaged Wheel Visual
// 0x0080 (0x0080 - 0x0000)
struct BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual final
{
public:
	class FName                                   Bone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Destroyed;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FFB[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleWheel*                        Wheel;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Do_Effects;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FFC[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        WheelDestroyedEffect;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             WheelDestroyedSound;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Scale;                                           // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FFD[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_1;                            // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FFE[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBrit_Util_Truck_AnimBP_C*              K2Node_DynamicCast_AsBrit_Util_Truck_Anim_BP;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual) == 0x000008, "Wrong alignment on BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual");
static_assert(sizeof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual) == 0x000080, "Wrong size on BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, Bone) == 0x000000, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::Bone' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, Destroyed) == 0x000008, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::Destroyed' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, Wheel) == 0x000010, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::Wheel' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, Do_Effects) == 0x000018, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::Do_Effects' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, WheelDestroyedEffect) == 0x000020, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::WheelDestroyedEffect' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, WheelDestroyedSound) == 0x000028, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::WheelDestroyedSound' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, L_Scale) == 0x000030, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::L_Scale' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, Temp_struct_Variable) == 0x00003C, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, K2Node_SwitchName_CmpSuccess) == 0x000048, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, Temp_struct_Variable_1) == 0x00004C, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, Temp_bool_Variable) == 0x000058, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, K2Node_Select_Default) == 0x00005C, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, CallFunc_GetAnimInstance_ReturnValue) == 0x000068, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, K2Node_DynamicCast_AsBrit_Util_Truck_Anim_BP) == 0x000070, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::K2Node_DynamicCast_AsBrit_Util_Truck_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_Brit_Util_Truck_C_Update_Damaged_Wheel_Visual::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


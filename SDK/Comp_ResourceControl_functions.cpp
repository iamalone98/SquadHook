#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Comp_ResourceControl

#include "Basic.hpp"

#include "Comp_ResourceControl_classes.hpp"
#include "Comp_ResourceControl_parameters.hpp"


namespace SDK
{

// Function Comp_ResourceControl.Comp_ResourceControl_C.ExecuteUbergraph_Comp_ResourceControl
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UComp_ResourceControl_C::ExecuteUbergraph_Comp_ResourceControl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "ExecuteUbergraph_Comp_ResourceControl");

	Params::Comp_ResourceControl_C_ExecuteUbergraph_Comp_ResourceControl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Play Hand Animation
// (BlueprintCallable, BlueprintEvent)

void UComp_ResourceControl_C::Play_Hand_Animation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Play Hand Animation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Client Resource Timer
// (BlueprintCallable, BlueprintEvent)

void UComp_ResourceControl_C::Client_Resource_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Client Resource Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Start Resource Supply
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Ammo_Transaction                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_Pickup_Transaction                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ASQVehicle*                       Param_Current_Vehicle                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UComp_ResourceControl_C::Start_Resource_Supply(bool Param_Ammo_Transaction, bool Param_Pickup_Transaction, class ASQVehicle* Param_Current_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Start Resource Supply");

	Params::Comp_ResourceControl_C_Start_Resource_Supply Parms{};

	Parms.Param_Ammo_Transaction = Param_Ammo_Transaction;
	Parms.Param_Pickup_Transaction = Param_Pickup_Transaction;
	Parms.Param_Current_Vehicle = Param_Current_Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Stop Resource Supply
// (BlueprintCallable, BlueprintEvent)

void UComp_ResourceControl_C::Stop_Resource_Supply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Stop Resource Supply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Server Use Resources
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UComp_ResourceControl_C::Server_Use_Resources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Server Use Resources");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Invoke Use Resources
// (BlueprintCallable, BlueprintEvent)

void UComp_ResourceControl_C::Invoke_Use_Resources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Invoke Use Resources");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Server Stop Supply
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UComp_ResourceControl_C::Server_Stop_Supply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Server Stop Supply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UComp_ResourceControl_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Server Start Supply
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ammo                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Pickup                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UComp_ResourceControl_C::Server_Start_Supply(bool Ammo, bool Pickup, class ASQVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Server Start Supply");

	Params::Comp_ResourceControl_C_Server_Start_Supply Parms{};

	Parms.Ammo = Ammo;
	Parms.Pickup = Pickup;
	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Validate Resource Point
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ASQForwardBase*                   Fob                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           CapZone                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UComp_ResourceControl_C::Validate_Resource_Point(class ASQVehicle* Vehicle, bool* Valid, class ASQForwardBase** Fob, class AActor** CapZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Validate Resource Point");

	Params::Comp_ResourceControl_C_Validate_Resource_Point Parms{};

	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (Fob != nullptr)
		*Fob = Parms.Fob;

	if (CapZone != nullptr)
		*CapZone = Parms.CapZone;
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Validate Transaction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Ammo                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Pickup                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid_Transaction                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Has_Con_Weapon                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Has_Ammo_Weapon                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_Loading                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Zone_has_Points                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UComp_ResourceControl_C::Validate_Transaction(bool Ammo, bool Pickup, class ASQVehicle* Vehicle, bool* Valid_Transaction, bool* Has_Con_Weapon, bool* Has_Ammo_Weapon, bool* Is_Loading, bool* Zone_has_Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Validate Transaction");

	Params::Comp_ResourceControl_C_Validate_Transaction Parms{};

	Parms.Ammo = Ammo;
	Parms.Pickup = Pickup;
	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_Transaction != nullptr)
		*Valid_Transaction = Parms.Valid_Transaction;

	if (Has_Con_Weapon != nullptr)
		*Has_Con_Weapon = Parms.Has_Con_Weapon;

	if (Has_Ammo_Weapon != nullptr)
		*Has_Ammo_Weapon = Parms.Has_Ammo_Weapon;

	if (Is_Loading != nullptr)
		*Is_Loading = Parms.Is_Loading;

	if (Zone_has_Points != nullptr)
		*Zone_has_Points = Parms.Zone_has_Points;
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Validate Owner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UComp_ResourceControl_C::Validate_Owner(bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Validate Owner");

	Params::Comp_ResourceControl_C_Validate_Owner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Setup Resource Weapon
// (Public, BlueprintCallable, BlueprintEvent)

void UComp_ResourceControl_C::Setup_Resource_Weapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Setup Resource Weapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Validate Soldier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Alive                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UComp_ResourceControl_C::Validate_Soldier(bool* Alive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Validate Soldier");

	Params::Comp_ResourceControl_C_Validate_Soldier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Alive != nullptr)
		*Alive = Parms.Alive;
}


// Function Comp_ResourceControl.Comp_ResourceControl_C.Validate Distance to FOB
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASQForwardBase*                   Fob                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UComp_ResourceControl_C::Validate_Distance_to_FOB(class ASQVehicle* Vehicle, class ASQForwardBase* Fob, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Comp_ResourceControl_C", "Validate Distance to FOB");

	Params::Comp_ResourceControl_C_Validate_Distance_to_FOB Parms{};

	Parms.Vehicle = Vehicle;
	Parms.Fob = Fob;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayFab

#include "Basic.hpp"

#include "PlayFab_structs.hpp"


namespace SDK::Params
{

// Function PlayFab.PlayFabAdminAPI.AbortTaskInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_AbortTaskInstance final
{
public:
	struct FAdminAbortTaskInstanceRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AbortTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AbortTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_AbortTaskInstance) == 0x000050, "Wrong size on PlayFabAdminAPI_AbortTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, Request) == 0x000000, "Member 'PlayFabAdminAPI_AbortTaskInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, OnSuccess) == 0x000020, "Member 'PlayFabAdminAPI_AbortTaskInstance::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, OnFailure) == 0x000030, "Member 'PlayFabAdminAPI_AbortTaskInstance::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_AbortTaskInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AbortTaskInstance, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_AbortTaskInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddLocalizedNews
// 0x0080 (0x0080 - 0x0000)
struct PlayFabAdminAPI_AddLocalizedNews final
{
public:
	struct FAdminAddLocalizedNewsRequest          Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminAddLocalizedNewsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddLocalizedNews) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddLocalizedNews");
static_assert(sizeof(PlayFabAdminAPI_AddLocalizedNews) == 0x000080, "Wrong size on PlayFabAdminAPI_AddLocalizedNews");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddLocalizedNews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, OnSuccess) == 0x000050, "Member 'PlayFabAdminAPI_AddLocalizedNews::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, OnFailure) == 0x000060, "Member 'PlayFabAdminAPI_AddLocalizedNews::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, CustomData) == 0x000070, "Member 'PlayFabAdminAPI_AddLocalizedNews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddLocalizedNews, ReturnValue) == 0x000078, "Member 'PlayFabAdminAPI_AddLocalizedNews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddNews
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_AddNews final
{
public:
	struct FAdminAddNewsRequest                   Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminAddNewsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddNews) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddNews");
static_assert(sizeof(PlayFabAdminAPI_AddNews) == 0x000070, "Wrong size on PlayFabAdminAPI_AddNews");
static_assert(offsetof(PlayFabAdminAPI_AddNews, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddNews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddNews, OnSuccess) == 0x000040, "Member 'PlayFabAdminAPI_AddNews::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddNews, OnFailure) == 0x000050, "Member 'PlayFabAdminAPI_AddNews::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddNews, CustomData) == 0x000060, "Member 'PlayFabAdminAPI_AddNews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddNews, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_AddNews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddPlayerTag
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_AddPlayerTag final
{
public:
	struct FAdminAddPlayerTagRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminAddPlayerTagResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddPlayerTag) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddPlayerTag");
static_assert(sizeof(PlayFabAdminAPI_AddPlayerTag) == 0x000060, "Wrong size on PlayFabAdminAPI_AddPlayerTag");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddPlayerTag::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_AddPlayerTag::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_AddPlayerTag::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_AddPlayerTag::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddPlayerTag, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_AddPlayerTag::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddUserVirtualCurrency
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_AddUserVirtualCurrency final
{
public:
	struct FAdminAddUserVirtualCurrencyRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddUserVirtualCurrency");
static_assert(sizeof(PlayFabAdminAPI_AddUserVirtualCurrency) == 0x000068, "Wrong size on PlayFabAdminAPI_AddUserVirtualCurrency");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddUserVirtualCurrency, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_AddUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.AddVirtualCurrencyTypes
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_AddVirtualCurrencyTypes final
{
public:
	struct FAdminAddVirtualCurrencyTypesRequest   Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminBlankResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_AddVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_AddVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_AddVirtualCurrencyTypes) == 0x000048, "Wrong size on PlayFabAdminAPI_AddVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, Request) == 0x000000, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_AddVirtualCurrencyTypes, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_AddVirtualCurrencyTypes::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.BanUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_BanUsers final
{
public:
	struct FAdminBanUsersRequest                  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminBanUsersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_BanUsers) == 0x000008, "Wrong alignment on PlayFabAdminAPI_BanUsers");
static_assert(sizeof(PlayFabAdminAPI_BanUsers) == 0x000050, "Wrong size on PlayFabAdminAPI_BanUsers");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, Request) == 0x000000, "Member 'PlayFabAdminAPI_BanUsers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, OnSuccess) == 0x000020, "Member 'PlayFabAdminAPI_BanUsers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, OnFailure) == 0x000030, "Member 'PlayFabAdminAPI_BanUsers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_BanUsers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_BanUsers, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_BanUsers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CheckLimitedEditionItemAvailability
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_CheckLimitedEditionItemAvailability final
{
public:
	struct FAdminCheckLimitedEditionItemAvailabilityRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCheckLimitedEditionItemAvailabilityResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CheckLimitedEditionItemAvailability");
static_assert(sizeof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability) == 0x000058, "Wrong size on PlayFabAdminAPI_CheckLimitedEditionItemAvailability");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, Request) == 0x000000, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CheckLimitedEditionItemAvailability, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_CheckLimitedEditionItemAvailability::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateActionsOnPlayersInSegmentTask
// 0x0080 (0x0080 - 0x0000)
struct PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask final
{
public:
	struct FAdminCreateActionsOnPlayerSegmentTaskRequest Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask");
static_assert(sizeof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask) == 0x000080, "Wrong size on PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, OnSuccess) == 0x000050, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, OnFailure) == 0x000060, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, CustomData) == 0x000070, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask, ReturnValue) == 0x000078, "Member 'PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateCloudScriptTask
// 0x0080 (0x0080 - 0x0000)
struct PlayFabAdminAPI_CreateCloudScriptTask final
{
public:
	struct FAdminCreateCloudScriptTaskRequest     Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateCloudScriptTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateCloudScriptTask");
static_assert(sizeof(PlayFabAdminAPI_CreateCloudScriptTask) == 0x000080, "Wrong size on PlayFabAdminAPI_CreateCloudScriptTask");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, OnSuccess) == 0x000050, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, OnFailure) == 0x000060, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, CustomData) == 0x000070, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateCloudScriptTask, ReturnValue) == 0x000078, "Member 'PlayFabAdminAPI_CreateCloudScriptTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateInsightsScheduledScalingTask
// 0x0080 (0x0080 - 0x0000)
struct PlayFabAdminAPI_CreateInsightsScheduledScalingTask final
{
public:
	struct FAdminCreateInsightsScheduledScalingTaskRequest Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateInsightsScheduledScalingTask");
static_assert(sizeof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask) == 0x000080, "Wrong size on PlayFabAdminAPI_CreateInsightsScheduledScalingTask");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, OnSuccess) == 0x000050, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, OnFailure) == 0x000060, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, CustomData) == 0x000070, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateInsightsScheduledScalingTask, ReturnValue) == 0x000078, "Member 'PlayFabAdminAPI_CreateInsightsScheduledScalingTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateOpenIdConnection
// 0x0088 (0x0088 - 0x0000)
struct PlayFabAdminAPI_CreateOpenIdConnection final
{
public:
	struct FAdminCreateOpenIdConnectionRequest    Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_CreateOpenIdConnection) == 0x000088, "Wrong size on PlayFabAdminAPI_CreateOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, OnSuccess) == 0x000058, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, OnFailure) == 0x000068, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, CustomData) == 0x000078, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateOpenIdConnection, ReturnValue) == 0x000080, "Member 'PlayFabAdminAPI_CreateOpenIdConnection::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreatePlayerSharedSecret
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_CreatePlayerSharedSecret final
{
public:
	struct FAdminCreatePlayerSharedSecretRequest  Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreatePlayerSharedSecretResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreatePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreatePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_CreatePlayerSharedSecret) == 0x000048, "Wrong size on PlayFabAdminAPI_CreatePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerSharedSecret, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_CreatePlayerSharedSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreatePlayerStatisticDefinition
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_CreatePlayerStatisticDefinition final
{
public:
	struct FAdminCreatePlayerStatisticDefinitionRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreatePlayerStatisticDefinitionResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreatePlayerStatisticDefinition) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreatePlayerStatisticDefinition");
static_assert(sizeof(PlayFabAdminAPI_CreatePlayerStatisticDefinition) == 0x000060, "Wrong size on PlayFabAdminAPI_CreatePlayerStatisticDefinition");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreatePlayerStatisticDefinition, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_CreatePlayerStatisticDefinition::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.CreateSegment
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_CreateSegment final
{
public:
	struct FAdminCreateSegmentRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminCreateSegmentResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_CreateSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_CreateSegment");
static_assert(sizeof(PlayFabAdminAPI_CreateSegment) == 0x000040, "Wrong size on PlayFabAdminAPI_CreateSegment");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_CreateSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, OnSuccess) == 0x000010, "Member 'PlayFabAdminAPI_CreateSegment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, OnFailure) == 0x000020, "Member 'PlayFabAdminAPI_CreateSegment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, CustomData) == 0x000030, "Member 'PlayFabAdminAPI_CreateSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_CreateSegment, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_CreateSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteContent
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeleteContent final
{
public:
	struct FAdminDeleteContentRequest             Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminBlankResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteContent) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteContent");
static_assert(sizeof(PlayFabAdminAPI_DeleteContent) == 0x000048, "Wrong size on PlayFabAdminAPI_DeleteContent");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteContent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeleteContent::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeleteContent::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_DeleteContent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteContent, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeleteContent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteMasterPlayerAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_DeleteMasterPlayerAccount final
{
public:
	struct FAdminDeleteMasterPlayerAccountRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteMasterPlayerAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteMasterPlayerAccount) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteMasterPlayerAccount");
static_assert(sizeof(PlayFabAdminAPI_DeleteMasterPlayerAccount) == 0x000058, "Wrong size on PlayFabAdminAPI_DeleteMasterPlayerAccount");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMasterPlayerAccount, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_DeleteMasterPlayerAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteMembershipSubscription
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_DeleteMembershipSubscription final
{
public:
	struct FAdminDeleteMembershipSubscriptionRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteMembershipSubscriptionResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteMembershipSubscription) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteMembershipSubscription");
static_assert(sizeof(PlayFabAdminAPI_DeleteMembershipSubscription) == 0x000070, "Wrong size on PlayFabAdminAPI_DeleteMembershipSubscription");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, OnSuccess) == 0x000040, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, OnFailure) == 0x000050, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, CustomData) == 0x000060, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteMembershipSubscription, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_DeleteMembershipSubscription::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteOpenIdConnection
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeleteOpenIdConnection final
{
public:
	struct FAdminDeleteOpenIdConnectionRequest    Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_DeleteOpenIdConnection) == 0x000048, "Wrong size on PlayFabAdminAPI_DeleteOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteOpenIdConnection, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeleteOpenIdConnection::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeletePlayer
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeletePlayer final
{
public:
	struct FAdminDeletePlayerRequest              Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeletePlayerResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeletePlayer) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeletePlayer");
static_assert(sizeof(PlayFabAdminAPI_DeletePlayer) == 0x000048, "Wrong size on PlayFabAdminAPI_DeletePlayer");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeletePlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeletePlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeletePlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_DeletePlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayer, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeletePlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeletePlayerSharedSecret
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeletePlayerSharedSecret final
{
public:
	struct FAdminDeletePlayerSharedSecretRequest  Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeletePlayerSharedSecretResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeletePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeletePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_DeletePlayerSharedSecret) == 0x000048, "Wrong size on PlayFabAdminAPI_DeletePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeletePlayerSharedSecret, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeletePlayerSharedSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteSegment
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeleteSegment final
{
public:
	struct FAdminDeleteSegmentRequest             Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteSegmentsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteSegment");
static_assert(sizeof(PlayFabAdminAPI_DeleteSegment) == 0x000048, "Wrong size on PlayFabAdminAPI_DeleteSegment");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeleteSegment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeleteSegment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_DeleteSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteSegment, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeleteSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteStore
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_DeleteStore final
{
public:
	struct FAdminDeleteStoreRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteStoreResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteStore) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteStore");
static_assert(sizeof(PlayFabAdminAPI_DeleteStore) == 0x000060, "Wrong size on PlayFabAdminAPI_DeleteStore");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteStore::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_DeleteStore::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_DeleteStore::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_DeleteStore::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteStore, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_DeleteStore::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteTask
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_DeleteTask final
{
public:
	struct FAdminDeleteTaskRequest                Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteTask");
static_assert(sizeof(PlayFabAdminAPI_DeleteTask) == 0x000040, "Wrong size on PlayFabAdminAPI_DeleteTask");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, OnSuccess) == 0x000010, "Member 'PlayFabAdminAPI_DeleteTask::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, OnFailure) == 0x000020, "Member 'PlayFabAdminAPI_DeleteTask::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, CustomData) == 0x000030, "Member 'PlayFabAdminAPI_DeleteTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTask, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_DeleteTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteTitle
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_DeleteTitle final
{
public:
	struct FAdminDeleteTitleRequest               Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteTitleResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteTitle) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteTitle");
static_assert(sizeof(PlayFabAdminAPI_DeleteTitle) == 0x000038, "Wrong size on PlayFabAdminAPI_DeleteTitle");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteTitle::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, OnSuccess) == 0x000008, "Member 'PlayFabAdminAPI_DeleteTitle::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, OnFailure) == 0x000018, "Member 'PlayFabAdminAPI_DeleteTitle::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DeleteTitle::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitle, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_DeleteTitle::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.DeleteTitleDataOverride
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_DeleteTitleDataOverride final
{
public:
	struct FAdminDeleteTitleDataOverrideRequest   Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminDeleteTitleDataOverrideResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DeleteTitleDataOverride) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DeleteTitleDataOverride");
static_assert(sizeof(PlayFabAdminAPI_DeleteTitleDataOverride) == 0x000048, "Wrong size on PlayFabAdminAPI_DeleteTitleDataOverride");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, Request) == 0x000000, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DeleteTitleDataOverride, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_DeleteTitleDataOverride::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ExportMasterPlayerData
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_ExportMasterPlayerData final
{
public:
	struct FAdminExportMasterPlayerDataRequest    Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminExportMasterPlayerDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ExportMasterPlayerData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ExportMasterPlayerData");
static_assert(sizeof(PlayFabAdminAPI_ExportMasterPlayerData) == 0x000048, "Wrong size on PlayFabAdminAPI_ExportMasterPlayerData");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, Request) == 0x000000, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportMasterPlayerData, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_ExportMasterPlayerData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ExportPlayersInSegment
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_ExportPlayersInSegment final
{
public:
	struct FAdminExportPlayersInSegmentRequest    Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminExportPlayersInSegmentResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ExportPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ExportPlayersInSegment");
static_assert(sizeof(PlayFabAdminAPI_ExportPlayersInSegment) == 0x000048, "Wrong size on PlayFabAdminAPI_ExportPlayersInSegment");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ExportPlayersInSegment, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_ExportPlayersInSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetActionsOnPlayersInSegmentTaskInstance
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance final
{
public:
	struct FAdminGetTaskInstanceRequest           Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance) == 0x000048, "Wrong size on PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetAllSegments
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_GetAllSegments final
{
public:
	struct FAdminGetAllSegmentsRequest            Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetAllSegmentsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetAllSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetAllSegments");
static_assert(sizeof(PlayFabAdminAPI_GetAllSegments) == 0x000038, "Wrong size on PlayFabAdminAPI_GetAllSegments");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetAllSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, OnSuccess) == 0x000008, "Member 'PlayFabAdminAPI_GetAllSegments::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, OnFailure) == 0x000018, "Member 'PlayFabAdminAPI_GetAllSegments::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_GetAllSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetAllSegments, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_GetAllSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetCatalogItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetCatalogItems final
{
public:
	struct FAdminGetCatalogItemsRequest           Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_GetCatalogItems) == 0x000048, "Wrong size on PlayFabAdminAPI_GetCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetCatalogItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetCatalogItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCatalogItems, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetCloudScriptRevision
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_GetCloudScriptRevision final
{
public:
	struct FAdminGetCloudScriptRevisionRequest    Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetCloudScriptRevisionResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetCloudScriptRevision) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetCloudScriptRevision");
static_assert(sizeof(PlayFabAdminAPI_GetCloudScriptRevision) == 0x000040, "Wrong size on PlayFabAdminAPI_GetCloudScriptRevision");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, OnSuccess) == 0x000010, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, OnFailure) == 0x000020, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, CustomData) == 0x000030, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptRevision, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_GetCloudScriptRevision::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetCloudScriptTaskInstance
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetCloudScriptTaskInstance final
{
public:
	struct FAdminGetTaskInstanceRequest           Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetCloudScriptTaskInstanceResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetCloudScriptTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetCloudScriptTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_GetCloudScriptTaskInstance) == 0x000048, "Wrong size on PlayFabAdminAPI_GetCloudScriptTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptTaskInstance, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetCloudScriptTaskInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetCloudScriptVersions
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_GetCloudScriptVersions final
{
public:
	struct FAdminGetCloudScriptVersionsRequest    Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetCloudScriptVersionsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetCloudScriptVersions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetCloudScriptVersions");
static_assert(sizeof(PlayFabAdminAPI_GetCloudScriptVersions) == 0x000038, "Wrong size on PlayFabAdminAPI_GetCloudScriptVersions");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, OnSuccess) == 0x000008, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, OnFailure) == 0x000018, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetCloudScriptVersions, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_GetCloudScriptVersions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetContentList
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetContentList final
{
public:
	struct FAdminGetContentListRequest            Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetContentListResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetContentList) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetContentList");
static_assert(sizeof(PlayFabAdminAPI_GetContentList) == 0x000048, "Wrong size on PlayFabAdminAPI_GetContentList");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetContentList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetContentList::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetContentList::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetContentList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentList, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetContentList::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetContentUploadUrl
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetContentUploadUrl final
{
public:
	struct FAdminGetContentUploadUrlRequest       Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetContentUploadUrlResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetContentUploadUrl) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetContentUploadUrl");
static_assert(sizeof(PlayFabAdminAPI_GetContentUploadUrl) == 0x000058, "Wrong size on PlayFabAdminAPI_GetContentUploadUrl");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetContentUploadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetContentUploadUrl::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetContentUploadUrl::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_GetContentUploadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetContentUploadUrl, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetContentUploadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetDataReport
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetDataReport final
{
public:
	struct FAdminGetDataReportRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetDataReportResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetDataReport) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetDataReport");
static_assert(sizeof(PlayFabAdminAPI_GetDataReport) == 0x000058, "Wrong size on PlayFabAdminAPI_GetDataReport");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetDataReport::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetDataReport::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetDataReport::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_GetDataReport::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetDataReport, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetDataReport::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetMatchmakerGameInfo
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetMatchmakerGameInfo final
{
public:
	struct FAdminGetMatchmakerGameInfoRequest     Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetMatchmakerGameInfoResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetMatchmakerGameInfo) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetMatchmakerGameInfo");
static_assert(sizeof(PlayFabAdminAPI_GetMatchmakerGameInfo) == 0x000048, "Wrong size on PlayFabAdminAPI_GetMatchmakerGameInfo");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameInfo, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetMatchmakerGameInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameInfo, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetMatchmakerGameInfo::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameInfo, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetMatchmakerGameInfo::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameInfo, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetMatchmakerGameInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameInfo, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetMatchmakerGameInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetMatchmakerGameModes
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetMatchmakerGameModes final
{
public:
	struct FAdminGetMatchmakerGameModesRequest    Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetMatchmakerGameModesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetMatchmakerGameModes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetMatchmakerGameModes");
static_assert(sizeof(PlayFabAdminAPI_GetMatchmakerGameModes) == 0x000048, "Wrong size on PlayFabAdminAPI_GetMatchmakerGameModes");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameModes, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetMatchmakerGameModes::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameModes, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetMatchmakerGameModes::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameModes, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetMatchmakerGameModes::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameModes, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetMatchmakerGameModes::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetMatchmakerGameModes, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetMatchmakerGameModes::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayedTitleList
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetPlayedTitleList final
{
public:
	struct FAdminGetPlayedTitleListRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayedTitleListResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayedTitleList) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayedTitleList");
static_assert(sizeof(PlayFabAdminAPI_GetPlayedTitleList) == 0x000048, "Wrong size on PlayFabAdminAPI_GetPlayedTitleList");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayedTitleList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetPlayedTitleList::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetPlayedTitleList::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetPlayedTitleList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayedTitleList, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayedTitleList::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerIdFromAuthToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_GetPlayerIdFromAuthToken final
{
public:
	struct FAdminGetPlayerIdFromAuthTokenRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerIdFromAuthTokenResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerIdFromAuthToken) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerIdFromAuthToken");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerIdFromAuthToken) == 0x000050, "Wrong size on PlayFabAdminAPI_GetPlayerIdFromAuthToken");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, OnSuccess) == 0x000020, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, OnFailure) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerIdFromAuthToken, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_GetPlayerIdFromAuthToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerProfile
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetPlayerProfile final
{
public:
	struct FAdminGetPlayerProfileRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerProfileResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerProfile");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerProfile) == 0x000058, "Wrong size on PlayFabAdminAPI_GetPlayerProfile");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerProfile::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetPlayerProfile::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetPlayerProfile::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_GetPlayerProfile::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerProfile, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetPlayerProfile::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_GetPlayerSegments final
{
public:
	struct FAdminGetPlayersSegmentsRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerSegmentsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerSegments");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerSegments) == 0x000050, "Wrong size on PlayFabAdminAPI_GetPlayerSegments");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, OnSuccess) == 0x000020, "Member 'PlayFabAdminAPI_GetPlayerSegments::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, OnFailure) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerSegments::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayerSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSegments, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_GetPlayerSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerSharedSecrets
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_GetPlayerSharedSecrets final
{
public:
	struct FAdminGetPlayerSharedSecretsRequest    Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerSharedSecretsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerSharedSecrets) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerSharedSecrets");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerSharedSecrets) == 0x000038, "Wrong size on PlayFabAdminAPI_GetPlayerSharedSecrets");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, OnSuccess) == 0x000008, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, OnFailure) == 0x000018, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerSharedSecrets, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerSharedSecrets::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayersInSegment
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_GetPlayersInSegment final
{
public:
	struct FAdminGetPlayersInSegmentRequest       Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayersInSegmentResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayersInSegment");
static_assert(sizeof(PlayFabAdminAPI_GetPlayersInSegment) == 0x000068, "Wrong size on PlayFabAdminAPI_GetPlayersInSegment");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayersInSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_GetPlayersInSegment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_GetPlayersInSegment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_GetPlayersInSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayersInSegment, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_GetPlayersInSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerStatisticDefinitions
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_GetPlayerStatisticDefinitions final
{
public:
	struct FAdminGetPlayerStatisticDefinitionsRequest Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerStatisticDefinitionsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerStatisticDefinitions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerStatisticDefinitions");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerStatisticDefinitions) == 0x000038, "Wrong size on PlayFabAdminAPI_GetPlayerStatisticDefinitions");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, OnSuccess) == 0x000008, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, OnFailure) == 0x000018, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticDefinitions, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerStatisticDefinitions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_GetPlayerStatisticVersions final
{
public:
	struct FAdminGetPlayerStatisticVersionsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerStatisticVersionsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerStatisticVersions");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabAdminAPI_GetPlayerStatisticVersions");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, OnSuccess) == 0x000020, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, OnFailure) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerStatisticVersions, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_GetPlayerStatisticVersions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPlayerTags
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetPlayerTags final
{
public:
	struct FAdminGetPlayerTagsRequest             Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayerTagsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPlayerTags) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPlayerTags");
static_assert(sizeof(PlayFabAdminAPI_GetPlayerTags) == 0x000060, "Wrong size on PlayFabAdminAPI_GetPlayerTags");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPlayerTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetPlayerTags::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetPlayerTags::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_GetPlayerTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPlayerTags, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetPlayerTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPolicy
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetPolicy final
{
public:
	struct FAdminGetPolicyRequest                 Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPolicyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPolicy) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPolicy");
static_assert(sizeof(PlayFabAdminAPI_GetPolicy) == 0x000048, "Wrong size on PlayFabAdminAPI_GetPolicy");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetPolicy::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetPolicy::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetPolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPolicy, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetPolicy::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetPublisherData
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetPublisherData final
{
public:
	struct FAdminGetPublisherDataRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetPublisherData");
static_assert(sizeof(PlayFabAdminAPI_GetPublisherData) == 0x000048, "Wrong size on PlayFabAdminAPI_GetPublisherData");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetPublisherData, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetRandomResultTables
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetRandomResultTables final
{
public:
	struct FAdminGetRandomResultTablesRequest     Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetRandomResultTablesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetRandomResultTables) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetRandomResultTables");
static_assert(sizeof(PlayFabAdminAPI_GetRandomResultTables) == 0x000048, "Wrong size on PlayFabAdminAPI_GetRandomResultTables");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetRandomResultTables::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetRandomResultTables::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetRandomResultTables::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetRandomResultTables::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetRandomResultTables, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetRandomResultTables::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetSegmentExport
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetSegmentExport final
{
public:
	struct FAdminGetPlayersInSegmentExportRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetPlayersInSegmentExportResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetSegmentExport) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetSegmentExport");
static_assert(sizeof(PlayFabAdminAPI_GetSegmentExport) == 0x000048, "Wrong size on PlayFabAdminAPI_GetSegmentExport");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetSegmentExport::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetSegmentExport::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetSegmentExport::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetSegmentExport::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegmentExport, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetSegmentExport::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetSegments
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetSegments final
{
public:
	struct FAdminGetSegmentsRequest               Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetSegmentsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetSegments");
static_assert(sizeof(PlayFabAdminAPI_GetSegments) == 0x000048, "Wrong size on PlayFabAdminAPI_GetSegments");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetSegments::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetSegments::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetSegments, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetStoreItems
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetStoreItems final
{
public:
	struct FAdminGetStoreItemsRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetStoreItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetStoreItems");
static_assert(sizeof(PlayFabAdminAPI_GetStoreItems) == 0x000058, "Wrong size on PlayFabAdminAPI_GetStoreItems");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetStoreItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetStoreItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_GetStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetStoreItems, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetTaskInstances
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_GetTaskInstances final
{
public:
	struct FAdminGetTaskInstancesRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetTaskInstancesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetTaskInstances) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetTaskInstances");
static_assert(sizeof(PlayFabAdminAPI_GetTaskInstances) == 0x000068, "Wrong size on PlayFabAdminAPI_GetTaskInstances");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetTaskInstances::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_GetTaskInstances::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_GetTaskInstances::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_GetTaskInstances::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTaskInstances, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_GetTaskInstances::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetTasks
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_GetTasks final
{
public:
	struct FAdminGetTasksRequest                  Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetTasksResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetTasks) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetTasks");
static_assert(sizeof(PlayFabAdminAPI_GetTasks) == 0x000040, "Wrong size on PlayFabAdminAPI_GetTasks");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetTasks::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, OnSuccess) == 0x000010, "Member 'PlayFabAdminAPI_GetTasks::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, OnFailure) == 0x000020, "Member 'PlayFabAdminAPI_GetTasks::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, CustomData) == 0x000030, "Member 'PlayFabAdminAPI_GetTasks::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTasks, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_GetTasks::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetTitleData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetTitleData final
{
public:
	struct FAdminGetTitleDataRequest              Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetTitleData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetTitleData");
static_assert(sizeof(PlayFabAdminAPI_GetTitleData) == 0x000058, "Wrong size on PlayFabAdminAPI_GetTitleData");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetTitleData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetTitleData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_GetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleData, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetTitleInternalData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_GetTitleInternalData final
{
public:
	struct FAdminGetTitleDataRequest              Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetTitleInternalData");
static_assert(sizeof(PlayFabAdminAPI_GetTitleInternalData) == 0x000058, "Wrong size on PlayFabAdminAPI_GetTitleInternalData");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetTitleInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_GetTitleInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_GetTitleInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_GetTitleInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetTitleInternalData, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_GetTitleInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserAccountInfo
// 0x0078 (0x0078 - 0x0000)
struct PlayFabAdminAPI_GetUserAccountInfo final
{
public:
	struct FAdminLookupUserAccountInfoRequest     Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminLookupUserAccountInfoResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserAccountInfo) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserAccountInfo");
static_assert(sizeof(PlayFabAdminAPI_GetUserAccountInfo) == 0x000078, "Wrong size on PlayFabAdminAPI_GetUserAccountInfo");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserAccountInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, OnSuccess) == 0x000048, "Member 'PlayFabAdminAPI_GetUserAccountInfo::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, OnFailure) == 0x000058, "Member 'PlayFabAdminAPI_GetUserAccountInfo::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, CustomData) == 0x000068, "Member 'PlayFabAdminAPI_GetUserAccountInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserAccountInfo, ReturnValue) == 0x000070, "Member 'PlayFabAdminAPI_GetUserAccountInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_GetUserBans final
{
public:
	struct FAdminGetUserBansRequest               Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserBansResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserBans");
static_assert(sizeof(PlayFabAdminAPI_GetUserBans) == 0x000048, "Wrong size on PlayFabAdminAPI_GetUserBans");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_GetUserBans::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_GetUserBans::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_GetUserBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserBans, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_GetUserBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserData");
static_assert(sizeof(PlayFabAdminAPI_GetUserData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserData");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserInternalData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserInternalData");
static_assert(sizeof(PlayFabAdminAPI_GetUserInternalData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserInternalData");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInternalData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_GetUserInventory final
{
public:
	struct FAdminGetUserInventoryRequest          Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserInventoryResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserInventory) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserInventory");
static_assert(sizeof(PlayFabAdminAPI_GetUserInventory) == 0x000050, "Wrong size on PlayFabAdminAPI_GetUserInventory");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, OnSuccess) == 0x000020, "Member 'PlayFabAdminAPI_GetUserInventory::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, OnFailure) == 0x000030, "Member 'PlayFabAdminAPI_GetUserInventory::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_GetUserInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserInventory, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_GetUserInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserPublisherData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserPublisherData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserPublisherData");
static_assert(sizeof(PlayFabAdminAPI_GetUserPublisherData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserPublisherData");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserPublisherInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserPublisherInternalData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserPublisherInternalData");
static_assert(sizeof(PlayFabAdminAPI_GetUserPublisherInternalData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserPublisherInternalData");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherInternalData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserPublisherInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserPublisherReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserPublisherReadOnlyData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_GetUserPublisherReadOnlyData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserPublisherReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GetUserReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GetUserReadOnlyData final
{
public:
	struct FAdminGetUserDataRequest               Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GetUserReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_GetUserReadOnlyData) == 0x000060, "Wrong size on PlayFabAdminAPI_GetUserReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GetUserReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GetUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.GrantItemsToUsers
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_GrantItemsToUsers final
{
public:
	struct FAdminGrantItemsToUsersRequest         Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminGrantItemsToUsersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_GrantItemsToUsers) == 0x000008, "Wrong alignment on PlayFabAdminAPI_GrantItemsToUsers");
static_assert(sizeof(PlayFabAdminAPI_GrantItemsToUsers) == 0x000060, "Wrong size on PlayFabAdminAPI_GrantItemsToUsers");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, Request) == 0x000000, "Member 'PlayFabAdminAPI_GrantItemsToUsers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_GrantItemsToUsers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_GrantItemsToUsers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_GrantItemsToUsers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_GrantItemsToUsers, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_GrantItemsToUsers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.IncrementLimitedEditionItemAvailability
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_IncrementLimitedEditionItemAvailability final
{
public:
	struct FAdminIncrementLimitedEditionItemAvailabilityRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminIncrementLimitedEditionItemAvailabilityResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability) == 0x000008, "Wrong alignment on PlayFabAdminAPI_IncrementLimitedEditionItemAvailability");
static_assert(sizeof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability) == 0x000068, "Wrong size on PlayFabAdminAPI_IncrementLimitedEditionItemAvailability");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, Request) == 0x000000, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementLimitedEditionItemAvailability, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_IncrementLimitedEditionItemAvailability::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.IncrementPlayerStatisticVersion
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_IncrementPlayerStatisticVersion final
{
public:
	struct FAdminIncrementPlayerStatisticVersionRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminIncrementPlayerStatisticVersionResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_IncrementPlayerStatisticVersion) == 0x000008, "Wrong alignment on PlayFabAdminAPI_IncrementPlayerStatisticVersion");
static_assert(sizeof(PlayFabAdminAPI_IncrementPlayerStatisticVersion) == 0x000050, "Wrong size on PlayFabAdminAPI_IncrementPlayerStatisticVersion");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, Request) == 0x000000, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, OnSuccess) == 0x000020, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, OnFailure) == 0x000030, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_IncrementPlayerStatisticVersion, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_IncrementPlayerStatisticVersion::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ListOpenIdConnection
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_ListOpenIdConnection final
{
public:
	struct FAdminListOpenIdConnectionRequest      Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminListOpenIdConnectionResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ListOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ListOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_ListOpenIdConnection) == 0x000038, "Wrong size on PlayFabAdminAPI_ListOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, Request) == 0x000000, "Member 'PlayFabAdminAPI_ListOpenIdConnection::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, OnSuccess) == 0x000008, "Member 'PlayFabAdminAPI_ListOpenIdConnection::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, OnFailure) == 0x000018, "Member 'PlayFabAdminAPI_ListOpenIdConnection::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_ListOpenIdConnection::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListOpenIdConnection, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_ListOpenIdConnection::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ListVirtualCurrencyTypes
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_ListVirtualCurrencyTypes final
{
public:
	struct FAdminListVirtualCurrencyTypesRequest  Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminListVirtualCurrencyTypesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ListVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ListVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_ListVirtualCurrencyTypes) == 0x000038, "Wrong size on PlayFabAdminAPI_ListVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, Request) == 0x000000, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, OnSuccess) == 0x000008, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, OnFailure) == 0x000018, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ListVirtualCurrencyTypes, ReturnValue) == 0x000030, "Member 'PlayFabAdminAPI_ListVirtualCurrencyTypes::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ModifyServerBuild
// 0x00A8 (0x00A8 - 0x0000)
struct PlayFabAdminAPI_ModifyServerBuild final
{
public:
	struct FAdminModifyServerBuildRequest         Request;                                           // 0x0000(0x0078)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminModifyServerBuildResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0088(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0098(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x00A0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ModifyServerBuild) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ModifyServerBuild");
static_assert(sizeof(PlayFabAdminAPI_ModifyServerBuild) == 0x0000A8, "Wrong size on PlayFabAdminAPI_ModifyServerBuild");
static_assert(offsetof(PlayFabAdminAPI_ModifyServerBuild, Request) == 0x000000, "Member 'PlayFabAdminAPI_ModifyServerBuild::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ModifyServerBuild, OnSuccess) == 0x000078, "Member 'PlayFabAdminAPI_ModifyServerBuild::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ModifyServerBuild, OnFailure) == 0x000088, "Member 'PlayFabAdminAPI_ModifyServerBuild::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ModifyServerBuild, CustomData) == 0x000098, "Member 'PlayFabAdminAPI_ModifyServerBuild::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ModifyServerBuild, ReturnValue) == 0x0000A0, "Member 'PlayFabAdminAPI_ModifyServerBuild::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RefundPurchase
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_RefundPurchase final
{
public:
	struct FAdminRefundPurchaseRequest            Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRefundPurchaseResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RefundPurchase) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RefundPurchase");
static_assert(sizeof(PlayFabAdminAPI_RefundPurchase) == 0x000068, "Wrong size on PlayFabAdminAPI_RefundPurchase");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, Request) == 0x000000, "Member 'PlayFabAdminAPI_RefundPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_RefundPurchase::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_RefundPurchase::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_RefundPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RefundPurchase, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_RefundPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RemovePlayerTag
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_RemovePlayerTag final
{
public:
	struct FAdminRemovePlayerTagRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRemovePlayerTagResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RemovePlayerTag) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RemovePlayerTag");
static_assert(sizeof(PlayFabAdminAPI_RemovePlayerTag) == 0x000060, "Wrong size on PlayFabAdminAPI_RemovePlayerTag");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, Request) == 0x000000, "Member 'PlayFabAdminAPI_RemovePlayerTag::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_RemovePlayerTag::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_RemovePlayerTag::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_RemovePlayerTag::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemovePlayerTag, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_RemovePlayerTag::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RemoveVirtualCurrencyTypes
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RemoveVirtualCurrencyTypes final
{
public:
	struct FAdminRemoveVirtualCurrencyTypesRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminBlankResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RemoveVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes) == 0x000048, "Wrong size on PlayFabAdminAPI_RemoveVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, Request) == 0x000000, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RemoveVirtualCurrencyTypes, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RemoveVirtualCurrencyTypes::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ResetCharacterStatistics
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_ResetCharacterStatistics final
{
public:
	struct FAdminResetCharacterStatisticsRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminResetCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ResetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ResetCharacterStatistics");
static_assert(sizeof(PlayFabAdminAPI_ResetCharacterStatistics) == 0x000060, "Wrong size on PlayFabAdminAPI_ResetCharacterStatistics");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, Request) == 0x000000, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetCharacterStatistics, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_ResetCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ResetPassword
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_ResetPassword final
{
public:
	struct FAdminResetPasswordRequest             Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminResetPasswordResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ResetPassword) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ResetPassword");
static_assert(sizeof(PlayFabAdminAPI_ResetPassword) == 0x000060, "Wrong size on PlayFabAdminAPI_ResetPassword");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, Request) == 0x000000, "Member 'PlayFabAdminAPI_ResetPassword::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_ResetPassword::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_ResetPassword::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_ResetPassword::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetPassword, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_ResetPassword::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ResetUserStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_ResetUserStatistics final
{
public:
	struct FAdminResetUserStatisticsRequest       Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminResetUserStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ResetUserStatistics) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ResetUserStatistics");
static_assert(sizeof(PlayFabAdminAPI_ResetUserStatistics) == 0x000050, "Wrong size on PlayFabAdminAPI_ResetUserStatistics");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, Request) == 0x000000, "Member 'PlayFabAdminAPI_ResetUserStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, OnSuccess) == 0x000020, "Member 'PlayFabAdminAPI_ResetUserStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, OnFailure) == 0x000030, "Member 'PlayFabAdminAPI_ResetUserStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_ResetUserStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResetUserStatistics, ReturnValue) == 0x000048, "Member 'PlayFabAdminAPI_ResetUserStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.ResolvePurchaseDispute
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_ResolvePurchaseDispute final
{
public:
	struct FAdminResolvePurchaseDisputeRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminResolvePurchaseDisputeResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_ResolvePurchaseDispute) == 0x000008, "Wrong alignment on PlayFabAdminAPI_ResolvePurchaseDispute");
static_assert(sizeof(PlayFabAdminAPI_ResolvePurchaseDispute) == 0x000070, "Wrong size on PlayFabAdminAPI_ResolvePurchaseDispute");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, Request) == 0x000000, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, OnSuccess) == 0x000040, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, OnFailure) == 0x000050, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, CustomData) == 0x000060, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_ResolvePurchaseDispute, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_ResolvePurchaseDispute::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RevokeAllBansForUser
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RevokeAllBansForUser final
{
public:
	struct FAdminRevokeAllBansForUserRequest      Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRevokeAllBansForUserResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RevokeAllBansForUser) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RevokeAllBansForUser");
static_assert(sizeof(PlayFabAdminAPI_RevokeAllBansForUser) == 0x000048, "Wrong size on PlayFabAdminAPI_RevokeAllBansForUser");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, Request) == 0x000000, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeAllBansForUser, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RevokeAllBansForUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RevokeBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RevokeBans final
{
public:
	struct FAdminRevokeBansRequest                Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRevokeBansResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RevokeBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RevokeBans");
static_assert(sizeof(PlayFabAdminAPI_RevokeBans) == 0x000048, "Wrong size on PlayFabAdminAPI_RevokeBans");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, Request) == 0x000000, "Member 'PlayFabAdminAPI_RevokeBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RevokeBans::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_RevokeBans::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_RevokeBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeBans, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RevokeBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RevokeInventoryItem
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_RevokeInventoryItem final
{
public:
	struct FAdminRevokeInventoryItemRequest       Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRevokeInventoryResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RevokeInventoryItem) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RevokeInventoryItem");
static_assert(sizeof(PlayFabAdminAPI_RevokeInventoryItem) == 0x000068, "Wrong size on PlayFabAdminAPI_RevokeInventoryItem");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, Request) == 0x000000, "Member 'PlayFabAdminAPI_RevokeInventoryItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_RevokeInventoryItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_RevokeInventoryItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_RevokeInventoryItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItem, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_RevokeInventoryItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RevokeInventoryItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RevokeInventoryItems final
{
public:
	struct FAdminRevokeInventoryItemsRequest      Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRevokeInventoryItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RevokeInventoryItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RevokeInventoryItems");
static_assert(sizeof(PlayFabAdminAPI_RevokeInventoryItems) == 0x000048, "Wrong size on PlayFabAdminAPI_RevokeInventoryItems");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_RevokeInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RevokeInventoryItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_RevokeInventoryItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_RevokeInventoryItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RevokeInventoryItems, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RevokeInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.RunTask
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_RunTask final
{
public:
	struct FAdminRunTaskRequest                   Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminRunTaskResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_RunTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_RunTask");
static_assert(sizeof(PlayFabAdminAPI_RunTask) == 0x000048, "Wrong size on PlayFabAdminAPI_RunTask");
static_assert(offsetof(PlayFabAdminAPI_RunTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_RunTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RunTask, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_RunTask::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RunTask, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_RunTask::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RunTask, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_RunTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_RunTask, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_RunTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SendAccountRecoveryEmail
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_SendAccountRecoveryEmail final
{
public:
	struct FAdminSendAccountRecoveryEmailRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSendAccountRecoveryEmailResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SendAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SendAccountRecoveryEmail");
static_assert(sizeof(PlayFabAdminAPI_SendAccountRecoveryEmail) == 0x000060, "Wrong size on PlayFabAdminAPI_SendAccountRecoveryEmail");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, Request) == 0x000000, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SendAccountRecoveryEmail, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_SendAccountRecoveryEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetCatalogItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_SetCatalogItems final
{
public:
	struct FAdminUpdateCatalogItemsRequest        Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_SetCatalogItems) == 0x000068, "Wrong size on PlayFabAdminAPI_SetCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_SetCatalogItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_SetCatalogItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_SetCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetCatalogItems, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_SetCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetMembershipOverride
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_SetMembershipOverride final
{
public:
	struct FAdminSetMembershipOverrideRequest     Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetMembershipOverrideResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetMembershipOverride) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetMembershipOverride");
static_assert(sizeof(PlayFabAdminAPI_SetMembershipOverride) == 0x000070, "Wrong size on PlayFabAdminAPI_SetMembershipOverride");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetMembershipOverride::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, OnSuccess) == 0x000040, "Member 'PlayFabAdminAPI_SetMembershipOverride::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, OnFailure) == 0x000050, "Member 'PlayFabAdminAPI_SetMembershipOverride::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, CustomData) == 0x000060, "Member 'PlayFabAdminAPI_SetMembershipOverride::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetMembershipOverride, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_SetMembershipOverride::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetPlayerSecret
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_SetPlayerSecret final
{
public:
	struct FAdminSetPlayerSecretRequest           Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetPlayerSecretResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetPlayerSecret");
static_assert(sizeof(PlayFabAdminAPI_SetPlayerSecret) == 0x000058, "Wrong size on PlayFabAdminAPI_SetPlayerSecret");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetPlayerSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_SetPlayerSecret::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_SetPlayerSecret::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_SetPlayerSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPlayerSecret, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_SetPlayerSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetPublishedRevision
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_SetPublishedRevision final
{
public:
	struct FAdminSetPublishedRevisionRequest      Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetPublishedRevisionResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetPublishedRevision) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetPublishedRevision");
static_assert(sizeof(PlayFabAdminAPI_SetPublishedRevision) == 0x000048, "Wrong size on PlayFabAdminAPI_SetPublishedRevision");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetPublishedRevision::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_SetPublishedRevision::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_SetPublishedRevision::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_SetPublishedRevision::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublishedRevision, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_SetPublishedRevision::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetPublisherData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_SetPublisherData final
{
public:
	struct FAdminSetPublisherDataRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetPublisherData");
static_assert(sizeof(PlayFabAdminAPI_SetPublisherData) == 0x000058, "Wrong size on PlayFabAdminAPI_SetPublisherData");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_SetPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_SetPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_SetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetPublisherData, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_SetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetStoreItems
// 0x0078 (0x0078 - 0x0000)
struct PlayFabAdminAPI_SetStoreItems final
{
public:
	struct FAdminUpdateStoreItemsRequest          Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetStoreItems");
static_assert(sizeof(PlayFabAdminAPI_SetStoreItems) == 0x000078, "Wrong size on PlayFabAdminAPI_SetStoreItems");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, OnSuccess) == 0x000048, "Member 'PlayFabAdminAPI_SetStoreItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, OnFailure) == 0x000058, "Member 'PlayFabAdminAPI_SetStoreItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, CustomData) == 0x000068, "Member 'PlayFabAdminAPI_SetStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetStoreItems, ReturnValue) == 0x000070, "Member 'PlayFabAdminAPI_SetStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetTitleData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_SetTitleData final
{
public:
	struct FAdminSetTitleDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetTitleData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetTitleData");
static_assert(sizeof(PlayFabAdminAPI_SetTitleData) == 0x000060, "Wrong size on PlayFabAdminAPI_SetTitleData");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_SetTitleData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_SetTitleData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_SetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_SetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetTitleDataAndOverrides
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_SetTitleDataAndOverrides final
{
public:
	struct FAdminSetTitleDataAndOverridesRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetTitleDataAndOverridesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetTitleDataAndOverrides) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetTitleDataAndOverrides");
static_assert(sizeof(PlayFabAdminAPI_SetTitleDataAndOverrides) == 0x000060, "Wrong size on PlayFabAdminAPI_SetTitleDataAndOverrides");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleDataAndOverrides, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_SetTitleDataAndOverrides::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetTitleInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_SetTitleInternalData final
{
public:
	struct FAdminSetTitleDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetTitleInternalData");
static_assert(sizeof(PlayFabAdminAPI_SetTitleInternalData) == 0x000060, "Wrong size on PlayFabAdminAPI_SetTitleInternalData");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetTitleInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_SetTitleInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_SetTitleInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_SetTitleInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetTitleInternalData, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_SetTitleInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SetupPushNotification
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_SetupPushNotification final
{
public:
	struct FAdminSetupPushNotificationRequest     Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminSetupPushNotificationResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SetupPushNotification) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SetupPushNotification");
static_assert(sizeof(PlayFabAdminAPI_SetupPushNotification) == 0x000070, "Wrong size on PlayFabAdminAPI_SetupPushNotification");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, Request) == 0x000000, "Member 'PlayFabAdminAPI_SetupPushNotification::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, OnSuccess) == 0x000040, "Member 'PlayFabAdminAPI_SetupPushNotification::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, OnFailure) == 0x000050, "Member 'PlayFabAdminAPI_SetupPushNotification::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, CustomData) == 0x000060, "Member 'PlayFabAdminAPI_SetupPushNotification::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SetupPushNotification, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_SetupPushNotification::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.SubtractUserVirtualCurrency
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_SubtractUserVirtualCurrency final
{
public:
	struct FAdminSubtractUserVirtualCurrencyRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_SubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabAdminAPI_SubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabAdminAPI_SubtractUserVirtualCurrency) == 0x000068, "Wrong size on PlayFabAdminAPI_SubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_SubtractUserVirtualCurrency, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_SubtractUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAdminAPI_UpdateBans final
{
public:
	struct FAdminUpdateBansRequest                Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateBansResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateBans");
static_assert(sizeof(PlayFabAdminAPI_UpdateBans) == 0x000048, "Wrong size on PlayFabAdminAPI_UpdateBans");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, OnSuccess) == 0x000018, "Member 'PlayFabAdminAPI_UpdateBans::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, OnFailure) == 0x000028, "Member 'PlayFabAdminAPI_UpdateBans::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_UpdateBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateBans, ReturnValue) == 0x000040, "Member 'PlayFabAdminAPI_UpdateBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateCatalogItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdateCatalogItems final
{
public:
	struct FAdminUpdateCatalogItemsRequest        Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_UpdateCatalogItems) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdateCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdateCatalogItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdateCatalogItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_UpdateCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCatalogItems, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdateCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateCloudScript
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdateCloudScript final
{
public:
	struct FAdminUpdateCloudScriptRequest         Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateCloudScriptResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateCloudScript) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateCloudScript");
static_assert(sizeof(PlayFabAdminAPI_UpdateCloudScript) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdateCloudScript");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateCloudScript::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdateCloudScript::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdateCloudScript::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_UpdateCloudScript::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateCloudScript, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdateCloudScript::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateOpenIdConnection
// 0x0080 (0x0080 - 0x0000)
struct PlayFabAdminAPI_UpdateOpenIdConnection final
{
public:
	struct FAdminUpdateOpenIdConnectionRequest    Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_UpdateOpenIdConnection) == 0x000080, "Wrong size on PlayFabAdminAPI_UpdateOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, OnSuccess) == 0x000050, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, OnFailure) == 0x000060, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, CustomData) == 0x000070, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateOpenIdConnection, ReturnValue) == 0x000078, "Member 'PlayFabAdminAPI_UpdateOpenIdConnection::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdatePlayerSharedSecret
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_UpdatePlayerSharedSecret final
{
public:
	struct FAdminUpdatePlayerSharedSecretRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdatePlayerSharedSecretResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdatePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdatePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_UpdatePlayerSharedSecret) == 0x000060, "Wrong size on PlayFabAdminAPI_UpdatePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerSharedSecret, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_UpdatePlayerSharedSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdatePlayerStatisticDefinition
// 0x0058 (0x0058 - 0x0000)
struct PlayFabAdminAPI_UpdatePlayerStatisticDefinition final
{
public:
	struct FAdminUpdatePlayerStatisticDefinitionRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdatePlayerStatisticDefinitionResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdatePlayerStatisticDefinition");
static_assert(sizeof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition) == 0x000058, "Wrong size on PlayFabAdminAPI_UpdatePlayerStatisticDefinition");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, OnSuccess) == 0x000028, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, OnFailure) == 0x000038, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePlayerStatisticDefinition, ReturnValue) == 0x000050, "Member 'PlayFabAdminAPI_UpdatePlayerStatisticDefinition::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdatePolicy
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdatePolicy final
{
public:
	struct FAdminUpdatePolicyRequest              Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdatePolicyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdatePolicy) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdatePolicy");
static_assert(sizeof(PlayFabAdminAPI_UpdatePolicy) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdatePolicy");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdatePolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdatePolicy::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdatePolicy::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_UpdatePolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdatePolicy, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdatePolicy::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateRandomResultTables
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_UpdateRandomResultTables final
{
public:
	struct FAdminUpdateRandomResultTablesRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateRandomResultTablesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateRandomResultTables) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateRandomResultTables");
static_assert(sizeof(PlayFabAdminAPI_UpdateRandomResultTables) == 0x000060, "Wrong size on PlayFabAdminAPI_UpdateRandomResultTables");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateRandomResultTables, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_UpdateRandomResultTables::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateSegment
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_UpdateSegment final
{
public:
	struct FAdminUpdateSegmentRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateSegmentResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateSegment");
static_assert(sizeof(PlayFabAdminAPI_UpdateSegment) == 0x000040, "Wrong size on PlayFabAdminAPI_UpdateSegment");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, OnSuccess) == 0x000010, "Member 'PlayFabAdminAPI_UpdateSegment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, OnFailure) == 0x000020, "Member 'PlayFabAdminAPI_UpdateSegment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, CustomData) == 0x000030, "Member 'PlayFabAdminAPI_UpdateSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateSegment, ReturnValue) == 0x000038, "Member 'PlayFabAdminAPI_UpdateSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateStoreItems
// 0x0078 (0x0078 - 0x0000)
struct PlayFabAdminAPI_UpdateStoreItems final
{
public:
	struct FAdminUpdateStoreItemsRequest          Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateStoreItems");
static_assert(sizeof(PlayFabAdminAPI_UpdateStoreItems) == 0x000078, "Wrong size on PlayFabAdminAPI_UpdateStoreItems");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, OnSuccess) == 0x000048, "Member 'PlayFabAdminAPI_UpdateStoreItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, OnFailure) == 0x000058, "Member 'PlayFabAdminAPI_UpdateStoreItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, CustomData) == 0x000068, "Member 'PlayFabAdminAPI_UpdateStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateStoreItems, ReturnValue) == 0x000070, "Member 'PlayFabAdminAPI_UpdateStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateTask
// 0x0090 (0x0090 - 0x0000)
struct PlayFabAdminAPI_UpdateTask final
{
public:
	struct FAdminUpdateTaskRequest                Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateTask");
static_assert(sizeof(PlayFabAdminAPI_UpdateTask) == 0x000090, "Wrong size on PlayFabAdminAPI_UpdateTask");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, OnSuccess) == 0x000060, "Member 'PlayFabAdminAPI_UpdateTask::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, OnFailure) == 0x000070, "Member 'PlayFabAdminAPI_UpdateTask::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, CustomData) == 0x000080, "Member 'PlayFabAdminAPI_UpdateTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateTask, ReturnValue) == 0x000088, "Member 'PlayFabAdminAPI_UpdateTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_UpdateUserData final
{
public:
	struct FAdminUpdateUserDataRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserData) == 0x000070, "Wrong size on PlayFabAdminAPI_UpdateUserData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, OnSuccess) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, OnFailure) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, CustomData) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserData, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_UpdateUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserInternalData
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdateUserInternalData final
{
public:
	struct FAdminUpdateUserInternalDataRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserInternalData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserInternalData) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdateUserInternalData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdateUserInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdateUserInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_UpdateUserInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserInternalData, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserPublisherData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_UpdateUserPublisherData final
{
public:
	struct FAdminUpdateUserDataRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserPublisherData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserPublisherData) == 0x000070, "Wrong size on PlayFabAdminAPI_UpdateUserPublisherData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, OnSuccess) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, OnFailure) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, CustomData) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherData, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_UpdateUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserPublisherInternalData
// 0x0068 (0x0068 - 0x0000)
struct PlayFabAdminAPI_UpdateUserPublisherInternalData final
{
public:
	struct FAdminUpdateUserInternalDataRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserPublisherInternalData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserPublisherInternalData) == 0x000068, "Wrong size on PlayFabAdminAPI_UpdateUserPublisherInternalData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, OnSuccess) == 0x000038, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, OnFailure) == 0x000048, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, CustomData) == 0x000058, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherInternalData, ReturnValue) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserPublisherInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserPublisherReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_UpdateUserPublisherReadOnlyData final
{
public:
	struct FAdminUpdateUserDataRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData) == 0x000070, "Wrong size on PlayFabAdminAPI_UpdateUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, OnSuccess) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, OnFailure) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, CustomData) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserPublisherReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_UpdateUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabAdminAPI_UpdateUserReadOnlyData final
{
public:
	struct FAdminUpdateUserDataRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserReadOnlyData) == 0x000070, "Wrong size on PlayFabAdminAPI_UpdateUserReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, OnSuccess) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, OnFailure) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, CustomData) == 0x000060, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabAdminAPI_UpdateUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.UpdateUserTitleDisplayName
// 0x0060 (0x0060 - 0x0000)
struct PlayFabAdminAPI_UpdateUserTitleDisplayName final
{
public:
	struct FAdminUpdateUserTitleDisplayNameRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAdminUpdateUserTitleDisplayNameResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAdminAPI*                       ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_UpdateUserTitleDisplayName) == 0x000008, "Wrong alignment on PlayFabAdminAPI_UpdateUserTitleDisplayName");
static_assert(sizeof(PlayFabAdminAPI_UpdateUserTitleDisplayName) == 0x000060, "Wrong size on PlayFabAdminAPI_UpdateUserTitleDisplayName");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, Request) == 0x000000, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, OnSuccess) == 0x000030, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, OnFailure) == 0x000040, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, CustomData) == 0x000050, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_UpdateUserTitleDisplayName, ReturnValue) == 0x000058, "Member 'PlayFabAdminAPI_UpdateUserTitleDisplayName::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabAdminAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessAbortTaskInstance__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessAbortTaskInstance__DelegateSignature final
{
public:
	struct FAdminEmptyResponse                    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessAbortTaskInstance__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessAbortTaskInstance__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessAbortTaskInstance__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessAbortTaskInstance__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAbortTaskInstance__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessAbortTaskInstance__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAbortTaskInstance__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessAbortTaskInstance__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddLocalizedNews__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessAddLocalizedNews__DelegateSignature final
{
public:
	struct FAdminAddLocalizedNewsResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessAddLocalizedNews__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessAddLocalizedNews__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessAddLocalizedNews__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessAddLocalizedNews__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddLocalizedNews__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddLocalizedNews__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddLocalizedNews__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddLocalizedNews__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddNews__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessAddNews__DelegateSignature final
{
public:
	struct FAdminAddNewsResult                    Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessAddNews__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessAddNews__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessAddNews__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessAddNews__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddNews__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddNews__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddNews__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddNews__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddPlayerTag__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature final
{
public:
	struct FAdminAddPlayerTagResult               Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature final
{
public:
	struct FAdminModifyUserVirtualCurrencyResult  Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature) == 0x000038, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature final
{
public:
	struct FAdminBlankResult                      Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessBanUsers__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessBanUsers__DelegateSignature final
{
public:
	struct FAdminBanUsersResult                   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessBanUsers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessBanUsers__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessBanUsers__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessBanUsers__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessBanUsers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessBanUsers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessBanUsers__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessBanUsers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature final
{
public:
	struct FAdminCheckLimitedEditionItemAvailabilityResult Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature final
{
public:
	struct FAdminCreateTaskResult                 Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateCloudScriptTask__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessCreateCloudScriptTask__DelegateSignature final
{
public:
	struct FAdminCreateTaskResult                 Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessCreateCloudScriptTask__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessCreateCloudScriptTask__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessCreateCloudScriptTask__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessCreateCloudScriptTask__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateCloudScriptTask__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateCloudScriptTask__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateCloudScriptTask__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateCloudScriptTask__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature final
{
public:
	struct FAdminCreateTaskResult                 Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateOpenIdConnection__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessCreateOpenIdConnection__DelegateSignature final
{
public:
	struct FAdminEmptyResponse                    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessCreateOpenIdConnection__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessCreateOpenIdConnection__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessCreateOpenIdConnection__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessCreateOpenIdConnection__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateOpenIdConnection__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateOpenIdConnection__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateOpenIdConnection__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateOpenIdConnection__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature final
{
public:
	struct FAdminCreatePlayerSharedSecretResult   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature final
{
public:
	struct FAdminCreatePlayerStatisticDefinitionResult Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessCreateSegment__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessCreateSegment__DelegateSignature final
{
public:
	struct FAdminCreateSegmentResponse            Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessCreateSegment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessCreateSegment__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessCreateSegment__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessCreateSegment__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateSegment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateSegment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessCreateSegment__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessCreateSegment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteContent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeleteContent__DelegateSignature final
{
public:
	struct FAdminBlankResult                      Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeleteContent__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeleteContent__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeleteContent__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeleteContent__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteContent__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteContent__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteContent__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteContent__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature final
{
public:
	struct FAdminDeleteMasterPlayerAccountResult  Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature final
{
public:
	struct FAdminDeleteMembershipSubscriptionResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature final
{
public:
	struct FAdminEmptyResponse                    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeletePlayer__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeletePlayer__DelegateSignature final
{
public:
	struct FAdminDeletePlayerResult               Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeletePlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeletePlayer__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeletePlayer__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeletePlayer__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeletePlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeletePlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeletePlayer__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeletePlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature final
{
public:
	struct FAdminDeletePlayerSharedSecretResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteSegment__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeleteSegment__DelegateSignature final
{
public:
	struct FAdminDeleteSegmentsResponse           Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeleteSegment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeleteSegment__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeleteSegment__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeleteSegment__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteSegment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteSegment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteSegment__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteSegment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteStore__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeleteStore__DelegateSignature final
{
public:
	struct FAdminDeleteStoreResult                Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeleteStore__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeleteStore__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeleteStore__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeleteStore__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteStore__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteStore__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteStore__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteStore__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteTask__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeleteTask__DelegateSignature final
{
public:
	struct FAdminEmptyResponse                    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeleteTask__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeleteTask__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeleteTask__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeleteTask__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteTask__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteTask__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteTask__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteTask__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteTitle__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeleteTitle__DelegateSignature final
{
public:
	struct FAdminDeleteTitleResult                Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeleteTitle__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeleteTitle__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeleteTitle__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeleteTitle__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteTitle__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteTitle__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteTitle__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteTitle__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature final
{
public:
	struct FAdminDeleteTitleDataOverrideResult    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessExportMasterPlayerData__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessExportMasterPlayerData__DelegateSignature final
{
public:
	struct FAdminExportMasterPlayerDataResult     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessExportMasterPlayerData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessExportMasterPlayerData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessExportMasterPlayerData__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessExportMasterPlayerData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessExportMasterPlayerData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessExportMasterPlayerData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessExportMasterPlayerData__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessExportMasterPlayerData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessExportPlayersInSegment__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessExportPlayersInSegment__DelegateSignature final
{
public:
	struct FAdminExportPlayersInSegmentResult     Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessExportPlayersInSegment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessExportPlayersInSegment__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessExportPlayersInSegment__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessExportPlayersInSegment__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessExportPlayersInSegment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessExportPlayersInSegment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessExportPlayersInSegment__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessExportPlayersInSegment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature final
{
public:
	struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetAllSegments__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetAllSegments__DelegateSignature final
{
public:
	struct FAdminGetAllSegmentsResult             Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetAllSegments__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetAllSegments__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetAllSegments__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetAllSegments__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetAllSegments__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetAllSegments__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetAllSegments__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetAllSegments__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetCatalogItems__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature final
{
public:
	struct FAdminGetCatalogItemsResult            Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetCloudScriptRevision__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptRevision__DelegateSignature final
{
public:
	struct FAdminGetCloudScriptRevisionResult     Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptRevision__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptRevision__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptRevision__DelegateSignature) == 0x000040, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptRevision__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptRevision__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptRevision__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptRevision__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptRevision__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature final
{
public:
	struct FAdminGetCloudScriptTaskInstanceResult Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetCloudScriptVersions__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptVersions__DelegateSignature final
{
public:
	struct FAdminGetCloudScriptVersionsResult     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptVersions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptVersions__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptVersions__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptVersions__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptVersions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptVersions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptVersions__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetCloudScriptVersions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetContentList__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetContentList__DelegateSignature final
{
public:
	struct FAdminGetContentListResult             Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetContentList__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetContentList__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetContentList__DelegateSignature) == 0x000028, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetContentList__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetContentList__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetContentList__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetContentList__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetContentList__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetContentUploadUrl__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetContentUploadUrl__DelegateSignature final
{
public:
	struct FAdminGetContentUploadUrlResult        Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetContentUploadUrl__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetContentUploadUrl__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetContentUploadUrl__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetContentUploadUrl__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetContentUploadUrl__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetContentUploadUrl__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetContentUploadUrl__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetContentUploadUrl__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetDataReport__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetDataReport__DelegateSignature final
{
public:
	struct FAdminGetDataReportResult              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetDataReport__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetDataReport__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetDataReport__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetDataReport__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetDataReport__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetDataReport__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetDataReport__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetDataReport__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature final
{
public:
	struct FAdminGetMatchmakerGameInfoResult      Result;                                            // 0x0000(0x00B8)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00B8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature) == 0x0000C0, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature, CustomData) == 0x0000B8, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature final
{
public:
	struct FAdminGetMatchmakerGameModesResult     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayedTitleList__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPlayedTitleList__DelegateSignature final
{
public:
	struct FAdminGetPlayedTitleListResult         Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPlayedTitleList__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPlayedTitleList__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPlayedTitleList__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPlayedTitleList__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayedTitleList__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayedTitleList__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayedTitleList__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayedTitleList__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature final
{
public:
	struct FAdminGetPlayerIdFromAuthTokenResult   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerProfile__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature final
{
public:
	struct FAdminGetPlayerProfileResult           Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerSegments__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature final
{
public:
	struct FAdminGetPlayerSegmentsResult          Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature final
{
public:
	struct FAdminGetPlayerSharedSecretsResult     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayersInSegment__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature final
{
public:
	struct FAdminGetPlayersInSegmentResult        Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature) == 0x000038, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature final
{
public:
	struct FAdminGetPlayerStatisticDefinitionsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature final
{
public:
	struct FAdminGetPlayerStatisticVersionsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPlayerTags__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature final
{
public:
	struct FAdminGetPlayerTagsResult              Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPolicy__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPolicy__DelegateSignature final
{
public:
	struct FAdminGetPolicyResponse                Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPolicy__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPolicy__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPolicy__DelegateSignature) == 0x000038, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPolicy__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPolicy__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPolicy__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPolicy__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPolicy__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetPublisherData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetPublisherData__DelegateSignature final
{
public:
	struct FAdminGetPublisherDataResult           Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetPublisherData__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetPublisherData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetRandomResultTables__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature final
{
public:
	struct FAdminGetRandomResultTablesResult      Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetSegmentExport__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetSegmentExport__DelegateSignature final
{
public:
	struct FAdminGetPlayersInSegmentExportResponse Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetSegmentExport__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetSegmentExport__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetSegmentExport__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetSegmentExport__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetSegmentExport__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetSegmentExport__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetSegmentExport__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetSegmentExport__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetSegments__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetSegments__DelegateSignature final
{
public:
	struct FAdminGetSegmentsResponse              Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetSegments__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetSegments__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetSegments__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetSegments__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetSegments__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetSegments__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetSegments__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetSegments__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetStoreItems__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetStoreItems__DelegateSignature final
{
public:
	struct FAdminGetStoreItemsResult              Result;                                            // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetStoreItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetStoreItems__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetStoreItems__DelegateSignature) == 0x000050, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetStoreItems__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetStoreItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetStoreItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetStoreItems__DelegateSignature, CustomData) == 0x000048, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetStoreItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetTaskInstances__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetTaskInstances__DelegateSignature final
{
public:
	struct FAdminGetTaskInstancesResult           Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetTaskInstances__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetTaskInstances__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetTaskInstances__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetTaskInstances__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetTaskInstances__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetTaskInstances__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetTaskInstances__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetTaskInstances__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetTasks__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetTasks__DelegateSignature final
{
public:
	struct FAdminGetTasksResult                   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetTasks__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetTasks__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetTasks__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetTasks__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetTasks__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetTasks__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetTasks__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetTasks__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetTitleData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetTitleData__DelegateSignature final
{
public:
	struct FAdminGetTitleDataResult               Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetTitleData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetTitleData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetTitleData__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetTitleData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetTitleData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetTitleData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetTitleData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetTitleData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetTitleInternalData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature final
{
public:
	struct FAdminGetTitleDataResult               Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserAccountInfo__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature final
{
public:
	struct FAdminLookupUserAccountInfoResult      Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserBans__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetUserBans__DelegateSignature final
{
public:
	struct FAdminGetUserBansResult                Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetUserBans__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetUserBans__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetUserBans__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetUserBans__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserBans__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserBans__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserBans__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserBans__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetUserData__DelegateSignature final
{
public:
	struct FAdminGetUserDataResult                Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetUserData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetUserData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetUserData__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetUserData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserInternalData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature final
{
public:
	struct FAdminGetUserDataResult                Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserInventory__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetUserInventory__DelegateSignature final
{
public:
	struct FAdminGetUserInventoryResult           Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetUserInventory__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetUserInventory__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetUserInventory__DelegateSignature) == 0x000040, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetUserInventory__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserInventory__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserInventory__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserInventory__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserInventory__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserPublisherData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature final
{
public:
	struct FAdminGetUserDataResult                Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature final
{
public:
	struct FAdminGetUserDataResult                Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature final
{
public:
	struct FAdminGetUserDataResult                Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGetUserReadOnlyData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature final
{
public:
	struct FAdminGetUserDataResult                Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessGrantItemsToUsers__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature final
{
public:
	struct FAdminGrantItemsToUsersResult          Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature final
{
public:
	struct FAdminIncrementLimitedEditionItemAvailabilityResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature final
{
public:
	struct FAdminIncrementPlayerStatisticVersionResult Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessListOpenIdConnection__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessListOpenIdConnection__DelegateSignature final
{
public:
	struct FAdminListOpenIdConnectionResponse     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessListOpenIdConnection__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessListOpenIdConnection__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessListOpenIdConnection__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessListOpenIdConnection__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessListOpenIdConnection__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessListOpenIdConnection__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessListOpenIdConnection__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessListOpenIdConnection__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature final
{
public:
	struct FAdminListVirtualCurrencyTypesResult   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessModifyServerBuild__DelegateSignature
// 0x0090 (0x0090 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessModifyServerBuild__DelegateSignature final
{
public:
	struct FAdminModifyServerBuildResult          Result;                                            // 0x0000(0x0088)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessModifyServerBuild__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessModifyServerBuild__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessModifyServerBuild__DelegateSignature) == 0x000090, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessModifyServerBuild__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessModifyServerBuild__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessModifyServerBuild__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessModifyServerBuild__DelegateSignature, CustomData) == 0x000088, "Member 'PlayFabAdminAPI_DelegateOnSuccessModifyServerBuild__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessRefundPurchase__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessRefundPurchase__DelegateSignature final
{
public:
	struct FAdminRefundPurchaseResponse           Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessRefundPurchase__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessRefundPurchase__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessRefundPurchase__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessRefundPurchase__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRefundPurchase__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessRefundPurchase__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRefundPurchase__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessRefundPurchase__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessRemovePlayerTag__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature final
{
public:
	struct FAdminRemovePlayerTagResult            Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature final
{
public:
	struct FAdminBlankResult                      Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessResetCharacterStatistics__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessResetCharacterStatistics__DelegateSignature final
{
public:
	struct FAdminResetCharacterStatisticsResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessResetCharacterStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessResetCharacterStatistics__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessResetCharacterStatistics__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessResetCharacterStatistics__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessResetCharacterStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessResetCharacterStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessResetCharacterStatistics__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessResetCharacterStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessResetPassword__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessResetPassword__DelegateSignature final
{
public:
	struct FAdminResetPasswordResult              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessResetPassword__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessResetPassword__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessResetPassword__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessResetPassword__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessResetPassword__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessResetPassword__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessResetPassword__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessResetPassword__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessResetUserStatistics__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessResetUserStatistics__DelegateSignature final
{
public:
	struct FAdminResetUserStatisticsResult        Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessResetUserStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessResetUserStatistics__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessResetUserStatistics__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessResetUserStatistics__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessResetUserStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessResetUserStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessResetUserStatistics__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessResetUserStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessResolvePurchaseDispute__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessResolvePurchaseDispute__DelegateSignature final
{
public:
	struct FAdminResolvePurchaseDisputeResponse   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessResolvePurchaseDispute__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessResolvePurchaseDispute__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessResolvePurchaseDispute__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessResolvePurchaseDispute__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessResolvePurchaseDispute__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessResolvePurchaseDispute__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessResolvePurchaseDispute__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessResolvePurchaseDispute__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessRevokeAllBansForUser__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature final
{
public:
	struct FAdminRevokeAllBansForUserResult       Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessRevokeBans__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessRevokeBans__DelegateSignature final
{
public:
	struct FAdminRevokeBansResult                 Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessRevokeBans__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessRevokeBans__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessRevokeBans__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessRevokeBans__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRevokeBans__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessRevokeBans__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRevokeBans__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessRevokeBans__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessRevokeInventoryItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature final
{
public:
	struct FAdminRevokeInventoryResult            Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessRevokeInventoryItems__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature final
{
public:
	struct FAdminRevokeInventoryItemsResult       Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessRunTask__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessRunTask__DelegateSignature final
{
public:
	struct FAdminRunTaskResult                    Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessRunTask__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessRunTask__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessRunTask__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessRunTask__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRunTask__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessRunTask__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessRunTask__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessRunTask__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature final
{
public:
	struct FAdminSendAccountRecoveryEmailResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetCatalogItems__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetCatalogItems__DelegateSignature final
{
public:
	struct FAdminUpdateCatalogItemsResult         Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetCatalogItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetCatalogItems__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetCatalogItems__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetCatalogItems__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetCatalogItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetCatalogItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetCatalogItems__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetCatalogItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetMembershipOverride__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetMembershipOverride__DelegateSignature final
{
public:
	struct FAdminSetMembershipOverrideResult      Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetMembershipOverride__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetMembershipOverride__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetMembershipOverride__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetMembershipOverride__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetMembershipOverride__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetMembershipOverride__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetMembershipOverride__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetMembershipOverride__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetPlayerSecret__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature final
{
public:
	struct FAdminSetPlayerSecretResult            Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetPublishedRevision__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetPublishedRevision__DelegateSignature final
{
public:
	struct FAdminSetPublishedRevisionResult       Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetPublishedRevision__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetPublishedRevision__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetPublishedRevision__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetPublishedRevision__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetPublishedRevision__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetPublishedRevision__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetPublishedRevision__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetPublishedRevision__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetPublisherData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetPublisherData__DelegateSignature final
{
public:
	struct FAdminSetPublisherDataResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetPublisherData__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetPublisherData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetStoreItems__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetStoreItems__DelegateSignature final
{
public:
	struct FAdminUpdateStoreItemsResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetStoreItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetStoreItems__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetStoreItems__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetStoreItems__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetStoreItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetStoreItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetStoreItems__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetStoreItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetTitleData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetTitleData__DelegateSignature final
{
public:
	struct FAdminSetTitleDataResult               Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetTitleData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetTitleData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetTitleData__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetTitleData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetTitleData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetTitleData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetTitleData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetTitleData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature final
{
public:
	struct FAdminSetTitleDataAndOverridesResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetTitleInternalData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature final
{
public:
	struct FAdminSetTitleDataResult               Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSetupPushNotification__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSetupPushNotification__DelegateSignature final
{
public:
	struct FAdminSetupPushNotificationResult      Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSetupPushNotification__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSetupPushNotification__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSetupPushNotification__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSetupPushNotification__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetupPushNotification__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetupPushNotification__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSetupPushNotification__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessSetupPushNotification__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature final
{
public:
	struct FAdminModifyUserVirtualCurrencyResult  Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature) == 0x000038, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabAdminAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateBans__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateBans__DelegateSignature final
{
public:
	struct FAdminUpdateBansResult                 Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateBans__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateBans__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateBans__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateBans__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateBans__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateBans__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateBans__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateBans__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateCatalogItems__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateCatalogItems__DelegateSignature final
{
public:
	struct FAdminUpdateCatalogItemsResult         Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateCatalogItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateCatalogItems__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateCatalogItems__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateCatalogItems__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateCatalogItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateCatalogItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateCatalogItems__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateCatalogItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateCloudScript__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateCloudScript__DelegateSignature final
{
public:
	struct FAdminUpdateCloudScriptResult          Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateCloudScript__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateCloudScript__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateCloudScript__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateCloudScript__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateCloudScript__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateCloudScript__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateCloudScript__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateCloudScript__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature final
{
public:
	struct FAdminEmptyResponse                    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature final
{
public:
	struct FAdminUpdatePlayerSharedSecretResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature final
{
public:
	struct FAdminUpdatePlayerStatisticDefinitionResult Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdatePolicy__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdatePolicy__DelegateSignature final
{
public:
	struct FAdminUpdatePolicyResponse             Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdatePolicy__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdatePolicy__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdatePolicy__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdatePolicy__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdatePolicy__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdatePolicy__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdatePolicy__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdatePolicy__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateRandomResultTables__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateRandomResultTables__DelegateSignature final
{
public:
	struct FAdminUpdateRandomResultTablesResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateRandomResultTables__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateRandomResultTables__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateRandomResultTables__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateRandomResultTables__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateRandomResultTables__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateRandomResultTables__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateRandomResultTables__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateRandomResultTables__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateSegment__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateSegment__DelegateSignature final
{
public:
	struct FAdminUpdateSegmentResponse            Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateSegment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateSegment__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateSegment__DelegateSignature) == 0x000030, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateSegment__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateSegment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateSegment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateSegment__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateSegment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateStoreItems__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateStoreItems__DelegateSignature final
{
public:
	struct FAdminUpdateStoreItemsResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateStoreItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateStoreItems__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateStoreItems__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateStoreItems__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateStoreItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateStoreItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateStoreItems__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateStoreItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateTask__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateTask__DelegateSignature final
{
public:
	struct FAdminEmptyResponse                    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateTask__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateTask__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateTask__DelegateSignature) == 0x000010, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateTask__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateTask__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateTask__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateTask__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateTask__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateUserData__DelegateSignature final
{
public:
	struct FAdminUpdateUserDataResult             Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateUserData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserData__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateUserData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserInternalData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature final
{
public:
	struct FAdminUpdateUserDataResult             Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserPublisherData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature final
{
public:
	struct FAdminUpdateUserDataResult             Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature final
{
public:
	struct FAdminUpdateUserDataResult             Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature final
{
public:
	struct FAdminUpdateUserDataResult             Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature final
{
public:
	struct FAdminUpdateUserDataResult             Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature) == 0x000018, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAdminAPI.DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature final
{
public:
	struct FAdminUpdateUserTitleDisplayNameResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAdminAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature");
static_assert(sizeof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature) == 0x000020, "Wrong size on PlayFabAdminAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabAdminAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAbortTaskInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAbortTaskInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_195C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAbortTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAbortTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_HelperAbortTaskInstance) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAbortTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_HelperAbortTaskInstance, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAbortTaskInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAbortTaskInstance, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAbortTaskInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAbortTaskInstance, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAbortTaskInstance::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddLocalizedNews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddLocalizedNews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_195D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddLocalizedNews) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddLocalizedNews");
static_assert(sizeof(PlayFabAdminAPI_HelperAddLocalizedNews) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddLocalizedNews");
static_assert(offsetof(PlayFabAdminAPI_HelperAddLocalizedNews, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddLocalizedNews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddLocalizedNews, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddLocalizedNews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddLocalizedNews, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddLocalizedNews::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddNews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddNews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_195E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddNews) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddNews");
static_assert(sizeof(PlayFabAdminAPI_HelperAddNews) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddNews");
static_assert(offsetof(PlayFabAdminAPI_HelperAddNews, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddNews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddNews, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddNews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddNews, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddNews::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddPlayerTag
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddPlayerTag final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_195F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddPlayerTag) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddPlayerTag");
static_assert(sizeof(PlayFabAdminAPI_HelperAddPlayerTag) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddPlayerTag");
static_assert(offsetof(PlayFabAdminAPI_HelperAddPlayerTag, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddPlayerTag::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddPlayerTag, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddPlayerTag::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddPlayerTag, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddPlayerTag::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1960[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddUserVirtualCurrency");
static_assert(sizeof(PlayFabAdminAPI_HelperAddUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddUserVirtualCurrency");
static_assert(offsetof(PlayFabAdminAPI_HelperAddUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddUserVirtualCurrency, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddUserVirtualCurrency, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddUserVirtualCurrency::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperAddVirtualCurrencyTypes
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperAddVirtualCurrencyTypes final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1961[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperAddVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperAddVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperAddVirtualCurrencyTypes::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperAddVirtualCurrencyTypes::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperAddVirtualCurrencyTypes, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperAddVirtualCurrencyTypes::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperBanUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperBanUsers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1962[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperBanUsers) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperBanUsers");
static_assert(sizeof(PlayFabAdminAPI_HelperBanUsers) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperBanUsers");
static_assert(offsetof(PlayFabAdminAPI_HelperBanUsers, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperBanUsers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperBanUsers, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperBanUsers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperBanUsers, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperBanUsers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCheckLimitedEditionItemAvailability
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1963[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability");
static_assert(sizeof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability");
static_assert(offsetof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateActionsOnPlayersInSegmentTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1964[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateCloudScriptTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateCloudScriptTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1965[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateCloudScriptTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateCloudScriptTask");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateCloudScriptTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateCloudScriptTask");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateCloudScriptTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateCloudScriptTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateCloudScriptTask, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateCloudScriptTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateCloudScriptTask, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateCloudScriptTask::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateInsightsScheduledScalingTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1966[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateOpenIdConnection
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateOpenIdConnection final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1967[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateOpenIdConnection) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateOpenIdConnection, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateOpenIdConnection::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateOpenIdConnection, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateOpenIdConnection::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateOpenIdConnection, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateOpenIdConnection::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreatePlayerSharedSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreatePlayerSharedSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1968[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreatePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreatePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreatePlayerSharedSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreatePlayerSharedSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerSharedSecret, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreatePlayerSharedSecret::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreatePlayerStatisticDefinition
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1969[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition");
static_assert(sizeof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperCreateSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperCreateSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_196A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperCreateSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperCreateSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperCreateSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperCreateSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperCreateSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateSegment, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperCreateSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperCreateSegment, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperCreateSegment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteContent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteContent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_196B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteContent) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteContent");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteContent) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteContent");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteContent, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteContent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteContent, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteContent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteContent, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteContent::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteMasterPlayerAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteMasterPlayerAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_196C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteMasterPlayerAccount");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteMasterPlayerAccount");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteMasterPlayerAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteMasterPlayerAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMasterPlayerAccount, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteMasterPlayerAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteMembershipSubscription
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteMembershipSubscription final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_196D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteMembershipSubscription) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteMembershipSubscription");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteMembershipSubscription) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteMembershipSubscription");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMembershipSubscription, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteMembershipSubscription::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMembershipSubscription, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteMembershipSubscription::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteMembershipSubscription, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteMembershipSubscription::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteOpenIdConnection
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteOpenIdConnection final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_196E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteOpenIdConnection) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteOpenIdConnection, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteOpenIdConnection::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteOpenIdConnection, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteOpenIdConnection::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteOpenIdConnection, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteOpenIdConnection::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeletePlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeletePlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_196F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeletePlayer) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeletePlayer");
static_assert(sizeof(PlayFabAdminAPI_HelperDeletePlayer) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeletePlayer");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayer, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeletePlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayer, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeletePlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayer, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeletePlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeletePlayerSharedSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeletePlayerSharedSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1970[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeletePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeletePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeletePlayerSharedSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeletePlayerSharedSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeletePlayerSharedSecret, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeletePlayerSharedSecret::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1971[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteSegment, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteSegment, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteSegment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteStore
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteStore final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1972[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteStore) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteStore");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteStore) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteStore");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteStore, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteStore::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteStore, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteStore::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteStore, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteStore::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1973[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteTask");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteTask");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTask, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTask, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteTask::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteTitle
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteTitle final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1974[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteTitle) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteTitle");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteTitle) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteTitle");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitle, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteTitle::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitle, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteTitle::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitle, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteTitle::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperDeleteTitleDataOverride
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperDeleteTitleDataOverride final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1975[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperDeleteTitleDataOverride) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperDeleteTitleDataOverride");
static_assert(sizeof(PlayFabAdminAPI_HelperDeleteTitleDataOverride) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperDeleteTitleDataOverride");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitleDataOverride, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperDeleteTitleDataOverride::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitleDataOverride, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperDeleteTitleDataOverride::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperDeleteTitleDataOverride, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperDeleteTitleDataOverride::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperExportMasterPlayerData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperExportMasterPlayerData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1976[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperExportMasterPlayerData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperExportMasterPlayerData");
static_assert(sizeof(PlayFabAdminAPI_HelperExportMasterPlayerData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperExportMasterPlayerData");
static_assert(offsetof(PlayFabAdminAPI_HelperExportMasterPlayerData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperExportMasterPlayerData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperExportMasterPlayerData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperExportMasterPlayerData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperExportMasterPlayerData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperExportMasterPlayerData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperExportPlayersInSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperExportPlayersInSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1977[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperExportPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperExportPlayersInSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperExportPlayersInSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperExportPlayersInSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperExportPlayersInSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperExportPlayersInSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperExportPlayersInSegment, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperExportPlayersInSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperExportPlayersInSegment, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperExportPlayersInSegment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetActionsOnPlayersInSegmentTaskInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1978[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetAllSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetAllSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1979[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetAllSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetAllSegments");
static_assert(sizeof(PlayFabAdminAPI_HelperGetAllSegments) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetAllSegments");
static_assert(offsetof(PlayFabAdminAPI_HelperGetAllSegments, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetAllSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetAllSegments, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetAllSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetAllSegments, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetAllSegments::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_197A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_HelperGetCatalogItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCatalogItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCatalogItems, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCatalogItems, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetCatalogItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetCloudScriptRevision
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetCloudScriptRevision final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_197B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetCloudScriptRevision) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetCloudScriptRevision");
static_assert(sizeof(PlayFabAdminAPI_HelperGetCloudScriptRevision) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetCloudScriptRevision");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptRevision, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetCloudScriptRevision::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptRevision, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetCloudScriptRevision::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptRevision, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetCloudScriptRevision::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetCloudScriptTaskInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetCloudScriptTaskInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_197C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetCloudScriptTaskInstance");
static_assert(sizeof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetCloudScriptTaskInstance");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetCloudScriptTaskInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetCloudScriptTaskInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptTaskInstance, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetCloudScriptTaskInstance::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetCloudScriptVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetCloudScriptVersions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_197D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetCloudScriptVersions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetCloudScriptVersions");
static_assert(sizeof(PlayFabAdminAPI_HelperGetCloudScriptVersions) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetCloudScriptVersions");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptVersions, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetCloudScriptVersions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptVersions, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetCloudScriptVersions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetCloudScriptVersions, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetCloudScriptVersions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetContentList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetContentList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_197E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetContentList) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetContentList");
static_assert(sizeof(PlayFabAdminAPI_HelperGetContentList) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetContentList");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentList, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetContentList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentList, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetContentList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentList, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetContentList::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetContentUploadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetContentUploadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_197F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetContentUploadUrl) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetContentUploadUrl");
static_assert(sizeof(PlayFabAdminAPI_HelperGetContentUploadUrl) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetContentUploadUrl");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentUploadUrl, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetContentUploadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentUploadUrl, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetContentUploadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetContentUploadUrl, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetContentUploadUrl::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetDataReport
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetDataReport final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1980[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetDataReport) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetDataReport");
static_assert(sizeof(PlayFabAdminAPI_HelperGetDataReport) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetDataReport");
static_assert(offsetof(PlayFabAdminAPI_HelperGetDataReport, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetDataReport::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetDataReport, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetDataReport::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetDataReport, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetDataReport::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetMatchmakerGameInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetMatchmakerGameInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1981[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetMatchmakerGameInfo) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetMatchmakerGameInfo");
static_assert(sizeof(PlayFabAdminAPI_HelperGetMatchmakerGameInfo) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetMatchmakerGameInfo");
static_assert(offsetof(PlayFabAdminAPI_HelperGetMatchmakerGameInfo, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetMatchmakerGameInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetMatchmakerGameInfo, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetMatchmakerGameInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetMatchmakerGameInfo, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetMatchmakerGameInfo::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetMatchmakerGameModes
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetMatchmakerGameModes final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1982[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetMatchmakerGameModes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetMatchmakerGameModes");
static_assert(sizeof(PlayFabAdminAPI_HelperGetMatchmakerGameModes) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetMatchmakerGameModes");
static_assert(offsetof(PlayFabAdminAPI_HelperGetMatchmakerGameModes, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetMatchmakerGameModes::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetMatchmakerGameModes, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetMatchmakerGameModes::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetMatchmakerGameModes, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetMatchmakerGameModes::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayedTitleList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayedTitleList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1983[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayedTitleList) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayedTitleList");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayedTitleList) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayedTitleList");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayedTitleList, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayedTitleList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayedTitleList, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayedTitleList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayedTitleList, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayedTitleList::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerIdFromAuthToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1984[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerProfile final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1985[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerProfile");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerProfile) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerProfile");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerProfile, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerProfile::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerProfile, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerProfile::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerProfile, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerProfile::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1986[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerSegments");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerSegments) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerSegments");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSegments, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSegments, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSegments, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerSegments::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerSharedSecrets
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerSharedSecrets final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1987[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerSharedSecrets");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerSharedSecrets");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerSharedSecrets::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerSharedSecrets::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerSharedSecrets, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerSharedSecrets::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayersInSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayersInSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1988[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayersInSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayersInSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayersInSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayersInSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayersInSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayersInSegment, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayersInSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayersInSegment, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayersInSegment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerStatisticDefinitions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1989[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerStatisticVersions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_198A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerStatisticVersions");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerStatisticVersions");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticVersions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticVersions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerStatisticVersions, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerStatisticVersions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPlayerTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_198B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPlayerTags) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPlayerTags");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPlayerTags) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPlayerTags");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerTags, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPlayerTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerTags, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPlayerTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPlayerTags, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPlayerTags::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_198C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPolicy) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPolicy");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPolicy) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPolicy");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPolicy, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPolicy, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPolicy, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPolicy::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_198D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetPublisherData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetPublisherData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetPublisherData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPublisherData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPublisherData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetPublisherData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetRandomResultTables
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetRandomResultTables final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_198E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetRandomResultTables) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetRandomResultTables");
static_assert(sizeof(PlayFabAdminAPI_HelperGetRandomResultTables) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetRandomResultTables");
static_assert(offsetof(PlayFabAdminAPI_HelperGetRandomResultTables, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetRandomResultTables::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetRandomResultTables, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetRandomResultTables::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetRandomResultTables, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetRandomResultTables::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetSegmentExport
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetSegmentExport final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_198F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetSegmentExport) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetSegmentExport");
static_assert(sizeof(PlayFabAdminAPI_HelperGetSegmentExport) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetSegmentExport");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegmentExport, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetSegmentExport::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegmentExport, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetSegmentExport::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegmentExport, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetSegmentExport::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1990[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetSegments) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetSegments");
static_assert(sizeof(PlayFabAdminAPI_HelperGetSegments) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetSegments");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegments, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegments, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetSegments, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetSegments::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1991[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetStoreItems");
static_assert(sizeof(PlayFabAdminAPI_HelperGetStoreItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetStoreItems");
static_assert(offsetof(PlayFabAdminAPI_HelperGetStoreItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetStoreItems, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetStoreItems, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetStoreItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetTaskInstances
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetTaskInstances final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1992[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetTaskInstances) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetTaskInstances");
static_assert(sizeof(PlayFabAdminAPI_HelperGetTaskInstances) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetTaskInstances");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTaskInstances, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetTaskInstances::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTaskInstances, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetTaskInstances::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTaskInstances, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetTaskInstances::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetTasks
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetTasks final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1993[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetTasks) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetTasks");
static_assert(sizeof(PlayFabAdminAPI_HelperGetTasks) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetTasks");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTasks, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetTasks::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTasks, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetTasks::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTasks, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetTasks::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1994[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetTitleData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetTitleData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetTitleData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetTitleData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetTitleData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetTitleInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetTitleInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1995[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetTitleInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetTitleInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetTitleInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetTitleInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleInternalData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetTitleInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetTitleInternalData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetTitleInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserAccountInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserAccountInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1996[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserAccountInfo) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserAccountInfo");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserAccountInfo) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserAccountInfo");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserAccountInfo, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserAccountInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserAccountInfo, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserAccountInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserAccountInfo, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserAccountInfo::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1997[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserBans");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserBans) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserBans");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserBans, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserBans, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserBans, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserBans::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1998[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1999[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInternalData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInternalData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserInventory) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserInventory");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserInventory) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserInventory");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInventory, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInventory, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserInventory, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserInventory::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserPublisherData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserPublisherData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserPublisherData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserPublisherInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserPublisherInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserPublisherInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserPublisherInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserPublisherInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserPublisherInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherInternalData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserPublisherInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherInternalData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserPublisherInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGetUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGetUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGetUserReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_HelperGetUserReadOnlyData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGetUserReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGetUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGetUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGetUserReadOnlyData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGetUserReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperGrantItemsToUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperGrantItemsToUsers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperGrantItemsToUsers) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperGrantItemsToUsers");
static_assert(sizeof(PlayFabAdminAPI_HelperGrantItemsToUsers) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperGrantItemsToUsers");
static_assert(offsetof(PlayFabAdminAPI_HelperGrantItemsToUsers, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperGrantItemsToUsers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGrantItemsToUsers, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperGrantItemsToUsers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperGrantItemsToUsers, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperGrantItemsToUsers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperIncrementLimitedEditionItemAvailability
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability");
static_assert(sizeof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperIncrementPlayerStatisticVersion
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion");
static_assert(sizeof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperListOpenIdConnection
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperListOpenIdConnection final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperListOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperListOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_HelperListOpenIdConnection) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperListOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_HelperListOpenIdConnection, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperListOpenIdConnection::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperListOpenIdConnection, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperListOpenIdConnection::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperListOpenIdConnection, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperListOpenIdConnection::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperListVirtualCurrencyTypes
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperListVirtualCurrencyTypes final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperListVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperListVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperListVirtualCurrencyTypes::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperListVirtualCurrencyTypes::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperListVirtualCurrencyTypes, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperListVirtualCurrencyTypes::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperModifyServerBuild
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperModifyServerBuild final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperModifyServerBuild) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperModifyServerBuild");
static_assert(sizeof(PlayFabAdminAPI_HelperModifyServerBuild) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperModifyServerBuild");
static_assert(offsetof(PlayFabAdminAPI_HelperModifyServerBuild, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperModifyServerBuild::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperModifyServerBuild, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperModifyServerBuild::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperModifyServerBuild, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperModifyServerBuild::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRefundPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRefundPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRefundPurchase) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRefundPurchase");
static_assert(sizeof(PlayFabAdminAPI_HelperRefundPurchase) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRefundPurchase");
static_assert(offsetof(PlayFabAdminAPI_HelperRefundPurchase, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRefundPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRefundPurchase, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRefundPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRefundPurchase, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRefundPurchase::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRemovePlayerTag
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRemovePlayerTag final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRemovePlayerTag) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRemovePlayerTag");
static_assert(sizeof(PlayFabAdminAPI_HelperRemovePlayerTag) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRemovePlayerTag");
static_assert(offsetof(PlayFabAdminAPI_HelperRemovePlayerTag, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRemovePlayerTag::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRemovePlayerTag, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRemovePlayerTag::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRemovePlayerTag, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRemovePlayerTag::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRemoveVirtualCurrencyTypes
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes");
static_assert(sizeof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes");
static_assert(offsetof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperResetCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperResetCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperResetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperResetCharacterStatistics");
static_assert(sizeof(PlayFabAdminAPI_HelperResetCharacterStatistics) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperResetCharacterStatistics");
static_assert(offsetof(PlayFabAdminAPI_HelperResetCharacterStatistics, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperResetCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetCharacterStatistics, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperResetCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetCharacterStatistics, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperResetCharacterStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperResetPassword
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperResetPassword final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19A9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperResetPassword) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperResetPassword");
static_assert(sizeof(PlayFabAdminAPI_HelperResetPassword) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperResetPassword");
static_assert(offsetof(PlayFabAdminAPI_HelperResetPassword, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperResetPassword::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetPassword, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperResetPassword::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetPassword, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperResetPassword::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperResetUserStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperResetUserStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19AA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperResetUserStatistics) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperResetUserStatistics");
static_assert(sizeof(PlayFabAdminAPI_HelperResetUserStatistics) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperResetUserStatistics");
static_assert(offsetof(PlayFabAdminAPI_HelperResetUserStatistics, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperResetUserStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetUserStatistics, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperResetUserStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResetUserStatistics, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperResetUserStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperResolvePurchaseDispute
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperResolvePurchaseDispute final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19AB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperResolvePurchaseDispute) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperResolvePurchaseDispute");
static_assert(sizeof(PlayFabAdminAPI_HelperResolvePurchaseDispute) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperResolvePurchaseDispute");
static_assert(offsetof(PlayFabAdminAPI_HelperResolvePurchaseDispute, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperResolvePurchaseDispute::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResolvePurchaseDispute, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperResolvePurchaseDispute::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperResolvePurchaseDispute, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperResolvePurchaseDispute::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRevokeAllBansForUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRevokeAllBansForUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19AC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRevokeAllBansForUser) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRevokeAllBansForUser");
static_assert(sizeof(PlayFabAdminAPI_HelperRevokeAllBansForUser) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRevokeAllBansForUser");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeAllBansForUser, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRevokeAllBansForUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeAllBansForUser, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRevokeAllBansForUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeAllBansForUser, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRevokeAllBansForUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRevokeBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRevokeBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19AD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRevokeBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRevokeBans");
static_assert(sizeof(PlayFabAdminAPI_HelperRevokeBans) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRevokeBans");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeBans, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRevokeBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeBans, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRevokeBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeBans, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRevokeBans::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRevokeInventoryItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRevokeInventoryItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19AE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRevokeInventoryItem) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRevokeInventoryItem");
static_assert(sizeof(PlayFabAdminAPI_HelperRevokeInventoryItem) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRevokeInventoryItem");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItem, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItem, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItem, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRevokeInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRevokeInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19AF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRevokeInventoryItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRevokeInventoryItems");
static_assert(sizeof(PlayFabAdminAPI_HelperRevokeInventoryItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRevokeInventoryItems");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItems, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRevokeInventoryItems, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRevokeInventoryItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperRunTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperRunTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperRunTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperRunTask");
static_assert(sizeof(PlayFabAdminAPI_HelperRunTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperRunTask");
static_assert(offsetof(PlayFabAdminAPI_HelperRunTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperRunTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRunTask, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperRunTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperRunTask, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperRunTask::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSendAccountRecoveryEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSendAccountRecoveryEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSendAccountRecoveryEmail");
static_assert(sizeof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSendAccountRecoveryEmail");
static_assert(offsetof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSendAccountRecoveryEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSendAccountRecoveryEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSendAccountRecoveryEmail, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSendAccountRecoveryEmail::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_HelperSetCatalogItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_HelperSetCatalogItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetCatalogItems, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetCatalogItems, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetCatalogItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetMembershipOverride
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetMembershipOverride final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetMembershipOverride) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetMembershipOverride");
static_assert(sizeof(PlayFabAdminAPI_HelperSetMembershipOverride) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetMembershipOverride");
static_assert(offsetof(PlayFabAdminAPI_HelperSetMembershipOverride, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetMembershipOverride::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetMembershipOverride, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetMembershipOverride::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetMembershipOverride, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetMembershipOverride::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetPlayerSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetPlayerSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetPlayerSecret");
static_assert(sizeof(PlayFabAdminAPI_HelperSetPlayerSecret) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetPlayerSecret");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPlayerSecret, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetPlayerSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPlayerSecret, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetPlayerSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPlayerSecret, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetPlayerSecret::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetPublishedRevision
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetPublishedRevision final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetPublishedRevision) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetPublishedRevision");
static_assert(sizeof(PlayFabAdminAPI_HelperSetPublishedRevision) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetPublishedRevision");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublishedRevision, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetPublishedRevision::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublishedRevision, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetPublishedRevision::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublishedRevision, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetPublishedRevision::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetPublisherData");
static_assert(sizeof(PlayFabAdminAPI_HelperSetPublisherData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetPublisherData");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublisherData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublisherData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetPublisherData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetStoreItems");
static_assert(sizeof(PlayFabAdminAPI_HelperSetStoreItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetStoreItems");
static_assert(offsetof(PlayFabAdminAPI_HelperSetStoreItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetStoreItems, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetStoreItems, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetStoreItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetTitleData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetTitleData");
static_assert(sizeof(PlayFabAdminAPI_HelperSetTitleData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetTitleData");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetTitleData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetTitleDataAndOverrides
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetTitleDataAndOverrides final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19B9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetTitleDataAndOverrides");
static_assert(sizeof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetTitleDataAndOverrides");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetTitleDataAndOverrides::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetTitleDataAndOverrides::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleDataAndOverrides, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetTitleDataAndOverrides::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetTitleInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetTitleInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19BA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetTitleInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperSetTitleInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetTitleInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetTitleInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleInternalData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetTitleInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetTitleInternalData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetTitleInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSetupPushNotification
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSetupPushNotification final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19BB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSetupPushNotification) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSetupPushNotification");
static_assert(sizeof(PlayFabAdminAPI_HelperSetupPushNotification) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSetupPushNotification");
static_assert(offsetof(PlayFabAdminAPI_HelperSetupPushNotification, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSetupPushNotification::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetupPushNotification, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSetupPushNotification::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSetupPushNotification, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSetupPushNotification::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperSubtractUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperSubtractUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19BC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperSubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperSubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperSubtractUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperSubtractUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperSubtractUserVirtualCurrency, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperSubtractUserVirtualCurrency::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19BD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateBans) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateBans");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateBans) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateBans");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateBans, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateBans, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateBans, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateBans::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19BE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateCatalogItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateCatalogItems");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateCatalogItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateCatalogItems");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCatalogItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCatalogItems, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCatalogItems, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateCatalogItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateCloudScript
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateCloudScript final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19BF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateCloudScript) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateCloudScript");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateCloudScript) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateCloudScript");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCloudScript, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateCloudScript::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCloudScript, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateCloudScript::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateCloudScript, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateCloudScript::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateOpenIdConnection
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateOpenIdConnection final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateOpenIdConnection) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateOpenIdConnection");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateOpenIdConnection) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateOpenIdConnection");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateOpenIdConnection, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateOpenIdConnection::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateOpenIdConnection, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateOpenIdConnection::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateOpenIdConnection, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateOpenIdConnection::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdatePlayerSharedSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdatePlayerSharedSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdatePlayerSharedSecret");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdatePlayerSharedSecret");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdatePlayerSharedSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdatePlayerSharedSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerSharedSecret, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdatePlayerSharedSecret::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdatePlayerStatisticDefinition
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdatePolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdatePolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdatePolicy) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdatePolicy");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdatePolicy) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdatePolicy");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePolicy, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdatePolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePolicy, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdatePolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdatePolicy, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdatePolicy::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateRandomResultTables
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateRandomResultTables final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateRandomResultTables) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateRandomResultTables");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateRandomResultTables) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateRandomResultTables");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateRandomResultTables, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateRandomResultTables::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateRandomResultTables, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateRandomResultTables::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateRandomResultTables, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateRandomResultTables::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateSegment) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateSegment");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateSegment) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateSegment");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateSegment, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateSegment, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateSegment, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateSegment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateStoreItems) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateStoreItems");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateStoreItems) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateStoreItems");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateStoreItems, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateStoreItems, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateStoreItems, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateStoreItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateTask) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateTask");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateTask) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateTask");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateTask, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateTask, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateTask, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateTask::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserInternalData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserInternalData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19CA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserPublisherData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserPublisherData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserPublisherData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserPublisherInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19CB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserPublisherInternalData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserPublisherInternalData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherInternalData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19CC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19CD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserReadOnlyData");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserReadOnlyData");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserReadOnlyData, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserTitleDisplayName
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminAPI_HelperUpdateUserTitleDisplayName final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19CE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName) == 0x000008, "Wrong alignment on PlayFabAdminAPI_HelperUpdateUserTitleDisplayName");
static_assert(sizeof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName) == 0x000050, "Wrong size on PlayFabAdminAPI_HelperUpdateUserTitleDisplayName");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName, Response) == 0x000000, "Member 'PlayFabAdminAPI_HelperUpdateUserTitleDisplayName::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName, CustomData) == 0x000040, "Member 'PlayFabAdminAPI_HelperUpdateUserTitleDisplayName::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAdminAPI_HelperUpdateUserTitleDisplayName, Successful) == 0x000048, "Member 'PlayFabAdminAPI_HelperUpdateUserTitleDisplayName::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeAddLocalizedNewsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeAddLocalizedNewsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminAddLocalizedNewsResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeAddLocalizedNewsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeAddLocalizedNewsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeAddLocalizedNewsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeAddLocalizedNewsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeAddLocalizedNewsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeAddLocalizedNewsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeAddLocalizedNewsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeAddLocalizedNewsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeAddNewsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeAddNewsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminAddNewsResult                    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeAddNewsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeAddNewsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeAddNewsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeAddNewsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeAddNewsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeAddNewsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeAddNewsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeAddNewsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeAddPlayerTagResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeAddPlayerTagResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminAddPlayerTagResult               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeAddPlayerTagResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeAddPlayerTagResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeAddPlayerTagResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeAddPlayerTagResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeAddPlayerTagResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeAddPlayerTagResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeAddPlayerTagResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeAddPlayerTagResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeBanUsersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeBanUsersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminBanUsersResult                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeBanUsersResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeBanUsersResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeBanUsersResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeBanUsersResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeBanUsersResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeBanUsersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeBanUsersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeBanUsersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeBlankResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeBlankResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminBlankResult                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeBlankResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeBlankResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeBlankResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeBlankResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeBlankResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeBlankResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeBlankResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeBlankResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCheckLimitedEditionItemAvailabilityResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeCheckLimitedEditionItemAvailabilityResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCheckLimitedEditionItemAvailabilityResult ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeCheckLimitedEditionItemAvailabilityResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeCheckLimitedEditionItemAvailabilityResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeCheckLimitedEditionItemAvailabilityResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeCheckLimitedEditionItemAvailabilityResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCheckLimitedEditionItemAvailabilityResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeCheckLimitedEditionItemAvailabilityResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCheckLimitedEditionItemAvailabilityResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeCheckLimitedEditionItemAvailabilityResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCreatePlayerSharedSecretResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeCreatePlayerSharedSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCreatePlayerSharedSecretResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeCreatePlayerSharedSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeCreatePlayerSharedSecretResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeCreatePlayerSharedSecretResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeCreatePlayerSharedSecretResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCreatePlayerSharedSecretResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeCreatePlayerSharedSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCreatePlayerSharedSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeCreatePlayerSharedSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCreatePlayerStatisticDefinitionResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeCreatePlayerStatisticDefinitionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCreatePlayerStatisticDefinitionResult ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeCreatePlayerStatisticDefinitionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeCreatePlayerStatisticDefinitionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeCreatePlayerStatisticDefinitionResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeCreatePlayerStatisticDefinitionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCreatePlayerStatisticDefinitionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeCreatePlayerStatisticDefinitionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCreatePlayerStatisticDefinitionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeCreatePlayerStatisticDefinitionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCreateSegmentResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeCreateSegmentResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCreateSegmentResponse            ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeCreateSegmentResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeCreateSegmentResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeCreateSegmentResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_DecodeCreateSegmentResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCreateSegmentResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeCreateSegmentResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCreateSegmentResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeCreateSegmentResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeCreateTaskResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeCreateTaskResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminCreateTaskResult                 ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeCreateTaskResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeCreateTaskResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeCreateTaskResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeCreateTaskResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCreateTaskResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeCreateTaskResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeCreateTaskResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeCreateTaskResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteMasterPlayerAccountResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeDeleteMasterPlayerAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteMasterPlayerAccountResult  ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeDeleteMasterPlayerAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeDeleteMasterPlayerAccountResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeDeleteMasterPlayerAccountResultResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_DecodeDeleteMasterPlayerAccountResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteMasterPlayerAccountResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeDeleteMasterPlayerAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteMasterPlayerAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeDeleteMasterPlayerAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteMembershipSubscriptionResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeDeleteMembershipSubscriptionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteMembershipSubscriptionResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeDeleteMembershipSubscriptionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeDeleteMembershipSubscriptionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeDeleteMembershipSubscriptionResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeDeleteMembershipSubscriptionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteMembershipSubscriptionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeDeleteMembershipSubscriptionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteMembershipSubscriptionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeDeleteMembershipSubscriptionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeletePlayerResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeDeletePlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeletePlayerResult               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeDeletePlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeDeletePlayerResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeDeletePlayerResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeDeletePlayerResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeletePlayerResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeDeletePlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeletePlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeDeletePlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeletePlayerSharedSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeDeletePlayerSharedSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeletePlayerSharedSecretResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeDeletePlayerSharedSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeDeletePlayerSharedSecretResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeDeletePlayerSharedSecretResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeDeletePlayerSharedSecretResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeletePlayerSharedSecretResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeDeletePlayerSharedSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeletePlayerSharedSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeDeletePlayerSharedSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteSegmentsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeDeleteSegmentsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteSegmentsResponse           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeDeleteSegmentsResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeDeleteSegmentsResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeDeleteSegmentsResponseResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeDeleteSegmentsResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteSegmentsResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeDeleteSegmentsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteSegmentsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeDeleteSegmentsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteStoreResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeDeleteStoreResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteStoreResult                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeDeleteStoreResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeDeleteStoreResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeDeleteStoreResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeDeleteStoreResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteStoreResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeDeleteStoreResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteStoreResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeDeleteStoreResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteTitleDataOverrideResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeDeleteTitleDataOverrideResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteTitleDataOverrideResult    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeDeleteTitleDataOverrideResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeDeleteTitleDataOverrideResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeDeleteTitleDataOverrideResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeDeleteTitleDataOverrideResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteTitleDataOverrideResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeDeleteTitleDataOverrideResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteTitleDataOverrideResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeDeleteTitleDataOverrideResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteTitleResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeDeleteTitleResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminDeleteTitleResult                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeDeleteTitleResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeDeleteTitleResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeDeleteTitleResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeDeleteTitleResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteTitleResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeDeleteTitleResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeDeleteTitleResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeDeleteTitleResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminEmptyResponse                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeEmptyResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeEmptyResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeExportMasterPlayerDataResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeExportMasterPlayerDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminExportMasterPlayerDataResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeExportMasterPlayerDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeExportMasterPlayerDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeExportMasterPlayerDataResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeExportMasterPlayerDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeExportMasterPlayerDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeExportMasterPlayerDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeExportMasterPlayerDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeExportMasterPlayerDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeExportPlayersInSegmentResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeExportPlayersInSegmentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminExportPlayersInSegmentResult     ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeExportPlayersInSegmentResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeExportPlayersInSegmentResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeExportPlayersInSegmentResultResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_DecodeExportPlayersInSegmentResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeExportPlayersInSegmentResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeExportPlayersInSegmentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeExportPlayersInSegmentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeExportPlayersInSegmentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetAllSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetAllSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetAllSegmentsResult             ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetAllSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetAllSegmentsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetAllSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetAllSegmentsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetAllSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetAllSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetAllSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetAllSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCatalogItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetCatalogItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetCatalogItemsResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetCatalogItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetCatalogItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetCatalogItemsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetCatalogItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetCatalogItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetCatalogItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetCatalogItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetCatalogItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptRevisionResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetCloudScriptRevisionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetCloudScriptRevisionResult     ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetCloudScriptRevisionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetCloudScriptRevisionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetCloudScriptRevisionResultResponse) == 0x000040, "Wrong size on PlayFabAdminModelDecoder_DecodeGetCloudScriptRevisionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetCloudScriptRevisionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetCloudScriptRevisionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetCloudScriptRevisionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetCloudScriptRevisionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptTaskInstanceResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetCloudScriptTaskInstanceResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetCloudScriptTaskInstanceResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetCloudScriptTaskInstanceResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetCloudScriptTaskInstanceResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetCloudScriptTaskInstanceResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetCloudScriptTaskInstanceResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetCloudScriptTaskInstanceResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetCloudScriptTaskInstanceResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetCloudScriptTaskInstanceResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetCloudScriptTaskInstanceResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptVersionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetCloudScriptVersionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetCloudScriptVersionsResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetCloudScriptVersionsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetCloudScriptVersionsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetCloudScriptVersionsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetCloudScriptVersionsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetCloudScriptVersionsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetCloudScriptVersionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetCloudScriptVersionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetCloudScriptVersionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetContentListResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetContentListResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetContentListResult             ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetContentListResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetContentListResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetContentListResultResponse) == 0x000028, "Wrong size on PlayFabAdminModelDecoder_DecodeGetContentListResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetContentListResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetContentListResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetContentListResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetContentListResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetContentUploadUrlResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetContentUploadUrlResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetContentUploadUrlResult        ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetContentUploadUrlResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetContentUploadUrlResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetContentUploadUrlResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetContentUploadUrlResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetContentUploadUrlResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetContentUploadUrlResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetContentUploadUrlResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetContentUploadUrlResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetDataReportResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetDataReportResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetDataReportResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetDataReportResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetDataReportResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetDataReportResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetDataReportResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetDataReportResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetDataReportResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetDataReportResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetDataReportResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetMatchmakerGameInfoResultResponse
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetMatchmakerGameInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetMatchmakerGameInfoResult      ReturnValue;                                       // 0x0008(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetMatchmakerGameInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetMatchmakerGameInfoResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetMatchmakerGameInfoResultResponse) == 0x0000C0, "Wrong size on PlayFabAdminModelDecoder_DecodeGetMatchmakerGameInfoResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetMatchmakerGameInfoResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetMatchmakerGameInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetMatchmakerGameInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetMatchmakerGameInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetMatchmakerGameModesResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetMatchmakerGameModesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetMatchmakerGameModesResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetMatchmakerGameModesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetMatchmakerGameModesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetMatchmakerGameModesResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetMatchmakerGameModesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetMatchmakerGameModesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetMatchmakerGameModesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetMatchmakerGameModesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetMatchmakerGameModesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayedTitleListResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayedTitleListResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayedTitleListResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayedTitleListResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayedTitleListResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayedTitleListResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayedTitleListResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayedTitleListResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayedTitleListResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayedTitleListResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayedTitleListResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerIdFromAuthTokenResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayerIdFromAuthTokenResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerIdFromAuthTokenResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayerIdFromAuthTokenResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayerIdFromAuthTokenResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayerIdFromAuthTokenResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayerIdFromAuthTokenResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerIdFromAuthTokenResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerIdFromAuthTokenResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerIdFromAuthTokenResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerIdFromAuthTokenResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerProfileResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayerProfileResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerProfileResult           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayerProfileResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayerProfileResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayerProfileResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayerProfileResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerProfileResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerProfileResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerProfileResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerProfileResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayerSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerSegmentsResult          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayerSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayerSegmentsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayerSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayerSegmentsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerSharedSecretsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayerSharedSecretsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerSharedSecretsResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayerSharedSecretsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayerSharedSecretsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayerSharedSecretsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayerSharedSecretsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerSharedSecretsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerSharedSecretsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerSharedSecretsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerSharedSecretsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayersInSegmentExportResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentExportResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayersInSegmentExportResponse ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentExportResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentExportResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentExportResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentExportResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentExportResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentExportResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentExportResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentExportResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayersInSegmentResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayersInSegmentResult        ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentResultResponse) == 0x000038, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayersInSegmentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerStatisticDefinitionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayerStatisticDefinitionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerStatisticDefinitionsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayerStatisticDefinitionsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayerStatisticDefinitionsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayerStatisticDefinitionsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayerStatisticDefinitionsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerStatisticDefinitionsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerStatisticDefinitionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerStatisticDefinitionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerStatisticDefinitionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerStatisticVersionsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerTagsResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPlayerTagsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPlayerTagsResult              ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPlayerTagsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPlayerTagsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPlayerTagsResultResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPlayerTagsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerTagsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerTagsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPlayerTagsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPlayerTagsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPolicyResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPolicyResponse                ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPolicyResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPolicyResponseResponse) == 0x000038, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPolicyResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPublisherDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetPublisherDataResult           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetPublisherDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetPublisherDataResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeGetPublisherDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetRandomResultTablesResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetRandomResultTablesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetRandomResultTablesResult      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetRandomResultTablesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetRandomResultTablesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetRandomResultTablesResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeGetRandomResultTablesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetRandomResultTablesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetRandomResultTablesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetRandomResultTablesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetRandomResultTablesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetSegmentsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetSegmentsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetSegmentsResponse              ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetSegmentsResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetSegmentsResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetSegmentsResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_DecodeGetSegmentsResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetSegmentsResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetSegmentsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetSegmentsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetSegmentsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetStoreItemsResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetStoreItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetStoreItemsResult              ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetStoreItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetStoreItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetStoreItemsResultResponse) == 0x000050, "Wrong size on PlayFabAdminModelDecoder_DecodeGetStoreItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetStoreItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetStoreItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetStoreItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetStoreItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetTaskInstancesResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetTaskInstancesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetTaskInstancesResult           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetTaskInstancesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetTaskInstancesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetTaskInstancesResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetTaskInstancesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetTaskInstancesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetTaskInstancesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetTaskInstancesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetTaskInstancesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetTasksResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetTasksResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetTasksResult                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetTasksResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetTasksResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetTasksResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetTasksResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetTasksResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetTasksResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetTasksResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetTasksResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetTitleDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetTitleDataResult               ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetTitleDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetTitleDataResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeGetTitleDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetUserBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetUserBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetUserBansResult                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetUserBansResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetUserBansResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetUserBansResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGetUserBansResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetUserBansResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetUserBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetUserBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetUserBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetUserDataResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetUserDataResult                ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetUserDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetUserDataResultResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_DecodeGetUserDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGetUserInventoryResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGetUserInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGetUserInventoryResult           ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGetUserInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGetUserInventoryResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGetUserInventoryResultResponse) == 0x000040, "Wrong size on PlayFabAdminModelDecoder_DecodeGetUserInventoryResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetUserInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGetUserInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGetUserInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGetUserInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeGrantItemsToUsersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeGrantItemsToUsersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminGrantItemsToUsersResult          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeGrantItemsToUsersResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeGrantItemsToUsersResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeGrantItemsToUsersResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeGrantItemsToUsersResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGrantItemsToUsersResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeGrantItemsToUsersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeGrantItemsToUsersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeGrantItemsToUsersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeIncrementLimitedEditionItemAvailabilityResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeIncrementLimitedEditionItemAvailabilityResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminIncrementLimitedEditionItemAvailabilityResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeIncrementLimitedEditionItemAvailabilityResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeIncrementLimitedEditionItemAvailabilityResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeIncrementLimitedEditionItemAvailabilityResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeIncrementLimitedEditionItemAvailabilityResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeIncrementLimitedEditionItemAvailabilityResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeIncrementLimitedEditionItemAvailabilityResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeIncrementLimitedEditionItemAvailabilityResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeIncrementLimitedEditionItemAvailabilityResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeIncrementPlayerStatisticVersionResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeIncrementPlayerStatisticVersionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminIncrementPlayerStatisticVersionResult ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeIncrementPlayerStatisticVersionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeIncrementPlayerStatisticVersionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeIncrementPlayerStatisticVersionResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeIncrementPlayerStatisticVersionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeIncrementPlayerStatisticVersionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeIncrementPlayerStatisticVersionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeIncrementPlayerStatisticVersionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeIncrementPlayerStatisticVersionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeListOpenIdConnectionResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeListOpenIdConnectionResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminListOpenIdConnectionResponse     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeListOpenIdConnectionResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeListOpenIdConnectionResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeListOpenIdConnectionResponseResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeListOpenIdConnectionResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeListOpenIdConnectionResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeListOpenIdConnectionResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeListOpenIdConnectionResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeListOpenIdConnectionResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeListVirtualCurrencyTypesResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeListVirtualCurrencyTypesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminListVirtualCurrencyTypesResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeListVirtualCurrencyTypesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeListVirtualCurrencyTypesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeListVirtualCurrencyTypesResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeListVirtualCurrencyTypesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeListVirtualCurrencyTypesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeListVirtualCurrencyTypesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeListVirtualCurrencyTypesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeListVirtualCurrencyTypesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeLookupUserAccountInfoResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeLookupUserAccountInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminLookupUserAccountInfoResult      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeLookupUserAccountInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeLookupUserAccountInfoResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeLookupUserAccountInfoResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeLookupUserAccountInfoResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeLookupUserAccountInfoResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeLookupUserAccountInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeLookupUserAccountInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeLookupUserAccountInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeModifyServerBuildResultResponse
// 0x0090 (0x0090 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeModifyServerBuildResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminModifyServerBuildResult          ReturnValue;                                       // 0x0008(0x0088)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeModifyServerBuildResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeModifyServerBuildResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeModifyServerBuildResultResponse) == 0x000090, "Wrong size on PlayFabAdminModelDecoder_DecodeModifyServerBuildResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeModifyServerBuildResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeModifyServerBuildResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeModifyServerBuildResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeModifyServerBuildResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminModifyUserVirtualCurrencyResult  ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse) == 0x000038, "Wrong size on PlayFabAdminModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRefundPurchaseResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeRefundPurchaseResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRefundPurchaseResponse           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeRefundPurchaseResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeRefundPurchaseResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeRefundPurchaseResponseResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeRefundPurchaseResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRefundPurchaseResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeRefundPurchaseResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRefundPurchaseResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeRefundPurchaseResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRemovePlayerTagResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeRemovePlayerTagResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRemovePlayerTagResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeRemovePlayerTagResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeRemovePlayerTagResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeRemovePlayerTagResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeRemovePlayerTagResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRemovePlayerTagResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeRemovePlayerTagResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRemovePlayerTagResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeRemovePlayerTagResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeResetCharacterStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeResetCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminResetCharacterStatisticsResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeResetCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeResetCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeResetCharacterStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeResetCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeResetCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeResetCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeResetCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeResetCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeResetPasswordResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeResetPasswordResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminResetPasswordResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeResetPasswordResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeResetPasswordResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeResetPasswordResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeResetPasswordResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeResetPasswordResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeResetPasswordResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeResetPasswordResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeResetPasswordResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeResetUserStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeResetUserStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminResetUserStatisticsResult        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeResetUserStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeResetUserStatisticsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeResetUserStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeResetUserStatisticsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeResetUserStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeResetUserStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeResetUserStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeResetUserStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeResolvePurchaseDisputeResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeResolvePurchaseDisputeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminResolvePurchaseDisputeResponse   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeResolvePurchaseDisputeResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeResolvePurchaseDisputeResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeResolvePurchaseDisputeResponseResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeResolvePurchaseDisputeResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeResolvePurchaseDisputeResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeResolvePurchaseDisputeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeResolvePurchaseDisputeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeResolvePurchaseDisputeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeAllBansForUserResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeRevokeAllBansForUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRevokeAllBansForUserResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeRevokeAllBansForUserResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeRevokeAllBansForUserResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeRevokeAllBansForUserResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeRevokeAllBansForUserResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRevokeAllBansForUserResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeRevokeAllBansForUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRevokeAllBansForUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeRevokeAllBansForUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeRevokeBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRevokeBansResult                 ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeRevokeBansResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeRevokeBansResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeRevokeBansResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeRevokeBansResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRevokeBansResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeRevokeBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRevokeBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeRevokeBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeInventoryItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeRevokeInventoryItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRevokeInventoryItemsResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeRevokeInventoryItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeRevokeInventoryItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeRevokeInventoryItemsResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeRevokeInventoryItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRevokeInventoryItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeRevokeInventoryItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRevokeInventoryItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeRevokeInventoryItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeInventoryResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeRevokeInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRevokeInventoryResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeRevokeInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeRevokeInventoryResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeRevokeInventoryResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeRevokeInventoryResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRevokeInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeRevokeInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRevokeInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeRevokeInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeRunTaskResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeRunTaskResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminRunTaskResult                    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeRunTaskResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeRunTaskResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeRunTaskResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeRunTaskResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRunTaskResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeRunTaskResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeRunTaskResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeRunTaskResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSendAccountRecoveryEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeSendAccountRecoveryEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSendAccountRecoveryEmailResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeSendAccountRecoveryEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeSendAccountRecoveryEmailResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeSendAccountRecoveryEmailResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeSendAccountRecoveryEmailResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSendAccountRecoveryEmailResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeSendAccountRecoveryEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSendAccountRecoveryEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeSendAccountRecoveryEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetMembershipOverrideResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeSetMembershipOverrideResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetMembershipOverrideResult      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeSetMembershipOverrideResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeSetMembershipOverrideResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeSetMembershipOverrideResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeSetMembershipOverrideResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetMembershipOverrideResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeSetMembershipOverrideResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetMembershipOverrideResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeSetMembershipOverrideResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetPlayerSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeSetPlayerSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetPlayerSecretResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeSetPlayerSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeSetPlayerSecretResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeSetPlayerSecretResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeSetPlayerSecretResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetPlayerSecretResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeSetPlayerSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetPlayerSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeSetPlayerSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetPublishedRevisionResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeSetPublishedRevisionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetPublishedRevisionResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeSetPublishedRevisionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeSetPublishedRevisionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeSetPublishedRevisionResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeSetPublishedRevisionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetPublishedRevisionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeSetPublishedRevisionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetPublishedRevisionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeSetPublishedRevisionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetPublisherDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeSetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetPublisherDataResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeSetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeSetPublisherDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeSetPublisherDataResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeSetPublisherDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeSetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeSetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetTitleDataAndOverridesResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeSetTitleDataAndOverridesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetTitleDataAndOverridesResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeSetTitleDataAndOverridesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeSetTitleDataAndOverridesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeSetTitleDataAndOverridesResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeSetTitleDataAndOverridesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetTitleDataAndOverridesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeSetTitleDataAndOverridesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetTitleDataAndOverridesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeSetTitleDataAndOverridesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetTitleDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeSetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetTitleDataResult               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeSetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeSetTitleDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeSetTitleDataResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeSetTitleDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeSetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeSetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeSetupPushNotificationResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeSetupPushNotificationResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminSetupPushNotificationResult      ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeSetupPushNotificationResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeSetupPushNotificationResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeSetupPushNotificationResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeSetupPushNotificationResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetupPushNotificationResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeSetupPushNotificationResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeSetupPushNotificationResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeSetupPushNotificationResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdateBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateBansResult                 ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdateBansResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdateBansResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdateBansResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdateBansResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateBansResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdateBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdateBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateCatalogItemsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdateCatalogItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateCatalogItemsResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdateCatalogItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdateCatalogItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdateCatalogItemsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdateCatalogItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateCatalogItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdateCatalogItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateCatalogItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdateCatalogItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateCloudScriptResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdateCloudScriptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateCloudScriptResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdateCloudScriptResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdateCloudScriptResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdateCloudScriptResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdateCloudScriptResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateCloudScriptResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdateCloudScriptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateCloudScriptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdateCloudScriptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdatePlayerSharedSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdatePlayerSharedSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdatePlayerSharedSecretResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdatePlayerSharedSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdatePlayerSharedSecretResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdatePlayerSharedSecretResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdatePlayerSharedSecretResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdatePlayerSharedSecretResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdatePlayerSharedSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdatePlayerSharedSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdatePlayerSharedSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdatePlayerStatisticDefinitionResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdatePlayerStatisticDefinitionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdatePlayerStatisticDefinitionResult ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdatePlayerStatisticDefinitionResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdatePlayerStatisticDefinitionResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdatePlayerStatisticDefinitionResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdatePlayerStatisticDefinitionResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdatePlayerStatisticDefinitionResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdatePlayerStatisticDefinitionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdatePlayerStatisticDefinitionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdatePlayerStatisticDefinitionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdatePolicyResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdatePolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdatePolicyResponse             ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdatePolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdatePolicyResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdatePolicyResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdatePolicyResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdatePolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdatePolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdatePolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdatePolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateRandomResultTablesResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdateRandomResultTablesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateRandomResultTablesResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdateRandomResultTablesResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdateRandomResultTablesResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdateRandomResultTablesResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdateRandomResultTablesResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateRandomResultTablesResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdateRandomResultTablesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateRandomResultTablesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdateRandomResultTablesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateSegmentResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdateSegmentResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateSegmentResponse            ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdateSegmentResponseResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdateSegmentResponseResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdateSegmentResponseResponse) == 0x000030, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdateSegmentResponseResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateSegmentResponseResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdateSegmentResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateSegmentResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdateSegmentResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateStoreItemsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdateStoreItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateStoreItemsResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdateStoreItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdateStoreItemsResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdateStoreItemsResultResponse) == 0x000010, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdateStoreItemsResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateStoreItemsResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdateStoreItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateStoreItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdateStoreItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateUserDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdateUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateUserDataResult             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdateUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdateUserDataResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdateUserDataResultResponse) == 0x000018, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdateUserDataResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdateUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdateUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateUserTitleDisplayNameResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabAdminModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdminUpdateUserTitleDisplayNameResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAdminModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse) == 0x000008, "Wrong alignment on PlayFabAdminModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse");
static_assert(sizeof(PlayFabAdminModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse) == 0x000020, "Wrong size on PlayFabAdminModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse, Response) == 0x000000, "Member 'PlayFabAdminModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAdminModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabAdminModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.Delete
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAuthenticationAPI_Delete final
{
public:
	struct FAuthenticationDeleteRequest           Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAuthenticationEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAuthenticationAPI*              ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_Delete) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_Delete");
static_assert(sizeof(PlayFabAuthenticationAPI_Delete) == 0x000048, "Wrong size on PlayFabAuthenticationAPI_Delete");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, Request) == 0x000000, "Member 'PlayFabAuthenticationAPI_Delete::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, OnSuccess) == 0x000018, "Member 'PlayFabAuthenticationAPI_Delete::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, OnFailure) == 0x000028, "Member 'PlayFabAuthenticationAPI_Delete::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, CustomData) == 0x000038, "Member 'PlayFabAuthenticationAPI_Delete::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_Delete, ReturnValue) == 0x000040, "Member 'PlayFabAuthenticationAPI_Delete::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.GetEntityToken
// 0x0048 (0x0048 - 0x0000)
struct PlayFabAuthenticationAPI_GetEntityToken final
{
public:
	struct FAuthenticationGetEntityTokenRequest   Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAuthenticationGetEntityTokenResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAuthenticationAPI*              ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_GetEntityToken) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_GetEntityToken");
static_assert(sizeof(PlayFabAuthenticationAPI_GetEntityToken) == 0x000048, "Wrong size on PlayFabAuthenticationAPI_GetEntityToken");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, Request) == 0x000000, "Member 'PlayFabAuthenticationAPI_GetEntityToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, OnSuccess) == 0x000018, "Member 'PlayFabAuthenticationAPI_GetEntityToken::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, OnFailure) == 0x000028, "Member 'PlayFabAuthenticationAPI_GetEntityToken::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, CustomData) == 0x000038, "Member 'PlayFabAuthenticationAPI_GetEntityToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_GetEntityToken, ReturnValue) == 0x000040, "Member 'PlayFabAuthenticationAPI_GetEntityToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.ValidateEntityToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_ValidateEntityToken final
{
public:
	struct FAuthenticationValidateEntityTokenRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FAuthenticationValidateEntityTokenResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabAuthenticationAPI*              ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_ValidateEntityToken) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_ValidateEntityToken");
static_assert(sizeof(PlayFabAuthenticationAPI_ValidateEntityToken) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_ValidateEntityToken");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, Request) == 0x000000, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, OnSuccess) == 0x000020, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, OnFailure) == 0x000030, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, CustomData) == 0x000040, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_ValidateEntityToken, ReturnValue) == 0x000048, "Member 'PlayFabAuthenticationAPI_ValidateEntityToken::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAuthenticationAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabAuthenticationAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabAuthenticationAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabAuthenticationAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabAuthenticationAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabAuthenticationAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabAuthenticationAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAuthenticationAPI.DelegateOnSuccessDelete__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAuthenticationAPI_DelegateOnSuccessDelete__DelegateSignature final
{
public:
	struct FAuthenticationEmptyResponse           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_DelegateOnSuccessDelete__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_DelegateOnSuccessDelete__DelegateSignature");
static_assert(sizeof(PlayFabAuthenticationAPI_DelegateOnSuccessDelete__DelegateSignature) == 0x000010, "Wrong size on PlayFabAuthenticationAPI_DelegateOnSuccessDelete__DelegateSignature");
static_assert(offsetof(PlayFabAuthenticationAPI_DelegateOnSuccessDelete__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAuthenticationAPI_DelegateOnSuccessDelete__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_DelegateOnSuccessDelete__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabAuthenticationAPI_DelegateOnSuccessDelete__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAuthenticationAPI.DelegateOnSuccessGetEntityToken__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAuthenticationAPI_DelegateOnSuccessGetEntityToken__DelegateSignature final
{
public:
	struct FAuthenticationGetEntityTokenResponse  Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_DelegateOnSuccessGetEntityToken__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_DelegateOnSuccessGetEntityToken__DelegateSignature");
static_assert(sizeof(PlayFabAuthenticationAPI_DelegateOnSuccessGetEntityToken__DelegateSignature) == 0x000038, "Wrong size on PlayFabAuthenticationAPI_DelegateOnSuccessGetEntityToken__DelegateSignature");
static_assert(offsetof(PlayFabAuthenticationAPI_DelegateOnSuccessGetEntityToken__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAuthenticationAPI_DelegateOnSuccessGetEntityToken__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_DelegateOnSuccessGetEntityToken__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabAuthenticationAPI_DelegateOnSuccessGetEntityToken__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabAuthenticationAPI.DelegateOnSuccessValidateEntityToken__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAuthenticationAPI_DelegateOnSuccessValidateEntityToken__DelegateSignature final
{
public:
	struct FAuthenticationValidateEntityTokenResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationAPI_DelegateOnSuccessValidateEntityToken__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_DelegateOnSuccessValidateEntityToken__DelegateSignature");
static_assert(sizeof(PlayFabAuthenticationAPI_DelegateOnSuccessValidateEntityToken__DelegateSignature) == 0x000038, "Wrong size on PlayFabAuthenticationAPI_DelegateOnSuccessValidateEntityToken__DelegateSignature");
static_assert(offsetof(PlayFabAuthenticationAPI_DelegateOnSuccessValidateEntityToken__DelegateSignature, Result) == 0x000000, "Member 'PlayFabAuthenticationAPI_DelegateOnSuccessValidateEntityToken__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_DelegateOnSuccessValidateEntityToken__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabAuthenticationAPI_DelegateOnSuccessValidateEntityToken__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.HelperDelete
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_HelperDelete final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAuthenticationAPI_HelperDelete) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_HelperDelete");
static_assert(sizeof(PlayFabAuthenticationAPI_HelperDelete) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_HelperDelete");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperDelete, Response) == 0x000000, "Member 'PlayFabAuthenticationAPI_HelperDelete::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperDelete, CustomData) == 0x000040, "Member 'PlayFabAuthenticationAPI_HelperDelete::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperDelete, Successful) == 0x000048, "Member 'PlayFabAuthenticationAPI_HelperDelete::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.HelperGetEntityToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_HelperGetEntityToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAuthenticationAPI_HelperGetEntityToken) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_HelperGetEntityToken");
static_assert(sizeof(PlayFabAuthenticationAPI_HelperGetEntityToken) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_HelperGetEntityToken");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperGetEntityToken, Response) == 0x000000, "Member 'PlayFabAuthenticationAPI_HelperGetEntityToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperGetEntityToken, CustomData) == 0x000040, "Member 'PlayFabAuthenticationAPI_HelperGetEntityToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperGetEntityToken, Successful) == 0x000048, "Member 'PlayFabAuthenticationAPI_HelperGetEntityToken::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationAPI.HelperValidateEntityToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabAuthenticationAPI_HelperValidateEntityToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabAuthenticationAPI_HelperValidateEntityToken) == 0x000008, "Wrong alignment on PlayFabAuthenticationAPI_HelperValidateEntityToken");
static_assert(sizeof(PlayFabAuthenticationAPI_HelperValidateEntityToken) == 0x000050, "Wrong size on PlayFabAuthenticationAPI_HelperValidateEntityToken");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperValidateEntityToken, Response) == 0x000000, "Member 'PlayFabAuthenticationAPI_HelperValidateEntityToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperValidateEntityToken, CustomData) == 0x000040, "Member 'PlayFabAuthenticationAPI_HelperValidateEntityToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationAPI_HelperValidateEntityToken, Successful) == 0x000048, "Member 'PlayFabAuthenticationAPI_HelperValidateEntityToken::Successful' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabAuthenticationModelDecoder_DecodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAuthenticationEmptyResponse           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationModelDecoder_DecodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabAuthenticationModelDecoder_DecodeEmptyResponseResponse");
static_assert(sizeof(PlayFabAuthenticationModelDecoder_DecodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabAuthenticationModelDecoder_DecodeEmptyResponseResponse");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_DecodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabAuthenticationModelDecoder_DecodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_DecodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAuthenticationModelDecoder_DecodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeGetEntityTokenResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAuthenticationModelDecoder_DecodeGetEntityTokenResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAuthenticationGetEntityTokenResponse  ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationModelDecoder_DecodeGetEntityTokenResponseResponse) == 0x000008, "Wrong alignment on PlayFabAuthenticationModelDecoder_DecodeGetEntityTokenResponseResponse");
static_assert(sizeof(PlayFabAuthenticationModelDecoder_DecodeGetEntityTokenResponseResponse) == 0x000038, "Wrong size on PlayFabAuthenticationModelDecoder_DecodeGetEntityTokenResponseResponse");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_DecodeGetEntityTokenResponseResponse, Response) == 0x000000, "Member 'PlayFabAuthenticationModelDecoder_DecodeGetEntityTokenResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_DecodeGetEntityTokenResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAuthenticationModelDecoder_DecodeGetEntityTokenResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeValidateEntityTokenResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabAuthenticationModelDecoder_DecodeValidateEntityTokenResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAuthenticationValidateEntityTokenResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabAuthenticationModelDecoder_DecodeValidateEntityTokenResponseResponse) == 0x000008, "Wrong alignment on PlayFabAuthenticationModelDecoder_DecodeValidateEntityTokenResponseResponse");
static_assert(sizeof(PlayFabAuthenticationModelDecoder_DecodeValidateEntityTokenResponseResponse) == 0x000038, "Wrong size on PlayFabAuthenticationModelDecoder_DecodeValidateEntityTokenResponseResponse");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_DecodeValidateEntityTokenResponseResponse, Response) == 0x000000, "Member 'PlayFabAuthenticationModelDecoder_DecodeValidateEntityTokenResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabAuthenticationModelDecoder_DecodeValidateEntityTokenResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabAuthenticationModelDecoder_DecodeValidateEntityTokenResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AcceptTrade
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_AcceptTrade final
{
public:
	struct FClientAcceptTradeRequest              Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAcceptTradeResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AcceptTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_AcceptTrade");
static_assert(sizeof(PlayFabClientAPI_AcceptTrade) == 0x000068, "Wrong size on PlayFabClientAPI_AcceptTrade");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, Request) == 0x000000, "Member 'PlayFabClientAPI_AcceptTrade::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_AcceptTrade::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_AcceptTrade::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, CustomData) == 0x000058, "Member 'PlayFabClientAPI_AcceptTrade::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AcceptTrade, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_AcceptTrade::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddFriend
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_AddFriend final
{
public:
	struct FClientAddFriendRequest                Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddFriendResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddFriend) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddFriend");
static_assert(sizeof(PlayFabClientAPI_AddFriend) == 0x000078, "Wrong size on PlayFabClientAPI_AddFriend");
static_assert(offsetof(PlayFabClientAPI_AddFriend, Request) == 0x000000, "Member 'PlayFabClientAPI_AddFriend::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddFriend, OnSuccess) == 0x000048, "Member 'PlayFabClientAPI_AddFriend::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddFriend, OnFailure) == 0x000058, "Member 'PlayFabClientAPI_AddFriend::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddFriend, CustomData) == 0x000068, "Member 'PlayFabClientAPI_AddFriend::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddFriend, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_AddFriend::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddGenericID
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_AddGenericID final
{
public:
	struct FClientAddGenericIDRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddGenericIDResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddGenericID) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddGenericID");
static_assert(sizeof(PlayFabClientAPI_AddGenericID) == 0x000040, "Wrong size on PlayFabClientAPI_AddGenericID");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, Request) == 0x000000, "Member 'PlayFabClientAPI_AddGenericID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_AddGenericID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_AddGenericID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, CustomData) == 0x000030, "Member 'PlayFabClientAPI_AddGenericID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddGenericID, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_AddGenericID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddOrUpdateContactEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_AddOrUpdateContactEmail final
{
public:
	struct FClientAddOrUpdateContactEmailRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddOrUpdateContactEmailResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddOrUpdateContactEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddOrUpdateContactEmail");
static_assert(sizeof(PlayFabClientAPI_AddOrUpdateContactEmail) == 0x000050, "Wrong size on PlayFabClientAPI_AddOrUpdateContactEmail");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, Request) == 0x000000, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, CustomData) == 0x000040, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddOrUpdateContactEmail, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_AddOrUpdateContactEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddSharedGroupMembers
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_AddSharedGroupMembers final
{
public:
	struct FClientAddSharedGroupMembersRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddSharedGroupMembersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddSharedGroupMembers");
static_assert(sizeof(PlayFabClientAPI_AddSharedGroupMembers) == 0x000058, "Wrong size on PlayFabClientAPI_AddSharedGroupMembers");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, Request) == 0x000000, "Member 'PlayFabClientAPI_AddSharedGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_AddSharedGroupMembers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_AddSharedGroupMembers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, CustomData) == 0x000048, "Member 'PlayFabClientAPI_AddSharedGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddSharedGroupMembers, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_AddSharedGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddUsernamePassword
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_AddUsernamePassword final
{
public:
	struct FClientAddUsernamePasswordRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAddUsernamePasswordResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddUsernamePassword) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddUsernamePassword");
static_assert(sizeof(PlayFabClientAPI_AddUsernamePassword) == 0x000070, "Wrong size on PlayFabClientAPI_AddUsernamePassword");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, Request) == 0x000000, "Member 'PlayFabClientAPI_AddUsernamePassword::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_AddUsernamePassword::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_AddUsernamePassword::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, CustomData) == 0x000060, "Member 'PlayFabClientAPI_AddUsernamePassword::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUsernamePassword, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_AddUsernamePassword::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AddUserVirtualCurrency
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_AddUserVirtualCurrency final
{
public:
	struct FClientAddUserVirtualCurrencyRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabClientAPI_AddUserVirtualCurrency");
static_assert(sizeof(PlayFabClientAPI_AddUserVirtualCurrency) == 0x000058, "Wrong size on PlayFabClientAPI_AddUserVirtualCurrency");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, CustomData) == 0x000048, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AddUserVirtualCurrency, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_AddUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AndroidDevicePushNotificationRegistration
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_AndroidDevicePushNotificationRegistration final
{
public:
	struct FClientAndroidDevicePushNotificationRegistrationRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAndroidDevicePushNotificationRegistrationResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration) == 0x000008, "Wrong alignment on PlayFabClientAPI_AndroidDevicePushNotificationRegistration");
static_assert(sizeof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration) == 0x000060, "Wrong size on PlayFabClientAPI_AndroidDevicePushNotificationRegistration");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, Request) == 0x000000, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, CustomData) == 0x000050, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AndroidDevicePushNotificationRegistration, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_AndroidDevicePushNotificationRegistration::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.AttributeInstall
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_AttributeInstall final
{
public:
	struct FClientAttributeInstallRequest         Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientAttributeInstallResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_AttributeInstall) == 0x000008, "Wrong alignment on PlayFabClientAPI_AttributeInstall");
static_assert(sizeof(PlayFabClientAPI_AttributeInstall) == 0x000058, "Wrong size on PlayFabClientAPI_AttributeInstall");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, Request) == 0x000000, "Member 'PlayFabClientAPI_AttributeInstall::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_AttributeInstall::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_AttributeInstall::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, CustomData) == 0x000048, "Member 'PlayFabClientAPI_AttributeInstall::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_AttributeInstall, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_AttributeInstall::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.CancelTrade
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_CancelTrade final
{
public:
	struct FClientCancelTradeRequest              Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientCancelTradeResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_CancelTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_CancelTrade");
static_assert(sizeof(PlayFabClientAPI_CancelTrade) == 0x000048, "Wrong size on PlayFabClientAPI_CancelTrade");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, Request) == 0x000000, "Member 'PlayFabClientAPI_CancelTrade::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_CancelTrade::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_CancelTrade::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, CustomData) == 0x000038, "Member 'PlayFabClientAPI_CancelTrade::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CancelTrade, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_CancelTrade::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConfirmPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_ConfirmPurchase final
{
public:
	struct FClientConfirmPurchaseRequest          Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConfirmPurchaseResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConfirmPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConfirmPurchase");
static_assert(sizeof(PlayFabClientAPI_ConfirmPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_ConfirmPurchase");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_ConfirmPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_ConfirmPurchase::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_ConfirmPurchase::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, CustomData) == 0x000040, "Member 'PlayFabClientAPI_ConfirmPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConfirmPurchase, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_ConfirmPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumeItem
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_ConsumeItem final
{
public:
	struct FClientConsumeItemRequest              Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumeItemResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumeItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumeItem");
static_assert(sizeof(PlayFabClientAPI_ConsumeItem) == 0x000068, "Wrong size on PlayFabClientAPI_ConsumeItem");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumeItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_ConsumeItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_ConsumeItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, CustomData) == 0x000058, "Member 'PlayFabClientAPI_ConsumeItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeItem, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_ConsumeItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumeMicrosoftStoreEntitlements
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements final
{
public:
	struct FClientConsumeMicrosoftStoreEntitlementsRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumeMicrosoftStoreEntitlementsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements");
static_assert(sizeof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements) == 0x000058, "Wrong size on PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, CustomData) == 0x000048, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumePS5Entitlements
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_ConsumePS5Entitlements final
{
public:
	struct FClientConsumePS5EntitlementsRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumePS5EntitlementsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumePS5Entitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumePS5Entitlements");
static_assert(sizeof(PlayFabClientAPI_ConsumePS5Entitlements) == 0x000058, "Wrong size on PlayFabClientAPI_ConsumePS5Entitlements");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, CustomData) == 0x000048, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePS5Entitlements, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_ConsumePS5Entitlements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumePSNEntitlements
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_ConsumePSNEntitlements final
{
public:
	struct FClientConsumePSNEntitlementsRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumePSNEntitlementsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumePSNEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumePSNEntitlements");
static_assert(sizeof(PlayFabClientAPI_ConsumePSNEntitlements) == 0x000058, "Wrong size on PlayFabClientAPI_ConsumePSNEntitlements");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, CustomData) == 0x000048, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumePSNEntitlements, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_ConsumePSNEntitlements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ConsumeXboxEntitlements
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_ConsumeXboxEntitlements final
{
public:
	struct FClientConsumeXboxEntitlementsRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientConsumeXboxEntitlementsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ConsumeXboxEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_ConsumeXboxEntitlements");
static_assert(sizeof(PlayFabClientAPI_ConsumeXboxEntitlements) == 0x000060, "Wrong size on PlayFabClientAPI_ConsumeXboxEntitlements");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, Request) == 0x000000, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, CustomData) == 0x000050, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ConsumeXboxEntitlements, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_ConsumeXboxEntitlements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.CreateSharedGroup
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_CreateSharedGroup final
{
public:
	struct FClientCreateSharedGroupRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientCreateSharedGroupResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_CreateSharedGroup) == 0x000008, "Wrong alignment on PlayFabClientAPI_CreateSharedGroup");
static_assert(sizeof(PlayFabClientAPI_CreateSharedGroup) == 0x000048, "Wrong size on PlayFabClientAPI_CreateSharedGroup");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, Request) == 0x000000, "Member 'PlayFabClientAPI_CreateSharedGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_CreateSharedGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_CreateSharedGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, CustomData) == 0x000038, "Member 'PlayFabClientAPI_CreateSharedGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_CreateSharedGroup, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_CreateSharedGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ExecuteCloudScript
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_ExecuteCloudScript final
{
public:
	struct FClientExecuteCloudScriptRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientExecuteCloudScriptResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ExecuteCloudScript) == 0x000008, "Wrong alignment on PlayFabClientAPI_ExecuteCloudScript");
static_assert(sizeof(PlayFabClientAPI_ExecuteCloudScript) == 0x000060, "Wrong size on PlayFabClientAPI_ExecuteCloudScript");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, Request) == 0x000000, "Member 'PlayFabClientAPI_ExecuteCloudScript::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_ExecuteCloudScript::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_ExecuteCloudScript::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, CustomData) == 0x000050, "Member 'PlayFabClientAPI_ExecuteCloudScript::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ExecuteCloudScript, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_ExecuteCloudScript::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetAccountInfo
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_GetAccountInfo final
{
public:
	struct FClientGetAccountInfoRequest           Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetAccountInfoResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetAccountInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetAccountInfo");
static_assert(sizeof(PlayFabClientAPI_GetAccountInfo) == 0x000078, "Wrong size on PlayFabClientAPI_GetAccountInfo");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, Request) == 0x000000, "Member 'PlayFabClientAPI_GetAccountInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, OnSuccess) == 0x000048, "Member 'PlayFabClientAPI_GetAccountInfo::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, OnFailure) == 0x000058, "Member 'PlayFabClientAPI_GetAccountInfo::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, CustomData) == 0x000068, "Member 'PlayFabClientAPI_GetAccountInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAccountInfo, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_GetAccountInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetAdPlacements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_GetAdPlacements final
{
public:
	struct FClientGetAdPlacementsRequest          Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetAdPlacementsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetAdPlacements) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetAdPlacements");
static_assert(sizeof(PlayFabClientAPI_GetAdPlacements) == 0x000050, "Wrong size on PlayFabClientAPI_GetAdPlacements");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, Request) == 0x000000, "Member 'PlayFabClientAPI_GetAdPlacements::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_GetAdPlacements::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_GetAdPlacements::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, CustomData) == 0x000040, "Member 'PlayFabClientAPI_GetAdPlacements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAdPlacements, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_GetAdPlacements::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetAllUsersCharacters
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetAllUsersCharacters final
{
public:
	struct FClientListUsersCharactersRequest      Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientListUsersCharactersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetAllUsersCharacters) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetAllUsersCharacters");
static_assert(sizeof(PlayFabClientAPI_GetAllUsersCharacters) == 0x000048, "Wrong size on PlayFabClientAPI_GetAllUsersCharacters");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, Request) == 0x000000, "Member 'PlayFabClientAPI_GetAllUsersCharacters::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetAllUsersCharacters::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetAllUsersCharacters::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetAllUsersCharacters::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetAllUsersCharacters, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetAllUsersCharacters::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCatalogItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetCatalogItems final
{
public:
	struct FClientGetCatalogItemsRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCatalogItems) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCatalogItems");
static_assert(sizeof(PlayFabClientAPI_GetCatalogItems) == 0x000048, "Wrong size on PlayFabClientAPI_GetCatalogItems");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetCatalogItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetCatalogItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCatalogItems, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_GetCharacterData final
{
public:
	struct FClientGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterData");
static_assert(sizeof(PlayFabClientAPI_GetCharacterData) == 0x000070, "Wrong size on PlayFabClientAPI_GetCharacterData");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_GetCharacterData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, CustomData) == 0x000060, "Member 'PlayFabClientAPI_GetCharacterData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterData, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_GetCharacterData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterInventory
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetCharacterInventory final
{
public:
	struct FClientGetCharacterInventoryRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterInventoryResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterInventory) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterInventory");
static_assert(sizeof(PlayFabClientAPI_GetCharacterInventory) == 0x000060, "Wrong size on PlayFabClientAPI_GetCharacterInventory");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetCharacterInventory::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterInventory::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetCharacterInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterInventory, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetCharacterInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterLeaderboard
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetCharacterLeaderboard final
{
public:
	struct FClientGetCharacterLeaderboardRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterLeaderboardResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterLeaderboard");
static_assert(sizeof(PlayFabClientAPI_GetCharacterLeaderboard) == 0x000060, "Wrong size on PlayFabClientAPI_GetCharacterLeaderboard");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterLeaderboard, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetCharacterLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_GetCharacterReadOnlyData final
{
public:
	struct FClientGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_GetCharacterReadOnlyData) == 0x000070, "Wrong size on PlayFabClientAPI_GetCharacterReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, CustomData) == 0x000060, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_GetCharacterReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCharacterStatistics
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetCharacterStatistics final
{
public:
	struct FClientGetCharacterStatisticsRequest   Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCharacterStatistics");
static_assert(sizeof(PlayFabClientAPI_GetCharacterStatistics) == 0x000048, "Wrong size on PlayFabClientAPI_GetCharacterStatistics");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetCharacterStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetCharacterStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCharacterStatistics, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetContentDownloadUrl
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetContentDownloadUrl final
{
public:
	struct FClientGetContentDownloadUrlRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetContentDownloadUrlResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetContentDownloadUrl) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetContentDownloadUrl");
static_assert(sizeof(PlayFabClientAPI_GetContentDownloadUrl) == 0x000060, "Wrong size on PlayFabClientAPI_GetContentDownloadUrl");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, Request) == 0x000000, "Member 'PlayFabClientAPI_GetContentDownloadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetContentDownloadUrl::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetContentDownloadUrl::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetContentDownloadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetContentDownloadUrl, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetContentDownloadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetCurrentGames
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_GetCurrentGames final
{
public:
	struct FClientCurrentGamesRequest             Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientCurrentGamesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetCurrentGames) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetCurrentGames");
static_assert(sizeof(PlayFabClientAPI_GetCurrentGames) == 0x000078, "Wrong size on PlayFabClientAPI_GetCurrentGames");
static_assert(offsetof(PlayFabClientAPI_GetCurrentGames, Request) == 0x000000, "Member 'PlayFabClientAPI_GetCurrentGames::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCurrentGames, OnSuccess) == 0x000048, "Member 'PlayFabClientAPI_GetCurrentGames::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCurrentGames, OnFailure) == 0x000058, "Member 'PlayFabClientAPI_GetCurrentGames::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCurrentGames, CustomData) == 0x000068, "Member 'PlayFabClientAPI_GetCurrentGames::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetCurrentGames, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_GetCurrentGames::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetFriendLeaderboard
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_GetFriendLeaderboard final
{
public:
	struct FClientGetFriendLeaderboardRequest     Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetFriendLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetFriendLeaderboard");
static_assert(sizeof(PlayFabClientAPI_GetFriendLeaderboard) == 0x000080, "Wrong size on PlayFabClientAPI_GetFriendLeaderboard");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, Request) == 0x000000, "Member 'PlayFabClientAPI_GetFriendLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_GetFriendLeaderboard::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_GetFriendLeaderboard::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, CustomData) == 0x000070, "Member 'PlayFabClientAPI_GetFriendLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboard, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_GetFriendLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetFriendLeaderboardAroundPlayer
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientAPI_GetFriendLeaderboardAroundPlayer final
{
public:
	struct FClientGetFriendLeaderboardAroundPlayerRequest Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetFriendLeaderboardAroundPlayerResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetFriendLeaderboardAroundPlayer");
static_assert(sizeof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer) == 0x000088, "Wrong size on PlayFabClientAPI_GetFriendLeaderboardAroundPlayer");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, Request) == 0x000000, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, OnSuccess) == 0x000058, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, OnFailure) == 0x000068, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, CustomData) == 0x000078, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendLeaderboardAroundPlayer, ReturnValue) == 0x000080, "Member 'PlayFabClientAPI_GetFriendLeaderboardAroundPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetFriendsList
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetFriendsList final
{
public:
	struct FClientGetFriendsListRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetFriendsListResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetFriendsList) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetFriendsList");
static_assert(sizeof(PlayFabClientAPI_GetFriendsList) == 0x000060, "Wrong size on PlayFabClientAPI_GetFriendsList");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, Request) == 0x000000, "Member 'PlayFabClientAPI_GetFriendsList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetFriendsList::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetFriendsList::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetFriendsList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetFriendsList, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetFriendsList::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetGameServerRegions
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetGameServerRegions final
{
public:
	struct FClientGameServerRegionsRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGameServerRegionsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetGameServerRegions) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetGameServerRegions");
static_assert(sizeof(PlayFabClientAPI_GetGameServerRegions) == 0x000048, "Wrong size on PlayFabClientAPI_GetGameServerRegions");
static_assert(offsetof(PlayFabClientAPI_GetGameServerRegions, Request) == 0x000000, "Member 'PlayFabClientAPI_GetGameServerRegions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetGameServerRegions, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetGameServerRegions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetGameServerRegions, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetGameServerRegions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetGameServerRegions, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetGameServerRegions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetGameServerRegions, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetGameServerRegions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetLeaderboard
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_GetLeaderboard final
{
public:
	struct FClientGetLeaderboardRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetLeaderboard");
static_assert(sizeof(PlayFabClientAPI_GetLeaderboard) == 0x000070, "Wrong size on PlayFabClientAPI_GetLeaderboard");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, Request) == 0x000000, "Member 'PlayFabClientAPI_GetLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_GetLeaderboard::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_GetLeaderboard::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, CustomData) == 0x000060, "Member 'PlayFabClientAPI_GetLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboard, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_GetLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetLeaderboardAroundCharacter
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_GetLeaderboardAroundCharacter final
{
public:
	struct FClientGetLeaderboardAroundCharacterRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardAroundCharacterResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetLeaderboardAroundCharacter) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetLeaderboardAroundCharacter");
static_assert(sizeof(PlayFabClientAPI_GetLeaderboardAroundCharacter) == 0x000070, "Wrong size on PlayFabClientAPI_GetLeaderboardAroundCharacter");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, Request) == 0x000000, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, CustomData) == 0x000060, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundCharacter, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_GetLeaderboardAroundCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetLeaderboardAroundPlayer
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_GetLeaderboardAroundPlayer final
{
public:
	struct FClientGetLeaderboardAroundPlayerRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardAroundPlayerResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetLeaderboardAroundPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetLeaderboardAroundPlayer");
static_assert(sizeof(PlayFabClientAPI_GetLeaderboardAroundPlayer) == 0x000078, "Wrong size on PlayFabClientAPI_GetLeaderboardAroundPlayer");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, Request) == 0x000000, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, OnSuccess) == 0x000048, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, OnFailure) == 0x000058, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, CustomData) == 0x000068, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardAroundPlayer, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_GetLeaderboardAroundPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetLeaderboardForUserCharacters
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetLeaderboardForUserCharacters final
{
public:
	struct FClientGetLeaderboardForUsersCharactersRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetLeaderboardForUsersCharactersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetLeaderboardForUserCharacters) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetLeaderboardForUserCharacters");
static_assert(sizeof(PlayFabClientAPI_GetLeaderboardForUserCharacters) == 0x000048, "Wrong size on PlayFabClientAPI_GetLeaderboardForUserCharacters");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, Request) == 0x000000, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetLeaderboardForUserCharacters, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetLeaderboardForUserCharacters::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPaymentToken
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPaymentToken final
{
public:
	struct FClientGetPaymentTokenRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPaymentTokenResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPaymentToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPaymentToken");
static_assert(sizeof(PlayFabClientAPI_GetPaymentToken) == 0x000048, "Wrong size on PlayFabClientAPI_GetPaymentToken");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPaymentToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPaymentToken::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPaymentToken::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPaymentToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPaymentToken, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPaymentToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPhotonAuthenticationToken
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPhotonAuthenticationToken final
{
public:
	struct FClientGetPhotonAuthenticationTokenRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPhotonAuthenticationTokenResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPhotonAuthenticationToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPhotonAuthenticationToken");
static_assert(sizeof(PlayFabClientAPI_GetPhotonAuthenticationToken) == 0x000048, "Wrong size on PlayFabClientAPI_GetPhotonAuthenticationToken");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPhotonAuthenticationToken, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPhotonAuthenticationToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerCombinedInfo
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetPlayerCombinedInfo final
{
public:
	struct FClientGetPlayerCombinedInfoRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerCombinedInfoResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerCombinedInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerCombinedInfo");
static_assert(sizeof(PlayFabClientAPI_GetPlayerCombinedInfo) == 0x000058, "Wrong size on PlayFabClientAPI_GetPlayerCombinedInfo");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, CustomData) == 0x000048, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerCombinedInfo, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetPlayerCombinedInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerProfile
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetPlayerProfile final
{
public:
	struct FClientGetPlayerProfileRequest         Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerProfileResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerProfile");
static_assert(sizeof(PlayFabClientAPI_GetPlayerProfile) == 0x000058, "Wrong size on PlayFabClientAPI_GetPlayerProfile");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerProfile::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetPlayerProfile::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_GetPlayerProfile::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, CustomData) == 0x000048, "Member 'PlayFabClientAPI_GetPlayerProfile::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerProfile, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetPlayerProfile::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerSegments
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_GetPlayerSegments final
{
public:
	struct FClientGetPlayerSegmentsRequest        Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerSegmentsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerSegments");
static_assert(sizeof(PlayFabClientAPI_GetPlayerSegments) == 0x000038, "Wrong size on PlayFabClientAPI_GetPlayerSegments");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, OnSuccess) == 0x000008, "Member 'PlayFabClientAPI_GetPlayerSegments::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, OnFailure) == 0x000018, "Member 'PlayFabClientAPI_GetPlayerSegments::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, CustomData) == 0x000028, "Member 'PlayFabClientAPI_GetPlayerSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerSegments, ReturnValue) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerStatistics
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetPlayerStatistics final
{
public:
	struct FClientGetPlayerStatisticsRequest      Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerStatistics");
static_assert(sizeof(PlayFabClientAPI_GetPlayerStatistics) == 0x000060, "Wrong size on PlayFabClientAPI_GetPlayerStatistics");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetPlayerStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetPlayerStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatistics, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetPlayerStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_GetPlayerStatisticVersions final
{
public:
	struct FClientGetPlayerStatisticVersionsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerStatisticVersionsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerStatisticVersions");
static_assert(sizeof(PlayFabClientAPI_GetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabClientAPI_GetPlayerStatisticVersions");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, CustomData) == 0x000040, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerStatisticVersions, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_GetPlayerStatisticVersions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerTags
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetPlayerTags final
{
public:
	struct FClientGetPlayerTagsRequest            Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerTagsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerTags) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerTags");
static_assert(sizeof(PlayFabClientAPI_GetPlayerTags) == 0x000060, "Wrong size on PlayFabClientAPI_GetPlayerTags");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerTags::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetPlayerTags::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetPlayerTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTags, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetPlayerTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayerTrades
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_GetPlayerTrades final
{
public:
	struct FClientGetPlayerTradesRequest          Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayerTradesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayerTrades) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayerTrades");
static_assert(sizeof(PlayFabClientAPI_GetPlayerTrades) == 0x000040, "Wrong size on PlayFabClientAPI_GetPlayerTrades");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayerTrades::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_GetPlayerTrades::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_GetPlayerTrades::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, CustomData) == 0x000030, "Member 'PlayFabClientAPI_GetPlayerTrades::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayerTrades, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_GetPlayerTrades::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs final
{
public:
	struct FClientGetPlayFabIDsFromFacebookIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookInstantGamesIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds final
{
public:
	struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGameCenterIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs final
{
public:
	struct FClientGetPlayFabIDsFromGameCenterIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromGameCenterIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGenericIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromGenericIDs final
{
public:
	struct FClientGetPlayFabIDsFromGenericIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromGenericIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromGenericIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromGenericIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGenericIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGenericIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGoogleIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs final
{
public:
	struct FClientGetPlayFabIDsFromGoogleIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromGoogleIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGooglePlayGamesPlayerIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs final
{
public:
	struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromKongregateIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs final
{
public:
	struct FClientGetPlayFabIDsFromKongregateIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromKongregateIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromNintendoServiceAccountIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds final
{
public:
	struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds final
{
public:
	struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromPSNAccountIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs final
{
public:
	struct FClientGetPlayFabIDsFromPSNAccountIDsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs) == 0x000050, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromSteamIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromSteamIDs final
{
public:
	struct FClientGetPlayFabIDsFromSteamIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromSteamIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromSteamIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromSteamIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromSteamIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromSteamIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromTwitchIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs final
{
public:
	struct FClientGetPlayFabIDsFromTwitchIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs) == 0x000048, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromXboxLiveIDs
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs final
{
public:
	struct FClientGetPlayFabIDsFromXboxLiveIDsRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs");
static_assert(sizeof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs) == 0x000058, "Wrong size on PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, CustomData) == 0x000048, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPublisherData
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPublisherData final
{
public:
	struct FClientGetPublisherDataRequest         Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPublisherData");
static_assert(sizeof(PlayFabClientAPI_GetPublisherData) == 0x000048, "Wrong size on PlayFabClientAPI_GetPublisherData");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPublisherData, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetPurchase
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetPurchase final
{
public:
	struct FClientGetPurchaseRequest              Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetPurchaseResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetPurchase");
static_assert(sizeof(PlayFabClientAPI_GetPurchase) == 0x000048, "Wrong size on PlayFabClientAPI_GetPurchase");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_GetPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetPurchase::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetPurchase::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetPurchase, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetSharedGroupData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetSharedGroupData final
{
public:
	struct FClientGetSharedGroupDataRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetSharedGroupDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetSharedGroupData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetSharedGroupData");
static_assert(sizeof(PlayFabClientAPI_GetSharedGroupData) == 0x000060, "Wrong size on PlayFabClientAPI_GetSharedGroupData");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetSharedGroupData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetSharedGroupData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetSharedGroupData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetSharedGroupData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetSharedGroupData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetSharedGroupData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetStoreItems
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetStoreItems final
{
public:
	struct FClientGetStoreItemsRequest            Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetStoreItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetStoreItems) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetStoreItems");
static_assert(sizeof(PlayFabClientAPI_GetStoreItems) == 0x000058, "Wrong size on PlayFabClientAPI_GetStoreItems");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, Request) == 0x000000, "Member 'PlayFabClientAPI_GetStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetStoreItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_GetStoreItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, CustomData) == 0x000048, "Member 'PlayFabClientAPI_GetStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetStoreItems, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTime
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_GetTime final
{
public:
	struct FClientGetTimeRequest                  Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTimeResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTime) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTime");
static_assert(sizeof(PlayFabClientAPI_GetTime) == 0x000038, "Wrong size on PlayFabClientAPI_GetTime");
static_assert(offsetof(PlayFabClientAPI_GetTime, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTime::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTime, OnSuccess) == 0x000008, "Member 'PlayFabClientAPI_GetTime::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTime, OnFailure) == 0x000018, "Member 'PlayFabClientAPI_GetTime::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTime, CustomData) == 0x000028, "Member 'PlayFabClientAPI_GetTime::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTime, ReturnValue) == 0x000030, "Member 'PlayFabClientAPI_GetTime::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTitleData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetTitleData final
{
public:
	struct FClientGetTitleDataRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTitleData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTitleData");
static_assert(sizeof(PlayFabClientAPI_GetTitleData) == 0x000058, "Wrong size on PlayFabClientAPI_GetTitleData");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetTitleData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_GetTitleData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, CustomData) == 0x000048, "Member 'PlayFabClientAPI_GetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleData, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTitleNews
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_GetTitleNews final
{
public:
	struct FClientGetTitleNewsRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTitleNewsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTitleNews) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTitleNews");
static_assert(sizeof(PlayFabClientAPI_GetTitleNews) == 0x000040, "Wrong size on PlayFabClientAPI_GetTitleNews");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTitleNews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_GetTitleNews::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_GetTitleNews::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, CustomData) == 0x000030, "Member 'PlayFabClientAPI_GetTitleNews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitleNews, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_GetTitleNews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTitlePublicKey
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_GetTitlePublicKey final
{
public:
	struct FClientGetTitlePublicKeyRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTitlePublicKeyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTitlePublicKey) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTitlePublicKey");
static_assert(sizeof(PlayFabClientAPI_GetTitlePublicKey) == 0x000048, "Wrong size on PlayFabClientAPI_GetTitlePublicKey");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTitlePublicKey::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_GetTitlePublicKey::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_GetTitlePublicKey::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, CustomData) == 0x000038, "Member 'PlayFabClientAPI_GetTitlePublicKey::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTitlePublicKey, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_GetTitlePublicKey::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetTradeStatus
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_GetTradeStatus final
{
public:
	struct FClientGetTradeStatusRequest           Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetTradeStatusResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetTradeStatus) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetTradeStatus");
static_assert(sizeof(PlayFabClientAPI_GetTradeStatus) == 0x000058, "Wrong size on PlayFabClientAPI_GetTradeStatus");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, Request) == 0x000000, "Member 'PlayFabClientAPI_GetTradeStatus::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_GetTradeStatus::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_GetTradeStatus::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, CustomData) == 0x000048, "Member 'PlayFabClientAPI_GetTradeStatus::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetTradeStatus, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_GetTradeStatus::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetUserData final
{
public:
	struct FClientGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserData");
static_assert(sizeof(PlayFabClientAPI_GetUserData) == 0x000060, "Wrong size on PlayFabClientAPI_GetUserData");
static_assert(offsetof(PlayFabClientAPI_GetUserData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserData, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetUserData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserData, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetUserData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserData, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserInventory
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_GetUserInventory final
{
public:
	struct FClientGetUserInventoryRequest         Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserInventoryResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserInventory) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserInventory");
static_assert(sizeof(PlayFabClientAPI_GetUserInventory) == 0x000040, "Wrong size on PlayFabClientAPI_GetUserInventory");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_GetUserInventory::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_GetUserInventory::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, CustomData) == 0x000030, "Member 'PlayFabClientAPI_GetUserInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserInventory, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_GetUserInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserPublisherData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetUserPublisherData final
{
public:
	struct FClientGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserPublisherData");
static_assert(sizeof(PlayFabClientAPI_GetUserPublisherData) == 0x000060, "Wrong size on PlayFabClientAPI_GetUserPublisherData");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetUserPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetUserPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserPublisherReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetUserPublisherReadOnlyData final
{
public:
	struct FClientGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_GetUserPublisherReadOnlyData) == 0x000060, "Wrong size on PlayFabClientAPI_GetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserPublisherReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GetUserReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_GetUserReadOnlyData final
{
public:
	struct FClientGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_GetUserReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_GetUserReadOnlyData) == 0x000060, "Wrong size on PlayFabClientAPI_GetUserReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabClientAPI_GetUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_GetUserReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_GetUserReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, CustomData) == 0x000050, "Member 'PlayFabClientAPI_GetUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GetUserReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_GetUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.GrantCharacterToUser
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_GrantCharacterToUser final
{
public:
	struct FClientGrantCharacterToUserRequest     Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientGrantCharacterToUserResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_GrantCharacterToUser) == 0x000008, "Wrong alignment on PlayFabClientAPI_GrantCharacterToUser");
static_assert(sizeof(PlayFabClientAPI_GrantCharacterToUser) == 0x000070, "Wrong size on PlayFabClientAPI_GrantCharacterToUser");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, Request) == 0x000000, "Member 'PlayFabClientAPI_GrantCharacterToUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_GrantCharacterToUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_GrantCharacterToUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, CustomData) == 0x000060, "Member 'PlayFabClientAPI_GrantCharacterToUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_GrantCharacterToUser, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_GrantCharacterToUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkAndroidDeviceID
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_LinkAndroidDeviceID final
{
public:
	struct FClientLinkAndroidDeviceIDRequest      Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkAndroidDeviceIDResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_LinkAndroidDeviceID) == 0x000078, "Wrong size on PlayFabClientAPI_LinkAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, OnSuccess) == 0x000048, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, OnFailure) == 0x000058, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, CustomData) == 0x000068, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkAndroidDeviceID, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_LinkAndroidDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkApple
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkApple final
{
public:
	struct FClientLinkAppleRequest                Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkApple");
static_assert(sizeof(PlayFabClientAPI_LinkApple) == 0x000058, "Wrong size on PlayFabClientAPI_LinkApple");
static_assert(offsetof(PlayFabClientAPI_LinkApple, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkApple::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkApple, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkApple::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkApple, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkApple::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkApple, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkApple::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkApple, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkApple::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkCustomID
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkCustomID final
{
public:
	struct FClientLinkCustomIDRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkCustomIDResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkCustomID");
static_assert(sizeof(PlayFabClientAPI_LinkCustomID) == 0x000058, "Wrong size on PlayFabClientAPI_LinkCustomID");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkCustomID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkCustomID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkCustomID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkCustomID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkCustomID, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkCustomID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkFacebookAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkFacebookAccount final
{
public:
	struct FClientLinkFacebookAccountRequest      Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkFacebookAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkFacebookAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkFacebookAccount");
static_assert(sizeof(PlayFabClientAPI_LinkFacebookAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkFacebookAccount");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkFacebookAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkFacebookAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkFacebookAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkFacebookAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkFacebookAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkFacebookInstantGamesId
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkFacebookInstantGamesId final
{
public:
	struct FClientLinkFacebookInstantGamesIdRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkFacebookInstantGamesIdResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_LinkFacebookInstantGamesId) == 0x000058, "Wrong size on PlayFabClientAPI_LinkFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkFacebookInstantGamesId, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkFacebookInstantGamesId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkGameCenterAccount
// 0x0098 (0x0098 - 0x0000)
struct PlayFabClientAPI_LinkGameCenterAccount final
{
public:
	struct FClientLinkGameCenterAccountRequest    Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkGameCenterAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkGameCenterAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkGameCenterAccount");
static_assert(sizeof(PlayFabClientAPI_LinkGameCenterAccount) == 0x000098, "Wrong size on PlayFabClientAPI_LinkGameCenterAccount");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkGameCenterAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, OnSuccess) == 0x000068, "Member 'PlayFabClientAPI_LinkGameCenterAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, OnFailure) == 0x000078, "Member 'PlayFabClientAPI_LinkGameCenterAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, CustomData) == 0x000088, "Member 'PlayFabClientAPI_LinkGameCenterAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGameCenterAccount, ReturnValue) == 0x000090, "Member 'PlayFabClientAPI_LinkGameCenterAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkGoogleAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkGoogleAccount final
{
public:
	struct FClientLinkGoogleAccountRequest        Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkGoogleAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_LinkGoogleAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkGoogleAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkGoogleAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkGoogleAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkGoogleAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGoogleAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkGoogleAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkGooglePlayGamesServicesAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkGooglePlayGamesServicesAccount final
{
public:
	struct FClientLinkGooglePlayGamesServicesAccountRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkGooglePlayGamesServicesAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkGooglePlayGamesServicesAccount");
static_assert(sizeof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkGooglePlayGamesServicesAccount");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkGooglePlayGamesServicesAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkGooglePlayGamesServicesAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkIOSDeviceID
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_LinkIOSDeviceID final
{
public:
	struct FClientLinkIOSDeviceIDRequest          Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkIOSDeviceIDResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_LinkIOSDeviceID) == 0x000078, "Wrong size on PlayFabClientAPI_LinkIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkIOSDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, OnSuccess) == 0x000048, "Member 'PlayFabClientAPI_LinkIOSDeviceID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, OnFailure) == 0x000058, "Member 'PlayFabClientAPI_LinkIOSDeviceID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, CustomData) == 0x000068, "Member 'PlayFabClientAPI_LinkIOSDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkIOSDeviceID, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_LinkIOSDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkKongregate
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LinkKongregate final
{
public:
	struct FClientLinkKongregateAccountRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkKongregateAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkKongregate");
static_assert(sizeof(PlayFabClientAPI_LinkKongregate) == 0x000068, "Wrong size on PlayFabClientAPI_LinkKongregate");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkKongregate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_LinkKongregate::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_LinkKongregate::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, CustomData) == 0x000058, "Member 'PlayFabClientAPI_LinkKongregate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkKongregate, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LinkKongregate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkNintendoServiceAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkNintendoServiceAccount final
{
public:
	struct FClientLinkNintendoServiceAccountRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_LinkNintendoServiceAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoServiceAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkNintendoServiceAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkNintendoSwitchDeviceId
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkNintendoSwitchDeviceId final
{
public:
	struct FClientLinkNintendoSwitchDeviceIdRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_LinkNintendoSwitchDeviceId) == 0x000058, "Wrong size on PlayFabClientAPI_LinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkNintendoSwitchDeviceId, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkNintendoSwitchDeviceId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkOpenIdConnect
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LinkOpenIdConnect final
{
public:
	struct FClientLinkOpenIdConnectRequest        Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_LinkOpenIdConnect) == 0x000068, "Wrong size on PlayFabClientAPI_LinkOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkOpenIdConnect::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_LinkOpenIdConnect::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_LinkOpenIdConnect::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, CustomData) == 0x000058, "Member 'PlayFabClientAPI_LinkOpenIdConnect::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkOpenIdConnect, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LinkOpenIdConnect::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkPSNAccount
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LinkPSNAccount final
{
public:
	struct FClientLinkPSNAccountRequest           Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkPSNAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkPSNAccount");
static_assert(sizeof(PlayFabClientAPI_LinkPSNAccount) == 0x000068, "Wrong size on PlayFabClientAPI_LinkPSNAccount");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkPSNAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_LinkPSNAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_LinkPSNAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, CustomData) == 0x000058, "Member 'PlayFabClientAPI_LinkPSNAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkPSNAccount, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LinkPSNAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkSteamAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkSteamAccount final
{
public:
	struct FClientLinkSteamAccountRequest         Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkSteamAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkSteamAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkSteamAccount");
static_assert(sizeof(PlayFabClientAPI_LinkSteamAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkSteamAccount");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkSteamAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkSteamAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkSteamAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkSteamAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkSteamAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkSteamAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkTwitch
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkTwitch final
{
public:
	struct FClientLinkTwitchAccountRequest        Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkTwitchAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkTwitch");
static_assert(sizeof(PlayFabClientAPI_LinkTwitch) == 0x000058, "Wrong size on PlayFabClientAPI_LinkTwitch");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkTwitch::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkTwitch::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkTwitch::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkTwitch::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkTwitch, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkTwitch::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LinkXboxAccount
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_LinkXboxAccount final
{
public:
	struct FClientLinkXboxAccountRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLinkXboxAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LinkXboxAccount");
static_assert(sizeof(PlayFabClientAPI_LinkXboxAccount) == 0x000058, "Wrong size on PlayFabClientAPI_LinkXboxAccount");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LinkXboxAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_LinkXboxAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_LinkXboxAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, CustomData) == 0x000048, "Member 'PlayFabClientAPI_LinkXboxAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LinkXboxAccount, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_LinkXboxAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithAndroidDeviceID
// 0x00A0 (0x00A0 - 0x0000)
struct PlayFabClientAPI_LoginWithAndroidDeviceID final
{
public:
	struct FClientLoginWithAndroidDeviceIDRequest Request;                                           // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0080(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0090(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_LoginWithAndroidDeviceID) == 0x0000A0, "Wrong size on PlayFabClientAPI_LoginWithAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, OnSuccess) == 0x000070, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, OnFailure) == 0x000080, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, CustomData) == 0x000090, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithAndroidDeviceID, ReturnValue) == 0x000098, "Member 'PlayFabClientAPI_LoginWithAndroidDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithApple
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithApple final
{
public:
	struct FClientLoginWithAppleRequest           Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithApple");
static_assert(sizeof(PlayFabClientAPI_LoginWithApple) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithApple");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithApple::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithApple::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithApple::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithApple::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithApple, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithApple::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithCustomID
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithCustomID final
{
public:
	struct FClientLoginWithCustomIDRequest        Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithCustomID");
static_assert(sizeof(PlayFabClientAPI_LoginWithCustomID) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithCustomID");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithCustomID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithCustomID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithCustomID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithCustomID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithCustomID, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithCustomID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithEmailAddress
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LoginWithEmailAddress final
{
public:
	struct FClientLoginWithEmailAddressRequest    Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithEmailAddress) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithEmailAddress");
static_assert(sizeof(PlayFabClientAPI_LoginWithEmailAddress) == 0x000068, "Wrong size on PlayFabClientAPI_LoginWithEmailAddress");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithEmailAddress::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_LoginWithEmailAddress::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_LoginWithEmailAddress::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, CustomData) == 0x000058, "Member 'PlayFabClientAPI_LoginWithEmailAddress::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithEmailAddress, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LoginWithEmailAddress::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithFacebook
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithFacebook final
{
public:
	struct FClientLoginWithFacebookRequest        Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithFacebook) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithFacebook");
static_assert(sizeof(PlayFabClientAPI_LoginWithFacebook) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithFacebook");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithFacebook::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithFacebook::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithFacebook::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithFacebook::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebook, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithFacebook::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithFacebookInstantGamesId
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithFacebookInstantGamesId final
{
public:
	struct FClientLoginWithFacebookInstantGamesIdRequest Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_LoginWithFacebookInstantGamesId) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithFacebookInstantGamesId, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithFacebookInstantGamesId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithGameCenter
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabClientAPI_LoginWithGameCenter final
{
public:
	struct FClientLoginWithGameCenterRequest      Request;                                           // 0x0000(0x0090)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0090(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x00A0(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x00B8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithGameCenter) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithGameCenter");
static_assert(sizeof(PlayFabClientAPI_LoginWithGameCenter) == 0x0000C0, "Wrong size on PlayFabClientAPI_LoginWithGameCenter");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithGameCenter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, OnSuccess) == 0x000090, "Member 'PlayFabClientAPI_LoginWithGameCenter::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, OnFailure) == 0x0000A0, "Member 'PlayFabClientAPI_LoginWithGameCenter::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, CustomData) == 0x0000B0, "Member 'PlayFabClientAPI_LoginWithGameCenter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGameCenter, ReturnValue) == 0x0000B8, "Member 'PlayFabClientAPI_LoginWithGameCenter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithGoogleAccount
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithGoogleAccount final
{
public:
	struct FClientLoginWithGoogleAccountRequest   Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_LoginWithGoogleAccount) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGoogleAccount, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithGoogleAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithGooglePlayGamesServices
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithGooglePlayGamesServices final
{
public:
	struct FClientLoginWithGooglePlayGamesServicesRequest Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithGooglePlayGamesServices) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithGooglePlayGamesServices");
static_assert(sizeof(PlayFabClientAPI_LoginWithGooglePlayGamesServices) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithGooglePlayGamesServices");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithGooglePlayGamesServices, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithGooglePlayGamesServices::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithIOSDeviceID
// 0x00A0 (0x00A0 - 0x0000)
struct PlayFabClientAPI_LoginWithIOSDeviceID final
{
public:
	struct FClientLoginWithIOSDeviceIDRequest     Request;                                           // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0080(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0090(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_LoginWithIOSDeviceID) == 0x0000A0, "Wrong size on PlayFabClientAPI_LoginWithIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, OnSuccess) == 0x000070, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, OnFailure) == 0x000080, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, CustomData) == 0x000090, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithIOSDeviceID, ReturnValue) == 0x000098, "Member 'PlayFabClientAPI_LoginWithIOSDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithKongregate
// 0x0090 (0x0090 - 0x0000)
struct PlayFabClientAPI_LoginWithKongregate final
{
public:
	struct FClientLoginWithKongregateRequest      Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithKongregate");
static_assert(sizeof(PlayFabClientAPI_LoginWithKongregate) == 0x000090, "Wrong size on PlayFabClientAPI_LoginWithKongregate");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithKongregate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, OnSuccess) == 0x000060, "Member 'PlayFabClientAPI_LoginWithKongregate::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, OnFailure) == 0x000070, "Member 'PlayFabClientAPI_LoginWithKongregate::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, CustomData) == 0x000080, "Member 'PlayFabClientAPI_LoginWithKongregate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithKongregate, ReturnValue) == 0x000088, "Member 'PlayFabClientAPI_LoginWithKongregate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithNintendoServiceAccount
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithNintendoServiceAccount final
{
public:
	struct FClientLoginWithNintendoServiceAccountRequest Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_LoginWithNintendoServiceAccount) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoServiceAccount, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithNintendoServiceAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithNintendoSwitchDeviceId
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithNintendoSwitchDeviceId final
{
public:
	struct FClientLoginWithNintendoSwitchDeviceIdRequest Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithNintendoSwitchDeviceId, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithNintendoSwitchDeviceId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithOpenIdConnect
// 0x0090 (0x0090 - 0x0000)
struct PlayFabClientAPI_LoginWithOpenIdConnect final
{
public:
	struct FClientLoginWithOpenIdConnectRequest   Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_LoginWithOpenIdConnect) == 0x000090, "Wrong size on PlayFabClientAPI_LoginWithOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, OnSuccess) == 0x000060, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, OnFailure) == 0x000070, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, CustomData) == 0x000080, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithOpenIdConnect, ReturnValue) == 0x000088, "Member 'PlayFabClientAPI_LoginWithOpenIdConnect::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithPlayFab
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_LoginWithPlayFab final
{
public:
	struct FClientLoginWithPlayFabRequest         Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithPlayFab) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithPlayFab");
static_assert(sizeof(PlayFabClientAPI_LoginWithPlayFab) == 0x000068, "Wrong size on PlayFabClientAPI_LoginWithPlayFab");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithPlayFab::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_LoginWithPlayFab::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_LoginWithPlayFab::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, CustomData) == 0x000058, "Member 'PlayFabClientAPI_LoginWithPlayFab::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPlayFab, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_LoginWithPlayFab::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithPSN
// 0x0098 (0x0098 - 0x0000)
struct PlayFabClientAPI_LoginWithPSN final
{
public:
	struct FClientLoginWithPSNRequest             Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithPSN) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithPSN");
static_assert(sizeof(PlayFabClientAPI_LoginWithPSN) == 0x000098, "Wrong size on PlayFabClientAPI_LoginWithPSN");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithPSN::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, OnSuccess) == 0x000068, "Member 'PlayFabClientAPI_LoginWithPSN::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, OnFailure) == 0x000078, "Member 'PlayFabClientAPI_LoginWithPSN::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, CustomData) == 0x000088, "Member 'PlayFabClientAPI_LoginWithPSN::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithPSN, ReturnValue) == 0x000090, "Member 'PlayFabClientAPI_LoginWithPSN::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithSteam
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithSteam final
{
public:
	struct FClientLoginWithSteamRequest           Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithSteam) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithSteam");
static_assert(sizeof(PlayFabClientAPI_LoginWithSteam) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithSteam");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithSteam::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithSteam::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithSteam::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithSteam::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithSteam, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithSteam::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithTwitch
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithTwitch final
{
public:
	struct FClientLoginWithTwitchRequest          Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithTwitch");
static_assert(sizeof(PlayFabClientAPI_LoginWithTwitch) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithTwitch");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithTwitch::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithTwitch::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithTwitch::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithTwitch::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithTwitch, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithTwitch::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.LoginWithXbox
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_LoginWithXbox final
{
public:
	struct FClientLoginWithXboxRequest            Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_LoginWithXbox) == 0x000008, "Wrong alignment on PlayFabClientAPI_LoginWithXbox");
static_assert(sizeof(PlayFabClientAPI_LoginWithXbox) == 0x000080, "Wrong size on PlayFabClientAPI_LoginWithXbox");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, Request) == 0x000000, "Member 'PlayFabClientAPI_LoginWithXbox::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_LoginWithXbox::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_LoginWithXbox::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, CustomData) == 0x000070, "Member 'PlayFabClientAPI_LoginWithXbox::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_LoginWithXbox, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_LoginWithXbox::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.Matchmake
// 0x00A0 (0x00A0 - 0x0000)
struct PlayFabClientAPI_Matchmake final
{
public:
	struct FClientMatchmakeRequest                Request;                                           // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientMatchmakeResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0080(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0090(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_Matchmake) == 0x000008, "Wrong alignment on PlayFabClientAPI_Matchmake");
static_assert(sizeof(PlayFabClientAPI_Matchmake) == 0x0000A0, "Wrong size on PlayFabClientAPI_Matchmake");
static_assert(offsetof(PlayFabClientAPI_Matchmake, Request) == 0x000000, "Member 'PlayFabClientAPI_Matchmake::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_Matchmake, OnSuccess) == 0x000070, "Member 'PlayFabClientAPI_Matchmake::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_Matchmake, OnFailure) == 0x000080, "Member 'PlayFabClientAPI_Matchmake::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_Matchmake, CustomData) == 0x000090, "Member 'PlayFabClientAPI_Matchmake::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_Matchmake, ReturnValue) == 0x000098, "Member 'PlayFabClientAPI_Matchmake::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.OpenTrade
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_OpenTrade final
{
public:
	struct FClientOpenTradeRequest                Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientOpenTradeResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_OpenTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_OpenTrade");
static_assert(sizeof(PlayFabClientAPI_OpenTrade) == 0x000068, "Wrong size on PlayFabClientAPI_OpenTrade");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, Request) == 0x000000, "Member 'PlayFabClientAPI_OpenTrade::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_OpenTrade::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_OpenTrade::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, CustomData) == 0x000058, "Member 'PlayFabClientAPI_OpenTrade::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_OpenTrade, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_OpenTrade::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.PayForPurchase
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_PayForPurchase final
{
public:
	struct FClientPayForPurchaseRequest           Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientPayForPurchaseResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_PayForPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_PayForPurchase");
static_assert(sizeof(PlayFabClientAPI_PayForPurchase) == 0x000080, "Wrong size on PlayFabClientAPI_PayForPurchase");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_PayForPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_PayForPurchase::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_PayForPurchase::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, CustomData) == 0x000070, "Member 'PlayFabClientAPI_PayForPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PayForPurchase, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_PayForPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.PurchaseItem
// 0x0098 (0x0098 - 0x0000)
struct PlayFabClientAPI_PurchaseItem final
{
public:
	struct FClientPurchaseItemRequest             Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientPurchaseItemResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_PurchaseItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_PurchaseItem");
static_assert(sizeof(PlayFabClientAPI_PurchaseItem) == 0x000098, "Wrong size on PlayFabClientAPI_PurchaseItem");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, Request) == 0x000000, "Member 'PlayFabClientAPI_PurchaseItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, OnSuccess) == 0x000068, "Member 'PlayFabClientAPI_PurchaseItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, OnFailure) == 0x000078, "Member 'PlayFabClientAPI_PurchaseItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, CustomData) == 0x000088, "Member 'PlayFabClientAPI_PurchaseItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_PurchaseItem, ReturnValue) == 0x000090, "Member 'PlayFabClientAPI_PurchaseItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RedeemCoupon
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_RedeemCoupon final
{
public:
	struct FClientRedeemCouponRequest             Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRedeemCouponResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RedeemCoupon) == 0x000008, "Wrong alignment on PlayFabClientAPI_RedeemCoupon");
static_assert(sizeof(PlayFabClientAPI_RedeemCoupon) == 0x000070, "Wrong size on PlayFabClientAPI_RedeemCoupon");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, Request) == 0x000000, "Member 'PlayFabClientAPI_RedeemCoupon::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_RedeemCoupon::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_RedeemCoupon::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, CustomData) == 0x000060, "Member 'PlayFabClientAPI_RedeemCoupon::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RedeemCoupon, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_RedeemCoupon::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RefreshPSNAuthToken
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_RefreshPSNAuthToken final
{
public:
	struct FClientRefreshPSNAuthTokenRequest      Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RefreshPSNAuthToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_RefreshPSNAuthToken");
static_assert(sizeof(PlayFabClientAPI_RefreshPSNAuthToken) == 0x000060, "Wrong size on PlayFabClientAPI_RefreshPSNAuthToken");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, Request) == 0x000000, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, CustomData) == 0x000050, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RefreshPSNAuthToken, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_RefreshPSNAuthToken::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RegisterForIOSPushNotification
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_RegisterForIOSPushNotification final
{
public:
	struct FClientRegisterForIOSPushNotificationRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRegisterForIOSPushNotificationResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RegisterForIOSPushNotification) == 0x000008, "Wrong alignment on PlayFabClientAPI_RegisterForIOSPushNotification");
static_assert(sizeof(PlayFabClientAPI_RegisterForIOSPushNotification) == 0x000060, "Wrong size on PlayFabClientAPI_RegisterForIOSPushNotification");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, Request) == 0x000000, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, CustomData) == 0x000050, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterForIOSPushNotification, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_RegisterForIOSPushNotification::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RegisterPlayFabUser
// 0x00B0 (0x00B0 - 0x0000)
struct PlayFabClientAPI_RegisterPlayFabUser final
{
public:
	struct FClientRegisterPlayFabUserRequest      Request;                                           // 0x0000(0x0080)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRegisterPlayFabUserResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0080(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0090(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00A0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RegisterPlayFabUser) == 0x000008, "Wrong alignment on PlayFabClientAPI_RegisterPlayFabUser");
static_assert(sizeof(PlayFabClientAPI_RegisterPlayFabUser) == 0x0000B0, "Wrong size on PlayFabClientAPI_RegisterPlayFabUser");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, Request) == 0x000000, "Member 'PlayFabClientAPI_RegisterPlayFabUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, OnSuccess) == 0x000080, "Member 'PlayFabClientAPI_RegisterPlayFabUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, OnFailure) == 0x000090, "Member 'PlayFabClientAPI_RegisterPlayFabUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, CustomData) == 0x0000A0, "Member 'PlayFabClientAPI_RegisterPlayFabUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RegisterPlayFabUser, ReturnValue) == 0x0000A8, "Member 'PlayFabClientAPI_RegisterPlayFabUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RemoveContactEmail
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_RemoveContactEmail final
{
public:
	struct FClientRemoveContactEmailRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRemoveContactEmailResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RemoveContactEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_RemoveContactEmail");
static_assert(sizeof(PlayFabClientAPI_RemoveContactEmail) == 0x000040, "Wrong size on PlayFabClientAPI_RemoveContactEmail");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, Request) == 0x000000, "Member 'PlayFabClientAPI_RemoveContactEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_RemoveContactEmail::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_RemoveContactEmail::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, CustomData) == 0x000030, "Member 'PlayFabClientAPI_RemoveContactEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveContactEmail, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_RemoveContactEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RemoveFriend
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_RemoveFriend final
{
public:
	struct FClientRemoveFriendRequest             Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRemoveFriendResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RemoveFriend) == 0x000008, "Wrong alignment on PlayFabClientAPI_RemoveFriend");
static_assert(sizeof(PlayFabClientAPI_RemoveFriend) == 0x000048, "Wrong size on PlayFabClientAPI_RemoveFriend");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, Request) == 0x000000, "Member 'PlayFabClientAPI_RemoveFriend::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_RemoveFriend::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_RemoveFriend::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, CustomData) == 0x000038, "Member 'PlayFabClientAPI_RemoveFriend::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveFriend, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_RemoveFriend::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RemoveGenericID
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_RemoveGenericID final
{
public:
	struct FClientRemoveGenericIDRequest          Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRemoveGenericIDResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RemoveGenericID) == 0x000008, "Wrong alignment on PlayFabClientAPI_RemoveGenericID");
static_assert(sizeof(PlayFabClientAPI_RemoveGenericID) == 0x000040, "Wrong size on PlayFabClientAPI_RemoveGenericID");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, Request) == 0x000000, "Member 'PlayFabClientAPI_RemoveGenericID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_RemoveGenericID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_RemoveGenericID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, CustomData) == 0x000030, "Member 'PlayFabClientAPI_RemoveGenericID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveGenericID, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_RemoveGenericID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RemoveSharedGroupMembers
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_RemoveSharedGroupMembers final
{
public:
	struct FClientRemoveSharedGroupMembersRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRemoveSharedGroupMembersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RemoveSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabClientAPI_RemoveSharedGroupMembers");
static_assert(sizeof(PlayFabClientAPI_RemoveSharedGroupMembers) == 0x000058, "Wrong size on PlayFabClientAPI_RemoveSharedGroupMembers");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, Request) == 0x000000, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, CustomData) == 0x000048, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RemoveSharedGroupMembers, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_RemoveSharedGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ReportAdActivity
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_ReportAdActivity final
{
public:
	struct FClientReportAdActivityRequest         Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientReportAdActivityResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ReportAdActivity) == 0x000008, "Wrong alignment on PlayFabClientAPI_ReportAdActivity");
static_assert(sizeof(PlayFabClientAPI_ReportAdActivity) == 0x000068, "Wrong size on PlayFabClientAPI_ReportAdActivity");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, Request) == 0x000000, "Member 'PlayFabClientAPI_ReportAdActivity::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_ReportAdActivity::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_ReportAdActivity::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, CustomData) == 0x000058, "Member 'PlayFabClientAPI_ReportAdActivity::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportAdActivity, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_ReportAdActivity::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ReportDeviceInfo
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_ReportDeviceInfo final
{
public:
	struct FClientDeviceInfoRequest               Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ReportDeviceInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_ReportDeviceInfo");
static_assert(sizeof(PlayFabClientAPI_ReportDeviceInfo) == 0x000040, "Wrong size on PlayFabClientAPI_ReportDeviceInfo");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, Request) == 0x000000, "Member 'PlayFabClientAPI_ReportDeviceInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_ReportDeviceInfo::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_ReportDeviceInfo::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, CustomData) == 0x000030, "Member 'PlayFabClientAPI_ReportDeviceInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportDeviceInfo, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_ReportDeviceInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ReportPlayer
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_ReportPlayer final
{
public:
	struct FClientReportPlayerClientRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientReportPlayerClientResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ReportPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_ReportPlayer");
static_assert(sizeof(PlayFabClientAPI_ReportPlayer) == 0x000060, "Wrong size on PlayFabClientAPI_ReportPlayer");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, Request) == 0x000000, "Member 'PlayFabClientAPI_ReportPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_ReportPlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_ReportPlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, CustomData) == 0x000050, "Member 'PlayFabClientAPI_ReportPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ReportPlayer, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_ReportPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RestoreIOSPurchases
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_RestoreIOSPurchases final
{
public:
	struct FClientRestoreIOSPurchasesRequest      Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRestoreIOSPurchasesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RestoreIOSPurchases) == 0x000008, "Wrong alignment on PlayFabClientAPI_RestoreIOSPurchases");
static_assert(sizeof(PlayFabClientAPI_RestoreIOSPurchases) == 0x000060, "Wrong size on PlayFabClientAPI_RestoreIOSPurchases");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, Request) == 0x000000, "Member 'PlayFabClientAPI_RestoreIOSPurchases::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_RestoreIOSPurchases::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_RestoreIOSPurchases::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, CustomData) == 0x000050, "Member 'PlayFabClientAPI_RestoreIOSPurchases::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RestoreIOSPurchases, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_RestoreIOSPurchases::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.RewardAdActivity
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_RewardAdActivity final
{
public:
	struct FClientRewardAdActivityRequest         Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientRewardAdActivityResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_RewardAdActivity) == 0x000008, "Wrong alignment on PlayFabClientAPI_RewardAdActivity");
static_assert(sizeof(PlayFabClientAPI_RewardAdActivity) == 0x000060, "Wrong size on PlayFabClientAPI_RewardAdActivity");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, Request) == 0x000000, "Member 'PlayFabClientAPI_RewardAdActivity::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_RewardAdActivity::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_RewardAdActivity::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, CustomData) == 0x000050, "Member 'PlayFabClientAPI_RewardAdActivity::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_RewardAdActivity, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_RewardAdActivity::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.SendAccountRecoveryEmail
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_SendAccountRecoveryEmail final
{
public:
	struct FClientSendAccountRecoveryEmailRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientSendAccountRecoveryEmailResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_SendAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_SendAccountRecoveryEmail");
static_assert(sizeof(PlayFabClientAPI_SendAccountRecoveryEmail) == 0x000060, "Wrong size on PlayFabClientAPI_SendAccountRecoveryEmail");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, Request) == 0x000000, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, CustomData) == 0x000050, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SendAccountRecoveryEmail, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_SendAccountRecoveryEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.SetFriendTags
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_SetFriendTags final
{
public:
	struct FClientSetFriendTagsRequest            Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientSetFriendTagsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_SetFriendTags) == 0x000008, "Wrong alignment on PlayFabClientAPI_SetFriendTags");
static_assert(sizeof(PlayFabClientAPI_SetFriendTags) == 0x000058, "Wrong size on PlayFabClientAPI_SetFriendTags");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, Request) == 0x000000, "Member 'PlayFabClientAPI_SetFriendTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_SetFriendTags::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_SetFriendTags::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, CustomData) == 0x000048, "Member 'PlayFabClientAPI_SetFriendTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetFriendTags, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_SetFriendTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.SetPlayerSecret
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_SetPlayerSecret final
{
public:
	struct FClientSetPlayerSecretRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientSetPlayerSecretResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_SetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabClientAPI_SetPlayerSecret");
static_assert(sizeof(PlayFabClientAPI_SetPlayerSecret) == 0x000058, "Wrong size on PlayFabClientAPI_SetPlayerSecret");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, Request) == 0x000000, "Member 'PlayFabClientAPI_SetPlayerSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_SetPlayerSecret::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_SetPlayerSecret::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, CustomData) == 0x000048, "Member 'PlayFabClientAPI_SetPlayerSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SetPlayerSecret, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_SetPlayerSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.StartPurchase
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_StartPurchase final
{
public:
	struct FClientStartPurchaseRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientStartPurchaseResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_StartPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_StartPurchase");
static_assert(sizeof(PlayFabClientAPI_StartPurchase) == 0x000070, "Wrong size on PlayFabClientAPI_StartPurchase");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_StartPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_StartPurchase::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_StartPurchase::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, CustomData) == 0x000060, "Member 'PlayFabClientAPI_StartPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_StartPurchase, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_StartPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.SubtractUserVirtualCurrency
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_SubtractUserVirtualCurrency final
{
public:
	struct FClientSubtractUserVirtualCurrencyRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_SubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabClientAPI_SubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabClientAPI_SubtractUserVirtualCurrency) == 0x000058, "Wrong size on PlayFabClientAPI_SubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, CustomData) == 0x000048, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_SubtractUserVirtualCurrency, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_SubtractUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkAndroidDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkAndroidDeviceID final
{
public:
	struct FClientUnlinkAndroidDeviceIDRequest    Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkAndroidDeviceIDResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_UnlinkAndroidDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkAndroidDeviceID, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkAndroidDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkApple
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkApple final
{
public:
	struct FClientUnlinkAppleRequest              Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkApple");
static_assert(sizeof(PlayFabClientAPI_UnlinkApple) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkApple");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkApple::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkApple::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkApple::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkApple::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkApple, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkApple::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkCustomID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkCustomID final
{
public:
	struct FClientUnlinkCustomIDRequest           Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkCustomIDResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkCustomID");
static_assert(sizeof(PlayFabClientAPI_UnlinkCustomID) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkCustomID");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkCustomID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkCustomID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkCustomID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkCustomID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkCustomID, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkCustomID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkFacebookAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkFacebookAccount final
{
public:
	struct FClientUnlinkFacebookAccountRequest    Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkFacebookAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkFacebookAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkFacebookAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkFacebookAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkFacebookAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkFacebookAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkFacebookInstantGamesId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkFacebookInstantGamesId final
{
public:
	struct FClientUnlinkFacebookInstantGamesIdRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkFacebookInstantGamesIdResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_UnlinkFacebookInstantGamesId) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, CustomData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkFacebookInstantGamesId, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkFacebookInstantGamesId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkGameCenterAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkGameCenterAccount final
{
public:
	struct FClientUnlinkGameCenterAccountRequest  Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkGameCenterAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkGameCenterAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkGameCenterAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkGameCenterAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkGameCenterAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGameCenterAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkGameCenterAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkGoogleAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkGoogleAccount final
{
public:
	struct FClientUnlinkGoogleAccountRequest      Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkGoogleAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkGoogleAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGoogleAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkGoogleAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkGooglePlayGamesServicesAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount final
{
public:
	struct FClientUnlinkGooglePlayGamesServicesAccountRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkGooglePlayGamesServicesAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkIOSDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkIOSDeviceID final
{
public:
	struct FClientUnlinkIOSDeviceIDRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkIOSDeviceIDResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_UnlinkIOSDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkIOSDeviceID, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkIOSDeviceID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkKongregate
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkKongregate final
{
public:
	struct FClientUnlinkKongregateAccountRequest  Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkKongregateAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkKongregate");
static_assert(sizeof(PlayFabClientAPI_UnlinkKongregate) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkKongregate");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkKongregate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkKongregate::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkKongregate::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkKongregate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkKongregate, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkKongregate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkNintendoServiceAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkNintendoServiceAccount final
{
public:
	struct FClientUnlinkNintendoServiceAccountRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkNintendoServiceAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoServiceAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkNintendoServiceAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkNintendoSwitchDeviceId final
{
public:
	struct FClientUnlinkNintendoSwitchDeviceIdRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, CustomData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkNintendoSwitchDeviceId, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkNintendoSwitchDeviceId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkOpenIdConnect
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkOpenIdConnect final
{
public:
	struct FClientUnlinkOpenIdConnectRequest      Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_UnlinkOpenIdConnect) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, CustomData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkOpenIdConnect, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkOpenIdConnect::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkPSNAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkPSNAccount final
{
public:
	struct FClientUnlinkPSNAccountRequest         Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkPSNAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkPSNAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkPSNAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkPSNAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkPSNAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkPSNAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkPSNAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkPSNAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkPSNAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkPSNAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkSteamAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkSteamAccount final
{
public:
	struct FClientUnlinkSteamAccountRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkSteamAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkSteamAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkSteamAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkSteamAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkSteamAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkSteamAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkSteamAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkSteamAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkSteamAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkSteamAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkSteamAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkTwitch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UnlinkTwitch final
{
public:
	struct FClientUnlinkTwitchAccountRequest      Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkTwitchAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkTwitch");
static_assert(sizeof(PlayFabClientAPI_UnlinkTwitch) == 0x000050, "Wrong size on PlayFabClientAPI_UnlinkTwitch");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkTwitch::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_UnlinkTwitch::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_UnlinkTwitch::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, CustomData) == 0x000040, "Member 'PlayFabClientAPI_UnlinkTwitch::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkTwitch, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UnlinkTwitch::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlinkXboxAccount
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_UnlinkXboxAccount final
{
public:
	struct FClientUnlinkXboxAccountRequest        Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlinkXboxAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlinkXboxAccount");
static_assert(sizeof(PlayFabClientAPI_UnlinkXboxAccount) == 0x000040, "Wrong size on PlayFabClientAPI_UnlinkXboxAccount");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlinkXboxAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, OnSuccess) == 0x000010, "Member 'PlayFabClientAPI_UnlinkXboxAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, OnFailure) == 0x000020, "Member 'PlayFabClientAPI_UnlinkXboxAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, CustomData) == 0x000030, "Member 'PlayFabClientAPI_UnlinkXboxAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlinkXboxAccount, ReturnValue) == 0x000038, "Member 'PlayFabClientAPI_UnlinkXboxAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlockContainerInstance
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_UnlockContainerInstance final
{
public:
	struct FClientUnlockContainerInstanceRequest  Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlockContainerInstance) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlockContainerInstance");
static_assert(sizeof(PlayFabClientAPI_UnlockContainerInstance) == 0x000080, "Wrong size on PlayFabClientAPI_UnlockContainerInstance");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlockContainerInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, OnSuccess) == 0x000050, "Member 'PlayFabClientAPI_UnlockContainerInstance::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, OnFailure) == 0x000060, "Member 'PlayFabClientAPI_UnlockContainerInstance::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, CustomData) == 0x000070, "Member 'PlayFabClientAPI_UnlockContainerInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerInstance, ReturnValue) == 0x000078, "Member 'PlayFabClientAPI_UnlockContainerInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UnlockContainerItem
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_UnlockContainerItem final
{
public:
	struct FClientUnlockContainerItemRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UnlockContainerItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_UnlockContainerItem");
static_assert(sizeof(PlayFabClientAPI_UnlockContainerItem) == 0x000070, "Wrong size on PlayFabClientAPI_UnlockContainerItem");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, Request) == 0x000000, "Member 'PlayFabClientAPI_UnlockContainerItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_UnlockContainerItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_UnlockContainerItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, CustomData) == 0x000060, "Member 'PlayFabClientAPI_UnlockContainerItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UnlockContainerItem, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_UnlockContainerItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateAvatarUrl
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_UpdateAvatarUrl final
{
public:
	struct FClientUpdateAvatarUrlRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateAvatarUrl) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateAvatarUrl");
static_assert(sizeof(PlayFabClientAPI_UpdateAvatarUrl) == 0x000048, "Wrong size on PlayFabClientAPI_UpdateAvatarUrl");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateAvatarUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, OnSuccess) == 0x000018, "Member 'PlayFabClientAPI_UpdateAvatarUrl::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, OnFailure) == 0x000028, "Member 'PlayFabClientAPI_UpdateAvatarUrl::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, CustomData) == 0x000038, "Member 'PlayFabClientAPI_UpdateAvatarUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateAvatarUrl, ReturnValue) == 0x000040, "Member 'PlayFabClientAPI_UpdateAvatarUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateCharacterData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_UpdateCharacterData final
{
public:
	struct FClientUpdateCharacterDataRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateCharacterDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateCharacterData) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateCharacterData");
static_assert(sizeof(PlayFabClientAPI_UpdateCharacterData) == 0x000070, "Wrong size on PlayFabClientAPI_UpdateCharacterData");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateCharacterData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_UpdateCharacterData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_UpdateCharacterData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, CustomData) == 0x000060, "Member 'PlayFabClientAPI_UpdateCharacterData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterData, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_UpdateCharacterData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateCharacterStatistics
// 0x0058 (0x0058 - 0x0000)
struct PlayFabClientAPI_UpdateCharacterStatistics final
{
public:
	struct FClientUpdateCharacterStatisticsRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateCharacterStatistics");
static_assert(sizeof(PlayFabClientAPI_UpdateCharacterStatistics) == 0x000058, "Wrong size on PlayFabClientAPI_UpdateCharacterStatistics");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, OnSuccess) == 0x000028, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, OnFailure) == 0x000038, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, CustomData) == 0x000048, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateCharacterStatistics, ReturnValue) == 0x000050, "Member 'PlayFabClientAPI_UpdateCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdatePlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UpdatePlayerStatistics final
{
public:
	struct FClientUpdatePlayerStatisticsRequest   Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdatePlayerStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdatePlayerStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdatePlayerStatistics");
static_assert(sizeof(PlayFabClientAPI_UpdatePlayerStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_UpdatePlayerStatistics");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, CustomData) == 0x000040, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdatePlayerStatistics, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UpdatePlayerStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateSharedGroupData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_UpdateSharedGroupData final
{
public:
	struct FClientUpdateSharedGroupDataRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateSharedGroupDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateSharedGroupData) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateSharedGroupData");
static_assert(sizeof(PlayFabClientAPI_UpdateSharedGroupData) == 0x000070, "Wrong size on PlayFabClientAPI_UpdateSharedGroupData");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateSharedGroupData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, OnSuccess) == 0x000040, "Member 'PlayFabClientAPI_UpdateSharedGroupData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, OnFailure) == 0x000050, "Member 'PlayFabClientAPI_UpdateSharedGroupData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, CustomData) == 0x000060, "Member 'PlayFabClientAPI_UpdateSharedGroupData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateSharedGroupData, ReturnValue) == 0x000068, "Member 'PlayFabClientAPI_UpdateSharedGroupData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateUserData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_UpdateUserData final
{
public:
	struct FClientUpdateUserDataRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateUserData) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateUserData");
static_assert(sizeof(PlayFabClientAPI_UpdateUserData) == 0x000060, "Wrong size on PlayFabClientAPI_UpdateUserData");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_UpdateUserData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_UpdateUserData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, CustomData) == 0x000050, "Member 'PlayFabClientAPI_UpdateUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_UpdateUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateUserPublisherData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_UpdateUserPublisherData final
{
public:
	struct FClientUpdateUserDataRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateUserPublisherData");
static_assert(sizeof(PlayFabClientAPI_UpdateUserPublisherData) == 0x000060, "Wrong size on PlayFabClientAPI_UpdateUserPublisherData");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, OnSuccess) == 0x000030, "Member 'PlayFabClientAPI_UpdateUserPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, OnFailure) == 0x000040, "Member 'PlayFabClientAPI_UpdateUserPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, CustomData) == 0x000050, "Member 'PlayFabClientAPI_UpdateUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserPublisherData, ReturnValue) == 0x000058, "Member 'PlayFabClientAPI_UpdateUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.UpdateUserTitleDisplayName
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_UpdateUserTitleDisplayName final
{
public:
	struct FClientUpdateUserTitleDisplayNameRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientUpdateUserTitleDisplayNameResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_UpdateUserTitleDisplayName) == 0x000008, "Wrong alignment on PlayFabClientAPI_UpdateUserTitleDisplayName");
static_assert(sizeof(PlayFabClientAPI_UpdateUserTitleDisplayName) == 0x000050, "Wrong size on PlayFabClientAPI_UpdateUserTitleDisplayName");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, Request) == 0x000000, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, OnSuccess) == 0x000020, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, OnFailure) == 0x000030, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, CustomData) == 0x000040, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_UpdateUserTitleDisplayName, ReturnValue) == 0x000048, "Member 'PlayFabClientAPI_UpdateUserTitleDisplayName::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ValidateAmazonIAPReceipt
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientAPI_ValidateAmazonIAPReceipt final
{
public:
	struct FClientValidateAmazonReceiptRequest    Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientValidateAmazonReceiptResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ValidateAmazonIAPReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_ValidateAmazonIAPReceipt");
static_assert(sizeof(PlayFabClientAPI_ValidateAmazonIAPReceipt) == 0x000088, "Wrong size on PlayFabClientAPI_ValidateAmazonIAPReceipt");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, Request) == 0x000000, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, OnSuccess) == 0x000058, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, OnFailure) == 0x000068, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, CustomData) == 0x000078, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateAmazonIAPReceipt, ReturnValue) == 0x000080, "Member 'PlayFabClientAPI_ValidateAmazonIAPReceipt::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ValidateGooglePlayPurchase
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientAPI_ValidateGooglePlayPurchase final
{
public:
	struct FClientValidateGooglePlayPurchaseRequest Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientValidateGooglePlayPurchaseResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ValidateGooglePlayPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_ValidateGooglePlayPurchase");
static_assert(sizeof(PlayFabClientAPI_ValidateGooglePlayPurchase) == 0x000088, "Wrong size on PlayFabClientAPI_ValidateGooglePlayPurchase");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, Request) == 0x000000, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, OnSuccess) == 0x000058, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, OnFailure) == 0x000068, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, CustomData) == 0x000078, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateGooglePlayPurchase, ReturnValue) == 0x000080, "Member 'PlayFabClientAPI_ValidateGooglePlayPurchase::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ValidateIOSReceipt
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_ValidateIOSReceipt final
{
public:
	struct FClientValidateIOSReceiptRequest       Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientValidateIOSReceiptResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ValidateIOSReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_ValidateIOSReceipt");
static_assert(sizeof(PlayFabClientAPI_ValidateIOSReceipt) == 0x000078, "Wrong size on PlayFabClientAPI_ValidateIOSReceipt");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, Request) == 0x000000, "Member 'PlayFabClientAPI_ValidateIOSReceipt::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, OnSuccess) == 0x000048, "Member 'PlayFabClientAPI_ValidateIOSReceipt::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, OnFailure) == 0x000058, "Member 'PlayFabClientAPI_ValidateIOSReceipt::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, CustomData) == 0x000068, "Member 'PlayFabClientAPI_ValidateIOSReceipt::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateIOSReceipt, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_ValidateIOSReceipt::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.ValidateWindowsStoreReceipt
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_ValidateWindowsStoreReceipt final
{
public:
	struct FClientValidateWindowsReceiptRequest   Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientValidateWindowsReceiptResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_ValidateWindowsStoreReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_ValidateWindowsStoreReceipt");
static_assert(sizeof(PlayFabClientAPI_ValidateWindowsStoreReceipt) == 0x000078, "Wrong size on PlayFabClientAPI_ValidateWindowsStoreReceipt");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, Request) == 0x000000, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, OnSuccess) == 0x000048, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, OnFailure) == 0x000058, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, CustomData) == 0x000068, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_ValidateWindowsStoreReceipt, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_ValidateWindowsStoreReceipt::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.WriteCharacterEvent
// 0x0078 (0x0078 - 0x0000)
struct PlayFabClientAPI_WriteCharacterEvent final
{
public:
	struct FClientWriteClientCharacterEventRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_WriteCharacterEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_WriteCharacterEvent");
static_assert(sizeof(PlayFabClientAPI_WriteCharacterEvent) == 0x000078, "Wrong size on PlayFabClientAPI_WriteCharacterEvent");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, Request) == 0x000000, "Member 'PlayFabClientAPI_WriteCharacterEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, OnSuccess) == 0x000048, "Member 'PlayFabClientAPI_WriteCharacterEvent::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, OnFailure) == 0x000058, "Member 'PlayFabClientAPI_WriteCharacterEvent::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, CustomData) == 0x000068, "Member 'PlayFabClientAPI_WriteCharacterEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteCharacterEvent, ReturnValue) == 0x000070, "Member 'PlayFabClientAPI_WriteCharacterEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.WritePlayerEvent
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_WritePlayerEvent final
{
public:
	struct FClientWriteClientPlayerEventRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_WritePlayerEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_WritePlayerEvent");
static_assert(sizeof(PlayFabClientAPI_WritePlayerEvent) == 0x000068, "Wrong size on PlayFabClientAPI_WritePlayerEvent");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, Request) == 0x000000, "Member 'PlayFabClientAPI_WritePlayerEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_WritePlayerEvent::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_WritePlayerEvent::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, CustomData) == 0x000058, "Member 'PlayFabClientAPI_WritePlayerEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WritePlayerEvent, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_WritePlayerEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.WriteTitleEvent
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_WriteTitleEvent final
{
public:
	struct FClientWriteTitleEventRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabClientAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_WriteTitleEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_WriteTitleEvent");
static_assert(sizeof(PlayFabClientAPI_WriteTitleEvent) == 0x000068, "Wrong size on PlayFabClientAPI_WriteTitleEvent");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, Request) == 0x000000, "Member 'PlayFabClientAPI_WriteTitleEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, OnSuccess) == 0x000038, "Member 'PlayFabClientAPI_WriteTitleEvent::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, OnFailure) == 0x000048, "Member 'PlayFabClientAPI_WriteTitleEvent::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, CustomData) == 0x000058, "Member 'PlayFabClientAPI_WriteTitleEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_WriteTitleEvent, ReturnValue) == 0x000060, "Member 'PlayFabClientAPI_WriteTitleEvent::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabClientAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabClientAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessAcceptTrade__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessAcceptTrade__DelegateSignature final
{
public:
	struct FClientAcceptTradeResponse             Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessAcceptTrade__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessAcceptTrade__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessAcceptTrade__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessAcceptTrade__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAcceptTrade__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessAcceptTrade__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAcceptTrade__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessAcceptTrade__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessAddFriend__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessAddFriend__DelegateSignature final
{
public:
	struct FClientAddFriendResult                 Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessAddFriend__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessAddFriend__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessAddFriend__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessAddFriend__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddFriend__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessAddFriend__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddFriend__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessAddFriend__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessAddGenericID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessAddGenericID__DelegateSignature final
{
public:
	struct FClientAddGenericIDResult              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessAddGenericID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessAddGenericID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessAddGenericID__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessAddGenericID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddGenericID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessAddGenericID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddGenericID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessAddGenericID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature final
{
public:
	struct FClientAddOrUpdateContactEmailResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessAddSharedGroupMembers__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature final
{
public:
	struct FClientAddSharedGroupMembersResult     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessAddUsernamePassword__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessAddUsernamePassword__DelegateSignature final
{
public:
	struct FClientAddUsernamePasswordResult       Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessAddUsernamePassword__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessAddUsernamePassword__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessAddUsernamePassword__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessAddUsernamePassword__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddUsernamePassword__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessAddUsernamePassword__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddUsernamePassword__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessAddUsernamePassword__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature final
{
public:
	struct FClientModifyUserVirtualCurrencyResult Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature) == 0x000038, "Wrong size on PlayFabClientAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabClientAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature final
{
public:
	struct FClientAndroidDevicePushNotificationRegistrationResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessAttributeInstall__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessAttributeInstall__DelegateSignature final
{
public:
	struct FClientAttributeInstallResult          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessAttributeInstall__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessAttributeInstall__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessAttributeInstall__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessAttributeInstall__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAttributeInstall__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessAttributeInstall__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessAttributeInstall__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessAttributeInstall__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessCancelTrade__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessCancelTrade__DelegateSignature final
{
public:
	struct FClientCancelTradeResponse             Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessCancelTrade__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessCancelTrade__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessCancelTrade__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessCancelTrade__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessCancelTrade__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessCancelTrade__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessCancelTrade__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessCancelTrade__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessConfirmPurchase__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessConfirmPurchase__DelegateSignature final
{
public:
	struct FClientConfirmPurchaseResult           Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessConfirmPurchase__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessConfirmPurchase__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessConfirmPurchase__DelegateSignature) == 0x000040, "Wrong size on PlayFabClientAPI_DelegateOnSuccessConfirmPurchase__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConfirmPurchase__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessConfirmPurchase__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConfirmPurchase__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabClientAPI_DelegateOnSuccessConfirmPurchase__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumeItem__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessConsumeItem__DelegateSignature final
{
public:
	struct FClientConsumeItemResult               Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessConsumeItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessConsumeItem__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessConsumeItem__DelegateSignature) == 0x000028, "Wrong size on PlayFabClientAPI_DelegateOnSuccessConsumeItem__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumeItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumeItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumeItem__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumeItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature final
{
public:
	struct FClientConsumeMicrosoftStoreEntitlementsResponse Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumePS5Entitlements__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessConsumePS5Entitlements__DelegateSignature final
{
public:
	struct FClientConsumePS5EntitlementsResult    Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessConsumePS5Entitlements__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessConsumePS5Entitlements__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessConsumePS5Entitlements__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessConsumePS5Entitlements__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumePS5Entitlements__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumePS5Entitlements__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumePS5Entitlements__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumePS5Entitlements__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumePSNEntitlements__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessConsumePSNEntitlements__DelegateSignature final
{
public:
	struct FClientConsumePSNEntitlementsResult    Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessConsumePSNEntitlements__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessConsumePSNEntitlements__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessConsumePSNEntitlements__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessConsumePSNEntitlements__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumePSNEntitlements__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumePSNEntitlements__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumePSNEntitlements__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumePSNEntitlements__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature final
{
public:
	struct FClientConsumeXboxEntitlementsResult   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessCreateSharedGroup__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature final
{
public:
	struct FClientCreateSharedGroupResult         Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessExecuteCloudScript__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature final
{
public:
	struct FClientExecuteCloudScriptResult        Result;                                            // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature) == 0x000068, "Wrong size on PlayFabClientAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature, CustomData) == 0x000060, "Member 'PlayFabClientAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetAccountInfo__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetAccountInfo__DelegateSignature final
{
public:
	struct FClientGetAccountInfoResult            Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetAccountInfo__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetAccountInfo__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetAccountInfo__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetAccountInfo__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetAccountInfo__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetAccountInfo__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetAccountInfo__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessGetAccountInfo__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetAdPlacements__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetAdPlacements__DelegateSignature final
{
public:
	struct FClientGetAdPlacementsResult           Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetAdPlacements__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetAdPlacements__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetAdPlacements__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetAdPlacements__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetAdPlacements__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetAdPlacements__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetAdPlacements__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetAdPlacements__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetAllUsersCharacters__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature final
{
public:
	struct FClientListUsersCharactersResult       Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCatalogItems__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature final
{
public:
	struct FClientGetCatalogItemsResult           Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetCharacterData__DelegateSignature final
{
public:
	struct FClientGetCharacterDataResult          Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetCharacterData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetCharacterData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetCharacterData__DelegateSignature) == 0x000030, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetCharacterData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterInventory__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature final
{
public:
	struct FClientGetCharacterInventoryResult     Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature) == 0x000040, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature final
{
public:
	struct FClientGetCharacterLeaderboardResult   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature final
{
public:
	struct FClientGetCharacterDataResult          Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature) == 0x000030, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCharacterStatistics__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature final
{
public:
	struct FClientGetCharacterStatisticsResult    Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetContentDownloadUrl__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature final
{
public:
	struct FClientGetContentDownloadUrlResult     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetCurrentGames__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetCurrentGames__DelegateSignature final
{
public:
	struct FClientCurrentGamesResult              Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetCurrentGames__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetCurrentGames__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetCurrentGames__DelegateSignature) == 0x000030, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetCurrentGames__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCurrentGames__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCurrentGames__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetCurrentGames__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabClientAPI_DelegateOnSuccessGetCurrentGames__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetFriendLeaderboard__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature final
{
public:
	struct FClientGetLeaderboardResult            Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature) == 0x000038, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature final
{
public:
	struct FClientGetFriendLeaderboardAroundPlayerResult Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature) == 0x000038, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabClientAPI_DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetFriendsList__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetFriendsList__DelegateSignature final
{
public:
	struct FClientGetFriendsListResult            Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetFriendsList__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetFriendsList__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetFriendsList__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetFriendsList__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetFriendsList__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetFriendsList__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetFriendsList__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetFriendsList__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetGameServerRegions__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetGameServerRegions__DelegateSignature final
{
public:
	struct FClientGameServerRegionsResult         Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetGameServerRegions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetGameServerRegions__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetGameServerRegions__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetGameServerRegions__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetGameServerRegions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetGameServerRegions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetGameServerRegions__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetGameServerRegions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetLeaderboard__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature final
{
public:
	struct FClientGetLeaderboardResult            Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature) == 0x000038, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabClientAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature final
{
public:
	struct FClientGetLeaderboardAroundCharacterResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature final
{
public:
	struct FClientGetLeaderboardAroundPlayerResult Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature) == 0x000038, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabClientAPI_DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature final
{
public:
	struct FClientGetLeaderboardForUsersCharactersResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPaymentToken__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPaymentToken__DelegateSignature final
{
public:
	struct FClientGetPaymentTokenResult           Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPaymentToken__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPaymentToken__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPaymentToken__DelegateSignature) == 0x000030, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPaymentToken__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPaymentToken__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPaymentToken__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPaymentToken__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPaymentToken__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature final
{
public:
	struct FClientGetPhotonAuthenticationTokenResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature final
{
public:
	struct FClientGetPlayerCombinedInfoResult     Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature) == 0x000028, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerProfile__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature final
{
public:
	struct FClientGetPlayerProfileResult          Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerSegments__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature final
{
public:
	struct FClientGetPlayerSegmentsResult         Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerStatistics__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature final
{
public:
	struct FClientGetPlayerStatisticsResult       Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature final
{
public:
	struct FClientGetPlayerStatisticVersionsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerTags__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature final
{
public:
	struct FClientGetPlayerTagsResult             Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature) == 0x000030, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayerTrades__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayerTrades__DelegateSignature final
{
public:
	struct FClientGetPlayerTradesResponse         Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayerTrades__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayerTrades__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayerTrades__DelegateSignature) == 0x000030, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayerTrades__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerTrades__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerTrades__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayerTrades__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayerTrades__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromFacebookIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromGameCenterIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromGenericIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromGoogleIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromKongregateIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromPSNAccountIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromSteamIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromTwitchIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature final
{
public:
	struct FClientGetPlayFabIDsFromXboxLiveIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPublisherData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPublisherData__DelegateSignature final
{
public:
	struct FClientGetPublisherDataResult          Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPublisherData__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPublisherData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetPurchase__DelegateSignature
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetPurchase__DelegateSignature final
{
public:
	struct FClientGetPurchaseResult               Result;                                            // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetPurchase__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetPurchase__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetPurchase__DelegateSignature) == 0x000060, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetPurchase__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPurchase__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPurchase__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetPurchase__DelegateSignature, CustomData) == 0x000058, "Member 'PlayFabClientAPI_DelegateOnSuccessGetPurchase__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetSharedGroupData__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature final
{
public:
	struct FClientGetSharedGroupDataResult        Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature) == 0x000028, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabClientAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetStoreItems__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetStoreItems__DelegateSignature final
{
public:
	struct FClientGetStoreItemsResult             Result;                                            // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetStoreItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetStoreItems__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetStoreItems__DelegateSignature) == 0x000050, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetStoreItems__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetStoreItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetStoreItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetStoreItems__DelegateSignature, CustomData) == 0x000048, "Member 'PlayFabClientAPI_DelegateOnSuccessGetStoreItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTime__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetTime__DelegateSignature final
{
public:
	struct FClientGetTimeResult                   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetTime__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetTime__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetTime__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetTime__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTime__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTime__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTime__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTime__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTitleData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetTitleData__DelegateSignature final
{
public:
	struct FClientGetTitleDataResult              Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetTitleData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetTitleData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetTitleData__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetTitleData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTitleData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTitleData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTitleData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTitleData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTitleNews__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetTitleNews__DelegateSignature final
{
public:
	struct FClientGetTitleNewsResult              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetTitleNews__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetTitleNews__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetTitleNews__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetTitleNews__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTitleNews__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTitleNews__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTitleNews__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTitleNews__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTitlePublicKey__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetTitlePublicKey__DelegateSignature final
{
public:
	struct FClientGetTitlePublicKeyResult         Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetTitlePublicKey__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetTitlePublicKey__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetTitlePublicKey__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetTitlePublicKey__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTitlePublicKey__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTitlePublicKey__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTitlePublicKey__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTitlePublicKey__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetTradeStatus__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetTradeStatus__DelegateSignature final
{
public:
	struct FClientGetTradeStatusResponse          Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetTradeStatus__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetTradeStatus__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetTradeStatus__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetTradeStatus__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTradeStatus__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTradeStatus__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetTradeStatus__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessGetTradeStatus__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserData__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetUserData__DelegateSignature final
{
public:
	struct FClientGetUserDataResult               Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetUserData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetUserData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetUserData__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetUserData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserData__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserInventory__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetUserInventory__DelegateSignature final
{
public:
	struct FClientGetUserInventoryResult          Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetUserInventory__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetUserInventory__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetUserInventory__DelegateSignature) == 0x000030, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetUserInventory__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserInventory__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserInventory__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserInventory__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserInventory__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserPublisherData__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature final
{
public:
	struct FClientGetUserDataResult               Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature final
{
public:
	struct FClientGetUserDataResult               Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGetUserReadOnlyData__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature final
{
public:
	struct FClientGetUserDataResult               Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessGrantCharacterToUser__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature final
{
public:
	struct FClientGrantCharacterToUserResult      Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature) == 0x000038, "Wrong size on PlayFabClientAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabClientAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature final
{
public:
	struct FClientLinkAndroidDeviceIDResult       Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkApple__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkApple__DelegateSignature final
{
public:
	struct FClientEmptyResult                     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkApple__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkApple__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkApple__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkApple__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkApple__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkApple__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkApple__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkApple__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkCustomID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkCustomID__DelegateSignature final
{
public:
	struct FClientLinkCustomIDResult              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkCustomID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkCustomID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkCustomID__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkCustomID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkCustomID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkCustomID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkCustomID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkCustomID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkFacebookAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkFacebookAccount__DelegateSignature final
{
public:
	struct FClientLinkFacebookAccountResult       Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkFacebookAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkFacebookAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkFacebookAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkFacebookAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkFacebookAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkFacebookAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkFacebookAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkFacebookAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature final
{
public:
	struct FClientLinkFacebookInstantGamesIdResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkGameCenterAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkGameCenterAccount__DelegateSignature final
{
public:
	struct FClientLinkGameCenterAccountResult     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkGameCenterAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkGameCenterAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkGameCenterAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkGameCenterAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkGameCenterAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkGameCenterAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkGameCenterAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkGameCenterAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkGoogleAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkGoogleAccount__DelegateSignature final
{
public:
	struct FClientLinkGoogleAccountResult         Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkGoogleAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkGoogleAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkGoogleAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkGoogleAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkGoogleAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkGoogleAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkGoogleAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkGoogleAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature final
{
public:
	struct FClientLinkGooglePlayGamesServicesAccountResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkIOSDeviceID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkIOSDeviceID__DelegateSignature final
{
public:
	struct FClientLinkIOSDeviceIDResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkIOSDeviceID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkIOSDeviceID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkIOSDeviceID__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkIOSDeviceID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkIOSDeviceID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkIOSDeviceID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkIOSDeviceID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkIOSDeviceID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkKongregate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkKongregate__DelegateSignature final
{
public:
	struct FClientLinkKongregateAccountResult     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkKongregate__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkKongregate__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkKongregate__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkKongregate__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkKongregate__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkKongregate__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkKongregate__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkKongregate__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature final
{
public:
	struct FClientEmptyResult                     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature final
{
public:
	struct FClientLinkNintendoSwitchDeviceIdResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkOpenIdConnect__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkOpenIdConnect__DelegateSignature final
{
public:
	struct FClientEmptyResult                     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkOpenIdConnect__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkOpenIdConnect__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkOpenIdConnect__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkOpenIdConnect__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkOpenIdConnect__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkOpenIdConnect__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkOpenIdConnect__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkOpenIdConnect__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkPSNAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature final
{
public:
	struct FClientLinkPSNAccountResult            Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkSteamAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkSteamAccount__DelegateSignature final
{
public:
	struct FClientLinkSteamAccountResult          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkSteamAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkSteamAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkSteamAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkSteamAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkSteamAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkSteamAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkSteamAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkSteamAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkTwitch__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkTwitch__DelegateSignature final
{
public:
	struct FClientLinkTwitchAccountResult         Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkTwitch__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkTwitch__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkTwitch__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkTwitch__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkTwitch__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkTwitch__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkTwitch__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkTwitch__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLinkXboxAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature final
{
public:
	struct FClientLinkXboxAccountResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithApple__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithApple__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithApple__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithApple__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithApple__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithApple__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithApple__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithApple__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithApple__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithApple__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithCustomID__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithCustomID__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithCustomID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithCustomID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithCustomID__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithCustomID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithCustomID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithCustomID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithCustomID__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithCustomID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithEmailAddress__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithEmailAddress__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithEmailAddress__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithEmailAddress__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithEmailAddress__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithEmailAddress__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithEmailAddress__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithEmailAddress__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithEmailAddress__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithEmailAddress__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithFacebook__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithFacebook__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithFacebook__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithFacebook__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithFacebook__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithFacebook__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithFacebook__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithFacebook__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithFacebook__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithFacebook__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithGameCenter__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithGameCenter__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithGameCenter__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithGameCenter__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithGameCenter__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithGameCenter__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithGameCenter__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithGameCenter__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithGameCenter__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithGameCenter__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithKongregate__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithKongregate__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithKongregate__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithKongregate__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithKongregate__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithKongregate__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithKongregate__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithKongregate__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithKongregate__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithKongregate__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithPlayFab__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithPlayFab__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithPlayFab__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithPlayFab__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithPlayFab__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithPlayFab__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithPlayFab__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithPlayFab__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithPlayFab__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithPlayFab__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithPSN__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithPSN__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithPSN__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithPSN__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithPSN__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithPSN__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithPSN__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithPSN__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithPSN__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithPSN__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithSteam__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithSteam__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithSteam__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithSteam__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithSteam__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithSteam__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithSteam__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithSteam__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithSteam__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithSteam__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithTwitch__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithTwitch__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithTwitch__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithTwitch__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithTwitch__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithTwitch__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithTwitch__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithTwitch__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithTwitch__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithTwitch__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessLoginWithXbox__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature final
{
public:
	struct FClientLoginResult                     Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature) == 0x000070, "Wrong size on PlayFabClientAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabClientAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessMatchmake__DelegateSignature
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessMatchmake__DelegateSignature final
{
public:
	struct FClientMatchmakeResult                 Result;                                            // 0x0000(0x0080)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessMatchmake__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessMatchmake__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessMatchmake__DelegateSignature) == 0x000088, "Wrong size on PlayFabClientAPI_DelegateOnSuccessMatchmake__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessMatchmake__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessMatchmake__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessMatchmake__DelegateSignature, CustomData) == 0x000080, "Member 'PlayFabClientAPI_DelegateOnSuccessMatchmake__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessOpenTrade__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessOpenTrade__DelegateSignature final
{
public:
	struct FClientOpenTradeResponse               Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessOpenTrade__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessOpenTrade__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessOpenTrade__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessOpenTrade__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessOpenTrade__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessOpenTrade__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessOpenTrade__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessOpenTrade__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessPayForPurchase__DelegateSignature
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessPayForPurchase__DelegateSignature final
{
public:
	struct FClientPayForPurchaseResult            Result;                                            // 0x0000(0x0078)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessPayForPurchase__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessPayForPurchase__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessPayForPurchase__DelegateSignature) == 0x000080, "Wrong size on PlayFabClientAPI_DelegateOnSuccessPayForPurchase__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessPayForPurchase__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessPayForPurchase__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessPayForPurchase__DelegateSignature, CustomData) == 0x000078, "Member 'PlayFabClientAPI_DelegateOnSuccessPayForPurchase__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessPurchaseItem__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessPurchaseItem__DelegateSignature final
{
public:
	struct FClientPurchaseItemResult              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessPurchaseItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessPurchaseItem__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessPurchaseItem__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessPurchaseItem__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessPurchaseItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessPurchaseItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessPurchaseItem__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessPurchaseItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRedeemCoupon__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature final
{
public:
	struct FClientRedeemCouponResult              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature final
{
public:
	struct FClientEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature final
{
public:
	struct FClientRegisterForIOSPushNotificationResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRegisterPlayFabUser__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRegisterPlayFabUser__DelegateSignature final
{
public:
	struct FClientRegisterPlayFabUserResult       Result;                                            // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRegisterPlayFabUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRegisterPlayFabUser__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRegisterPlayFabUser__DelegateSignature) == 0x000050, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRegisterPlayFabUser__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRegisterPlayFabUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRegisterPlayFabUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRegisterPlayFabUser__DelegateSignature, CustomData) == 0x000048, "Member 'PlayFabClientAPI_DelegateOnSuccessRegisterPlayFabUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRemoveContactEmail__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRemoveContactEmail__DelegateSignature final
{
public:
	struct FClientRemoveContactEmailResult        Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRemoveContactEmail__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRemoveContactEmail__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRemoveContactEmail__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRemoveContactEmail__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRemoveContactEmail__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRemoveContactEmail__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRemoveContactEmail__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessRemoveContactEmail__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRemoveFriend__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRemoveFriend__DelegateSignature final
{
public:
	struct FClientRemoveFriendResult              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRemoveFriend__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRemoveFriend__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRemoveFriend__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRemoveFriend__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRemoveFriend__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRemoveFriend__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRemoveFriend__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessRemoveFriend__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRemoveGenericID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature final
{
public:
	struct FClientRemoveGenericIDResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature final
{
public:
	struct FClientRemoveSharedGroupMembersResult  Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessReportAdActivity__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessReportAdActivity__DelegateSignature final
{
public:
	struct FClientReportAdActivityResult          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessReportAdActivity__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessReportAdActivity__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessReportAdActivity__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessReportAdActivity__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessReportAdActivity__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessReportAdActivity__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessReportAdActivity__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessReportAdActivity__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessReportDeviceInfo__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessReportDeviceInfo__DelegateSignature final
{
public:
	struct FClientEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessReportDeviceInfo__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessReportDeviceInfo__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessReportDeviceInfo__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessReportDeviceInfo__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessReportDeviceInfo__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessReportDeviceInfo__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessReportDeviceInfo__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessReportDeviceInfo__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessReportPlayer__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessReportPlayer__DelegateSignature final
{
public:
	struct FClientReportPlayerClientResult        Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessReportPlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessReportPlayer__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessReportPlayer__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessReportPlayer__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessReportPlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessReportPlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessReportPlayer__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessReportPlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRestoreIOSPurchases__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRestoreIOSPurchases__DelegateSignature final
{
public:
	struct FClientRestoreIOSPurchasesResult       Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRestoreIOSPurchases__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRestoreIOSPurchases__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRestoreIOSPurchases__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRestoreIOSPurchases__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRestoreIOSPurchases__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRestoreIOSPurchases__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRestoreIOSPurchases__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessRestoreIOSPurchases__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessRewardAdActivity__DelegateSignature
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessRewardAdActivity__DelegateSignature final
{
public:
	struct FClientRewardAdActivityResult          Result;                                            // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessRewardAdActivity__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessRewardAdActivity__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessRewardAdActivity__DelegateSignature) == 0x000060, "Wrong size on PlayFabClientAPI_DelegateOnSuccessRewardAdActivity__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRewardAdActivity__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessRewardAdActivity__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessRewardAdActivity__DelegateSignature, CustomData) == 0x000058, "Member 'PlayFabClientAPI_DelegateOnSuccessRewardAdActivity__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature final
{
public:
	struct FClientSendAccountRecoveryEmailResult  Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessSetFriendTags__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessSetFriendTags__DelegateSignature final
{
public:
	struct FClientSetFriendTagsResult             Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessSetFriendTags__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessSetFriendTags__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessSetFriendTags__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessSetFriendTags__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessSetFriendTags__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessSetFriendTags__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessSetFriendTags__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessSetFriendTags__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessSetPlayerSecret__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature final
{
public:
	struct FClientSetPlayerSecretResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessStartPurchase__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessStartPurchase__DelegateSignature final
{
public:
	struct FClientStartPurchaseResult             Result;                                            // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessStartPurchase__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessStartPurchase__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessStartPurchase__DelegateSignature) == 0x000048, "Wrong size on PlayFabClientAPI_DelegateOnSuccessStartPurchase__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessStartPurchase__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessStartPurchase__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessStartPurchase__DelegateSignature, CustomData) == 0x000040, "Member 'PlayFabClientAPI_DelegateOnSuccessStartPurchase__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature final
{
public:
	struct FClientModifyUserVirtualCurrencyResult Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature) == 0x000038, "Wrong size on PlayFabClientAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabClientAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature final
{
public:
	struct FClientUnlinkAndroidDeviceIDResult     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkApple__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkApple__DelegateSignature final
{
public:
	struct FClientEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkApple__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkApple__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkApple__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkApple__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkApple__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkApple__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkApple__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkApple__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkCustomID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkCustomID__DelegateSignature final
{
public:
	struct FClientUnlinkCustomIDResult            Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkCustomID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkCustomID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkCustomID__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkCustomID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkCustomID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkCustomID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkCustomID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkCustomID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature final
{
public:
	struct FClientUnlinkFacebookAccountResult     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature final
{
public:
	struct FClientUnlinkFacebookInstantGamesIdResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature final
{
public:
	struct FClientUnlinkGameCenterAccountResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature final
{
public:
	struct FClientUnlinkGoogleAccountResult       Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature final
{
public:
	struct FClientUnlinkGooglePlayGamesServicesAccountResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature final
{
public:
	struct FClientUnlinkIOSDeviceIDResult         Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkKongregate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkKongregate__DelegateSignature final
{
public:
	struct FClientUnlinkKongregateAccountResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkKongregate__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkKongregate__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkKongregate__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkKongregate__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkKongregate__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkKongregate__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkKongregate__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkKongregate__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature final
{
public:
	struct FClientEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature final
{
public:
	struct FClientUnlinkNintendoSwitchDeviceIdResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature final
{
public:
	struct FClientEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkPSNAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature final
{
public:
	struct FClientUnlinkPSNAccountResult          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkSteamAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkSteamAccount__DelegateSignature final
{
public:
	struct FClientUnlinkSteamAccountResult        Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkSteamAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkSteamAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkSteamAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkSteamAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkSteamAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkSteamAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkSteamAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkSteamAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkTwitch__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkTwitch__DelegateSignature final
{
public:
	struct FClientUnlinkTwitchAccountResult       Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkTwitch__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkTwitch__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkTwitch__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkTwitch__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkTwitch__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkTwitch__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkTwitch__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkTwitch__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlinkXboxAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature final
{
public:
	struct FClientUnlinkXboxAccountResult         Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlockContainerInstance__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature final
{
public:
	struct FClientUnlockContainerItemResult       Result;                                            // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature) == 0x000048, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature, CustomData) == 0x000040, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUnlockContainerItem__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature final
{
public:
	struct FClientUnlockContainerItemResult       Result;                                            // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature) == 0x000048, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature, CustomData) == 0x000040, "Member 'PlayFabClientAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateAvatarUrl__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature final
{
public:
	struct FClientEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateCharacterData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature final
{
public:
	struct FClientUpdateCharacterDataResult       Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature final
{
public:
	struct FClientUpdateCharacterStatisticsResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature final
{
public:
	struct FClientUpdatePlayerStatisticsResult    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateSharedGroupData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature final
{
public:
	struct FClientUpdateSharedGroupDataResult     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature) == 0x000010, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateUserData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUpdateUserData__DelegateSignature final
{
public:
	struct FClientUpdateUserDataResult            Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUpdateUserData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUpdateUserData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUpdateUserData__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUpdateUserData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateUserData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateUserData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateUserData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateUserData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateUserPublisherData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature final
{
public:
	struct FClientUpdateUserDataResult            Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature) == 0x000018, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature final
{
public:
	struct FClientUpdateUserTitleDisplayNameResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature final
{
public:
	struct FClientValidateAmazonReceiptResult     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature final
{
public:
	struct FClientValidateGooglePlayPurchaseResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessValidateIOSReceipt__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessValidateIOSReceipt__DelegateSignature final
{
public:
	struct FClientValidateIOSReceiptResult        Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessValidateIOSReceipt__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessValidateIOSReceipt__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessValidateIOSReceipt__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessValidateIOSReceipt__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessValidateIOSReceipt__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessValidateIOSReceipt__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessValidateIOSReceipt__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessValidateIOSReceipt__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature final
{
public:
	struct FClientValidateWindowsReceiptResult    Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessWriteCharacterEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature final
{
public:
	struct FClientWriteEventResponse              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessWritePlayerEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature final
{
public:
	struct FClientWriteEventResponse              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabClientAPI.DelegateOnSuccessWriteTitleEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature final
{
public:
	struct FClientWriteEventResponse              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabClientAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature");
static_assert(sizeof(PlayFabClientAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature) == 0x000020, "Wrong size on PlayFabClientAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature, Result) == 0x000000, "Member 'PlayFabClientAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabClientAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAcceptTrade
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAcceptTrade final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAcceptTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAcceptTrade");
static_assert(sizeof(PlayFabClientAPI_HelperAcceptTrade) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAcceptTrade");
static_assert(offsetof(PlayFabClientAPI_HelperAcceptTrade, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAcceptTrade::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAcceptTrade, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperAcceptTrade::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAcceptTrade, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAcceptTrade::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddFriend
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddFriend final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddFriend) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddFriend");
static_assert(sizeof(PlayFabClientAPI_HelperAddFriend) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddFriend");
static_assert(offsetof(PlayFabClientAPI_HelperAddFriend, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddFriend::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddFriend, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddFriend::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddFriend, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddFriend::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddGenericID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddGenericID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddGenericID");
static_assert(sizeof(PlayFabClientAPI_HelperAddGenericID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddGenericID");
static_assert(offsetof(PlayFabClientAPI_HelperAddGenericID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddGenericID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddGenericID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddGenericID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddGenericID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddGenericID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddOrUpdateContactEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddOrUpdateContactEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddOrUpdateContactEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddOrUpdateContactEmail");
static_assert(sizeof(PlayFabClientAPI_HelperAddOrUpdateContactEmail) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddOrUpdateContactEmail");
static_assert(offsetof(PlayFabClientAPI_HelperAddOrUpdateContactEmail, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddOrUpdateContactEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddOrUpdateContactEmail, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddOrUpdateContactEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddOrUpdateContactEmail, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddOrUpdateContactEmail::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddSharedGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddSharedGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19DA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddSharedGroupMembers");
static_assert(sizeof(PlayFabClientAPI_HelperAddSharedGroupMembers) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddSharedGroupMembers");
static_assert(offsetof(PlayFabClientAPI_HelperAddSharedGroupMembers, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddSharedGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddSharedGroupMembers, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddSharedGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddSharedGroupMembers, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddSharedGroupMembers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddUsernamePassword
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddUsernamePassword final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19DB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddUsernamePassword) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddUsernamePassword");
static_assert(sizeof(PlayFabClientAPI_HelperAddUsernamePassword) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddUsernamePassword");
static_assert(offsetof(PlayFabClientAPI_HelperAddUsernamePassword, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddUsernamePassword::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddUsernamePassword, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddUsernamePassword::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddUsernamePassword, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddUsernamePassword::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAddUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAddUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19DC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAddUserVirtualCurrency");
static_assert(sizeof(PlayFabClientAPI_HelperAddUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAddUserVirtualCurrency");
static_assert(offsetof(PlayFabClientAPI_HelperAddUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAddUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddUserVirtualCurrency, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperAddUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAddUserVirtualCurrency, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAddUserVirtualCurrency::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAndroidDevicePushNotificationRegistration
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19DD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration");
static_assert(sizeof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration");
static_assert(offsetof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperAttributeInstall
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperAttributeInstall final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19DE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperAttributeInstall) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperAttributeInstall");
static_assert(sizeof(PlayFabClientAPI_HelperAttributeInstall) == 0x000050, "Wrong size on PlayFabClientAPI_HelperAttributeInstall");
static_assert(offsetof(PlayFabClientAPI_HelperAttributeInstall, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperAttributeInstall::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAttributeInstall, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperAttributeInstall::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperAttributeInstall, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperAttributeInstall::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperCancelTrade
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperCancelTrade final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19DF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperCancelTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperCancelTrade");
static_assert(sizeof(PlayFabClientAPI_HelperCancelTrade) == 0x000050, "Wrong size on PlayFabClientAPI_HelperCancelTrade");
static_assert(offsetof(PlayFabClientAPI_HelperCancelTrade, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperCancelTrade::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperCancelTrade, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperCancelTrade::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperCancelTrade, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperCancelTrade::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConfirmPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConfirmPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConfirmPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConfirmPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperConfirmPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConfirmPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperConfirmPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConfirmPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConfirmPurchase, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperConfirmPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConfirmPurchase, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConfirmPurchase::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumeItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumeItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumeItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumeItem");
static_assert(sizeof(PlayFabClientAPI_HelperConsumeItem) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumeItem");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeItem, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumeItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeItem, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumeItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeItem, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumeItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumeMicrosoftStoreEntitlements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements");
static_assert(sizeof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumePS5Entitlements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumePS5Entitlements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumePS5Entitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumePS5Entitlements");
static_assert(sizeof(PlayFabClientAPI_HelperConsumePS5Entitlements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumePS5Entitlements");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePS5Entitlements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumePS5Entitlements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePS5Entitlements, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumePS5Entitlements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePS5Entitlements, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumePS5Entitlements::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumePSNEntitlements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumePSNEntitlements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumePSNEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumePSNEntitlements");
static_assert(sizeof(PlayFabClientAPI_HelperConsumePSNEntitlements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumePSNEntitlements");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePSNEntitlements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumePSNEntitlements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePSNEntitlements, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumePSNEntitlements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumePSNEntitlements, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumePSNEntitlements::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperConsumeXboxEntitlements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperConsumeXboxEntitlements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperConsumeXboxEntitlements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperConsumeXboxEntitlements");
static_assert(sizeof(PlayFabClientAPI_HelperConsumeXboxEntitlements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperConsumeXboxEntitlements");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeXboxEntitlements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperConsumeXboxEntitlements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeXboxEntitlements, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperConsumeXboxEntitlements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperConsumeXboxEntitlements, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperConsumeXboxEntitlements::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperCreateSharedGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperCreateSharedGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperCreateSharedGroup) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperCreateSharedGroup");
static_assert(sizeof(PlayFabClientAPI_HelperCreateSharedGroup) == 0x000050, "Wrong size on PlayFabClientAPI_HelperCreateSharedGroup");
static_assert(offsetof(PlayFabClientAPI_HelperCreateSharedGroup, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperCreateSharedGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperCreateSharedGroup, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperCreateSharedGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperCreateSharedGroup, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperCreateSharedGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperExecuteCloudScript
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperExecuteCloudScript final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperExecuteCloudScript) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperExecuteCloudScript");
static_assert(sizeof(PlayFabClientAPI_HelperExecuteCloudScript) == 0x000050, "Wrong size on PlayFabClientAPI_HelperExecuteCloudScript");
static_assert(offsetof(PlayFabClientAPI_HelperExecuteCloudScript, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperExecuteCloudScript::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperExecuteCloudScript, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperExecuteCloudScript::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperExecuteCloudScript, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperExecuteCloudScript::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetAccountInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetAccountInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetAccountInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetAccountInfo");
static_assert(sizeof(PlayFabClientAPI_HelperGetAccountInfo) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetAccountInfo");
static_assert(offsetof(PlayFabClientAPI_HelperGetAccountInfo, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetAccountInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAccountInfo, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetAccountInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAccountInfo, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetAccountInfo::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetAdPlacements
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetAdPlacements final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19E9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetAdPlacements) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetAdPlacements");
static_assert(sizeof(PlayFabClientAPI_HelperGetAdPlacements) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetAdPlacements");
static_assert(offsetof(PlayFabClientAPI_HelperGetAdPlacements, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetAdPlacements::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAdPlacements, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetAdPlacements::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAdPlacements, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetAdPlacements::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetAllUsersCharacters
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetAllUsersCharacters final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19EA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetAllUsersCharacters) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetAllUsersCharacters");
static_assert(sizeof(PlayFabClientAPI_HelperGetAllUsersCharacters) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetAllUsersCharacters");
static_assert(offsetof(PlayFabClientAPI_HelperGetAllUsersCharacters, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetAllUsersCharacters::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAllUsersCharacters, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetAllUsersCharacters::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetAllUsersCharacters, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetAllUsersCharacters::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19EB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCatalogItems) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCatalogItems");
static_assert(sizeof(PlayFabClientAPI_HelperGetCatalogItems) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCatalogItems");
static_assert(offsetof(PlayFabClientAPI_HelperGetCatalogItems, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCatalogItems, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCatalogItems, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCatalogItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19EC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterData");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterData");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19ED[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterInventory) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterInventory");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterInventory) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterInventory");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterInventory, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterInventory, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterInventory, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterInventory::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19EE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterLeaderboard");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterLeaderboard) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterLeaderboard");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterLeaderboard, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterLeaderboard, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterLeaderboard, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterLeaderboard::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19EF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterReadOnlyData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterReadOnlyData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterReadOnlyData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCharacterStatistics");
static_assert(sizeof(PlayFabClientAPI_HelperGetCharacterStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCharacterStatistics");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterStatistics, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterStatistics, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCharacterStatistics, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCharacterStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetContentDownloadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetContentDownloadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetContentDownloadUrl) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetContentDownloadUrl");
static_assert(sizeof(PlayFabClientAPI_HelperGetContentDownloadUrl) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetContentDownloadUrl");
static_assert(offsetof(PlayFabClientAPI_HelperGetContentDownloadUrl, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetContentDownloadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetContentDownloadUrl, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetContentDownloadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetContentDownloadUrl, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetContentDownloadUrl::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetCurrentGames
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetCurrentGames final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetCurrentGames) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetCurrentGames");
static_assert(sizeof(PlayFabClientAPI_HelperGetCurrentGames) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetCurrentGames");
static_assert(offsetof(PlayFabClientAPI_HelperGetCurrentGames, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetCurrentGames::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCurrentGames, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetCurrentGames::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetCurrentGames, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetCurrentGames::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetFriendLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetFriendLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetFriendLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetFriendLeaderboard");
static_assert(sizeof(PlayFabClientAPI_HelperGetFriendLeaderboard) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetFriendLeaderboard");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboard, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboard, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboard, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboard::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetFriendLeaderboardAroundPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer");
static_assert(sizeof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetFriendsList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetFriendsList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetFriendsList) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetFriendsList");
static_assert(sizeof(PlayFabClientAPI_HelperGetFriendsList) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetFriendsList");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendsList, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetFriendsList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendsList, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetFriendsList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetFriendsList, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetFriendsList::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetGameServerRegions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetGameServerRegions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetGameServerRegions) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetGameServerRegions");
static_assert(sizeof(PlayFabClientAPI_HelperGetGameServerRegions) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetGameServerRegions");
static_assert(offsetof(PlayFabClientAPI_HelperGetGameServerRegions, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetGameServerRegions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetGameServerRegions, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetGameServerRegions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetGameServerRegions, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetGameServerRegions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetLeaderboard) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetLeaderboard");
static_assert(sizeof(PlayFabClientAPI_HelperGetLeaderboard) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetLeaderboard");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboard, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboard, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboard, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetLeaderboard::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboardAroundCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetLeaderboardAroundCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetLeaderboardAroundCharacter");
static_assert(sizeof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetLeaderboardAroundCharacter");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundCharacter, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundCharacter::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboardAroundPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetLeaderboardAroundPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19F9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetLeaderboardAroundPlayer");
static_assert(sizeof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetLeaderboardAroundPlayer");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardAroundPlayer, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetLeaderboardAroundPlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboardForUserCharacters
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetLeaderboardForUserCharacters final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19FA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetLeaderboardForUserCharacters");
static_assert(sizeof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetLeaderboardForUserCharacters");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetLeaderboardForUserCharacters::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetLeaderboardForUserCharacters::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetLeaderboardForUserCharacters, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetLeaderboardForUserCharacters::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPaymentToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPaymentToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19FB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPaymentToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPaymentToken");
static_assert(sizeof(PlayFabClientAPI_HelperGetPaymentToken) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPaymentToken");
static_assert(offsetof(PlayFabClientAPI_HelperGetPaymentToken, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPaymentToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPaymentToken, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPaymentToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPaymentToken, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPaymentToken::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPhotonAuthenticationToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPhotonAuthenticationToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19FC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPhotonAuthenticationToken");
static_assert(sizeof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPhotonAuthenticationToken");
static_assert(offsetof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPhotonAuthenticationToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPhotonAuthenticationToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPhotonAuthenticationToken, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPhotonAuthenticationToken::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerCombinedInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerCombinedInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19FD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerCombinedInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerCombinedInfo");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerCombinedInfo) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerCombinedInfo");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerCombinedInfo, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerCombinedInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerCombinedInfo, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerCombinedInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerCombinedInfo, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerCombinedInfo::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerProfile final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19FE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerProfile");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerProfile) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerProfile");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerProfile, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerProfile::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerProfile, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerProfile::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerProfile, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerProfile::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19FF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerSegments");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerSegments) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerSegments");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerSegments, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerSegments, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerSegments, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerSegments::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A00[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerStatistics");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerStatistics");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatistics, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatistics, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatistics, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerStatisticVersions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A01[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerStatisticVersions");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerStatisticVersions");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatisticVersions, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerStatisticVersions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatisticVersions, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerStatisticVersions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerStatisticVersions, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerStatisticVersions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A02[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerTags) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerTags");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerTags) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerTags");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTags, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTags, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTags, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerTags::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayerTrades
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayerTrades final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A03[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayerTrades) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayerTrades");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayerTrades) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayerTrades");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTrades, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayerTrades::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTrades, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayerTrades::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayerTrades, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayerTrades::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromFacebookIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A04[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromFacebookInstantGamesIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A05[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGameCenterIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A06[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGenericIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A07[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGoogleIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A08[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A09[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromKongregateIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A0A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromNintendoServiceAccountIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A0B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromNintendoSwitchDeviceIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A0C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromPSNAccountIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A0D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromSteamIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A0E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromTwitchIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A0F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromXboxLiveIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A10[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs");
static_assert(sizeof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A11[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPublisherData");
static_assert(sizeof(PlayFabClientAPI_HelperGetPublisherData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPublisherData");
static_assert(offsetof(PlayFabClientAPI_HelperGetPublisherData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPublisherData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPublisherData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A12[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperGetPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperGetPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPurchase, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetPurchase, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetPurchase::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetSharedGroupData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetSharedGroupData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A13[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetSharedGroupData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetSharedGroupData");
static_assert(sizeof(PlayFabClientAPI_HelperGetSharedGroupData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetSharedGroupData");
static_assert(offsetof(PlayFabClientAPI_HelperGetSharedGroupData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetSharedGroupData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetSharedGroupData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetSharedGroupData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetSharedGroupData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetSharedGroupData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A14[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetStoreItems) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetStoreItems");
static_assert(sizeof(PlayFabClientAPI_HelperGetStoreItems) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetStoreItems");
static_assert(offsetof(PlayFabClientAPI_HelperGetStoreItems, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetStoreItems, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetStoreItems, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetStoreItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTime
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTime final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A15[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTime) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTime");
static_assert(sizeof(PlayFabClientAPI_HelperGetTime) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTime");
static_assert(offsetof(PlayFabClientAPI_HelperGetTime, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTime::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTime, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTime::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTime, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTime::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A16[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTitleData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTitleData");
static_assert(sizeof(PlayFabClientAPI_HelperGetTitleData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTitleData");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTitleData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTitleNews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTitleNews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A17[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTitleNews) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTitleNews");
static_assert(sizeof(PlayFabClientAPI_HelperGetTitleNews) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTitleNews");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleNews, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTitleNews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleNews, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTitleNews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitleNews, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTitleNews::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTitlePublicKey
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTitlePublicKey final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A18[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTitlePublicKey) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTitlePublicKey");
static_assert(sizeof(PlayFabClientAPI_HelperGetTitlePublicKey) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTitlePublicKey");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitlePublicKey, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTitlePublicKey::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitlePublicKey, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTitlePublicKey::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTitlePublicKey, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTitlePublicKey::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetTradeStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetTradeStatus final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A19[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetTradeStatus) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetTradeStatus");
static_assert(sizeof(PlayFabClientAPI_HelperGetTradeStatus) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetTradeStatus");
static_assert(offsetof(PlayFabClientAPI_HelperGetTradeStatus, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetTradeStatus::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTradeStatus, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetTradeStatus::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetTradeStatus, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetTradeStatus::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserData");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserData");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserInventory) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserInventory");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserInventory) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserInventory");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserInventory, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserInventory, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserInventory, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserInventory::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserPublisherData");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserPublisherData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserPublisherData");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserPublisherReadOnlyData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserPublisherReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGetUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGetUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGetUserReadOnlyData");
static_assert(sizeof(PlayFabClientAPI_HelperGetUserReadOnlyData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGetUserReadOnlyData");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGetUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGetUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGetUserReadOnlyData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGetUserReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperGrantCharacterToUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperGrantCharacterToUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperGrantCharacterToUser) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperGrantCharacterToUser");
static_assert(sizeof(PlayFabClientAPI_HelperGrantCharacterToUser) == 0x000050, "Wrong size on PlayFabClientAPI_HelperGrantCharacterToUser");
static_assert(offsetof(PlayFabClientAPI_HelperGrantCharacterToUser, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperGrantCharacterToUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGrantCharacterToUser, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperGrantCharacterToUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperGrantCharacterToUser, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperGrantCharacterToUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkAndroidDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkAndroidDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A20[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperLinkAndroidDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperLinkAndroidDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkAndroidDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkAndroidDeviceID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkAndroidDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkAndroidDeviceID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkAndroidDeviceID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkApple
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkApple final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A21[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkApple");
static_assert(sizeof(PlayFabClientAPI_HelperLinkApple) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkApple");
static_assert(offsetof(PlayFabClientAPI_HelperLinkApple, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkApple::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkApple, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkApple::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkApple, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkApple::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkCustomID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkCustomID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A22[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkCustomID");
static_assert(sizeof(PlayFabClientAPI_HelperLinkCustomID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkCustomID");
static_assert(offsetof(PlayFabClientAPI_HelperLinkCustomID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkCustomID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkCustomID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkCustomID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkCustomID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkCustomID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkFacebookAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkFacebookAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A23[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkFacebookAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkFacebookAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkFacebookAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkFacebookAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkFacebookAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkFacebookAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkFacebookAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkFacebookInstantGamesId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkFacebookInstantGamesId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A24[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkFacebookInstantGamesId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkFacebookInstantGamesId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkFacebookInstantGamesId, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkFacebookInstantGamesId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkGameCenterAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkGameCenterAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A25[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkGameCenterAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkGameCenterAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkGameCenterAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkGameCenterAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGameCenterAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkGameCenterAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGameCenterAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkGameCenterAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGameCenterAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkGameCenterAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkGoogleAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkGoogleAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A26[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkGoogleAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGoogleAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkGoogleAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGoogleAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkGoogleAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGoogleAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkGoogleAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkGooglePlayGamesServicesAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A27[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkIOSDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkIOSDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A28[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperLinkIOSDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperLinkIOSDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkIOSDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkIOSDeviceID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkIOSDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkIOSDeviceID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkIOSDeviceID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkKongregate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkKongregate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A29[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkKongregate");
static_assert(sizeof(PlayFabClientAPI_HelperLinkKongregate) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkKongregate");
static_assert(offsetof(PlayFabClientAPI_HelperLinkKongregate, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkKongregate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkKongregate, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkKongregate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkKongregate, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkKongregate::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkNintendoServiceAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkNintendoServiceAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A2A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkNintendoServiceAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoServiceAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkNintendoServiceAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoServiceAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkNintendoServiceAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoServiceAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkNintendoServiceAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A2B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkOpenIdConnect
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkOpenIdConnect final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A2C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_HelperLinkOpenIdConnect) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_HelperLinkOpenIdConnect, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkOpenIdConnect::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkOpenIdConnect, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkOpenIdConnect::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkOpenIdConnect, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkOpenIdConnect::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkPSNAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A2D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkPSNAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkPSNAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkPSNAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkPSNAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkPSNAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkPSNAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkPSNAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkPSNAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkPSNAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkSteamAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkSteamAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A2E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkSteamAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkSteamAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkSteamAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkSteamAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkSteamAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkSteamAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkSteamAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkSteamAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkSteamAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkSteamAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkTwitch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkTwitch final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A2F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkTwitch");
static_assert(sizeof(PlayFabClientAPI_HelperLinkTwitch) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkTwitch");
static_assert(offsetof(PlayFabClientAPI_HelperLinkTwitch, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkTwitch::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkTwitch, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkTwitch::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkTwitch, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkTwitch::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLinkXboxAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A30[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLinkXboxAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLinkXboxAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLinkXboxAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLinkXboxAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLinkXboxAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkXboxAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLinkXboxAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLinkXboxAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLinkXboxAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithAndroidDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithAndroidDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A31[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithAndroidDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithAndroidDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithAndroidDeviceID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithAndroidDeviceID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithApple
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithApple final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A32[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithApple");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithApple) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithApple");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithApple, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithApple::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithApple, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithApple::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithApple, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithApple::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithCustomID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithCustomID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A33[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithCustomID");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithCustomID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithCustomID");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithCustomID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithCustomID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithCustomID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithCustomID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithCustomID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithCustomID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithEmailAddress
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithEmailAddress final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A34[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithEmailAddress) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithEmailAddress");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithEmailAddress) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithEmailAddress");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithEmailAddress, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithEmailAddress::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithEmailAddress, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithEmailAddress::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithEmailAddress, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithEmailAddress::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithFacebook
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithFacebook final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A35[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithFacebook) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithFacebook");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithFacebook) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithFacebook");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebook, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithFacebook::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebook, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithFacebook::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebook, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithFacebook::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithFacebookInstantGamesId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A36[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithGameCenter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithGameCenter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A37[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithGameCenter) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithGameCenter");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithGameCenter) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithGameCenter");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGameCenter, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithGameCenter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGameCenter, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithGameCenter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGameCenter, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithGameCenter::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithGoogleAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithGoogleAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A38[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithGoogleAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGoogleAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithGoogleAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGoogleAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithGoogleAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGoogleAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithGoogleAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithGooglePlayGamesServices
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A39[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithIOSDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithIOSDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A3A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithIOSDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithIOSDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithIOSDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithIOSDeviceID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithIOSDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithIOSDeviceID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithIOSDeviceID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithKongregate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithKongregate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A3B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithKongregate");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithKongregate) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithKongregate");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithKongregate, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithKongregate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithKongregate, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithKongregate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithKongregate, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithKongregate::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithNintendoServiceAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithNintendoServiceAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A3C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithNintendoServiceAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithNintendoServiceAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoServiceAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithNintendoServiceAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A3D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithOpenIdConnect
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithOpenIdConnect final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A3E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithOpenIdConnect) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithOpenIdConnect, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithOpenIdConnect::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithOpenIdConnect, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithOpenIdConnect::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithOpenIdConnect, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithOpenIdConnect::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithPlayFab
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithPlayFab final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A3F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithPlayFab) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithPlayFab");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithPlayFab) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithPlayFab");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPlayFab, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithPlayFab::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPlayFab, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithPlayFab::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPlayFab, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithPlayFab::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithPSN
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithPSN final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A40[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithPSN) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithPSN");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithPSN) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithPSN");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPSN, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithPSN::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPSN, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithPSN::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithPSN, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithPSN::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithSteam
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithSteam final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A41[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithSteam) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithSteam");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithSteam) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithSteam");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithSteam, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithSteam::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithSteam, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithSteam::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithSteam, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithSteam::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithTwitch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithTwitch final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A42[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithTwitch");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithTwitch) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithTwitch");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithTwitch, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithTwitch::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithTwitch, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithTwitch::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithTwitch, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithTwitch::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperLoginWithXbox
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperLoginWithXbox final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A43[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperLoginWithXbox) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperLoginWithXbox");
static_assert(sizeof(PlayFabClientAPI_HelperLoginWithXbox) == 0x000050, "Wrong size on PlayFabClientAPI_HelperLoginWithXbox");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithXbox, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperLoginWithXbox::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithXbox, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperLoginWithXbox::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperLoginWithXbox, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperLoginWithXbox::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperMatchmake
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperMatchmake final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A44[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperMatchmake) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperMatchmake");
static_assert(sizeof(PlayFabClientAPI_HelperMatchmake) == 0x000050, "Wrong size on PlayFabClientAPI_HelperMatchmake");
static_assert(offsetof(PlayFabClientAPI_HelperMatchmake, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperMatchmake::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperMatchmake, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperMatchmake::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperMatchmake, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperMatchmake::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperOpenTrade
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperOpenTrade final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A45[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperOpenTrade) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperOpenTrade");
static_assert(sizeof(PlayFabClientAPI_HelperOpenTrade) == 0x000050, "Wrong size on PlayFabClientAPI_HelperOpenTrade");
static_assert(offsetof(PlayFabClientAPI_HelperOpenTrade, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperOpenTrade::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperOpenTrade, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperOpenTrade::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperOpenTrade, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperOpenTrade::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperPayForPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperPayForPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A46[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperPayForPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperPayForPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperPayForPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperPayForPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperPayForPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperPayForPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperPayForPurchase, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperPayForPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperPayForPurchase, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperPayForPurchase::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperPurchaseItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperPurchaseItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A47[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperPurchaseItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperPurchaseItem");
static_assert(sizeof(PlayFabClientAPI_HelperPurchaseItem) == 0x000050, "Wrong size on PlayFabClientAPI_HelperPurchaseItem");
static_assert(offsetof(PlayFabClientAPI_HelperPurchaseItem, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperPurchaseItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperPurchaseItem, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperPurchaseItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperPurchaseItem, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperPurchaseItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRedeemCoupon
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRedeemCoupon final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A48[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRedeemCoupon) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRedeemCoupon");
static_assert(sizeof(PlayFabClientAPI_HelperRedeemCoupon) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRedeemCoupon");
static_assert(offsetof(PlayFabClientAPI_HelperRedeemCoupon, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRedeemCoupon::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRedeemCoupon, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRedeemCoupon::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRedeemCoupon, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRedeemCoupon::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRefreshPSNAuthToken
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRefreshPSNAuthToken final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A49[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRefreshPSNAuthToken) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRefreshPSNAuthToken");
static_assert(sizeof(PlayFabClientAPI_HelperRefreshPSNAuthToken) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRefreshPSNAuthToken");
static_assert(offsetof(PlayFabClientAPI_HelperRefreshPSNAuthToken, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRefreshPSNAuthToken::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRefreshPSNAuthToken, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRefreshPSNAuthToken::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRefreshPSNAuthToken, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRefreshPSNAuthToken::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRegisterForIOSPushNotification
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRegisterForIOSPushNotification final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A4A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRegisterForIOSPushNotification) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRegisterForIOSPushNotification");
static_assert(sizeof(PlayFabClientAPI_HelperRegisterForIOSPushNotification) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRegisterForIOSPushNotification");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterForIOSPushNotification, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRegisterForIOSPushNotification::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterForIOSPushNotification, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRegisterForIOSPushNotification::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterForIOSPushNotification, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRegisterForIOSPushNotification::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRegisterPlayFabUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRegisterPlayFabUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A4B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRegisterPlayFabUser) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRegisterPlayFabUser");
static_assert(sizeof(PlayFabClientAPI_HelperRegisterPlayFabUser) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRegisterPlayFabUser");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterPlayFabUser, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRegisterPlayFabUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterPlayFabUser, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRegisterPlayFabUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRegisterPlayFabUser, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRegisterPlayFabUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRemoveContactEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRemoveContactEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A4C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRemoveContactEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRemoveContactEmail");
static_assert(sizeof(PlayFabClientAPI_HelperRemoveContactEmail) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRemoveContactEmail");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveContactEmail, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRemoveContactEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveContactEmail, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRemoveContactEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveContactEmail, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRemoveContactEmail::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRemoveFriend
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRemoveFriend final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A4D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRemoveFriend) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRemoveFriend");
static_assert(sizeof(PlayFabClientAPI_HelperRemoveFriend) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRemoveFriend");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveFriend, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRemoveFriend::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveFriend, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRemoveFriend::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveFriend, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRemoveFriend::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRemoveGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRemoveGenericID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A4E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRemoveGenericID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRemoveGenericID");
static_assert(sizeof(PlayFabClientAPI_HelperRemoveGenericID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRemoveGenericID");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveGenericID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRemoveGenericID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveGenericID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRemoveGenericID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveGenericID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRemoveGenericID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRemoveSharedGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRemoveSharedGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A4F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRemoveSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRemoveSharedGroupMembers");
static_assert(sizeof(PlayFabClientAPI_HelperRemoveSharedGroupMembers) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRemoveSharedGroupMembers");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveSharedGroupMembers, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRemoveSharedGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveSharedGroupMembers, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRemoveSharedGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRemoveSharedGroupMembers, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRemoveSharedGroupMembers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperReportAdActivity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperReportAdActivity final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A50[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperReportAdActivity) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperReportAdActivity");
static_assert(sizeof(PlayFabClientAPI_HelperReportAdActivity) == 0x000050, "Wrong size on PlayFabClientAPI_HelperReportAdActivity");
static_assert(offsetof(PlayFabClientAPI_HelperReportAdActivity, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperReportAdActivity::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportAdActivity, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperReportAdActivity::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportAdActivity, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperReportAdActivity::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperReportDeviceInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperReportDeviceInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A51[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperReportDeviceInfo) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperReportDeviceInfo");
static_assert(sizeof(PlayFabClientAPI_HelperReportDeviceInfo) == 0x000050, "Wrong size on PlayFabClientAPI_HelperReportDeviceInfo");
static_assert(offsetof(PlayFabClientAPI_HelperReportDeviceInfo, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperReportDeviceInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportDeviceInfo, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperReportDeviceInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportDeviceInfo, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperReportDeviceInfo::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperReportPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperReportPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A52[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperReportPlayer) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperReportPlayer");
static_assert(sizeof(PlayFabClientAPI_HelperReportPlayer) == 0x000050, "Wrong size on PlayFabClientAPI_HelperReportPlayer");
static_assert(offsetof(PlayFabClientAPI_HelperReportPlayer, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperReportPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportPlayer, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperReportPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperReportPlayer, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperReportPlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRestoreIOSPurchases
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRestoreIOSPurchases final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A53[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRestoreIOSPurchases) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRestoreIOSPurchases");
static_assert(sizeof(PlayFabClientAPI_HelperRestoreIOSPurchases) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRestoreIOSPurchases");
static_assert(offsetof(PlayFabClientAPI_HelperRestoreIOSPurchases, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRestoreIOSPurchases::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRestoreIOSPurchases, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRestoreIOSPurchases::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRestoreIOSPurchases, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRestoreIOSPurchases::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperRewardAdActivity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperRewardAdActivity final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A54[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperRewardAdActivity) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperRewardAdActivity");
static_assert(sizeof(PlayFabClientAPI_HelperRewardAdActivity) == 0x000050, "Wrong size on PlayFabClientAPI_HelperRewardAdActivity");
static_assert(offsetof(PlayFabClientAPI_HelperRewardAdActivity, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperRewardAdActivity::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRewardAdActivity, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperRewardAdActivity::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperRewardAdActivity, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperRewardAdActivity::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperSendAccountRecoveryEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperSendAccountRecoveryEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A55[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperSendAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperSendAccountRecoveryEmail");
static_assert(sizeof(PlayFabClientAPI_HelperSendAccountRecoveryEmail) == 0x000050, "Wrong size on PlayFabClientAPI_HelperSendAccountRecoveryEmail");
static_assert(offsetof(PlayFabClientAPI_HelperSendAccountRecoveryEmail, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperSendAccountRecoveryEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSendAccountRecoveryEmail, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperSendAccountRecoveryEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSendAccountRecoveryEmail, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperSendAccountRecoveryEmail::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperSetFriendTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperSetFriendTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A56[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperSetFriendTags) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperSetFriendTags");
static_assert(sizeof(PlayFabClientAPI_HelperSetFriendTags) == 0x000050, "Wrong size on PlayFabClientAPI_HelperSetFriendTags");
static_assert(offsetof(PlayFabClientAPI_HelperSetFriendTags, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperSetFriendTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSetFriendTags, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperSetFriendTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSetFriendTags, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperSetFriendTags::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperSetPlayerSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperSetPlayerSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A57[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperSetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperSetPlayerSecret");
static_assert(sizeof(PlayFabClientAPI_HelperSetPlayerSecret) == 0x000050, "Wrong size on PlayFabClientAPI_HelperSetPlayerSecret");
static_assert(offsetof(PlayFabClientAPI_HelperSetPlayerSecret, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperSetPlayerSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSetPlayerSecret, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperSetPlayerSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSetPlayerSecret, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperSetPlayerSecret::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperStartPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperStartPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A58[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperStartPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperStartPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperStartPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperStartPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperStartPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperStartPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperStartPurchase, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperStartPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperStartPurchase, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperStartPurchase::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperSubtractUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperSubtractUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A59[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperSubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabClientAPI_HelperSubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperSubtractUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperSubtractUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperSubtractUserVirtualCurrency, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperSubtractUserVirtualCurrency::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkAndroidDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkAndroidDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A5A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkAndroidDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkAndroidDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkAndroidDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkAndroidDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkAndroidDeviceID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkAndroidDeviceID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkApple
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkApple final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A5B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkApple) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkApple");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkApple) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkApple");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkApple, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkApple::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkApple, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkApple::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkApple, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkApple::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkCustomID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkCustomID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A5C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkCustomID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkCustomID");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkCustomID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkCustomID");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkCustomID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkCustomID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkCustomID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkCustomID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkCustomID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkCustomID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkFacebookAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkFacebookAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A5D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkFacebookAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkFacebookAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkFacebookAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkFacebookAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkFacebookAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkFacebookAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkFacebookAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkFacebookInstantGamesId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A5E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkGameCenterAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkGameCenterAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A5F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkGameCenterAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkGameCenterAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkGameCenterAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkGameCenterAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGameCenterAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkGameCenterAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGameCenterAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkGameCenterAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGameCenterAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkGameCenterAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkGoogleAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkGoogleAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A60[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkGoogleAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkGoogleAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkGoogleAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkGoogleAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGoogleAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkGoogleAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGoogleAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkGoogleAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGoogleAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkGoogleAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkGooglePlayGamesServicesAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A61[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkIOSDeviceID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkIOSDeviceID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A62[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkIOSDeviceID) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkIOSDeviceID");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkIOSDeviceID) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkIOSDeviceID");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkIOSDeviceID, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkIOSDeviceID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkIOSDeviceID, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkIOSDeviceID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkIOSDeviceID, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkIOSDeviceID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkKongregate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkKongregate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A63[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkKongregate) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkKongregate");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkKongregate) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkKongregate");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkKongregate, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkKongregate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkKongregate, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkKongregate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkKongregate, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkKongregate::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkNintendoServiceAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkNintendoServiceAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A64[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkNintendoServiceAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkNintendoServiceAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkNintendoServiceAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkNintendoServiceAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoServiceAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkNintendoServiceAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkNintendoSwitchDeviceId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A65[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkOpenIdConnect
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkOpenIdConnect final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A66[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkOpenIdConnect) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkOpenIdConnect");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkOpenIdConnect) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkOpenIdConnect");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkOpenIdConnect, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkOpenIdConnect::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkOpenIdConnect, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkOpenIdConnect::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkOpenIdConnect, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkOpenIdConnect::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkPSNAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A67[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkPSNAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkPSNAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkPSNAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkPSNAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkPSNAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkPSNAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkPSNAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkPSNAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkPSNAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkSteamAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkSteamAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A68[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkSteamAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkSteamAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkSteamAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkSteamAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkSteamAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkSteamAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkSteamAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkSteamAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkSteamAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkSteamAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkTwitch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkTwitch final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A69[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkTwitch) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkTwitch");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkTwitch) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkTwitch");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkTwitch, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkTwitch::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkTwitch, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkTwitch::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkTwitch, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkTwitch::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlinkXboxAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A6A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlinkXboxAccount");
static_assert(sizeof(PlayFabClientAPI_HelperUnlinkXboxAccount) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlinkXboxAccount");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkXboxAccount, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlinkXboxAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkXboxAccount, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlinkXboxAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlinkXboxAccount, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlinkXboxAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlockContainerInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlockContainerInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A6B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlockContainerInstance) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlockContainerInstance");
static_assert(sizeof(PlayFabClientAPI_HelperUnlockContainerInstance) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlockContainerInstance");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerInstance, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlockContainerInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerInstance, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlockContainerInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerInstance, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlockContainerInstance::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUnlockContainerItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUnlockContainerItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A6C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUnlockContainerItem) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUnlockContainerItem");
static_assert(sizeof(PlayFabClientAPI_HelperUnlockContainerItem) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUnlockContainerItem");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerItem, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUnlockContainerItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerItem, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUnlockContainerItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUnlockContainerItem, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUnlockContainerItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateAvatarUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateAvatarUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A6D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateAvatarUrl) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateAvatarUrl");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateAvatarUrl) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateAvatarUrl");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateAvatarUrl, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateAvatarUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateAvatarUrl, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateAvatarUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateAvatarUrl, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateAvatarUrl::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateCharacterData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateCharacterData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A6E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateCharacterData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateCharacterData");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateCharacterData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateCharacterData");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateCharacterData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateCharacterData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateCharacterData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A6F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateCharacterStatistics");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateCharacterStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateCharacterStatistics");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterStatistics, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterStatistics, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateCharacterStatistics, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateCharacterStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdatePlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdatePlayerStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A70[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdatePlayerStatistics) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdatePlayerStatistics");
static_assert(sizeof(PlayFabClientAPI_HelperUpdatePlayerStatistics) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdatePlayerStatistics");
static_assert(offsetof(PlayFabClientAPI_HelperUpdatePlayerStatistics, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdatePlayerStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdatePlayerStatistics, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdatePlayerStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdatePlayerStatistics, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdatePlayerStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateSharedGroupData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateSharedGroupData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A71[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateSharedGroupData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateSharedGroupData");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateSharedGroupData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateSharedGroupData");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateSharedGroupData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateSharedGroupData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateSharedGroupData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateSharedGroupData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateSharedGroupData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateSharedGroupData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A72[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateUserData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateUserData");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateUserData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateUserData");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateUserData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A73[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateUserPublisherData");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateUserPublisherData) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateUserPublisherData");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserPublisherData, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserPublisherData, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserPublisherData, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateUserPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperUpdateUserTitleDisplayName
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperUpdateUserTitleDisplayName final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A74[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperUpdateUserTitleDisplayName");
static_assert(sizeof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName) == 0x000050, "Wrong size on PlayFabClientAPI_HelperUpdateUserTitleDisplayName");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperUpdateUserTitleDisplayName::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperUpdateUserTitleDisplayName::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperUpdateUserTitleDisplayName, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperUpdateUserTitleDisplayName::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperValidateAmazonIAPReceipt
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperValidateAmazonIAPReceipt final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A75[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperValidateAmazonIAPReceipt");
static_assert(sizeof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt) == 0x000050, "Wrong size on PlayFabClientAPI_HelperValidateAmazonIAPReceipt");
static_assert(offsetof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperValidateAmazonIAPReceipt::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperValidateAmazonIAPReceipt::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateAmazonIAPReceipt, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperValidateAmazonIAPReceipt::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperValidateGooglePlayPurchase
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperValidateGooglePlayPurchase final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A76[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperValidateGooglePlayPurchase) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperValidateGooglePlayPurchase");
static_assert(sizeof(PlayFabClientAPI_HelperValidateGooglePlayPurchase) == 0x000050, "Wrong size on PlayFabClientAPI_HelperValidateGooglePlayPurchase");
static_assert(offsetof(PlayFabClientAPI_HelperValidateGooglePlayPurchase, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperValidateGooglePlayPurchase::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateGooglePlayPurchase, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperValidateGooglePlayPurchase::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateGooglePlayPurchase, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperValidateGooglePlayPurchase::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperValidateIOSReceipt
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperValidateIOSReceipt final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A77[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperValidateIOSReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperValidateIOSReceipt");
static_assert(sizeof(PlayFabClientAPI_HelperValidateIOSReceipt) == 0x000050, "Wrong size on PlayFabClientAPI_HelperValidateIOSReceipt");
static_assert(offsetof(PlayFabClientAPI_HelperValidateIOSReceipt, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperValidateIOSReceipt::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateIOSReceipt, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperValidateIOSReceipt::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateIOSReceipt, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperValidateIOSReceipt::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperValidateWindowsStoreReceipt
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperValidateWindowsStoreReceipt final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A78[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperValidateWindowsStoreReceipt");
static_assert(sizeof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt) == 0x000050, "Wrong size on PlayFabClientAPI_HelperValidateWindowsStoreReceipt");
static_assert(offsetof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperValidateWindowsStoreReceipt::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperValidateWindowsStoreReceipt::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperValidateWindowsStoreReceipt, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperValidateWindowsStoreReceipt::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperWriteCharacterEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperWriteCharacterEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A79[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperWriteCharacterEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperWriteCharacterEvent");
static_assert(sizeof(PlayFabClientAPI_HelperWriteCharacterEvent) == 0x000050, "Wrong size on PlayFabClientAPI_HelperWriteCharacterEvent");
static_assert(offsetof(PlayFabClientAPI_HelperWriteCharacterEvent, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperWriteCharacterEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWriteCharacterEvent, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperWriteCharacterEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWriteCharacterEvent, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperWriteCharacterEvent::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperWritePlayerEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperWritePlayerEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A7A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperWritePlayerEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperWritePlayerEvent");
static_assert(sizeof(PlayFabClientAPI_HelperWritePlayerEvent) == 0x000050, "Wrong size on PlayFabClientAPI_HelperWritePlayerEvent");
static_assert(offsetof(PlayFabClientAPI_HelperWritePlayerEvent, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperWritePlayerEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWritePlayerEvent, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperWritePlayerEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWritePlayerEvent, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperWritePlayerEvent::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientAPI.HelperWriteTitleEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientAPI_HelperWriteTitleEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A7B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabClientAPI_HelperWriteTitleEvent) == 0x000008, "Wrong alignment on PlayFabClientAPI_HelperWriteTitleEvent");
static_assert(sizeof(PlayFabClientAPI_HelperWriteTitleEvent) == 0x000050, "Wrong size on PlayFabClientAPI_HelperWriteTitleEvent");
static_assert(offsetof(PlayFabClientAPI_HelperWriteTitleEvent, Response) == 0x000000, "Member 'PlayFabClientAPI_HelperWriteTitleEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWriteTitleEvent, CustomData) == 0x000040, "Member 'PlayFabClientAPI_HelperWriteTitleEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabClientAPI_HelperWriteTitleEvent, Successful) == 0x000048, "Member 'PlayFabClientAPI_HelperWriteTitleEvent::Successful' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAcceptTradeResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeAcceptTradeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAcceptTradeResponse             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeAcceptTradeResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeAcceptTradeResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeAcceptTradeResponseResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeAcceptTradeResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAcceptTradeResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeAcceptTradeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAcceptTradeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeAcceptTradeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddFriendResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeAddFriendResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddFriendResult                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeAddFriendResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeAddFriendResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeAddFriendResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeAddFriendResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddFriendResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeAddFriendResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddFriendResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeAddFriendResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddGenericIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeAddGenericIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddGenericIDResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeAddGenericIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeAddGenericIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeAddGenericIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeAddGenericIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddGenericIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeAddGenericIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddGenericIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeAddGenericIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddOrUpdateContactEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeAddOrUpdateContactEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddOrUpdateContactEmailResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeAddOrUpdateContactEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeAddOrUpdateContactEmailResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeAddOrUpdateContactEmailResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeAddOrUpdateContactEmailResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddOrUpdateContactEmailResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeAddOrUpdateContactEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddOrUpdateContactEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeAddOrUpdateContactEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddSharedGroupMembersResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeAddSharedGroupMembersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddSharedGroupMembersResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeAddSharedGroupMembersResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeAddSharedGroupMembersResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeAddSharedGroupMembersResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeAddSharedGroupMembersResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddSharedGroupMembersResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeAddSharedGroupMembersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddSharedGroupMembersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeAddSharedGroupMembersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAddUsernamePasswordResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeAddUsernamePasswordResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAddUsernamePasswordResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeAddUsernamePasswordResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeAddUsernamePasswordResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeAddUsernamePasswordResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeAddUsernamePasswordResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddUsernamePasswordResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeAddUsernamePasswordResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAddUsernamePasswordResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeAddUsernamePasswordResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAndroidDevicePushNotificationRegistrationResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeAndroidDevicePushNotificationRegistrationResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAndroidDevicePushNotificationRegistrationResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeAndroidDevicePushNotificationRegistrationResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeAndroidDevicePushNotificationRegistrationResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeAndroidDevicePushNotificationRegistrationResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeAndroidDevicePushNotificationRegistrationResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAndroidDevicePushNotificationRegistrationResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeAndroidDevicePushNotificationRegistrationResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAndroidDevicePushNotificationRegistrationResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeAndroidDevicePushNotificationRegistrationResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeAttributeInstallResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeAttributeInstallResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientAttributeInstallResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeAttributeInstallResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeAttributeInstallResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeAttributeInstallResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeAttributeInstallResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAttributeInstallResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeAttributeInstallResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeAttributeInstallResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeAttributeInstallResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeCancelTradeResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeCancelTradeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientCancelTradeResponse             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeCancelTradeResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeCancelTradeResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeCancelTradeResponseResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeCancelTradeResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeCancelTradeResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeCancelTradeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeCancelTradeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeCancelTradeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConfirmPurchaseResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientModelDecoder_DecodeConfirmPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConfirmPurchaseResult           ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeConfirmPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeConfirmPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeConfirmPurchaseResultResponse) == 0x000040, "Wrong size on PlayFabClientModelDecoder_DecodeConfirmPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConfirmPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeConfirmPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConfirmPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeConfirmPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumeItemResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabClientModelDecoder_DecodeConsumeItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumeItemResult               ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeConsumeItemResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeConsumeItemResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeConsumeItemResultResponse) == 0x000028, "Wrong size on PlayFabClientModelDecoder_DecodeConsumeItemResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumeItemResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeConsumeItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumeItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeConsumeItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumeMicrosoftStoreEntitlementsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeConsumeMicrosoftStoreEntitlementsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumeMicrosoftStoreEntitlementsResponse ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeConsumeMicrosoftStoreEntitlementsResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeConsumeMicrosoftStoreEntitlementsResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeConsumeMicrosoftStoreEntitlementsResponseResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeConsumeMicrosoftStoreEntitlementsResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumeMicrosoftStoreEntitlementsResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeConsumeMicrosoftStoreEntitlementsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumeMicrosoftStoreEntitlementsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeConsumeMicrosoftStoreEntitlementsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumePS5EntitlementsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeConsumePS5EntitlementsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumePS5EntitlementsResult    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeConsumePS5EntitlementsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeConsumePS5EntitlementsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeConsumePS5EntitlementsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeConsumePS5EntitlementsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumePS5EntitlementsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeConsumePS5EntitlementsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumePS5EntitlementsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeConsumePS5EntitlementsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumePSNEntitlementsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeConsumePSNEntitlementsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumePSNEntitlementsResult    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeConsumePSNEntitlementsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeConsumePSNEntitlementsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeConsumePSNEntitlementsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeConsumePSNEntitlementsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumePSNEntitlementsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeConsumePSNEntitlementsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumePSNEntitlementsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeConsumePSNEntitlementsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeConsumeXboxEntitlementsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeConsumeXboxEntitlementsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientConsumeXboxEntitlementsResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeConsumeXboxEntitlementsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeConsumeXboxEntitlementsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeConsumeXboxEntitlementsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeConsumeXboxEntitlementsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumeXboxEntitlementsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeConsumeXboxEntitlementsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeConsumeXboxEntitlementsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeConsumeXboxEntitlementsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeCreateSharedGroupResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeCreateSharedGroupResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientCreateSharedGroupResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeCreateSharedGroupResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeCreateSharedGroupResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeCreateSharedGroupResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeCreateSharedGroupResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeCreateSharedGroupResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeCreateSharedGroupResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeCreateSharedGroupResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeCreateSharedGroupResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeCurrentGamesResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_DecodeCurrentGamesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientCurrentGamesResult              ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeCurrentGamesResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeCurrentGamesResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeCurrentGamesResultResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_DecodeCurrentGamesResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeCurrentGamesResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeCurrentGamesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeCurrentGamesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeCurrentGamesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientEmptyResponse                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeEmptyResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeEmptyResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeEmptyResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeEmptyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientEmptyResult                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeEmptyResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeEmptyResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeEmptyResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeEmptyResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeEmptyResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeEmptyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeEmptyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeEmptyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeExecuteCloudScriptResultResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabClientModelDecoder_DecodeExecuteCloudScriptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientExecuteCloudScriptResult        ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeExecuteCloudScriptResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeExecuteCloudScriptResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeExecuteCloudScriptResultResponse) == 0x000068, "Wrong size on PlayFabClientModelDecoder_DecodeExecuteCloudScriptResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeExecuteCloudScriptResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeExecuteCloudScriptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeExecuteCloudScriptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeExecuteCloudScriptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGameServerRegionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGameServerRegionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGameServerRegionsResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGameServerRegionsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGameServerRegionsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGameServerRegionsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGameServerRegionsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGameServerRegionsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGameServerRegionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGameServerRegionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGameServerRegionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetAccountInfoResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetAccountInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetAccountInfoResult            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetAccountInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetAccountInfoResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetAccountInfoResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeGetAccountInfoResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetAccountInfoResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetAccountInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetAccountInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetAccountInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetAdPlacementsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetAdPlacementsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetAdPlacementsResult           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetAdPlacementsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetAdPlacementsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetAdPlacementsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetAdPlacementsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetAdPlacementsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetAdPlacementsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetAdPlacementsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetAdPlacementsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCatalogItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetCatalogItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCatalogItemsResult           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetCatalogItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetCatalogItemsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetCatalogItemsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetCatalogItemsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCatalogItemsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetCatalogItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCatalogItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetCatalogItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterDataResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetCharacterDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCharacterDataResult          ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetCharacterDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetCharacterDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetCharacterDataResultResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_DecodeGetCharacterDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCharacterDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetCharacterDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCharacterDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetCharacterDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterInventoryResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetCharacterInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCharacterInventoryResult     ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetCharacterInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetCharacterInventoryResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetCharacterInventoryResultResponse) == 0x000040, "Wrong size on PlayFabClientModelDecoder_DecodeGetCharacterInventoryResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCharacterInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetCharacterInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCharacterInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetCharacterInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterLeaderboardResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetCharacterLeaderboardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCharacterLeaderboardResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetCharacterLeaderboardResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetCharacterLeaderboardResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetCharacterLeaderboardResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetCharacterLeaderboardResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCharacterLeaderboardResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetCharacterLeaderboardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCharacterLeaderboardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetCharacterLeaderboardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterStatisticsResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetCharacterStatisticsResult    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetCharacterStatisticsResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeGetCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetContentDownloadUrlResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetContentDownloadUrlResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetContentDownloadUrlResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetContentDownloadUrlResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetContentDownloadUrlResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetContentDownloadUrlResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetContentDownloadUrlResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetContentDownloadUrlResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetContentDownloadUrlResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetContentDownloadUrlResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetContentDownloadUrlResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetFriendLeaderboardAroundPlayerResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetFriendLeaderboardAroundPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetFriendLeaderboardAroundPlayerResult ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetFriendLeaderboardAroundPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetFriendLeaderboardAroundPlayerResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetFriendLeaderboardAroundPlayerResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_DecodeGetFriendLeaderboardAroundPlayerResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetFriendLeaderboardAroundPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetFriendLeaderboardAroundPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetFriendLeaderboardAroundPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetFriendLeaderboardAroundPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetFriendsListResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetFriendsListResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetFriendsListResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetFriendsListResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetFriendsListResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetFriendsListResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetFriendsListResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetFriendsListResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetFriendsListResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetFriendsListResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetFriendsListResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardAroundCharacterResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetLeaderboardAroundCharacterResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardAroundPlayerResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetLeaderboardAroundPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetLeaderboardAroundPlayerResult ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetLeaderboardAroundPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetLeaderboardAroundPlayerResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetLeaderboardAroundPlayerResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_DecodeGetLeaderboardAroundPlayerResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetLeaderboardAroundPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetLeaderboardAroundPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetLeaderboardAroundPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetLeaderboardAroundPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardForUsersCharactersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetLeaderboardForUsersCharactersResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetLeaderboardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetLeaderboardResult            ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetLeaderboardResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetLeaderboardResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetLeaderboardResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_DecodeGetLeaderboardResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetLeaderboardResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetLeaderboardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetLeaderboardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetLeaderboardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPaymentTokenResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPaymentTokenResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPaymentTokenResult           ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPaymentTokenResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPaymentTokenResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPaymentTokenResultResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_DecodeGetPaymentTokenResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPaymentTokenResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPaymentTokenResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPaymentTokenResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPaymentTokenResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPhotonAuthenticationTokenResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPhotonAuthenticationTokenResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPhotonAuthenticationTokenResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPhotonAuthenticationTokenResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPhotonAuthenticationTokenResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPhotonAuthenticationTokenResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPhotonAuthenticationTokenResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPhotonAuthenticationTokenResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPhotonAuthenticationTokenResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPhotonAuthenticationTokenResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPhotonAuthenticationTokenResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerCombinedInfoResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayerCombinedInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerCombinedInfoResult     ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayerCombinedInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayerCombinedInfoResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayerCombinedInfoResultResponse) == 0x000028, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayerCombinedInfoResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerCombinedInfoResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerCombinedInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerCombinedInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerCombinedInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerProfileResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayerProfileResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerProfileResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayerProfileResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayerProfileResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayerProfileResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayerProfileResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerProfileResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerProfileResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerProfileResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerProfileResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayerSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerSegmentsResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayerSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayerSegmentsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayerSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayerSegmentsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerStatisticsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayerStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerStatisticsResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayerStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayerStatisticsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayerStatisticsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayerStatisticsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerStatisticVersionsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerTagsResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayerTagsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerTagsResult             ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayerTagsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayerTagsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayerTagsResultResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayerTagsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerTagsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerTagsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerTagsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerTagsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerTradesResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayerTradesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayerTradesResponse         ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayerTradesResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayerTradesResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayerTradesResponseResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayerTradesResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerTradesResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerTradesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayerTradesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayerTradesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromFacebookIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromFacebookIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGameCenterIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGameCenterIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromGameCenterIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGameCenterIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGameCenterIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGameCenterIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGameCenterIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGameCenterIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGameCenterIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGameCenterIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGameCenterIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGenericIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromGenericIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGoogleIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGoogleIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromGoogleIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGoogleIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGoogleIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGoogleIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGoogleIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGoogleIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGoogleIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGoogleIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGoogleIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromKongregateIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromKongregateIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromKongregateIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromKongregateIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromKongregateIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromKongregateIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromKongregateIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromKongregateIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromKongregateIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromKongregateIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromKongregateIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromPSNAccountIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromPSNAccountIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromSteamIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromSteamIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromTwitchIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromTwitchIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromXboxLiveIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPlayFabIDsFromXboxLiveIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPublisherDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPublisherDataResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPublisherDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPublisherDataResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeGetPublisherDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetPurchaseResultResponse
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetPurchaseResult               ReturnValue;                                       // 0x0008(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetPurchaseResultResponse) == 0x000060, "Wrong size on PlayFabClientModelDecoder_DecodeGetPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetSharedGroupDataResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetSharedGroupDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetSharedGroupDataResult        ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetSharedGroupDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetSharedGroupDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetSharedGroupDataResultResponse) == 0x000028, "Wrong size on PlayFabClientModelDecoder_DecodeGetSharedGroupDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetSharedGroupDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetSharedGroupDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetSharedGroupDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetSharedGroupDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetStoreItemsResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetStoreItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetStoreItemsResult             ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetStoreItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetStoreItemsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetStoreItemsResultResponse) == 0x000050, "Wrong size on PlayFabClientModelDecoder_DecodeGetStoreItemsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetStoreItemsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetStoreItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetStoreItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetStoreItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTimeResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetTimeResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTimeResult                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetTimeResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetTimeResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetTimeResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetTimeResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTimeResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetTimeResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTimeResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetTimeResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTitleDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTitleDataResult              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetTitleDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetTitleDataResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeGetTitleDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTitleNewsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetTitleNewsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTitleNewsResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetTitleNewsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetTitleNewsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetTitleNewsResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetTitleNewsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTitleNewsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetTitleNewsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTitleNewsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetTitleNewsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTitlePublicKeyResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetTitlePublicKeyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTitlePublicKeyResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetTitlePublicKeyResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetTitlePublicKeyResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetTitlePublicKeyResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetTitlePublicKeyResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTitlePublicKeyResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetTitlePublicKeyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTitlePublicKeyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetTitlePublicKeyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetTradeStatusResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetTradeStatusResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetTradeStatusResponse          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetTradeStatusResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetTradeStatusResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetTradeStatusResponseResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeGetTradeStatusResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTradeStatusResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetTradeStatusResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetTradeStatusResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetTradeStatusResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetUserDataResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetUserDataResult               ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetUserDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetUserDataResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeGetUserDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGetUserInventoryResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGetUserInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGetUserInventoryResult          ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGetUserInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGetUserInventoryResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGetUserInventoryResultResponse) == 0x000030, "Wrong size on PlayFabClientModelDecoder_DecodeGetUserInventoryResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetUserInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGetUserInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGetUserInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGetUserInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeGrantCharacterToUserResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_DecodeGrantCharacterToUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientGrantCharacterToUserResult      ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeGrantCharacterToUserResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeGrantCharacterToUserResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeGrantCharacterToUserResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_DecodeGrantCharacterToUserResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGrantCharacterToUserResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeGrantCharacterToUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeGrantCharacterToUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeGrantCharacterToUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkAndroidDeviceIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkAndroidDeviceIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkAndroidDeviceIDResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkAndroidDeviceIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkAndroidDeviceIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkAndroidDeviceIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkAndroidDeviceIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkAndroidDeviceIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkAndroidDeviceIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkAndroidDeviceIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkAndroidDeviceIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkCustomIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkCustomIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkCustomIDResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkCustomIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkCustomIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkCustomIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkCustomIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkCustomIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkCustomIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkCustomIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkCustomIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkFacebookAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkFacebookAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkFacebookAccountResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkFacebookAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkFacebookAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkFacebookAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkFacebookAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkFacebookAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkFacebookAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkFacebookAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkFacebookAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkFacebookInstantGamesIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkFacebookInstantGamesIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkFacebookInstantGamesIdResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkFacebookInstantGamesIdResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkFacebookInstantGamesIdResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkFacebookInstantGamesIdResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkFacebookInstantGamesIdResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkFacebookInstantGamesIdResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkFacebookInstantGamesIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkFacebookInstantGamesIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkFacebookInstantGamesIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkGameCenterAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkGameCenterAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkGameCenterAccountResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkGameCenterAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkGameCenterAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkGameCenterAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkGameCenterAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkGameCenterAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkGameCenterAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkGameCenterAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkGameCenterAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkGoogleAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkGoogleAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkGoogleAccountResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkGoogleAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkGoogleAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkGoogleAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkGoogleAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkGoogleAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkGoogleAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkGoogleAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkGoogleAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkGooglePlayGamesServicesAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkGooglePlayGamesServicesAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkGooglePlayGamesServicesAccountResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkGooglePlayGamesServicesAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkGooglePlayGamesServicesAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkGooglePlayGamesServicesAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkGooglePlayGamesServicesAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkGooglePlayGamesServicesAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkGooglePlayGamesServicesAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkGooglePlayGamesServicesAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkGooglePlayGamesServicesAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkIOSDeviceIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkIOSDeviceIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkIOSDeviceIDResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkIOSDeviceIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkIOSDeviceIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkIOSDeviceIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkIOSDeviceIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkIOSDeviceIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkIOSDeviceIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkIOSDeviceIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkIOSDeviceIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkKongregateAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkKongregateAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkKongregateAccountResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkKongregateAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkKongregateAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkKongregateAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkKongregateAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkKongregateAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkKongregateAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkKongregateAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkKongregateAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkNintendoSwitchDeviceIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkNintendoSwitchDeviceIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkNintendoSwitchDeviceIdResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkNintendoSwitchDeviceIdResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkNintendoSwitchDeviceIdResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkNintendoSwitchDeviceIdResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkNintendoSwitchDeviceIdResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkNintendoSwitchDeviceIdResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkNintendoSwitchDeviceIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkNintendoSwitchDeviceIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkNintendoSwitchDeviceIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkPSNAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkPSNAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkPSNAccountResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkPSNAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkPSNAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkPSNAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkPSNAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkPSNAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkPSNAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkPSNAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkPSNAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkSteamAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkSteamAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkSteamAccountResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkSteamAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkSteamAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkSteamAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkSteamAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkSteamAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkSteamAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkSteamAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkSteamAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkTwitchAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkTwitchAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkTwitchAccountResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkTwitchAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkTwitchAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkTwitchAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkTwitchAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkTwitchAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkTwitchAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkTwitchAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkTwitchAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLinkXboxAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLinkXboxAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLinkXboxAccountResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLinkXboxAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLinkXboxAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLinkXboxAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeLinkXboxAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkXboxAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLinkXboxAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLinkXboxAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLinkXboxAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeListUsersCharactersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeListUsersCharactersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientListUsersCharactersResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeListUsersCharactersResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeListUsersCharactersResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeListUsersCharactersResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeListUsersCharactersResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeListUsersCharactersResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeListUsersCharactersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeListUsersCharactersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeListUsersCharactersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeLoginResultResponse
// 0x0070 (0x0070 - 0x0000)
struct PlayFabClientModelDecoder_DecodeLoginResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientLoginResult                     ReturnValue;                                       // 0x0008(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeLoginResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeLoginResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeLoginResultResponse) == 0x000070, "Wrong size on PlayFabClientModelDecoder_DecodeLoginResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLoginResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeLoginResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeLoginResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeLoginResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeMatchmakeResultResponse
// 0x0088 (0x0088 - 0x0000)
struct PlayFabClientModelDecoder_DecodeMatchmakeResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientMatchmakeResult                 ReturnValue;                                       // 0x0008(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeMatchmakeResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeMatchmakeResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeMatchmakeResultResponse) == 0x000088, "Wrong size on PlayFabClientModelDecoder_DecodeMatchmakeResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeMatchmakeResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeMatchmakeResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeMatchmakeResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeMatchmakeResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabClientModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientModifyUserVirtualCurrencyResult ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse) == 0x000038, "Wrong size on PlayFabClientModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeOpenTradeResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeOpenTradeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientOpenTradeResponse               ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeOpenTradeResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeOpenTradeResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeOpenTradeResponseResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeOpenTradeResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeOpenTradeResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeOpenTradeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeOpenTradeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeOpenTradeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodePayForPurchaseResultResponse
// 0x0080 (0x0080 - 0x0000)
struct PlayFabClientModelDecoder_DecodePayForPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientPayForPurchaseResult            ReturnValue;                                       // 0x0008(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodePayForPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodePayForPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodePayForPurchaseResultResponse) == 0x000080, "Wrong size on PlayFabClientModelDecoder_DecodePayForPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodePayForPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodePayForPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodePayForPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodePayForPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodePurchaseItemResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodePurchaseItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientPurchaseItemResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodePurchaseItemResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodePurchaseItemResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodePurchaseItemResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodePurchaseItemResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodePurchaseItemResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodePurchaseItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodePurchaseItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodePurchaseItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRedeemCouponResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeRedeemCouponResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRedeemCouponResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeRedeemCouponResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeRedeemCouponResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeRedeemCouponResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeRedeemCouponResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRedeemCouponResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeRedeemCouponResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRedeemCouponResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeRedeemCouponResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRegisterForIOSPushNotificationResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeRegisterForIOSPushNotificationResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRegisterForIOSPushNotificationResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeRegisterForIOSPushNotificationResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeRegisterForIOSPushNotificationResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeRegisterForIOSPushNotificationResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeRegisterForIOSPushNotificationResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRegisterForIOSPushNotificationResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeRegisterForIOSPushNotificationResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRegisterForIOSPushNotificationResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeRegisterForIOSPushNotificationResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRegisterPlayFabUserResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabClientModelDecoder_DecodeRegisterPlayFabUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRegisterPlayFabUserResult       ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeRegisterPlayFabUserResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeRegisterPlayFabUserResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeRegisterPlayFabUserResultResponse) == 0x000050, "Wrong size on PlayFabClientModelDecoder_DecodeRegisterPlayFabUserResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRegisterPlayFabUserResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeRegisterPlayFabUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRegisterPlayFabUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeRegisterPlayFabUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveContactEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeRemoveContactEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRemoveContactEmailResult        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeRemoveContactEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeRemoveContactEmailResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeRemoveContactEmailResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeRemoveContactEmailResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRemoveContactEmailResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeRemoveContactEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRemoveContactEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeRemoveContactEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveFriendResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeRemoveFriendResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRemoveFriendResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeRemoveFriendResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeRemoveFriendResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeRemoveFriendResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeRemoveFriendResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRemoveFriendResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeRemoveFriendResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRemoveFriendResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeRemoveFriendResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveGenericIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeRemoveGenericIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRemoveGenericIDResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeRemoveGenericIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeRemoveGenericIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeRemoveGenericIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeRemoveGenericIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRemoveGenericIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeRemoveGenericIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRemoveGenericIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeRemoveGenericIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveSharedGroupMembersResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeRemoveSharedGroupMembersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRemoveSharedGroupMembersResult  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeRemoveSharedGroupMembersResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeRemoveSharedGroupMembersResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeRemoveSharedGroupMembersResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeRemoveSharedGroupMembersResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRemoveSharedGroupMembersResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeRemoveSharedGroupMembersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRemoveSharedGroupMembersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeRemoveSharedGroupMembersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeReportAdActivityResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeReportAdActivityResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientReportAdActivityResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeReportAdActivityResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeReportAdActivityResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeReportAdActivityResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeReportAdActivityResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeReportAdActivityResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeReportAdActivityResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeReportAdActivityResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeReportAdActivityResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeReportPlayerClientResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeReportPlayerClientResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientReportPlayerClientResult        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeReportPlayerClientResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeReportPlayerClientResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeReportPlayerClientResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeReportPlayerClientResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeReportPlayerClientResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeReportPlayerClientResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeReportPlayerClientResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeReportPlayerClientResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRestoreIOSPurchasesResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeRestoreIOSPurchasesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRestoreIOSPurchasesResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeRestoreIOSPurchasesResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeRestoreIOSPurchasesResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeRestoreIOSPurchasesResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeRestoreIOSPurchasesResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRestoreIOSPurchasesResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeRestoreIOSPurchasesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRestoreIOSPurchasesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeRestoreIOSPurchasesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeRewardAdActivityResultResponse
// 0x0060 (0x0060 - 0x0000)
struct PlayFabClientModelDecoder_DecodeRewardAdActivityResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientRewardAdActivityResult          ReturnValue;                                       // 0x0008(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeRewardAdActivityResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeRewardAdActivityResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeRewardAdActivityResultResponse) == 0x000060, "Wrong size on PlayFabClientModelDecoder_DecodeRewardAdActivityResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRewardAdActivityResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeRewardAdActivityResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeRewardAdActivityResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeRewardAdActivityResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeSendAccountRecoveryEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeSendAccountRecoveryEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientSendAccountRecoveryEmailResult  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeSendAccountRecoveryEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeSendAccountRecoveryEmailResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeSendAccountRecoveryEmailResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeSendAccountRecoveryEmailResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeSendAccountRecoveryEmailResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeSendAccountRecoveryEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeSendAccountRecoveryEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeSendAccountRecoveryEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeSetFriendTagsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeSetFriendTagsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientSetFriendTagsResult             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeSetFriendTagsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeSetFriendTagsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeSetFriendTagsResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeSetFriendTagsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeSetFriendTagsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeSetFriendTagsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeSetFriendTagsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeSetFriendTagsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeSetPlayerSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeSetPlayerSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientSetPlayerSecretResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeSetPlayerSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeSetPlayerSecretResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeSetPlayerSecretResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeSetPlayerSecretResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeSetPlayerSecretResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeSetPlayerSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeSetPlayerSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeSetPlayerSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeStartPurchaseResultResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientModelDecoder_DecodeStartPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientStartPurchaseResult             ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeStartPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeStartPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeStartPurchaseResultResponse) == 0x000048, "Wrong size on PlayFabClientModelDecoder_DecodeStartPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeStartPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeStartPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeStartPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeStartPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkAndroidDeviceIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkAndroidDeviceIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkAndroidDeviceIDResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkAndroidDeviceIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkAndroidDeviceIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkAndroidDeviceIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkAndroidDeviceIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkAndroidDeviceIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkAndroidDeviceIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkAndroidDeviceIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkAndroidDeviceIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkCustomIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkCustomIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkCustomIDResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkCustomIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkCustomIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkCustomIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkCustomIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkCustomIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkCustomIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkCustomIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkCustomIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkFacebookAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkFacebookAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkFacebookAccountResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkFacebookAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkFacebookAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkFacebookAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkFacebookAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkFacebookAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkFacebookAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkFacebookAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkFacebookAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkFacebookInstantGamesIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkFacebookInstantGamesIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkFacebookInstantGamesIdResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkFacebookInstantGamesIdResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkFacebookInstantGamesIdResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkFacebookInstantGamesIdResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkFacebookInstantGamesIdResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkFacebookInstantGamesIdResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkFacebookInstantGamesIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkFacebookInstantGamesIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkFacebookInstantGamesIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkGameCenterAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkGameCenterAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkGameCenterAccountResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkGameCenterAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkGameCenterAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkGameCenterAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkGameCenterAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkGameCenterAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkGameCenterAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkGameCenterAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkGameCenterAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkGoogleAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkGoogleAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkGoogleAccountResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkGoogleAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkGoogleAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkGoogleAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkGoogleAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkGoogleAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkGoogleAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkGoogleAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkGoogleAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkGooglePlayGamesServicesAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkGooglePlayGamesServicesAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkGooglePlayGamesServicesAccountResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkGooglePlayGamesServicesAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkGooglePlayGamesServicesAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkGooglePlayGamesServicesAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkGooglePlayGamesServicesAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkGooglePlayGamesServicesAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkGooglePlayGamesServicesAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkGooglePlayGamesServicesAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkGooglePlayGamesServicesAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkIOSDeviceIDResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkIOSDeviceIDResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkIOSDeviceIDResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkIOSDeviceIDResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkIOSDeviceIDResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkIOSDeviceIDResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkIOSDeviceIDResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkIOSDeviceIDResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkIOSDeviceIDResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkIOSDeviceIDResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkIOSDeviceIDResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkKongregateAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkKongregateAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkKongregateAccountResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkKongregateAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkKongregateAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkKongregateAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkKongregateAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkKongregateAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkKongregateAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkKongregateAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkKongregateAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkNintendoSwitchDeviceIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkNintendoSwitchDeviceIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkNintendoSwitchDeviceIdResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkNintendoSwitchDeviceIdResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkNintendoSwitchDeviceIdResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkNintendoSwitchDeviceIdResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkNintendoSwitchDeviceIdResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkNintendoSwitchDeviceIdResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkNintendoSwitchDeviceIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkNintendoSwitchDeviceIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkNintendoSwitchDeviceIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkPSNAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkPSNAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkPSNAccountResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkPSNAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkPSNAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkPSNAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkPSNAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkPSNAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkPSNAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkPSNAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkPSNAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkSteamAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkSteamAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkSteamAccountResult        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkSteamAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkSteamAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkSteamAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkSteamAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkSteamAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkSteamAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkSteamAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkSteamAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkTwitchAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkTwitchAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkTwitchAccountResult       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkTwitchAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkTwitchAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkTwitchAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkTwitchAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkTwitchAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkTwitchAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkTwitchAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkTwitchAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkXboxAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlinkXboxAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlinkXboxAccountResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlinkXboxAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlinkXboxAccountResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlinkXboxAccountResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUnlinkXboxAccountResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkXboxAccountResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlinkXboxAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlinkXboxAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlinkXboxAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUnlockContainerItemResultResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUnlockContainerItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUnlockContainerItemResult       ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUnlockContainerItemResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUnlockContainerItemResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUnlockContainerItemResultResponse) == 0x000048, "Wrong size on PlayFabClientModelDecoder_DecodeUnlockContainerItemResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlockContainerItemResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUnlockContainerItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUnlockContainerItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUnlockContainerItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateCharacterDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUpdateCharacterDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateCharacterDataResult       ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUpdateCharacterDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUpdateCharacterDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUpdateCharacterDataResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeUpdateCharacterDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateCharacterDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUpdateCharacterDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateCharacterDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUpdateCharacterDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateCharacterStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUpdateCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateCharacterStatisticsResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUpdateCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUpdateCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUpdateCharacterStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUpdateCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUpdateCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUpdateCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdatePlayerStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUpdatePlayerStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdatePlayerStatisticsResult    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUpdatePlayerStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUpdatePlayerStatisticsResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUpdatePlayerStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUpdatePlayerStatisticsResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdatePlayerStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUpdatePlayerStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdatePlayerStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUpdatePlayerStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateSharedGroupDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUpdateSharedGroupDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateSharedGroupDataResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUpdateSharedGroupDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUpdateSharedGroupDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUpdateSharedGroupDataResultResponse) == 0x000010, "Wrong size on PlayFabClientModelDecoder_DecodeUpdateSharedGroupDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateSharedGroupDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUpdateSharedGroupDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateSharedGroupDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUpdateSharedGroupDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateUserDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUpdateUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateUserDataResult            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUpdateUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUpdateUserDataResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUpdateUserDataResultResponse) == 0x000018, "Wrong size on PlayFabClientModelDecoder_DecodeUpdateUserDataResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUpdateUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUpdateUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateUserTitleDisplayNameResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientUpdateUserTitleDisplayNameResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeUpdateUserTitleDisplayNameResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeValidateAmazonReceiptResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeValidateAmazonReceiptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientValidateAmazonReceiptResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeValidateAmazonReceiptResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeValidateAmazonReceiptResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeValidateAmazonReceiptResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeValidateAmazonReceiptResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeValidateAmazonReceiptResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeValidateAmazonReceiptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeValidateAmazonReceiptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeValidateAmazonReceiptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeValidateGooglePlayPurchaseResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeValidateGooglePlayPurchaseResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientValidateGooglePlayPurchaseResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeValidateGooglePlayPurchaseResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeValidateGooglePlayPurchaseResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeValidateGooglePlayPurchaseResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeValidateGooglePlayPurchaseResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeValidateGooglePlayPurchaseResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeValidateGooglePlayPurchaseResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeValidateGooglePlayPurchaseResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeValidateGooglePlayPurchaseResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeValidateIOSReceiptResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeValidateIOSReceiptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientValidateIOSReceiptResult        ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeValidateIOSReceiptResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeValidateIOSReceiptResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeValidateIOSReceiptResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeValidateIOSReceiptResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeValidateIOSReceiptResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeValidateIOSReceiptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeValidateIOSReceiptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeValidateIOSReceiptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeValidateWindowsReceiptResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeValidateWindowsReceiptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientValidateWindowsReceiptResult    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeValidateWindowsReceiptResultResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeValidateWindowsReceiptResultResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeValidateWindowsReceiptResultResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeValidateWindowsReceiptResultResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeValidateWindowsReceiptResultResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeValidateWindowsReceiptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeValidateWindowsReceiptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeValidateWindowsReceiptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabClientModelDecoder.decodeWriteEventResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabClientModelDecoder_DecodeWriteEventResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClientWriteEventResponse              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabClientModelDecoder_DecodeWriteEventResponseResponse) == 0x000008, "Wrong alignment on PlayFabClientModelDecoder_DecodeWriteEventResponseResponse");
static_assert(sizeof(PlayFabClientModelDecoder_DecodeWriteEventResponseResponse) == 0x000020, "Wrong size on PlayFabClientModelDecoder_DecodeWriteEventResponseResponse");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeWriteEventResponseResponse, Response) == 0x000000, "Member 'PlayFabClientModelDecoder_DecodeWriteEventResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabClientModelDecoder_DecodeWriteEventResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabClientModelDecoder_DecodeWriteEventResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ExecuteEntityCloudScript
// 0x0068 (0x0068 - 0x0000)
struct PlayFabCloudScriptAPI_ExecuteEntityCloudScript final
{
public:
	struct FCloudScriptExecuteEntityCloudScriptRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptExecuteCloudScriptResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ExecuteEntityCloudScript");
static_assert(sizeof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript) == 0x000068, "Wrong size on PlayFabCloudScriptAPI_ExecuteEntityCloudScript");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, OnSuccess) == 0x000038, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, OnFailure) == 0x000048, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, CustomData) == 0x000058, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteEntityCloudScript, ReturnValue) == 0x000060, "Member 'PlayFabCloudScriptAPI_ExecuteEntityCloudScript::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ExecuteFunction
// 0x0068 (0x0068 - 0x0000)
struct PlayFabCloudScriptAPI_ExecuteFunction final
{
public:
	struct FCloudScriptExecuteFunctionRequest     Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptExecuteFunctionResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ExecuteFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ExecuteFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_ExecuteFunction) == 0x000068, "Wrong size on PlayFabCloudScriptAPI_ExecuteFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, OnSuccess) == 0x000038, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, OnFailure) == 0x000048, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, CustomData) == 0x000058, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ExecuteFunction, ReturnValue) == 0x000060, "Member 'PlayFabCloudScriptAPI_ExecuteFunction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.GetFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_GetFunction final
{
public:
	struct FCloudScriptGetFunctionRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptGetFunctionResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_GetFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_GetFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_GetFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_GetFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_GetFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, OnSuccess) == 0x000020, "Member 'PlayFabCloudScriptAPI_GetFunction::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, OnFailure) == 0x000030, "Member 'PlayFabCloudScriptAPI_GetFunction::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_GetFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_GetFunction, ReturnValue) == 0x000048, "Member 'PlayFabCloudScriptAPI_GetFunction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ListFunctions
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptAPI_ListFunctions final
{
public:
	struct FCloudScriptListFunctionsRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptListFunctionsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ListFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ListFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_ListFunctions) == 0x000040, "Wrong size on PlayFabCloudScriptAPI_ListFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ListFunctions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, OnSuccess) == 0x000010, "Member 'PlayFabCloudScriptAPI_ListFunctions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, OnFailure) == 0x000020, "Member 'PlayFabCloudScriptAPI_ListFunctions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, CustomData) == 0x000030, "Member 'PlayFabCloudScriptAPI_ListFunctions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListFunctions, ReturnValue) == 0x000038, "Member 'PlayFabCloudScriptAPI_ListFunctions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ListHttpFunctions
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptAPI_ListHttpFunctions final
{
public:
	struct FCloudScriptListFunctionsRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptListHttpFunctionsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ListHttpFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ListHttpFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_ListHttpFunctions) == 0x000040, "Wrong size on PlayFabCloudScriptAPI_ListHttpFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, OnSuccess) == 0x000010, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, OnFailure) == 0x000020, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, CustomData) == 0x000030, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListHttpFunctions, ReturnValue) == 0x000038, "Member 'PlayFabCloudScriptAPI_ListHttpFunctions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.ListQueuedFunctions
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptAPI_ListQueuedFunctions final
{
public:
	struct FCloudScriptListFunctionsRequest       Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptListQueuedFunctionsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_ListQueuedFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_ListQueuedFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_ListQueuedFunctions) == 0x000040, "Wrong size on PlayFabCloudScriptAPI_ListQueuedFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, OnSuccess) == 0x000010, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, OnFailure) == 0x000020, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, CustomData) == 0x000030, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_ListQueuedFunctions, ReturnValue) == 0x000038, "Member 'PlayFabCloudScriptAPI_ListQueuedFunctions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForEntityTriggeredAction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction final
{
public:
	struct FCloudScriptPostFunctionResultForEntityTriggeredActionRequest Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction");
static_assert(sizeof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, OnSuccess) == 0x000020, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, OnFailure) == 0x000030, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction, ReturnValue) == 0x000048, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForFunctionExecution
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution final
{
public:
	struct FCloudScriptPostFunctionResultForFunctionExecutionRequest Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution");
static_assert(sizeof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, OnSuccess) == 0x000020, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, OnFailure) == 0x000030, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution, ReturnValue) == 0x000048, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForPlayerTriggeredAction
// 0x0060 (0x0060 - 0x0000)
struct PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction final
{
public:
	struct FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest Request;                                           // 0x0000(0x0030)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction");
static_assert(sizeof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction) == 0x000060, "Wrong size on PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, OnSuccess) == 0x000030, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, OnFailure) == 0x000040, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, CustomData) == 0x000050, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction, ReturnValue) == 0x000058, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForScheduledTask
// 0x0058 (0x0058 - 0x0000)
struct PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask final
{
public:
	struct FCloudScriptPostFunctionResultForScheduledTaskRequest Request;                                           // 0x0000(0x0028)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask");
static_assert(sizeof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask) == 0x000058, "Wrong size on PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, OnSuccess) == 0x000028, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, OnFailure) == 0x000038, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, CustomData) == 0x000048, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask, ReturnValue) == 0x000050, "Member 'PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.RegisterHttpFunction
// 0x0060 (0x0060 - 0x0000)
struct PlayFabCloudScriptAPI_RegisterHttpFunction final
{
public:
	struct FCloudScriptRegisterHttpFunctionRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_RegisterHttpFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_RegisterHttpFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_RegisterHttpFunction) == 0x000060, "Wrong size on PlayFabCloudScriptAPI_RegisterHttpFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, OnSuccess) == 0x000030, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, OnFailure) == 0x000040, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, CustomData) == 0x000050, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterHttpFunction, ReturnValue) == 0x000058, "Member 'PlayFabCloudScriptAPI_RegisterHttpFunction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.RegisterQueuedFunction
// 0x0070 (0x0070 - 0x0000)
struct PlayFabCloudScriptAPI_RegisterQueuedFunction final
{
public:
	struct FCloudScriptRegisterQueuedFunctionRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_RegisterQueuedFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_RegisterQueuedFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_RegisterQueuedFunction) == 0x000070, "Wrong size on PlayFabCloudScriptAPI_RegisterQueuedFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, OnSuccess) == 0x000040, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, OnFailure) == 0x000050, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, CustomData) == 0x000060, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_RegisterQueuedFunction, ReturnValue) == 0x000068, "Member 'PlayFabCloudScriptAPI_RegisterQueuedFunction::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.UnregisterFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_UnregisterFunction final
{
public:
	struct FCloudScriptUnregisterFunctionRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabCloudScriptAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_UnregisterFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_UnregisterFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_UnregisterFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_UnregisterFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, Request) == 0x000000, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::Request' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, OnSuccess) == 0x000020, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, OnFailure) == 0x000030, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_UnregisterFunction, ReturnValue) == 0x000048, "Member 'PlayFabCloudScriptAPI_UnregisterFunction::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabCloudScriptAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabCloudScriptAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature final
{
public:
	struct FCloudScriptExecuteCloudScriptResult   Result;                                            // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature) == 0x000068, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature, CustomData) == 0x000060, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessExecuteFunction__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessExecuteFunction__DelegateSignature final
{
public:
	struct FCloudScriptExecuteFunctionResult      Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessExecuteFunction__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessExecuteFunction__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessExecuteFunction__DelegateSignature) == 0x000040, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessExecuteFunction__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessExecuteFunction__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessExecuteFunction__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessExecuteFunction__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessExecuteFunction__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessGetFunction__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessGetFunction__DelegateSignature final
{
public:
	struct FCloudScriptGetFunctionResult          Result;                                            // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessGetFunction__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessGetFunction__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessGetFunction__DelegateSignature) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessGetFunction__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessGetFunction__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessGetFunction__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessGetFunction__DelegateSignature, CustomData) == 0x000048, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessGetFunction__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessListFunctions__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessListFunctions__DelegateSignature final
{
public:
	struct FCloudScriptListFunctionsResult        Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessListFunctions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessListFunctions__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessListFunctions__DelegateSignature) == 0x000020, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessListFunctions__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessListFunctions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessListFunctions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessListFunctions__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessListFunctions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessListHttpFunctions__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessListHttpFunctions__DelegateSignature final
{
public:
	struct FCloudScriptListHttpFunctionsResult    Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessListHttpFunctions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessListHttpFunctions__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessListHttpFunctions__DelegateSignature) == 0x000020, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessListHttpFunctions__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessListHttpFunctions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessListHttpFunctions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessListHttpFunctions__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessListHttpFunctions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessListQueuedFunctions__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessListQueuedFunctions__DelegateSignature final
{
public:
	struct FCloudScriptListQueuedFunctionsResult  Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessListQueuedFunctions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessListQueuedFunctions__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessListQueuedFunctions__DelegateSignature) == 0x000020, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessListQueuedFunctions__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessListQueuedFunctions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessListQueuedFunctions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessListQueuedFunctions__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessListQueuedFunctions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature final
{
public:
	struct FCloudScriptEmptyResult                Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature) == 0x000010, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature final
{
public:
	struct FCloudScriptEmptyResult                Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature) == 0x000010, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature final
{
public:
	struct FCloudScriptEmptyResult                Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature) == 0x000010, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature final
{
public:
	struct FCloudScriptEmptyResult                Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature) == 0x000010, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessRegisterHttpFunction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessRegisterHttpFunction__DelegateSignature final
{
public:
	struct FCloudScriptEmptyResult                Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessRegisterHttpFunction__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessRegisterHttpFunction__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessRegisterHttpFunction__DelegateSignature) == 0x000010, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessRegisterHttpFunction__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessRegisterHttpFunction__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessRegisterHttpFunction__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessRegisterHttpFunction__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessRegisterHttpFunction__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessRegisterQueuedFunction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessRegisterQueuedFunction__DelegateSignature final
{
public:
	struct FCloudScriptEmptyResult                Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessRegisterQueuedFunction__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessRegisterQueuedFunction__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessRegisterQueuedFunction__DelegateSignature) == 0x000010, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessRegisterQueuedFunction__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessRegisterQueuedFunction__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessRegisterQueuedFunction__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessRegisterQueuedFunction__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessRegisterQueuedFunction__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabCloudScriptAPI.DelegateOnSuccessUnregisterFunction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabCloudScriptAPI_DelegateOnSuccessUnregisterFunction__DelegateSignature final
{
public:
	struct FCloudScriptEmptyResult                Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptAPI_DelegateOnSuccessUnregisterFunction__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_DelegateOnSuccessUnregisterFunction__DelegateSignature");
static_assert(sizeof(PlayFabCloudScriptAPI_DelegateOnSuccessUnregisterFunction__DelegateSignature) == 0x000010, "Wrong size on PlayFabCloudScriptAPI_DelegateOnSuccessUnregisterFunction__DelegateSignature");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessUnregisterFunction__DelegateSignature, Result) == 0x000000, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessUnregisterFunction__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_DelegateOnSuccessUnregisterFunction__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabCloudScriptAPI_DelegateOnSuccessUnregisterFunction__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperExecuteEntityCloudScript
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A7E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperExecuteFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperExecuteFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A7F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperExecuteFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperExecuteFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperExecuteFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperExecuteFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperExecuteFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteFunction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperExecuteFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperExecuteFunction, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperExecuteFunction::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperGetFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperGetFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A80[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperGetFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperGetFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperGetFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperGetFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperGetFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperGetFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperGetFunction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperGetFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperGetFunction, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperGetFunction::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperListFunctions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperListFunctions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A81[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperListFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperListFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperListFunctions) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperListFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListFunctions, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperListFunctions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListFunctions, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperListFunctions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListFunctions, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperListFunctions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperListHttpFunctions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperListHttpFunctions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A82[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperListHttpFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperListHttpFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperListHttpFunctions) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperListHttpFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListHttpFunctions, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperListHttpFunctions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListHttpFunctions, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperListHttpFunctions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListHttpFunctions, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperListHttpFunctions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperListQueuedFunctions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperListQueuedFunctions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A83[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperListQueuedFunctions) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperListQueuedFunctions");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperListQueuedFunctions) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperListQueuedFunctions");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListQueuedFunctions, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperListQueuedFunctions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListQueuedFunctions, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperListQueuedFunctions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperListQueuedFunctions, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperListQueuedFunctions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForEntityTriggeredAction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A84[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForFunctionExecution
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A85[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForPlayerTriggeredAction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A86[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForScheduledTask
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A87[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperRegisterHttpFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperRegisterHttpFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A88[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperRegisterHttpFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperRegisterHttpFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperRegisterHttpFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperRegisterHttpFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterHttpFunction, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperRegisterHttpFunction::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperRegisterQueuedFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperRegisterQueuedFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A89[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperRegisterQueuedFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperRegisterQueuedFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperRegisterQueuedFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperRegisterQueuedFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperRegisterQueuedFunction, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperRegisterQueuedFunction::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptAPI.HelperUnregisterFunction
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptAPI_HelperUnregisterFunction final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A8A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabCloudScriptAPI_HelperUnregisterFunction) == 0x000008, "Wrong alignment on PlayFabCloudScriptAPI_HelperUnregisterFunction");
static_assert(sizeof(PlayFabCloudScriptAPI_HelperUnregisterFunction) == 0x000050, "Wrong size on PlayFabCloudScriptAPI_HelperUnregisterFunction");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperUnregisterFunction, Response) == 0x000000, "Member 'PlayFabCloudScriptAPI_HelperUnregisterFunction::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperUnregisterFunction, CustomData) == 0x000040, "Member 'PlayFabCloudScriptAPI_HelperUnregisterFunction::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptAPI_HelperUnregisterFunction, Successful) == 0x000048, "Member 'PlayFabCloudScriptAPI_HelperUnregisterFunction::Successful' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeEmptyResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabCloudScriptModelDecoder_DecodeEmptyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptEmptyResult                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_DecodeEmptyResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_DecodeEmptyResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_DecodeEmptyResultResponse) == 0x000010, "Wrong size on PlayFabCloudScriptModelDecoder_DecodeEmptyResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeEmptyResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_DecodeEmptyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeEmptyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_DecodeEmptyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeExecuteCloudScriptResultResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabCloudScriptModelDecoder_DecodeExecuteCloudScriptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptExecuteCloudScriptResult   ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_DecodeExecuteCloudScriptResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_DecodeExecuteCloudScriptResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_DecodeExecuteCloudScriptResultResponse) == 0x000068, "Wrong size on PlayFabCloudScriptModelDecoder_DecodeExecuteCloudScriptResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeExecuteCloudScriptResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_DecodeExecuteCloudScriptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeExecuteCloudScriptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_DecodeExecuteCloudScriptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeExecuteFunctionResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabCloudScriptModelDecoder_DecodeExecuteFunctionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptExecuteFunctionResult      ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_DecodeExecuteFunctionResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_DecodeExecuteFunctionResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_DecodeExecuteFunctionResultResponse) == 0x000040, "Wrong size on PlayFabCloudScriptModelDecoder_DecodeExecuteFunctionResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeExecuteFunctionResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_DecodeExecuteFunctionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeExecuteFunctionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_DecodeExecuteFunctionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeGetFunctionResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabCloudScriptModelDecoder_DecodeGetFunctionResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptGetFunctionResult          ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_DecodeGetFunctionResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_DecodeGetFunctionResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_DecodeGetFunctionResultResponse) == 0x000050, "Wrong size on PlayFabCloudScriptModelDecoder_DecodeGetFunctionResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeGetFunctionResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_DecodeGetFunctionResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeGetFunctionResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_DecodeGetFunctionResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeListFunctionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabCloudScriptModelDecoder_DecodeListFunctionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptListFunctionsResult        ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_DecodeListFunctionsResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_DecodeListFunctionsResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_DecodeListFunctionsResultResponse) == 0x000020, "Wrong size on PlayFabCloudScriptModelDecoder_DecodeListFunctionsResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeListFunctionsResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_DecodeListFunctionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeListFunctionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_DecodeListFunctionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeListHttpFunctionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabCloudScriptModelDecoder_DecodeListHttpFunctionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptListHttpFunctionsResult    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_DecodeListHttpFunctionsResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_DecodeListHttpFunctionsResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_DecodeListHttpFunctionsResultResponse) == 0x000020, "Wrong size on PlayFabCloudScriptModelDecoder_DecodeListHttpFunctionsResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeListHttpFunctionsResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_DecodeListHttpFunctionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeListHttpFunctionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_DecodeListHttpFunctionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeListQueuedFunctionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabCloudScriptModelDecoder_DecodeListQueuedFunctionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCloudScriptListQueuedFunctionsResult  ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabCloudScriptModelDecoder_DecodeListQueuedFunctionsResultResponse) == 0x000008, "Wrong alignment on PlayFabCloudScriptModelDecoder_DecodeListQueuedFunctionsResultResponse");
static_assert(sizeof(PlayFabCloudScriptModelDecoder_DecodeListQueuedFunctionsResultResponse) == 0x000020, "Wrong size on PlayFabCloudScriptModelDecoder_DecodeListQueuedFunctionsResultResponse");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeListQueuedFunctionsResultResponse, Response) == 0x000000, "Member 'PlayFabCloudScriptModelDecoder_DecodeListQueuedFunctionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabCloudScriptModelDecoder_DecodeListQueuedFunctionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabCloudScriptModelDecoder_DecodeListQueuedFunctionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.AbortFileUploads
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_AbortFileUploads final
{
public:
	struct FDataAbortFileUploadsRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataAbortFileUploadsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_AbortFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_AbortFileUploads");
static_assert(sizeof(PlayFabDataAPI_AbortFileUploads) == 0x000060, "Wrong size on PlayFabDataAPI_AbortFileUploads");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, Request) == 0x000000, "Member 'PlayFabDataAPI_AbortFileUploads::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, OnSuccess) == 0x000030, "Member 'PlayFabDataAPI_AbortFileUploads::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, OnFailure) == 0x000040, "Member 'PlayFabDataAPI_AbortFileUploads::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, CustomData) == 0x000050, "Member 'PlayFabDataAPI_AbortFileUploads::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_AbortFileUploads, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_AbortFileUploads::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.DeleteFiles
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_DeleteFiles final
{
public:
	struct FDataDeleteFilesRequest                Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataDeleteFilesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DeleteFiles) == 0x000008, "Wrong alignment on PlayFabDataAPI_DeleteFiles");
static_assert(sizeof(PlayFabDataAPI_DeleteFiles) == 0x000060, "Wrong size on PlayFabDataAPI_DeleteFiles");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, Request) == 0x000000, "Member 'PlayFabDataAPI_DeleteFiles::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, OnSuccess) == 0x000030, "Member 'PlayFabDataAPI_DeleteFiles::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, OnFailure) == 0x000040, "Member 'PlayFabDataAPI_DeleteFiles::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, CustomData) == 0x000050, "Member 'PlayFabDataAPI_DeleteFiles::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DeleteFiles, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_DeleteFiles::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.FinalizeFileUploads
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_FinalizeFileUploads final
{
public:
	struct FDataFinalizeFileUploadsRequest        Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataFinalizeFileUploadsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_FinalizeFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_FinalizeFileUploads");
static_assert(sizeof(PlayFabDataAPI_FinalizeFileUploads) == 0x000060, "Wrong size on PlayFabDataAPI_FinalizeFileUploads");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, Request) == 0x000000, "Member 'PlayFabDataAPI_FinalizeFileUploads::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, OnSuccess) == 0x000030, "Member 'PlayFabDataAPI_FinalizeFileUploads::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, OnFailure) == 0x000040, "Member 'PlayFabDataAPI_FinalizeFileUploads::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, CustomData) == 0x000050, "Member 'PlayFabDataAPI_FinalizeFileUploads::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_FinalizeFileUploads, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_FinalizeFileUploads::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.GetFiles
// 0x0048 (0x0048 - 0x0000)
struct PlayFabDataAPI_GetFiles final
{
public:
	struct FDataGetFilesRequest                   Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataGetFilesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_GetFiles) == 0x000008, "Wrong alignment on PlayFabDataAPI_GetFiles");
static_assert(sizeof(PlayFabDataAPI_GetFiles) == 0x000048, "Wrong size on PlayFabDataAPI_GetFiles");
static_assert(offsetof(PlayFabDataAPI_GetFiles, Request) == 0x000000, "Member 'PlayFabDataAPI_GetFiles::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetFiles, OnSuccess) == 0x000018, "Member 'PlayFabDataAPI_GetFiles::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetFiles, OnFailure) == 0x000028, "Member 'PlayFabDataAPI_GetFiles::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetFiles, CustomData) == 0x000038, "Member 'PlayFabDataAPI_GetFiles::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetFiles, ReturnValue) == 0x000040, "Member 'PlayFabDataAPI_GetFiles::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.GetObjects
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_GetObjects final
{
public:
	struct FDataGetObjectsRequest                 Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataGetObjectsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_GetObjects) == 0x000008, "Wrong alignment on PlayFabDataAPI_GetObjects");
static_assert(sizeof(PlayFabDataAPI_GetObjects) == 0x000050, "Wrong size on PlayFabDataAPI_GetObjects");
static_assert(offsetof(PlayFabDataAPI_GetObjects, Request) == 0x000000, "Member 'PlayFabDataAPI_GetObjects::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetObjects, OnSuccess) == 0x000020, "Member 'PlayFabDataAPI_GetObjects::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetObjects, OnFailure) == 0x000030, "Member 'PlayFabDataAPI_GetObjects::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetObjects, CustomData) == 0x000040, "Member 'PlayFabDataAPI_GetObjects::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_GetObjects, ReturnValue) == 0x000048, "Member 'PlayFabDataAPI_GetObjects::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.InitiateFileUploads
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_InitiateFileUploads final
{
public:
	struct FDataInitiateFileUploadsRequest        Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataInitiateFileUploadsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_InitiateFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_InitiateFileUploads");
static_assert(sizeof(PlayFabDataAPI_InitiateFileUploads) == 0x000060, "Wrong size on PlayFabDataAPI_InitiateFileUploads");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, Request) == 0x000000, "Member 'PlayFabDataAPI_InitiateFileUploads::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, OnSuccess) == 0x000030, "Member 'PlayFabDataAPI_InitiateFileUploads::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, OnFailure) == 0x000040, "Member 'PlayFabDataAPI_InitiateFileUploads::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, CustomData) == 0x000050, "Member 'PlayFabDataAPI_InitiateFileUploads::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_InitiateFileUploads, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_InitiateFileUploads::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.SetObjects
// 0x0060 (0x0060 - 0x0000)
struct PlayFabDataAPI_SetObjects final
{
public:
	struct FDataSetObjectsRequest                 Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FDataSetObjectsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabDataAPI*                        ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_SetObjects) == 0x000008, "Wrong alignment on PlayFabDataAPI_SetObjects");
static_assert(sizeof(PlayFabDataAPI_SetObjects) == 0x000060, "Wrong size on PlayFabDataAPI_SetObjects");
static_assert(offsetof(PlayFabDataAPI_SetObjects, Request) == 0x000000, "Member 'PlayFabDataAPI_SetObjects::Request' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_SetObjects, OnSuccess) == 0x000030, "Member 'PlayFabDataAPI_SetObjects::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_SetObjects, OnFailure) == 0x000040, "Member 'PlayFabDataAPI_SetObjects::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_SetObjects, CustomData) == 0x000050, "Member 'PlayFabDataAPI_SetObjects::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_SetObjects, ReturnValue) == 0x000058, "Member 'PlayFabDataAPI_SetObjects::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabDataAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabDataAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabDataAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabDataAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabDataAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabDataAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabDataAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabDataAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabDataAPI.DelegateOnSuccessAbortFileUploads__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabDataAPI_DelegateOnSuccessAbortFileUploads__DelegateSignature final
{
public:
	struct FDataAbortFileUploadsResponse          Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DelegateOnSuccessAbortFileUploads__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabDataAPI_DelegateOnSuccessAbortFileUploads__DelegateSignature");
static_assert(sizeof(PlayFabDataAPI_DelegateOnSuccessAbortFileUploads__DelegateSignature) == 0x000020, "Wrong size on PlayFabDataAPI_DelegateOnSuccessAbortFileUploads__DelegateSignature");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessAbortFileUploads__DelegateSignature, Result) == 0x000000, "Member 'PlayFabDataAPI_DelegateOnSuccessAbortFileUploads__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessAbortFileUploads__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabDataAPI_DelegateOnSuccessAbortFileUploads__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabDataAPI.DelegateOnSuccessDeleteFiles__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabDataAPI_DelegateOnSuccessDeleteFiles__DelegateSignature final
{
public:
	struct FDataDeleteFilesResponse               Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DelegateOnSuccessDeleteFiles__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabDataAPI_DelegateOnSuccessDeleteFiles__DelegateSignature");
static_assert(sizeof(PlayFabDataAPI_DelegateOnSuccessDeleteFiles__DelegateSignature) == 0x000020, "Wrong size on PlayFabDataAPI_DelegateOnSuccessDeleteFiles__DelegateSignature");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessDeleteFiles__DelegateSignature, Result) == 0x000000, "Member 'PlayFabDataAPI_DelegateOnSuccessDeleteFiles__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessDeleteFiles__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabDataAPI_DelegateOnSuccessDeleteFiles__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabDataAPI.DelegateOnSuccessFinalizeFileUploads__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataAPI_DelegateOnSuccessFinalizeFileUploads__DelegateSignature final
{
public:
	struct FDataFinalizeFileUploadsResponse       Result;                                            // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DelegateOnSuccessFinalizeFileUploads__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabDataAPI_DelegateOnSuccessFinalizeFileUploads__DelegateSignature");
static_assert(sizeof(PlayFabDataAPI_DelegateOnSuccessFinalizeFileUploads__DelegateSignature) == 0x000028, "Wrong size on PlayFabDataAPI_DelegateOnSuccessFinalizeFileUploads__DelegateSignature");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessFinalizeFileUploads__DelegateSignature, Result) == 0x000000, "Member 'PlayFabDataAPI_DelegateOnSuccessFinalizeFileUploads__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessFinalizeFileUploads__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabDataAPI_DelegateOnSuccessFinalizeFileUploads__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabDataAPI.DelegateOnSuccessGetFiles__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataAPI_DelegateOnSuccessGetFiles__DelegateSignature final
{
public:
	struct FDataGetFilesResponse                  Result;                                            // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DelegateOnSuccessGetFiles__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabDataAPI_DelegateOnSuccessGetFiles__DelegateSignature");
static_assert(sizeof(PlayFabDataAPI_DelegateOnSuccessGetFiles__DelegateSignature) == 0x000028, "Wrong size on PlayFabDataAPI_DelegateOnSuccessGetFiles__DelegateSignature");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessGetFiles__DelegateSignature, Result) == 0x000000, "Member 'PlayFabDataAPI_DelegateOnSuccessGetFiles__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessGetFiles__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabDataAPI_DelegateOnSuccessGetFiles__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabDataAPI.DelegateOnSuccessGetObjects__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataAPI_DelegateOnSuccessGetObjects__DelegateSignature final
{
public:
	struct FDataGetObjectsResponse                Result;                                            // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DelegateOnSuccessGetObjects__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabDataAPI_DelegateOnSuccessGetObjects__DelegateSignature");
static_assert(sizeof(PlayFabDataAPI_DelegateOnSuccessGetObjects__DelegateSignature) == 0x000028, "Wrong size on PlayFabDataAPI_DelegateOnSuccessGetObjects__DelegateSignature");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessGetObjects__DelegateSignature, Result) == 0x000000, "Member 'PlayFabDataAPI_DelegateOnSuccessGetObjects__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessGetObjects__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabDataAPI_DelegateOnSuccessGetObjects__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabDataAPI.DelegateOnSuccessInitiateFileUploads__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabDataAPI_DelegateOnSuccessInitiateFileUploads__DelegateSignature final
{
public:
	struct FDataInitiateFileUploadsResponse       Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DelegateOnSuccessInitiateFileUploads__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabDataAPI_DelegateOnSuccessInitiateFileUploads__DelegateSignature");
static_assert(sizeof(PlayFabDataAPI_DelegateOnSuccessInitiateFileUploads__DelegateSignature) == 0x000030, "Wrong size on PlayFabDataAPI_DelegateOnSuccessInitiateFileUploads__DelegateSignature");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessInitiateFileUploads__DelegateSignature, Result) == 0x000000, "Member 'PlayFabDataAPI_DelegateOnSuccessInitiateFileUploads__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessInitiateFileUploads__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabDataAPI_DelegateOnSuccessInitiateFileUploads__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabDataAPI.DelegateOnSuccessSetObjects__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataAPI_DelegateOnSuccessSetObjects__DelegateSignature final
{
public:
	struct FDataSetObjectsResponse                Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataAPI_DelegateOnSuccessSetObjects__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabDataAPI_DelegateOnSuccessSetObjects__DelegateSignature");
static_assert(sizeof(PlayFabDataAPI_DelegateOnSuccessSetObjects__DelegateSignature) == 0x000028, "Wrong size on PlayFabDataAPI_DelegateOnSuccessSetObjects__DelegateSignature");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessSetObjects__DelegateSignature, Result) == 0x000000, "Member 'PlayFabDataAPI_DelegateOnSuccessSetObjects__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_DelegateOnSuccessSetObjects__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabDataAPI_DelegateOnSuccessSetObjects__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperAbortFileUploads
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperAbortFileUploads final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A8D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperAbortFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperAbortFileUploads");
static_assert(sizeof(PlayFabDataAPI_HelperAbortFileUploads) == 0x000050, "Wrong size on PlayFabDataAPI_HelperAbortFileUploads");
static_assert(offsetof(PlayFabDataAPI_HelperAbortFileUploads, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperAbortFileUploads::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperAbortFileUploads, CustomData) == 0x000040, "Member 'PlayFabDataAPI_HelperAbortFileUploads::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperAbortFileUploads, Successful) == 0x000048, "Member 'PlayFabDataAPI_HelperAbortFileUploads::Successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperDeleteFiles
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperDeleteFiles final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A8E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperDeleteFiles) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperDeleteFiles");
static_assert(sizeof(PlayFabDataAPI_HelperDeleteFiles) == 0x000050, "Wrong size on PlayFabDataAPI_HelperDeleteFiles");
static_assert(offsetof(PlayFabDataAPI_HelperDeleteFiles, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperDeleteFiles::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperDeleteFiles, CustomData) == 0x000040, "Member 'PlayFabDataAPI_HelperDeleteFiles::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperDeleteFiles, Successful) == 0x000048, "Member 'PlayFabDataAPI_HelperDeleteFiles::Successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperFinalizeFileUploads
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperFinalizeFileUploads final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A8F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperFinalizeFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperFinalizeFileUploads");
static_assert(sizeof(PlayFabDataAPI_HelperFinalizeFileUploads) == 0x000050, "Wrong size on PlayFabDataAPI_HelperFinalizeFileUploads");
static_assert(offsetof(PlayFabDataAPI_HelperFinalizeFileUploads, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperFinalizeFileUploads::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperFinalizeFileUploads, CustomData) == 0x000040, "Member 'PlayFabDataAPI_HelperFinalizeFileUploads::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperFinalizeFileUploads, Successful) == 0x000048, "Member 'PlayFabDataAPI_HelperFinalizeFileUploads::Successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperGetFiles
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperGetFiles final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A90[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperGetFiles) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperGetFiles");
static_assert(sizeof(PlayFabDataAPI_HelperGetFiles) == 0x000050, "Wrong size on PlayFabDataAPI_HelperGetFiles");
static_assert(offsetof(PlayFabDataAPI_HelperGetFiles, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperGetFiles::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperGetFiles, CustomData) == 0x000040, "Member 'PlayFabDataAPI_HelperGetFiles::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperGetFiles, Successful) == 0x000048, "Member 'PlayFabDataAPI_HelperGetFiles::Successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperGetObjects
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperGetObjects final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A91[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperGetObjects) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperGetObjects");
static_assert(sizeof(PlayFabDataAPI_HelperGetObjects) == 0x000050, "Wrong size on PlayFabDataAPI_HelperGetObjects");
static_assert(offsetof(PlayFabDataAPI_HelperGetObjects, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperGetObjects::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperGetObjects, CustomData) == 0x000040, "Member 'PlayFabDataAPI_HelperGetObjects::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperGetObjects, Successful) == 0x000048, "Member 'PlayFabDataAPI_HelperGetObjects::Successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperInitiateFileUploads
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperInitiateFileUploads final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A92[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperInitiateFileUploads) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperInitiateFileUploads");
static_assert(sizeof(PlayFabDataAPI_HelperInitiateFileUploads) == 0x000050, "Wrong size on PlayFabDataAPI_HelperInitiateFileUploads");
static_assert(offsetof(PlayFabDataAPI_HelperInitiateFileUploads, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperInitiateFileUploads::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperInitiateFileUploads, CustomData) == 0x000040, "Member 'PlayFabDataAPI_HelperInitiateFileUploads::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperInitiateFileUploads, Successful) == 0x000048, "Member 'PlayFabDataAPI_HelperInitiateFileUploads::Successful' has a wrong offset!");

// Function PlayFab.PlayFabDataAPI.HelperSetObjects
// 0x0050 (0x0050 - 0x0000)
struct PlayFabDataAPI_HelperSetObjects final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A93[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabDataAPI_HelperSetObjects) == 0x000008, "Wrong alignment on PlayFabDataAPI_HelperSetObjects");
static_assert(sizeof(PlayFabDataAPI_HelperSetObjects) == 0x000050, "Wrong size on PlayFabDataAPI_HelperSetObjects");
static_assert(offsetof(PlayFabDataAPI_HelperSetObjects, Response) == 0x000000, "Member 'PlayFabDataAPI_HelperSetObjects::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperSetObjects, CustomData) == 0x000040, "Member 'PlayFabDataAPI_HelperSetObjects::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabDataAPI_HelperSetObjects, Successful) == 0x000048, "Member 'PlayFabDataAPI_HelperSetObjects::Successful' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeAbortFileUploadsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabDataModelDecoder_DecodeAbortFileUploadsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataAbortFileUploadsResponse          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_DecodeAbortFileUploadsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_DecodeAbortFileUploadsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_DecodeAbortFileUploadsResponseResponse) == 0x000020, "Wrong size on PlayFabDataModelDecoder_DecodeAbortFileUploadsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeAbortFileUploadsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_DecodeAbortFileUploadsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeAbortFileUploadsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_DecodeAbortFileUploadsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeDeleteFilesResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabDataModelDecoder_DecodeDeleteFilesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataDeleteFilesResponse               ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_DecodeDeleteFilesResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_DecodeDeleteFilesResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_DecodeDeleteFilesResponseResponse) == 0x000020, "Wrong size on PlayFabDataModelDecoder_DecodeDeleteFilesResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeDeleteFilesResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_DecodeDeleteFilesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeDeleteFilesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_DecodeDeleteFilesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeFinalizeFileUploadsResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataModelDecoder_DecodeFinalizeFileUploadsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataFinalizeFileUploadsResponse       ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_DecodeFinalizeFileUploadsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_DecodeFinalizeFileUploadsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_DecodeFinalizeFileUploadsResponseResponse) == 0x000028, "Wrong size on PlayFabDataModelDecoder_DecodeFinalizeFileUploadsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeFinalizeFileUploadsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_DecodeFinalizeFileUploadsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeFinalizeFileUploadsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_DecodeFinalizeFileUploadsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeGetFilesResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataModelDecoder_DecodeGetFilesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataGetFilesResponse                  ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_DecodeGetFilesResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_DecodeGetFilesResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_DecodeGetFilesResponseResponse) == 0x000028, "Wrong size on PlayFabDataModelDecoder_DecodeGetFilesResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeGetFilesResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_DecodeGetFilesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeGetFilesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_DecodeGetFilesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeGetObjectsResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataModelDecoder_DecodeGetObjectsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataGetObjectsResponse                ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_DecodeGetObjectsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_DecodeGetObjectsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_DecodeGetObjectsResponseResponse) == 0x000028, "Wrong size on PlayFabDataModelDecoder_DecodeGetObjectsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeGetObjectsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_DecodeGetObjectsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeGetObjectsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_DecodeGetObjectsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeInitiateFileUploadsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabDataModelDecoder_DecodeInitiateFileUploadsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataInitiateFileUploadsResponse       ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_DecodeInitiateFileUploadsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_DecodeInitiateFileUploadsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_DecodeInitiateFileUploadsResponseResponse) == 0x000030, "Wrong size on PlayFabDataModelDecoder_DecodeInitiateFileUploadsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeInitiateFileUploadsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_DecodeInitiateFileUploadsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeInitiateFileUploadsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_DecodeInitiateFileUploadsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabDataModelDecoder.decodeSetObjectsResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabDataModelDecoder_DecodeSetObjectsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataSetObjectsResponse                ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabDataModelDecoder_DecodeSetObjectsResponseResponse) == 0x000008, "Wrong alignment on PlayFabDataModelDecoder_DecodeSetObjectsResponseResponse");
static_assert(sizeof(PlayFabDataModelDecoder_DecodeSetObjectsResponseResponse) == 0x000028, "Wrong size on PlayFabDataModelDecoder_DecodeSetObjectsResponseResponse");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeSetObjectsResponseResponse, Response) == 0x000000, "Member 'PlayFabDataModelDecoder_DecodeSetObjectsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabDataModelDecoder_DecodeSetObjectsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabDataModelDecoder_DecodeSetObjectsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.CreateDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_CreateDraftItem final
{
public:
	struct FEconomyCreateDraftItemRequest         Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyCreateDraftItemResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_CreateDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_CreateDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_CreateDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_CreateDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_CreateDraftItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, OnSuccess) == 0x000020, "Member 'PlayFabEconomyAPI_CreateDraftItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, OnFailure) == 0x000030, "Member 'PlayFabEconomyAPI_CreateDraftItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_CreateDraftItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateDraftItem, ReturnValue) == 0x000048, "Member 'PlayFabEconomyAPI_CreateDraftItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.CreateUploadUrls
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_CreateUploadUrls final
{
public:
	struct FEconomyCreateUploadUrlsRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyCreateUploadUrlsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_CreateUploadUrls) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_CreateUploadUrls");
static_assert(sizeof(PlayFabEconomyAPI_CreateUploadUrls) == 0x000050, "Wrong size on PlayFabEconomyAPI_CreateUploadUrls");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, Request) == 0x000000, "Member 'PlayFabEconomyAPI_CreateUploadUrls::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, OnSuccess) == 0x000020, "Member 'PlayFabEconomyAPI_CreateUploadUrls::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, OnFailure) == 0x000030, "Member 'PlayFabEconomyAPI_CreateUploadUrls::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_CreateUploadUrls::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_CreateUploadUrls, ReturnValue) == 0x000048, "Member 'PlayFabEconomyAPI_CreateUploadUrls::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.DeleteEntityItemReviews
// 0x0048 (0x0048 - 0x0000)
struct PlayFabEconomyAPI_DeleteEntityItemReviews final
{
public:
	struct FEconomyDeleteEntityItemReviewsRequest Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyDeleteEntityItemReviewsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DeleteEntityItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DeleteEntityItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_DeleteEntityItemReviews) == 0x000048, "Wrong size on PlayFabEconomyAPI_DeleteEntityItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, Request) == 0x000000, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, OnSuccess) == 0x000018, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, OnFailure) == 0x000028, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, CustomData) == 0x000038, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteEntityItemReviews, ReturnValue) == 0x000040, "Member 'PlayFabEconomyAPI_DeleteEntityItemReviews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.DeleteItem
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_DeleteItem final
{
public:
	struct FEconomyDeleteItemRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyDeleteItemResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DeleteItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DeleteItem");
static_assert(sizeof(PlayFabEconomyAPI_DeleteItem) == 0x000060, "Wrong size on PlayFabEconomyAPI_DeleteItem");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_DeleteItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, OnSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_DeleteItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, OnFailure) == 0x000040, "Member 'PlayFabEconomyAPI_DeleteItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, CustomData) == 0x000050, "Member 'PlayFabEconomyAPI_DeleteItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DeleteItem, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_DeleteItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetCatalogConfig
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyAPI_GetCatalogConfig final
{
public:
	struct FEconomyGetCatalogConfigRequest        Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetCatalogConfigResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetCatalogConfig) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetCatalogConfig");
static_assert(sizeof(PlayFabEconomyAPI_GetCatalogConfig) == 0x000040, "Wrong size on PlayFabEconomyAPI_GetCatalogConfig");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetCatalogConfig::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, OnSuccess) == 0x000010, "Member 'PlayFabEconomyAPI_GetCatalogConfig::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, OnFailure) == 0x000020, "Member 'PlayFabEconomyAPI_GetCatalogConfig::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, CustomData) == 0x000030, "Member 'PlayFabEconomyAPI_GetCatalogConfig::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetCatalogConfig, ReturnValue) == 0x000038, "Member 'PlayFabEconomyAPI_GetCatalogConfig::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetDraftItem
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetDraftItem final
{
public:
	struct FEconomyGetDraftItemRequest            Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetDraftItemResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_GetDraftItem) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetDraftItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, OnSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetDraftItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, OnFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetDraftItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, CustomData) == 0x000050, "Member 'PlayFabEconomyAPI_GetDraftItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItem, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetDraftItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetDraftItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_GetDraftItems final
{
public:
	struct FEconomyGetDraftItemsRequest           Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetDraftItemsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetDraftItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetDraftItems");
static_assert(sizeof(PlayFabEconomyAPI_GetDraftItems) == 0x000068, "Wrong size on PlayFabEconomyAPI_GetDraftItems");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetDraftItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, OnSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_GetDraftItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, OnFailure) == 0x000048, "Member 'PlayFabEconomyAPI_GetDraftItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, CustomData) == 0x000058, "Member 'PlayFabEconomyAPI_GetDraftItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetDraftItems, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_GetDraftItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetEntityDraftItems
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetEntityDraftItems final
{
public:
	struct FEconomyGetEntityDraftItemsRequest     Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetEntityDraftItemsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetEntityDraftItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetEntityDraftItems");
static_assert(sizeof(PlayFabEconomyAPI_GetEntityDraftItems) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetEntityDraftItems");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, OnSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, OnFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, CustomData) == 0x000050, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityDraftItems, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetEntityDraftItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetEntityItemReview
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetEntityItemReview final
{
public:
	struct FEconomyGetEntityItemReviewRequest     Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetEntityItemReviewResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetEntityItemReview) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetEntityItemReview");
static_assert(sizeof(PlayFabEconomyAPI_GetEntityItemReview) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetEntityItemReview");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetEntityItemReview::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, OnSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetEntityItemReview::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, OnFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetEntityItemReview::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, CustomData) == 0x000050, "Member 'PlayFabEconomyAPI_GetEntityItemReview::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetEntityItemReview, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetEntityItemReview::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItem
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetItem final
{
public:
	struct FEconomyGetItemRequest                 Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItem");
static_assert(sizeof(PlayFabEconomyAPI_GetItem) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetItem");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, OnSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, OnFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, CustomData) == 0x000050, "Member 'PlayFabEconomyAPI_GetItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItem, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItemModerationState
// 0x0058 (0x0058 - 0x0000)
struct PlayFabEconomyAPI_GetItemModerationState final
{
public:
	struct FEconomyGetItemModerationStateRequest  Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemModerationStateResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItemModerationState) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItemModerationState");
static_assert(sizeof(PlayFabEconomyAPI_GetItemModerationState) == 0x000058, "Wrong size on PlayFabEconomyAPI_GetItemModerationState");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItemModerationState::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, OnSuccess) == 0x000028, "Member 'PlayFabEconomyAPI_GetItemModerationState::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, OnFailure) == 0x000038, "Member 'PlayFabEconomyAPI_GetItemModerationState::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, CustomData) == 0x000048, "Member 'PlayFabEconomyAPI_GetItemModerationState::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemModerationState, ReturnValue) == 0x000050, "Member 'PlayFabEconomyAPI_GetItemModerationState::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItemPublishStatus
// 0x0060 (0x0060 - 0x0000)
struct PlayFabEconomyAPI_GetItemPublishStatus final
{
public:
	struct FEconomyGetItemPublishStatusRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemPublishStatusResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItemPublishStatus) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItemPublishStatus");
static_assert(sizeof(PlayFabEconomyAPI_GetItemPublishStatus) == 0x000060, "Wrong size on PlayFabEconomyAPI_GetItemPublishStatus");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, OnSuccess) == 0x000030, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, OnFailure) == 0x000040, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, CustomData) == 0x000050, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemPublishStatus, ReturnValue) == 0x000058, "Member 'PlayFabEconomyAPI_GetItemPublishStatus::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItemReviews
// 0x0080 (0x0080 - 0x0000)
struct PlayFabEconomyAPI_GetItemReviews final
{
public:
	struct FEconomyGetItemReviewsRequest          Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemReviewsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_GetItemReviews) == 0x000080, "Wrong size on PlayFabEconomyAPI_GetItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItemReviews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, OnSuccess) == 0x000050, "Member 'PlayFabEconomyAPI_GetItemReviews::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, OnFailure) == 0x000060, "Member 'PlayFabEconomyAPI_GetItemReviews::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, CustomData) == 0x000070, "Member 'PlayFabEconomyAPI_GetItemReviews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviews, ReturnValue) == 0x000078, "Member 'PlayFabEconomyAPI_GetItemReviews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItemReviewSummary
// 0x0058 (0x0058 - 0x0000)
struct PlayFabEconomyAPI_GetItemReviewSummary final
{
public:
	struct FEconomyGetItemReviewSummaryRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemReviewSummaryResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItemReviewSummary) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItemReviewSummary");
static_assert(sizeof(PlayFabEconomyAPI_GetItemReviewSummary) == 0x000058, "Wrong size on PlayFabEconomyAPI_GetItemReviewSummary");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, OnSuccess) == 0x000028, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, OnFailure) == 0x000038, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, CustomData) == 0x000048, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItemReviewSummary, ReturnValue) == 0x000050, "Member 'PlayFabEconomyAPI_GetItemReviewSummary::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.GetItems
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_GetItems final
{
public:
	struct FEconomyGetItemsRequest                Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyGetItemsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_GetItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_GetItems");
static_assert(sizeof(PlayFabEconomyAPI_GetItems) == 0x000068, "Wrong size on PlayFabEconomyAPI_GetItems");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_GetItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, OnSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_GetItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, OnFailure) == 0x000048, "Member 'PlayFabEconomyAPI_GetItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, CustomData) == 0x000058, "Member 'PlayFabEconomyAPI_GetItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_GetItems, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_GetItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.PublishDraftItem
// 0x0070 (0x0070 - 0x0000)
struct PlayFabEconomyAPI_PublishDraftItem final
{
public:
	struct FEconomyPublishDraftItemRequest        Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyPublishDraftItemResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_PublishDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_PublishDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_PublishDraftItem) == 0x000070, "Wrong size on PlayFabEconomyAPI_PublishDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_PublishDraftItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, OnSuccess) == 0x000040, "Member 'PlayFabEconomyAPI_PublishDraftItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, OnFailure) == 0x000050, "Member 'PlayFabEconomyAPI_PublishDraftItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, CustomData) == 0x000060, "Member 'PlayFabEconomyAPI_PublishDraftItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_PublishDraftItem, ReturnValue) == 0x000068, "Member 'PlayFabEconomyAPI_PublishDraftItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.ReportItem
// 0x0078 (0x0078 - 0x0000)
struct PlayFabEconomyAPI_ReportItem final
{
public:
	struct FEconomyReportItemRequest              Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyReportItemResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_ReportItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_ReportItem");
static_assert(sizeof(PlayFabEconomyAPI_ReportItem) == 0x000078, "Wrong size on PlayFabEconomyAPI_ReportItem");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_ReportItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, OnSuccess) == 0x000048, "Member 'PlayFabEconomyAPI_ReportItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, OnFailure) == 0x000058, "Member 'PlayFabEconomyAPI_ReportItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, CustomData) == 0x000068, "Member 'PlayFabEconomyAPI_ReportItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItem, ReturnValue) == 0x000070, "Member 'PlayFabEconomyAPI_ReportItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.ReportItemReview
// 0x0088 (0x0088 - 0x0000)
struct PlayFabEconomyAPI_ReportItemReview final
{
public:
	struct FEconomyReportItemReviewRequest        Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyReportItemReviewResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_ReportItemReview) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_ReportItemReview");
static_assert(sizeof(PlayFabEconomyAPI_ReportItemReview) == 0x000088, "Wrong size on PlayFabEconomyAPI_ReportItemReview");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, Request) == 0x000000, "Member 'PlayFabEconomyAPI_ReportItemReview::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, OnSuccess) == 0x000058, "Member 'PlayFabEconomyAPI_ReportItemReview::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, OnFailure) == 0x000068, "Member 'PlayFabEconomyAPI_ReportItemReview::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, CustomData) == 0x000078, "Member 'PlayFabEconomyAPI_ReportItemReview::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReportItemReview, ReturnValue) == 0x000080, "Member 'PlayFabEconomyAPI_ReportItemReview::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.ReviewItem
// 0x0068 (0x0068 - 0x0000)
struct PlayFabEconomyAPI_ReviewItem final
{
public:
	struct FEconomyReviewItemRequest              Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyReviewItemResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_ReviewItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_ReviewItem");
static_assert(sizeof(PlayFabEconomyAPI_ReviewItem) == 0x000068, "Wrong size on PlayFabEconomyAPI_ReviewItem");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_ReviewItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, OnSuccess) == 0x000038, "Member 'PlayFabEconomyAPI_ReviewItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, OnFailure) == 0x000048, "Member 'PlayFabEconomyAPI_ReviewItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, CustomData) == 0x000058, "Member 'PlayFabEconomyAPI_ReviewItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_ReviewItem, ReturnValue) == 0x000060, "Member 'PlayFabEconomyAPI_ReviewItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.SearchItems
// 0x00A0 (0x00A0 - 0x0000)
struct PlayFabEconomyAPI_SearchItems final
{
public:
	struct FEconomySearchItemsRequest             Request;                                           // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomySearchItemsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0080(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0090(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_SearchItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_SearchItems");
static_assert(sizeof(PlayFabEconomyAPI_SearchItems) == 0x0000A0, "Wrong size on PlayFabEconomyAPI_SearchItems");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, Request) == 0x000000, "Member 'PlayFabEconomyAPI_SearchItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, OnSuccess) == 0x000070, "Member 'PlayFabEconomyAPI_SearchItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, OnFailure) == 0x000080, "Member 'PlayFabEconomyAPI_SearchItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, CustomData) == 0x000090, "Member 'PlayFabEconomyAPI_SearchItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SearchItems, ReturnValue) == 0x000098, "Member 'PlayFabEconomyAPI_SearchItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.SetItemModerationState
// 0x0070 (0x0070 - 0x0000)
struct PlayFabEconomyAPI_SetItemModerationState final
{
public:
	struct FEconomySetItemModerationStateRequest  Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomySetItemModerationStateResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_SetItemModerationState) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_SetItemModerationState");
static_assert(sizeof(PlayFabEconomyAPI_SetItemModerationState) == 0x000070, "Wrong size on PlayFabEconomyAPI_SetItemModerationState");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, Request) == 0x000000, "Member 'PlayFabEconomyAPI_SetItemModerationState::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, OnSuccess) == 0x000040, "Member 'PlayFabEconomyAPI_SetItemModerationState::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, OnFailure) == 0x000050, "Member 'PlayFabEconomyAPI_SetItemModerationState::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, CustomData) == 0x000060, "Member 'PlayFabEconomyAPI_SetItemModerationState::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SetItemModerationState, ReturnValue) == 0x000068, "Member 'PlayFabEconomyAPI_SetItemModerationState::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.SubmitItemReviewVote
// 0x0078 (0x0078 - 0x0000)
struct PlayFabEconomyAPI_SubmitItemReviewVote final
{
public:
	struct FEconomySubmitItemReviewVoteRequest    Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomySubmitItemReviewVoteResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_SubmitItemReviewVote) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_SubmitItemReviewVote");
static_assert(sizeof(PlayFabEconomyAPI_SubmitItemReviewVote) == 0x000078, "Wrong size on PlayFabEconomyAPI_SubmitItemReviewVote");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, Request) == 0x000000, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, OnSuccess) == 0x000048, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, OnFailure) == 0x000058, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, CustomData) == 0x000068, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_SubmitItemReviewVote, ReturnValue) == 0x000070, "Member 'PlayFabEconomyAPI_SubmitItemReviewVote::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.TakedownItemReviews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_TakedownItemReviews final
{
public:
	struct FEconomyTakedownItemReviewsRequest     Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyTakedownItemReviewsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_TakedownItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_TakedownItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_TakedownItemReviews) == 0x000050, "Wrong size on PlayFabEconomyAPI_TakedownItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, Request) == 0x000000, "Member 'PlayFabEconomyAPI_TakedownItemReviews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, OnSuccess) == 0x000020, "Member 'PlayFabEconomyAPI_TakedownItemReviews::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, OnFailure) == 0x000030, "Member 'PlayFabEconomyAPI_TakedownItemReviews::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_TakedownItemReviews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_TakedownItemReviews, ReturnValue) == 0x000048, "Member 'PlayFabEconomyAPI_TakedownItemReviews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.UpdateCatalogConfig
// 0x0048 (0x0048 - 0x0000)
struct PlayFabEconomyAPI_UpdateCatalogConfig final
{
public:
	struct FEconomyUpdateCatalogConfigRequest     Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyUpdateCatalogConfigResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_UpdateCatalogConfig) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_UpdateCatalogConfig");
static_assert(sizeof(PlayFabEconomyAPI_UpdateCatalogConfig) == 0x000048, "Wrong size on PlayFabEconomyAPI_UpdateCatalogConfig");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, Request) == 0x000000, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, OnSuccess) == 0x000018, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, OnFailure) == 0x000028, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, CustomData) == 0x000038, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateCatalogConfig, ReturnValue) == 0x000040, "Member 'PlayFabEconomyAPI_UpdateCatalogConfig::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.UpdateDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_UpdateDraftItem final
{
public:
	struct FEconomyUpdateDraftItemRequest         Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEconomyUpdateDraftItemResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEconomyAPI*                     ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_UpdateDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_UpdateDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_UpdateDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_UpdateDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, Request) == 0x000000, "Member 'PlayFabEconomyAPI_UpdateDraftItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, OnSuccess) == 0x000020, "Member 'PlayFabEconomyAPI_UpdateDraftItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, OnFailure) == 0x000030, "Member 'PlayFabEconomyAPI_UpdateDraftItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_UpdateDraftItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_UpdateDraftItem, ReturnValue) == 0x000048, "Member 'PlayFabEconomyAPI_UpdateDraftItem::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabEconomyAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabEconomyAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessCreateDraftItem__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessCreateDraftItem__DelegateSignature final
{
public:
	struct FEconomyCreateDraftItemResponse        Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessCreateDraftItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessCreateDraftItem__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessCreateDraftItem__DelegateSignature) == 0x000018, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessCreateDraftItem__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessCreateDraftItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessCreateDraftItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessCreateDraftItem__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabEconomyAPI_DelegateOnSuccessCreateDraftItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessCreateUploadUrls__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessCreateUploadUrls__DelegateSignature final
{
public:
	struct FEconomyCreateUploadUrlsResponse       Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessCreateUploadUrls__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessCreateUploadUrls__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessCreateUploadUrls__DelegateSignature) == 0x000020, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessCreateUploadUrls__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessCreateUploadUrls__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessCreateUploadUrls__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessCreateUploadUrls__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabEconomyAPI_DelegateOnSuccessCreateUploadUrls__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature final
{
public:
	struct FEconomyDeleteEntityItemReviewsResponse Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessDeleteItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessDeleteItem__DelegateSignature final
{
public:
	struct FEconomyDeleteItemResponse             Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessDeleteItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessDeleteItem__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessDeleteItem__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessDeleteItem__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessDeleteItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessDeleteItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessDeleteItem__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessDeleteItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetCatalogConfig__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetCatalogConfig__DelegateSignature final
{
public:
	struct FEconomyGetCatalogConfigResponse       Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetCatalogConfig__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetCatalogConfig__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetCatalogConfig__DelegateSignature) == 0x000018, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetCatalogConfig__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetCatalogConfig__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetCatalogConfig__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetCatalogConfig__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetCatalogConfig__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetDraftItem__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetDraftItem__DelegateSignature final
{
public:
	struct FEconomyGetDraftItemResponse           Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetDraftItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetDraftItem__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetDraftItem__DelegateSignature) == 0x000018, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetDraftItem__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetDraftItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetDraftItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetDraftItem__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetDraftItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetDraftItems__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetDraftItems__DelegateSignature final
{
public:
	struct FEconomyGetDraftItemsResponse          Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetDraftItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetDraftItems__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetDraftItems__DelegateSignature) == 0x000030, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetDraftItems__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetDraftItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetDraftItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetDraftItems__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetDraftItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetEntityDraftItems__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetEntityDraftItems__DelegateSignature final
{
public:
	struct FEconomyGetEntityDraftItemsResponse    Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetEntityDraftItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetEntityDraftItems__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetEntityDraftItems__DelegateSignature) == 0x000030, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetEntityDraftItems__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetEntityDraftItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetEntityDraftItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetEntityDraftItems__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetEntityDraftItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetEntityItemReview__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetEntityItemReview__DelegateSignature final
{
public:
	struct FEconomyGetEntityItemReviewResponse    Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetEntityItemReview__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetEntityItemReview__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetEntityItemReview__DelegateSignature) == 0x000018, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetEntityItemReview__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetEntityItemReview__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetEntityItemReview__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetEntityItemReview__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetEntityItemReview__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItem__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetItem__DelegateSignature final
{
public:
	struct FEconomyGetItemResponse                Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetItem__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetItem__DelegateSignature) == 0x000018, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetItem__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItem__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItemModerationState__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetItemModerationState__DelegateSignature final
{
public:
	struct FEconomyGetItemModerationStateResponse Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetItemModerationState__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetItemModerationState__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetItemModerationState__DelegateSignature) == 0x000018, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetItemModerationState__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItemModerationState__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItemModerationState__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItemModerationState__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItemModerationState__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItemPublishStatus__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetItemPublishStatus__DelegateSignature final
{
public:
	struct FEconomyGetItemPublishStatusResponse   Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetItemPublishStatus__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetItemPublishStatus__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetItemPublishStatus__DelegateSignature) == 0x000028, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetItemPublishStatus__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItemPublishStatus__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItemPublishStatus__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItemPublishStatus__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItemPublishStatus__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItemReviews__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetItemReviews__DelegateSignature final
{
public:
	struct FEconomyGetItemReviewsResponse         Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetItemReviews__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetItemReviews__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetItemReviews__DelegateSignature) == 0x000030, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetItemReviews__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItemReviews__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItemReviews__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItemReviews__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItemReviews__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItemReviewSummary__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetItemReviewSummary__DelegateSignature final
{
public:
	struct FEconomyGetItemReviewSummaryResponse   Result;                                            // 0x0000(0x0028)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetItemReviewSummary__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetItemReviewSummary__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetItemReviewSummary__DelegateSignature) == 0x000030, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetItemReviewSummary__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItemReviewSummary__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItemReviewSummary__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItemReviewSummary__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItemReviewSummary__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessGetItems__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessGetItems__DelegateSignature final
{
public:
	struct FEconomyGetItemsResponse               Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessGetItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessGetItems__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessGetItems__DelegateSignature) == 0x000020, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessGetItems__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessGetItems__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabEconomyAPI_DelegateOnSuccessGetItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessPublishDraftItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessPublishDraftItem__DelegateSignature final
{
public:
	struct FEconomyPublishDraftItemResponse       Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessPublishDraftItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessPublishDraftItem__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessPublishDraftItem__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessPublishDraftItem__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessPublishDraftItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessPublishDraftItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessPublishDraftItem__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessPublishDraftItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessReportItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessReportItem__DelegateSignature final
{
public:
	struct FEconomyReportItemResponse             Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessReportItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessReportItem__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessReportItem__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessReportItem__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessReportItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessReportItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessReportItem__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessReportItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessReportItemReview__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessReportItemReview__DelegateSignature final
{
public:
	struct FEconomyReportItemReviewResponse       Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessReportItemReview__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessReportItemReview__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessReportItemReview__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessReportItemReview__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessReportItemReview__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessReportItemReview__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessReportItemReview__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessReportItemReview__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessReviewItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessReviewItem__DelegateSignature final
{
public:
	struct FEconomyReviewItemResponse             Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessReviewItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessReviewItem__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessReviewItem__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessReviewItem__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessReviewItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessReviewItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessReviewItem__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessReviewItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessSearchItems__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessSearchItems__DelegateSignature final
{
public:
	struct FEconomySearchItemsResponse            Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessSearchItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessSearchItems__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessSearchItems__DelegateSignature) == 0x000030, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessSearchItems__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessSearchItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessSearchItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessSearchItems__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabEconomyAPI_DelegateOnSuccessSearchItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessSetItemModerationState__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessSetItemModerationState__DelegateSignature final
{
public:
	struct FEconomySetItemModerationStateResponse Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessSetItemModerationState__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessSetItemModerationState__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessSetItemModerationState__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessSetItemModerationState__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessSetItemModerationState__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessSetItemModerationState__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessSetItemModerationState__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessSetItemModerationState__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessSubmitItemReviewVote__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessSubmitItemReviewVote__DelegateSignature final
{
public:
	struct FEconomySubmitItemReviewVoteResponse   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessSubmitItemReviewVote__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessSubmitItemReviewVote__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessSubmitItemReviewVote__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessSubmitItemReviewVote__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessSubmitItemReviewVote__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessSubmitItemReviewVote__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessSubmitItemReviewVote__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessSubmitItemReviewVote__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessTakedownItemReviews__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessTakedownItemReviews__DelegateSignature final
{
public:
	struct FEconomyTakedownItemReviewsResponse    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessTakedownItemReviews__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessTakedownItemReviews__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessTakedownItemReviews__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessTakedownItemReviews__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessTakedownItemReviews__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessTakedownItemReviews__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessTakedownItemReviews__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessTakedownItemReviews__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessUpdateCatalogConfig__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessUpdateCatalogConfig__DelegateSignature final
{
public:
	struct FEconomyUpdateCatalogConfigResponse    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessUpdateCatalogConfig__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessUpdateCatalogConfig__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessUpdateCatalogConfig__DelegateSignature) == 0x000010, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessUpdateCatalogConfig__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessUpdateCatalogConfig__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessUpdateCatalogConfig__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessUpdateCatalogConfig__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabEconomyAPI_DelegateOnSuccessUpdateCatalogConfig__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEconomyAPI.DelegateOnSuccessUpdateDraftItem__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyAPI_DelegateOnSuccessUpdateDraftItem__DelegateSignature final
{
public:
	struct FEconomyUpdateDraftItemResponse        Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyAPI_DelegateOnSuccessUpdateDraftItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_DelegateOnSuccessUpdateDraftItem__DelegateSignature");
static_assert(sizeof(PlayFabEconomyAPI_DelegateOnSuccessUpdateDraftItem__DelegateSignature) == 0x000018, "Wrong size on PlayFabEconomyAPI_DelegateOnSuccessUpdateDraftItem__DelegateSignature");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessUpdateDraftItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEconomyAPI_DelegateOnSuccessUpdateDraftItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_DelegateOnSuccessUpdateDraftItem__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabEconomyAPI_DelegateOnSuccessUpdateDraftItem__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperCreateDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperCreateDraftItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A96[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperCreateDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperCreateDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperCreateDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperCreateDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateDraftItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperCreateDraftItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateDraftItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperCreateDraftItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateDraftItem, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperCreateDraftItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperCreateUploadUrls
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperCreateUploadUrls final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A97[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperCreateUploadUrls) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperCreateUploadUrls");
static_assert(sizeof(PlayFabEconomyAPI_HelperCreateUploadUrls) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperCreateUploadUrls");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateUploadUrls, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperCreateUploadUrls::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateUploadUrls, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperCreateUploadUrls::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperCreateUploadUrls, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperCreateUploadUrls::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperDeleteEntityItemReviews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperDeleteEntityItemReviews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A98[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperDeleteEntityItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperDeleteEntityItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperDeleteEntityItemReviews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperDeleteEntityItemReviews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteEntityItemReviews, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperDeleteEntityItemReviews::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperDeleteItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperDeleteItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A99[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperDeleteItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperDeleteItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperDeleteItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperDeleteItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperDeleteItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperDeleteItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperDeleteItem, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperDeleteItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetCatalogConfig
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetCatalogConfig final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetCatalogConfig) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetCatalogConfig");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetCatalogConfig) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetCatalogConfig");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetCatalogConfig, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetCatalogConfig::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetCatalogConfig, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetCatalogConfig::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetCatalogConfig, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetCatalogConfig::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetDraftItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetDraftItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetDraftItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItem, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetDraftItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetDraftItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetDraftItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetDraftItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetDraftItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetDraftItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetDraftItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetDraftItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItems, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetDraftItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetDraftItems, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetDraftItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetEntityDraftItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetEntityDraftItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetEntityDraftItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetEntityDraftItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetEntityDraftItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetEntityDraftItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityDraftItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetEntityDraftItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityDraftItems, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetEntityDraftItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityDraftItems, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetEntityDraftItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetEntityItemReview
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetEntityItemReview final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetEntityItemReview) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetEntityItemReview");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetEntityItemReview) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetEntityItemReview");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityItemReview, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetEntityItemReview::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityItemReview, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetEntityItemReview::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetEntityItemReview, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetEntityItemReview::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItem, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItemModerationState
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItemModerationState final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItemModerationState) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItemModerationState");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItemModerationState) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItemModerationState");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemModerationState, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItemModerationState::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemModerationState, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItemModerationState::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemModerationState, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItemModerationState::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItemPublishStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItemPublishStatus final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItemPublishStatus) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItemPublishStatus");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItemPublishStatus) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItemPublishStatus");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemPublishStatus, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItemPublishStatus::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemPublishStatus, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItemPublishStatus::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemPublishStatus, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItemPublishStatus::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItemReviews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItemReviews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItemReviews) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviews, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItemReviews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviews, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItemReviews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviews, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItemReviews::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItemReviewSummary
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItemReviewSummary final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItemReviewSummary) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItemReviewSummary");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItemReviewSummary) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItemReviewSummary");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviewSummary, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItemReviewSummary::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviewSummary, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItemReviewSummary::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItemReviewSummary, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItemReviewSummary::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperGetItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperGetItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperGetItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperGetItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperGetItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperGetItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperGetItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItems, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperGetItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperGetItems, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperGetItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperPublishDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperPublishDraftItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperPublishDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperPublishDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperPublishDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperPublishDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperPublishDraftItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperPublishDraftItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperPublishDraftItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperPublishDraftItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperPublishDraftItem, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperPublishDraftItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperReportItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperReportItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperReportItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperReportItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperReportItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperReportItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperReportItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperReportItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItem, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperReportItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperReportItemReview
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperReportItemReview final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperReportItemReview) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperReportItemReview");
static_assert(sizeof(PlayFabEconomyAPI_HelperReportItemReview) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperReportItemReview");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItemReview, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperReportItemReview::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItemReview, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperReportItemReview::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReportItemReview, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperReportItemReview::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperReviewItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperReviewItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperReviewItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperReviewItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperReviewItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperReviewItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperReviewItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperReviewItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReviewItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperReviewItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperReviewItem, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperReviewItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperSearchItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperSearchItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperSearchItems) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperSearchItems");
static_assert(sizeof(PlayFabEconomyAPI_HelperSearchItems) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperSearchItems");
static_assert(offsetof(PlayFabEconomyAPI_HelperSearchItems, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperSearchItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSearchItems, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperSearchItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSearchItems, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperSearchItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperSetItemModerationState
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperSetItemModerationState final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AAA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperSetItemModerationState) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperSetItemModerationState");
static_assert(sizeof(PlayFabEconomyAPI_HelperSetItemModerationState) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperSetItemModerationState");
static_assert(offsetof(PlayFabEconomyAPI_HelperSetItemModerationState, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperSetItemModerationState::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSetItemModerationState, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperSetItemModerationState::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSetItemModerationState, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperSetItemModerationState::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperSubmitItemReviewVote
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperSubmitItemReviewVote final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AAB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperSubmitItemReviewVote) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperSubmitItemReviewVote");
static_assert(sizeof(PlayFabEconomyAPI_HelperSubmitItemReviewVote) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperSubmitItemReviewVote");
static_assert(offsetof(PlayFabEconomyAPI_HelperSubmitItemReviewVote, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperSubmitItemReviewVote::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSubmitItemReviewVote, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperSubmitItemReviewVote::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperSubmitItemReviewVote, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperSubmitItemReviewVote::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperTakedownItemReviews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperTakedownItemReviews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AAC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperTakedownItemReviews) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperTakedownItemReviews");
static_assert(sizeof(PlayFabEconomyAPI_HelperTakedownItemReviews) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperTakedownItemReviews");
static_assert(offsetof(PlayFabEconomyAPI_HelperTakedownItemReviews, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperTakedownItemReviews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperTakedownItemReviews, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperTakedownItemReviews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperTakedownItemReviews, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperTakedownItemReviews::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperUpdateCatalogConfig
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperUpdateCatalogConfig final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AAD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperUpdateCatalogConfig) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperUpdateCatalogConfig");
static_assert(sizeof(PlayFabEconomyAPI_HelperUpdateCatalogConfig) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperUpdateCatalogConfig");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateCatalogConfig, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperUpdateCatalogConfig::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateCatalogConfig, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperUpdateCatalogConfig::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateCatalogConfig, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperUpdateCatalogConfig::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyAPI.HelperUpdateDraftItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEconomyAPI_HelperUpdateDraftItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AAE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEconomyAPI_HelperUpdateDraftItem) == 0x000008, "Wrong alignment on PlayFabEconomyAPI_HelperUpdateDraftItem");
static_assert(sizeof(PlayFabEconomyAPI_HelperUpdateDraftItem) == 0x000050, "Wrong size on PlayFabEconomyAPI_HelperUpdateDraftItem");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateDraftItem, Response) == 0x000000, "Member 'PlayFabEconomyAPI_HelperUpdateDraftItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateDraftItem, CustomData) == 0x000040, "Member 'PlayFabEconomyAPI_HelperUpdateDraftItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyAPI_HelperUpdateDraftItem, Successful) == 0x000048, "Member 'PlayFabEconomyAPI_HelperUpdateDraftItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeCreateDraftItemResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeCreateDraftItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyCreateDraftItemResponse        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeCreateDraftItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeCreateDraftItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeCreateDraftItemResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_DecodeCreateDraftItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeCreateDraftItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeCreateDraftItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeCreateDraftItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeCreateDraftItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeCreateUploadUrlsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeCreateUploadUrlsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyCreateUploadUrlsResponse       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeCreateUploadUrlsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeCreateUploadUrlsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeCreateUploadUrlsResponseResponse) == 0x000020, "Wrong size on PlayFabEconomyModelDecoder_DecodeCreateUploadUrlsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeCreateUploadUrlsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeCreateUploadUrlsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeCreateUploadUrlsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeCreateUploadUrlsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeDeleteEntityItemReviewsResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeDeleteEntityItemReviewsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyDeleteEntityItemReviewsResponse ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeDeleteEntityItemReviewsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeDeleteEntityItemReviewsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeDeleteEntityItemReviewsResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodeDeleteEntityItemReviewsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeDeleteEntityItemReviewsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeDeleteEntityItemReviewsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeDeleteEntityItemReviewsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeDeleteEntityItemReviewsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeDeleteItemResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeDeleteItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyDeleteItemResponse             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeDeleteItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeDeleteItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeDeleteItemResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodeDeleteItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeDeleteItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeDeleteItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeDeleteItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeDeleteItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetCatalogConfigResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetCatalogConfigResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetCatalogConfigResponse       ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetCatalogConfigResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetCatalogConfigResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetCatalogConfigResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetCatalogConfigResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetCatalogConfigResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetCatalogConfigResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetCatalogConfigResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetCatalogConfigResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetDraftItemResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetDraftItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetDraftItemResponse           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetDraftItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetDraftItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetDraftItemResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetDraftItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetDraftItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetDraftItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetDraftItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetDraftItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetDraftItemsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetDraftItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetDraftItemsResponse          ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetDraftItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetDraftItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetDraftItemsResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetDraftItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetDraftItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetDraftItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetDraftItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetDraftItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetEntityDraftItemsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetEntityDraftItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetEntityDraftItemsResponse    ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetEntityDraftItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetEntityDraftItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetEntityDraftItemsResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetEntityDraftItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetEntityDraftItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetEntityDraftItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetEntityDraftItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetEntityDraftItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetEntityItemReviewResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetEntityItemReviewResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetEntityItemReviewResponse    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetEntityItemReviewResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetEntityItemReviewResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetEntityItemReviewResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetEntityItemReviewResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetEntityItemReviewResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetEntityItemReviewResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetEntityItemReviewResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetEntityItemReviewResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemModerationStateResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetItemModerationStateResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemModerationStateResponse ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetItemModerationStateResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetItemModerationStateResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetItemModerationStateResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetItemModerationStateResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemModerationStateResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemModerationStateResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemModerationStateResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemModerationStateResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemPublishStatusResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetItemPublishStatusResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemPublishStatusResponse   ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetItemPublishStatusResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetItemPublishStatusResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetItemPublishStatusResponseResponse) == 0x000028, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetItemPublishStatusResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemPublishStatusResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemPublishStatusResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemPublishStatusResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemPublishStatusResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemResponse                ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetItemResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemReviewsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetItemReviewsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemReviewsResponse         ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetItemReviewsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetItemReviewsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetItemReviewsResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetItemReviewsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemReviewsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemReviewsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemReviewsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemReviewsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemReviewSummaryResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetItemReviewSummaryResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemReviewSummaryResponse   ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetItemReviewSummaryResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetItemReviewSummaryResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetItemReviewSummaryResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetItemReviewSummaryResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemReviewSummaryResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemReviewSummaryResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemReviewSummaryResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemReviewSummaryResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeGetItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyGetItemsResponse               ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeGetItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeGetItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeGetItemsResponseResponse) == 0x000020, "Wrong size on PlayFabEconomyModelDecoder_DecodeGetItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeGetItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeGetItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodePublishDraftItemResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodePublishDraftItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyPublishDraftItemResponse       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodePublishDraftItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodePublishDraftItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodePublishDraftItemResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodePublishDraftItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodePublishDraftItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodePublishDraftItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodePublishDraftItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodePublishDraftItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeReportItemResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeReportItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyReportItemResponse             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeReportItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeReportItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeReportItemResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodeReportItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeReportItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeReportItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeReportItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeReportItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeReportItemReviewResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeReportItemReviewResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyReportItemReviewResponse       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeReportItemReviewResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeReportItemReviewResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeReportItemReviewResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodeReportItemReviewResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeReportItemReviewResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeReportItemReviewResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeReportItemReviewResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeReportItemReviewResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeReviewItemResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeReviewItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyReviewItemResponse             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeReviewItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeReviewItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeReviewItemResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodeReviewItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeReviewItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeReviewItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeReviewItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeReviewItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeSearchItemsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeSearchItemsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomySearchItemsResponse            ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeSearchItemsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeSearchItemsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeSearchItemsResponseResponse) == 0x000030, "Wrong size on PlayFabEconomyModelDecoder_DecodeSearchItemsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeSearchItemsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeSearchItemsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeSearchItemsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeSearchItemsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeSetItemModerationStateResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeSetItemModerationStateResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomySetItemModerationStateResponse ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeSetItemModerationStateResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeSetItemModerationStateResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeSetItemModerationStateResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodeSetItemModerationStateResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeSetItemModerationStateResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeSetItemModerationStateResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeSetItemModerationStateResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeSetItemModerationStateResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeSubmitItemReviewVoteResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeSubmitItemReviewVoteResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomySubmitItemReviewVoteResponse   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeSubmitItemReviewVoteResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeSubmitItemReviewVoteResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeSubmitItemReviewVoteResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodeSubmitItemReviewVoteResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeSubmitItemReviewVoteResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeSubmitItemReviewVoteResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeSubmitItemReviewVoteResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeSubmitItemReviewVoteResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeTakedownItemReviewsResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeTakedownItemReviewsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyTakedownItemReviewsResponse    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeTakedownItemReviewsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeTakedownItemReviewsResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeTakedownItemReviewsResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodeTakedownItemReviewsResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeTakedownItemReviewsResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeTakedownItemReviewsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeTakedownItemReviewsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeTakedownItemReviewsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeUpdateCatalogConfigResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeUpdateCatalogConfigResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyUpdateCatalogConfigResponse    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeUpdateCatalogConfigResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeUpdateCatalogConfigResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeUpdateCatalogConfigResponseResponse) == 0x000010, "Wrong size on PlayFabEconomyModelDecoder_DecodeUpdateCatalogConfigResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeUpdateCatalogConfigResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeUpdateCatalogConfigResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeUpdateCatalogConfigResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeUpdateCatalogConfigResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEconomyModelDecoder.decodeUpdateDraftItemResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabEconomyModelDecoder_DecodeUpdateDraftItemResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEconomyUpdateDraftItemResponse        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEconomyModelDecoder_DecodeUpdateDraftItemResponseResponse) == 0x000008, "Wrong alignment on PlayFabEconomyModelDecoder_DecodeUpdateDraftItemResponseResponse");
static_assert(sizeof(PlayFabEconomyModelDecoder_DecodeUpdateDraftItemResponseResponse) == 0x000018, "Wrong size on PlayFabEconomyModelDecoder_DecodeUpdateDraftItemResponseResponse");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeUpdateDraftItemResponseResponse, Response) == 0x000000, "Member 'PlayFabEconomyModelDecoder_DecodeUpdateDraftItemResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEconomyModelDecoder_DecodeUpdateDraftItemResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEconomyModelDecoder_DecodeUpdateDraftItemResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.WriteEvents
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_WriteEvents final
{
public:
	struct FEventsWriteEventsRequest              Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_WriteEvents) == 0x000008, "Wrong alignment on PlayFabEventsAPI_WriteEvents");
static_assert(sizeof(PlayFabEventsAPI_WriteEvents) == 0x000050, "Wrong size on PlayFabEventsAPI_WriteEvents");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, Request) == 0x000000, "Member 'PlayFabEventsAPI_WriteEvents::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, OnSuccess) == 0x000020, "Member 'PlayFabEventsAPI_WriteEvents::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, OnFailure) == 0x000030, "Member 'PlayFabEventsAPI_WriteEvents::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, CustomData) == 0x000040, "Member 'PlayFabEventsAPI_WriteEvents::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteEvents, ReturnValue) == 0x000048, "Member 'PlayFabEventsAPI_WriteEvents::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.WriteTelemetryEvents
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_WriteTelemetryEvents final
{
public:
	struct FEventsWriteEventsRequest              Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabEventsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_WriteTelemetryEvents) == 0x000008, "Wrong alignment on PlayFabEventsAPI_WriteTelemetryEvents");
static_assert(sizeof(PlayFabEventsAPI_WriteTelemetryEvents) == 0x000050, "Wrong size on PlayFabEventsAPI_WriteTelemetryEvents");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, Request) == 0x000000, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::Request' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, OnSuccess) == 0x000020, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, OnFailure) == 0x000030, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, CustomData) == 0x000040, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_WriteTelemetryEvents, ReturnValue) == 0x000048, "Member 'PlayFabEventsAPI_WriteTelemetryEvents::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEventsAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabEventsAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEventsAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabEventsAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabEventsAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabEventsAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabEventsAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabEventsAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEventsAPI.DelegateOnSuccessWriteEvents__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEventsAPI_DelegateOnSuccessWriteEvents__DelegateSignature final
{
public:
	struct FEventsWriteEventsResponse             Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_DelegateOnSuccessWriteEvents__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEventsAPI_DelegateOnSuccessWriteEvents__DelegateSignature");
static_assert(sizeof(PlayFabEventsAPI_DelegateOnSuccessWriteEvents__DelegateSignature) == 0x000020, "Wrong size on PlayFabEventsAPI_DelegateOnSuccessWriteEvents__DelegateSignature");
static_assert(offsetof(PlayFabEventsAPI_DelegateOnSuccessWriteEvents__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEventsAPI_DelegateOnSuccessWriteEvents__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_DelegateOnSuccessWriteEvents__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabEventsAPI_DelegateOnSuccessWriteEvents__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabEventsAPI.DelegateOnSuccessWriteTelemetryEvents__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEventsAPI_DelegateOnSuccessWriteTelemetryEvents__DelegateSignature final
{
public:
	struct FEventsWriteEventsResponse             Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsAPI_DelegateOnSuccessWriteTelemetryEvents__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabEventsAPI_DelegateOnSuccessWriteTelemetryEvents__DelegateSignature");
static_assert(sizeof(PlayFabEventsAPI_DelegateOnSuccessWriteTelemetryEvents__DelegateSignature) == 0x000020, "Wrong size on PlayFabEventsAPI_DelegateOnSuccessWriteTelemetryEvents__DelegateSignature");
static_assert(offsetof(PlayFabEventsAPI_DelegateOnSuccessWriteTelemetryEvents__DelegateSignature, Result) == 0x000000, "Member 'PlayFabEventsAPI_DelegateOnSuccessWriteTelemetryEvents__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_DelegateOnSuccessWriteTelemetryEvents__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabEventsAPI_DelegateOnSuccessWriteTelemetryEvents__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.HelperWriteEvents
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_HelperWriteEvents final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AB1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEventsAPI_HelperWriteEvents) == 0x000008, "Wrong alignment on PlayFabEventsAPI_HelperWriteEvents");
static_assert(sizeof(PlayFabEventsAPI_HelperWriteEvents) == 0x000050, "Wrong size on PlayFabEventsAPI_HelperWriteEvents");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteEvents, Response) == 0x000000, "Member 'PlayFabEventsAPI_HelperWriteEvents::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteEvents, CustomData) == 0x000040, "Member 'PlayFabEventsAPI_HelperWriteEvents::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteEvents, Successful) == 0x000048, "Member 'PlayFabEventsAPI_HelperWriteEvents::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEventsAPI.HelperWriteTelemetryEvents
// 0x0050 (0x0050 - 0x0000)
struct PlayFabEventsAPI_HelperWriteTelemetryEvents final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AB2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabEventsAPI_HelperWriteTelemetryEvents) == 0x000008, "Wrong alignment on PlayFabEventsAPI_HelperWriteTelemetryEvents");
static_assert(sizeof(PlayFabEventsAPI_HelperWriteTelemetryEvents) == 0x000050, "Wrong size on PlayFabEventsAPI_HelperWriteTelemetryEvents");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteTelemetryEvents, Response) == 0x000000, "Member 'PlayFabEventsAPI_HelperWriteTelemetryEvents::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteTelemetryEvents, CustomData) == 0x000040, "Member 'PlayFabEventsAPI_HelperWriteTelemetryEvents::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabEventsAPI_HelperWriteTelemetryEvents, Successful) == 0x000048, "Member 'PlayFabEventsAPI_HelperWriteTelemetryEvents::Successful' has a wrong offset!");

// Function PlayFab.PlayFabEventsModelDecoder.decodeWriteEventsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabEventsModelDecoder_DecodeWriteEventsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEventsWriteEventsResponse             ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabEventsModelDecoder_DecodeWriteEventsResponseResponse) == 0x000008, "Wrong alignment on PlayFabEventsModelDecoder_DecodeWriteEventsResponseResponse");
static_assert(sizeof(PlayFabEventsModelDecoder_DecodeWriteEventsResponseResponse) == 0x000020, "Wrong size on PlayFabEventsModelDecoder_DecodeWriteEventsResponseResponse");
static_assert(offsetof(PlayFabEventsModelDecoder_DecodeWriteEventsResponseResponse, Response) == 0x000000, "Member 'PlayFabEventsModelDecoder_DecodeWriteEventsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabEventsModelDecoder_DecodeWriteEventsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabEventsModelDecoder_DecodeWriteEventsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.CreateExclusionGroup
// 0x0060 (0x0060 - 0x0000)
struct PlayFabExperimentationAPI_CreateExclusionGroup final
{
public:
	struct FExperimentationCreateExclusionGroupRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationCreateExclusionGroupResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_CreateExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_CreateExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_CreateExclusionGroup) == 0x000060, "Wrong size on PlayFabExperimentationAPI_CreateExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, OnSuccess) == 0x000030, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, OnFailure) == 0x000040, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, CustomData) == 0x000050, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExclusionGroup, ReturnValue) == 0x000058, "Member 'PlayFabExperimentationAPI_CreateExclusionGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.CreateExperiment
// 0x00C8 (0x00C8 - 0x0000)
struct PlayFabExperimentationAPI_CreateExperiment final
{
public:
	struct FExperimentationCreateExperimentRequest Request;                                           // 0x0000(0x0098)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationCreateExperimentResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0098(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x00A8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00B8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x00C0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_CreateExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_CreateExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_CreateExperiment) == 0x0000C8, "Wrong size on PlayFabExperimentationAPI_CreateExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_CreateExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, OnSuccess) == 0x000098, "Member 'PlayFabExperimentationAPI_CreateExperiment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, OnFailure) == 0x0000A8, "Member 'PlayFabExperimentationAPI_CreateExperiment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, CustomData) == 0x0000B8, "Member 'PlayFabExperimentationAPI_CreateExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_CreateExperiment, ReturnValue) == 0x0000C0, "Member 'PlayFabExperimentationAPI_CreateExperiment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.DeleteExclusionGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_DeleteExclusionGroup final
{
public:
	struct FExperimentationDeleteExclusionGroupRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DeleteExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DeleteExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_DeleteExclusionGroup) == 0x000050, "Wrong size on PlayFabExperimentationAPI_DeleteExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, OnSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, OnFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExclusionGroup, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_DeleteExclusionGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.DeleteExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_DeleteExperiment final
{
public:
	struct FExperimentationDeleteExperimentRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DeleteExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DeleteExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_DeleteExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_DeleteExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_DeleteExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, OnSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_DeleteExperiment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, OnFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_DeleteExperiment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_DeleteExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DeleteExperiment, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_DeleteExperiment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetExclusionGroups
// 0x0040 (0x0040 - 0x0000)
struct PlayFabExperimentationAPI_GetExclusionGroups final
{
public:
	struct FExperimentationGetExclusionGroupsRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetExclusionGroupsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetExclusionGroups) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetExclusionGroups");
static_assert(sizeof(PlayFabExperimentationAPI_GetExclusionGroups) == 0x000040, "Wrong size on PlayFabExperimentationAPI_GetExclusionGroups");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, OnSuccess) == 0x000010, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, OnFailure) == 0x000020, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, CustomData) == 0x000030, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroups, ReturnValue) == 0x000038, "Member 'PlayFabExperimentationAPI_GetExclusionGroups::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetExclusionGroupTraffic
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_GetExclusionGroupTraffic final
{
public:
	struct FExperimentationGetExclusionGroupTrafficRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetExclusionGroupTrafficResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetExclusionGroupTraffic) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetExclusionGroupTraffic");
static_assert(sizeof(PlayFabExperimentationAPI_GetExclusionGroupTraffic) == 0x000050, "Wrong size on PlayFabExperimentationAPI_GetExclusionGroupTraffic");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, OnSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, OnFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExclusionGroupTraffic, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_GetExclusionGroupTraffic::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetExperiments
// 0x0040 (0x0040 - 0x0000)
struct PlayFabExperimentationAPI_GetExperiments final
{
public:
	struct FExperimentationGetExperimentsRequest  Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetExperimentsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetExperiments) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetExperiments");
static_assert(sizeof(PlayFabExperimentationAPI_GetExperiments) == 0x000040, "Wrong size on PlayFabExperimentationAPI_GetExperiments");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetExperiments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, OnSuccess) == 0x000010, "Member 'PlayFabExperimentationAPI_GetExperiments::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, OnFailure) == 0x000020, "Member 'PlayFabExperimentationAPI_GetExperiments::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, CustomData) == 0x000030, "Member 'PlayFabExperimentationAPI_GetExperiments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetExperiments, ReturnValue) == 0x000038, "Member 'PlayFabExperimentationAPI_GetExperiments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetLatestScorecard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_GetLatestScorecard final
{
public:
	struct FExperimentationGetLatestScorecardRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetLatestScorecardResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetLatestScorecard) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetLatestScorecard");
static_assert(sizeof(PlayFabExperimentationAPI_GetLatestScorecard) == 0x000050, "Wrong size on PlayFabExperimentationAPI_GetLatestScorecard");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, OnSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, OnFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetLatestScorecard, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_GetLatestScorecard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.GetTreatmentAssignment
// 0x0048 (0x0048 - 0x0000)
struct PlayFabExperimentationAPI_GetTreatmentAssignment final
{
public:
	struct FExperimentationGetTreatmentAssignmentRequest Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationGetTreatmentAssignmentResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_GetTreatmentAssignment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_GetTreatmentAssignment");
static_assert(sizeof(PlayFabExperimentationAPI_GetTreatmentAssignment) == 0x000048, "Wrong size on PlayFabExperimentationAPI_GetTreatmentAssignment");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, OnSuccess) == 0x000018, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, OnFailure) == 0x000028, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, CustomData) == 0x000038, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_GetTreatmentAssignment, ReturnValue) == 0x000040, "Member 'PlayFabExperimentationAPI_GetTreatmentAssignment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.StartExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_StartExperiment final
{
public:
	struct FExperimentationStartExperimentRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_StartExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_StartExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_StartExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_StartExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_StartExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, OnSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_StartExperiment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, OnFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_StartExperiment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_StartExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StartExperiment, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_StartExperiment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.StopExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_StopExperiment final
{
public:
	struct FExperimentationStopExperimentRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_StopExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_StopExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_StopExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_StopExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_StopExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, OnSuccess) == 0x000020, "Member 'PlayFabExperimentationAPI_StopExperiment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, OnFailure) == 0x000030, "Member 'PlayFabExperimentationAPI_StopExperiment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_StopExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_StopExperiment, ReturnValue) == 0x000048, "Member 'PlayFabExperimentationAPI_StopExperiment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.UpdateExclusionGroup
// 0x0070 (0x0070 - 0x0000)
struct PlayFabExperimentationAPI_UpdateExclusionGroup final
{
public:
	struct FExperimentationUpdateExclusionGroupRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_UpdateExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_UpdateExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_UpdateExclusionGroup) == 0x000070, "Wrong size on PlayFabExperimentationAPI_UpdateExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, OnSuccess) == 0x000040, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, OnFailure) == 0x000050, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, CustomData) == 0x000060, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExclusionGroup, ReturnValue) == 0x000068, "Member 'PlayFabExperimentationAPI_UpdateExclusionGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.UpdateExperiment
// 0x00D8 (0x00D8 - 0x0000)
struct PlayFabExperimentationAPI_UpdateExperiment final
{
public:
	struct FExperimentationUpdateExperimentRequest Request;                                           // 0x0000(0x00A8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x00A8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x00B8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00C8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabExperimentationAPI*             ReturnValue;                                       // 0x00D0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_UpdateExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_UpdateExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_UpdateExperiment) == 0x0000D8, "Wrong size on PlayFabExperimentationAPI_UpdateExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, Request) == 0x000000, "Member 'PlayFabExperimentationAPI_UpdateExperiment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, OnSuccess) == 0x0000A8, "Member 'PlayFabExperimentationAPI_UpdateExperiment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, OnFailure) == 0x0000B8, "Member 'PlayFabExperimentationAPI_UpdateExperiment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, CustomData) == 0x0000C8, "Member 'PlayFabExperimentationAPI_UpdateExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_UpdateExperiment, ReturnValue) == 0x0000D0, "Member 'PlayFabExperimentationAPI_UpdateExperiment::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabExperimentationAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabExperimentationAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessCreateExclusionGroup__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessCreateExclusionGroup__DelegateSignature final
{
public:
	struct FExperimentationCreateExclusionGroupResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessCreateExclusionGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessCreateExclusionGroup__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessCreateExclusionGroup__DelegateSignature) == 0x000020, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessCreateExclusionGroup__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessCreateExclusionGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessCreateExclusionGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessCreateExclusionGroup__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessCreateExclusionGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessCreateExperiment__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessCreateExperiment__DelegateSignature final
{
public:
	struct FExperimentationCreateExperimentResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessCreateExperiment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessCreateExperiment__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessCreateExperiment__DelegateSignature) == 0x000020, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessCreateExperiment__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessCreateExperiment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessCreateExperiment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessCreateExperiment__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessCreateExperiment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessDeleteExclusionGroup__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessDeleteExclusionGroup__DelegateSignature final
{
public:
	struct FExperimentationEmptyResponse          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessDeleteExclusionGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessDeleteExclusionGroup__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessDeleteExclusionGroup__DelegateSignature) == 0x000010, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessDeleteExclusionGroup__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessDeleteExclusionGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessDeleteExclusionGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessDeleteExclusionGroup__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessDeleteExclusionGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessDeleteExperiment__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessDeleteExperiment__DelegateSignature final
{
public:
	struct FExperimentationEmptyResponse          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessDeleteExperiment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessDeleteExperiment__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessDeleteExperiment__DelegateSignature) == 0x000010, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessDeleteExperiment__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessDeleteExperiment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessDeleteExperiment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessDeleteExperiment__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessDeleteExperiment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetExclusionGroups__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroups__DelegateSignature final
{
public:
	struct FExperimentationGetExclusionGroupsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroups__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroups__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroups__DelegateSignature) == 0x000020, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroups__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroups__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroups__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroups__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroups__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature final
{
public:
	struct FExperimentationGetExclusionGroupTrafficResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature) == 0x000020, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetExperiments__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessGetExperiments__DelegateSignature final
{
public:
	struct FExperimentationGetExperimentsResult   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessGetExperiments__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessGetExperiments__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessGetExperiments__DelegateSignature) == 0x000020, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessGetExperiments__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetExperiments__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetExperiments__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetExperiments__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetExperiments__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetLatestScorecard__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessGetLatestScorecard__DelegateSignature final
{
public:
	struct FExperimentationGetLatestScorecardResult Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessGetLatestScorecard__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessGetLatestScorecard__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessGetLatestScorecard__DelegateSignature) == 0x000018, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessGetLatestScorecard__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetLatestScorecard__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetLatestScorecard__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetLatestScorecard__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetLatestScorecard__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessGetTreatmentAssignment__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessGetTreatmentAssignment__DelegateSignature final
{
public:
	struct FExperimentationGetTreatmentAssignmentResult Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessGetTreatmentAssignment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessGetTreatmentAssignment__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessGetTreatmentAssignment__DelegateSignature) == 0x000018, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessGetTreatmentAssignment__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetTreatmentAssignment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetTreatmentAssignment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessGetTreatmentAssignment__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessGetTreatmentAssignment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessStartExperiment__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessStartExperiment__DelegateSignature final
{
public:
	struct FExperimentationEmptyResponse          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessStartExperiment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessStartExperiment__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessStartExperiment__DelegateSignature) == 0x000010, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessStartExperiment__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessStartExperiment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessStartExperiment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessStartExperiment__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessStartExperiment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessStopExperiment__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessStopExperiment__DelegateSignature final
{
public:
	struct FExperimentationEmptyResponse          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessStopExperiment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessStopExperiment__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessStopExperiment__DelegateSignature) == 0x000010, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessStopExperiment__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessStopExperiment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessStopExperiment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessStopExperiment__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessStopExperiment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessUpdateExclusionGroup__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessUpdateExclusionGroup__DelegateSignature final
{
public:
	struct FExperimentationEmptyResponse          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessUpdateExclusionGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessUpdateExclusionGroup__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessUpdateExclusionGroup__DelegateSignature) == 0x000010, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessUpdateExclusionGroup__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessUpdateExclusionGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessUpdateExclusionGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessUpdateExclusionGroup__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessUpdateExclusionGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabExperimentationAPI.DelegateOnSuccessUpdateExperiment__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabExperimentationAPI_DelegateOnSuccessUpdateExperiment__DelegateSignature final
{
public:
	struct FExperimentationEmptyResponse          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationAPI_DelegateOnSuccessUpdateExperiment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_DelegateOnSuccessUpdateExperiment__DelegateSignature");
static_assert(sizeof(PlayFabExperimentationAPI_DelegateOnSuccessUpdateExperiment__DelegateSignature) == 0x000010, "Wrong size on PlayFabExperimentationAPI_DelegateOnSuccessUpdateExperiment__DelegateSignature");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessUpdateExperiment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessUpdateExperiment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_DelegateOnSuccessUpdateExperiment__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabExperimentationAPI_DelegateOnSuccessUpdateExperiment__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperCreateExclusionGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperCreateExclusionGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AB5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperCreateExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperCreateExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_HelperCreateExclusionGroup) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperCreateExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExclusionGroup, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperCreateExclusionGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExclusionGroup, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperCreateExclusionGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExclusionGroup, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperCreateExclusionGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperCreateExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperCreateExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AB6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperCreateExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperCreateExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperCreateExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperCreateExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperCreateExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExperiment, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperCreateExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperCreateExperiment, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperCreateExperiment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperDeleteExclusionGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperDeleteExclusionGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AB7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperDeleteExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperDeleteExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperDeleteExclusionGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperDeleteExclusionGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExclusionGroup, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperDeleteExclusionGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperDeleteExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperDeleteExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AB8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperDeleteExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperDeleteExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperDeleteExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperDeleteExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperDeleteExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExperiment, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperDeleteExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperDeleteExperiment, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperDeleteExperiment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetExclusionGroups
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetExclusionGroups final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AB9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetExclusionGroups) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetExclusionGroups");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetExclusionGroups) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetExclusionGroups");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroups, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroups::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroups, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroups::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroups, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroups::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetExclusionGroupTraffic
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ABA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetExperiments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetExperiments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ABB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetExperiments) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetExperiments");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetExperiments) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetExperiments");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExperiments, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetExperiments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExperiments, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetExperiments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetExperiments, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetExperiments::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetLatestScorecard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetLatestScorecard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ABC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetLatestScorecard) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetLatestScorecard");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetLatestScorecard) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetLatestScorecard");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetLatestScorecard, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetLatestScorecard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetLatestScorecard, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetLatestScorecard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetLatestScorecard, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetLatestScorecard::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperGetTreatmentAssignment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperGetTreatmentAssignment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ABD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperGetTreatmentAssignment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperGetTreatmentAssignment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperGetTreatmentAssignment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperGetTreatmentAssignment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperGetTreatmentAssignment, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperGetTreatmentAssignment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperStartExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperStartExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ABE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperStartExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperStartExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperStartExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperStartExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStartExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperStartExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStartExperiment, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperStartExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStartExperiment, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperStartExperiment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperStopExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperStopExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ABF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperStopExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperStopExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperStopExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperStopExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStopExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperStopExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStopExperiment, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperStopExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperStopExperiment, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperStopExperiment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperUpdateExclusionGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperUpdateExclusionGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperUpdateExclusionGroup");
static_assert(sizeof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperUpdateExclusionGroup");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperUpdateExclusionGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperUpdateExclusionGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExclusionGroup, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperUpdateExclusionGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationAPI.HelperUpdateExperiment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabExperimentationAPI_HelperUpdateExperiment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabExperimentationAPI_HelperUpdateExperiment) == 0x000008, "Wrong alignment on PlayFabExperimentationAPI_HelperUpdateExperiment");
static_assert(sizeof(PlayFabExperimentationAPI_HelperUpdateExperiment) == 0x000050, "Wrong size on PlayFabExperimentationAPI_HelperUpdateExperiment");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExperiment, Response) == 0x000000, "Member 'PlayFabExperimentationAPI_HelperUpdateExperiment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExperiment, CustomData) == 0x000040, "Member 'PlayFabExperimentationAPI_HelperUpdateExperiment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationAPI_HelperUpdateExperiment, Successful) == 0x000048, "Member 'PlayFabExperimentationAPI_HelperUpdateExperiment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeCreateExclusionGroupResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_DecodeCreateExclusionGroupResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationCreateExclusionGroupResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_DecodeCreateExclusionGroupResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_DecodeCreateExclusionGroupResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_DecodeCreateExclusionGroupResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_DecodeCreateExclusionGroupResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeCreateExclusionGroupResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_DecodeCreateExclusionGroupResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeCreateExclusionGroupResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_DecodeCreateExclusionGroupResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeCreateExperimentResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_DecodeCreateExperimentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationCreateExperimentResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_DecodeCreateExperimentResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_DecodeCreateExperimentResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_DecodeCreateExperimentResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_DecodeCreateExperimentResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeCreateExperimentResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_DecodeCreateExperimentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeCreateExperimentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_DecodeCreateExperimentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabExperimentationModelDecoder_DecodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationEmptyResponse          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_DecodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_DecodeEmptyResponseResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_DecodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabExperimentationModelDecoder_DecodeEmptyResponseResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_DecodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_DecodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetExclusionGroupsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetExclusionGroupsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupsResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupsResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupsResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupsResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupsResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetExclusionGroupTrafficResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupTrafficResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetExclusionGroupTrafficResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupTrafficResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupTrafficResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupTrafficResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupTrafficResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupTrafficResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupTrafficResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupTrafficResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_DecodeGetExclusionGroupTrafficResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetExperimentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabExperimentationModelDecoder_DecodeGetExperimentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetExperimentsResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_DecodeGetExperimentsResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_DecodeGetExperimentsResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_DecodeGetExperimentsResultResponse) == 0x000020, "Wrong size on PlayFabExperimentationModelDecoder_DecodeGetExperimentsResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetExperimentsResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_DecodeGetExperimentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetExperimentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_DecodeGetExperimentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetLatestScorecardResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabExperimentationModelDecoder_DecodeGetLatestScorecardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetLatestScorecardResult ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_DecodeGetLatestScorecardResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_DecodeGetLatestScorecardResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_DecodeGetLatestScorecardResultResponse) == 0x000018, "Wrong size on PlayFabExperimentationModelDecoder_DecodeGetLatestScorecardResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetLatestScorecardResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_DecodeGetLatestScorecardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetLatestScorecardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_DecodeGetLatestScorecardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetTreatmentAssignmentResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabExperimentationModelDecoder_DecodeGetTreatmentAssignmentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExperimentationGetTreatmentAssignmentResult ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabExperimentationModelDecoder_DecodeGetTreatmentAssignmentResultResponse) == 0x000008, "Wrong alignment on PlayFabExperimentationModelDecoder_DecodeGetTreatmentAssignmentResultResponse");
static_assert(sizeof(PlayFabExperimentationModelDecoder_DecodeGetTreatmentAssignmentResultResponse) == 0x000018, "Wrong size on PlayFabExperimentationModelDecoder_DecodeGetTreatmentAssignmentResultResponse");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetTreatmentAssignmentResultResponse, Response) == 0x000000, "Member 'PlayFabExperimentationModelDecoder_DecodeGetTreatmentAssignmentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabExperimentationModelDecoder_DecodeGetTreatmentAssignmentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabExperimentationModelDecoder_DecodeGetTreatmentAssignmentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.AcceptGroupApplication
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_AcceptGroupApplication final
{
public:
	struct FGroupsAcceptGroupApplicationRequest   Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_AcceptGroupApplication) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_AcceptGroupApplication");
static_assert(sizeof(PlayFabGroupsAPI_AcceptGroupApplication) == 0x000050, "Wrong size on PlayFabGroupsAPI_AcceptGroupApplication");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, Request) == 0x000000, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, OnSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, OnFailure) == 0x000030, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupApplication, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_AcceptGroupApplication::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.AcceptGroupInvitation
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_AcceptGroupInvitation final
{
public:
	struct FGroupsAcceptGroupInvitationRequest    Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_AcceptGroupInvitation) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_AcceptGroupInvitation");
static_assert(sizeof(PlayFabGroupsAPI_AcceptGroupInvitation) == 0x000050, "Wrong size on PlayFabGroupsAPI_AcceptGroupInvitation");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, Request) == 0x000000, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, OnSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, OnFailure) == 0x000030, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AcceptGroupInvitation, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_AcceptGroupInvitation::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.AddMembers
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_AddMembers final
{
public:
	struct FGroupsAddMembersRequest               Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_AddMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_AddMembers");
static_assert(sizeof(PlayFabGroupsAPI_AddMembers) == 0x000068, "Wrong size on PlayFabGroupsAPI_AddMembers");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, Request) == 0x000000, "Member 'PlayFabGroupsAPI_AddMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, OnSuccess) == 0x000038, "Member 'PlayFabGroupsAPI_AddMembers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, OnFailure) == 0x000048, "Member 'PlayFabGroupsAPI_AddMembers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, CustomData) == 0x000058, "Member 'PlayFabGroupsAPI_AddMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_AddMembers, ReturnValue) == 0x000060, "Member 'PlayFabGroupsAPI_AddMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ApplyToGroup
// 0x0058 (0x0058 - 0x0000)
struct PlayFabGroupsAPI_ApplyToGroup final
{
public:
	struct FGroupsApplyToGroupRequest             Request;                                           // 0x0000(0x0028)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsApplyToGroupResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ApplyToGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ApplyToGroup");
static_assert(sizeof(PlayFabGroupsAPI_ApplyToGroup) == 0x000058, "Wrong size on PlayFabGroupsAPI_ApplyToGroup");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ApplyToGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, OnSuccess) == 0x000028, "Member 'PlayFabGroupsAPI_ApplyToGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, OnFailure) == 0x000038, "Member 'PlayFabGroupsAPI_ApplyToGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, CustomData) == 0x000048, "Member 'PlayFabGroupsAPI_ApplyToGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ApplyToGroup, ReturnValue) == 0x000050, "Member 'PlayFabGroupsAPI_ApplyToGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.BlockEntity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_BlockEntity final
{
public:
	struct FGroupsBlockEntityRequest              Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_BlockEntity) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_BlockEntity");
static_assert(sizeof(PlayFabGroupsAPI_BlockEntity) == 0x000050, "Wrong size on PlayFabGroupsAPI_BlockEntity");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, Request) == 0x000000, "Member 'PlayFabGroupsAPI_BlockEntity::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, OnSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_BlockEntity::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, OnFailure) == 0x000030, "Member 'PlayFabGroupsAPI_BlockEntity::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_BlockEntity::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_BlockEntity, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_BlockEntity::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ChangeMemberRole
// 0x0078 (0x0078 - 0x0000)
struct PlayFabGroupsAPI_ChangeMemberRole final
{
public:
	struct FGroupsChangeMemberRoleRequest         Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ChangeMemberRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ChangeMemberRole");
static_assert(sizeof(PlayFabGroupsAPI_ChangeMemberRole) == 0x000078, "Wrong size on PlayFabGroupsAPI_ChangeMemberRole");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ChangeMemberRole::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, OnSuccess) == 0x000048, "Member 'PlayFabGroupsAPI_ChangeMemberRole::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, OnFailure) == 0x000058, "Member 'PlayFabGroupsAPI_ChangeMemberRole::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, CustomData) == 0x000068, "Member 'PlayFabGroupsAPI_ChangeMemberRole::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ChangeMemberRole, ReturnValue) == 0x000070, "Member 'PlayFabGroupsAPI_ChangeMemberRole::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.CreateGroup
// 0x0058 (0x0058 - 0x0000)
struct PlayFabGroupsAPI_CreateGroup final
{
public:
	struct FGroupsCreateGroupRequest              Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsCreateGroupResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_CreateGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_CreateGroup");
static_assert(sizeof(PlayFabGroupsAPI_CreateGroup) == 0x000058, "Wrong size on PlayFabGroupsAPI_CreateGroup");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_CreateGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, OnSuccess) == 0x000028, "Member 'PlayFabGroupsAPI_CreateGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, OnFailure) == 0x000038, "Member 'PlayFabGroupsAPI_CreateGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, CustomData) == 0x000048, "Member 'PlayFabGroupsAPI_CreateGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateGroup, ReturnValue) == 0x000050, "Member 'PlayFabGroupsAPI_CreateGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.CreateRole
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_CreateRole final
{
public:
	struct FGroupsCreateGroupRoleRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsCreateGroupRoleResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_CreateRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_CreateRole");
static_assert(sizeof(PlayFabGroupsAPI_CreateRole) == 0x000068, "Wrong size on PlayFabGroupsAPI_CreateRole");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, Request) == 0x000000, "Member 'PlayFabGroupsAPI_CreateRole::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, OnSuccess) == 0x000038, "Member 'PlayFabGroupsAPI_CreateRole::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, OnFailure) == 0x000048, "Member 'PlayFabGroupsAPI_CreateRole::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, CustomData) == 0x000058, "Member 'PlayFabGroupsAPI_CreateRole::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_CreateRole, ReturnValue) == 0x000060, "Member 'PlayFabGroupsAPI_CreateRole::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.DeleteGroup
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_DeleteGroup final
{
public:
	struct FGroupsDeleteGroupRequest              Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DeleteGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DeleteGroup");
static_assert(sizeof(PlayFabGroupsAPI_DeleteGroup) == 0x000048, "Wrong size on PlayFabGroupsAPI_DeleteGroup");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_DeleteGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, OnSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_DeleteGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, OnFailure) == 0x000028, "Member 'PlayFabGroupsAPI_DeleteGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, CustomData) == 0x000038, "Member 'PlayFabGroupsAPI_DeleteGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteGroup, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_DeleteGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.DeleteRole
// 0x0058 (0x0058 - 0x0000)
struct PlayFabGroupsAPI_DeleteRole final
{
public:
	struct FGroupsDeleteRoleRequest               Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DeleteRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DeleteRole");
static_assert(sizeof(PlayFabGroupsAPI_DeleteRole) == 0x000058, "Wrong size on PlayFabGroupsAPI_DeleteRole");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, Request) == 0x000000, "Member 'PlayFabGroupsAPI_DeleteRole::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, OnSuccess) == 0x000028, "Member 'PlayFabGroupsAPI_DeleteRole::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, OnFailure) == 0x000038, "Member 'PlayFabGroupsAPI_DeleteRole::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, CustomData) == 0x000048, "Member 'PlayFabGroupsAPI_DeleteRole::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DeleteRole, ReturnValue) == 0x000050, "Member 'PlayFabGroupsAPI_DeleteRole::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.GetGroup
// 0x0058 (0x0058 - 0x0000)
struct PlayFabGroupsAPI_GetGroup final
{
public:
	struct FGroupsGetGroupRequest                 Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsGetGroupResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_GetGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_GetGroup");
static_assert(sizeof(PlayFabGroupsAPI_GetGroup) == 0x000058, "Wrong size on PlayFabGroupsAPI_GetGroup");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_GetGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, OnSuccess) == 0x000028, "Member 'PlayFabGroupsAPI_GetGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, OnFailure) == 0x000038, "Member 'PlayFabGroupsAPI_GetGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, CustomData) == 0x000048, "Member 'PlayFabGroupsAPI_GetGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_GetGroup, ReturnValue) == 0x000050, "Member 'PlayFabGroupsAPI_GetGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.InviteToGroup
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_InviteToGroup final
{
public:
	struct FGroupsInviteToGroupRequest            Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsInviteToGroupResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_InviteToGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_InviteToGroup");
static_assert(sizeof(PlayFabGroupsAPI_InviteToGroup) == 0x000068, "Wrong size on PlayFabGroupsAPI_InviteToGroup");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_InviteToGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, OnSuccess) == 0x000038, "Member 'PlayFabGroupsAPI_InviteToGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, OnFailure) == 0x000048, "Member 'PlayFabGroupsAPI_InviteToGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, CustomData) == 0x000058, "Member 'PlayFabGroupsAPI_InviteToGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_InviteToGroup, ReturnValue) == 0x000060, "Member 'PlayFabGroupsAPI_InviteToGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.IsMember
// 0x0060 (0x0060 - 0x0000)
struct PlayFabGroupsAPI_IsMember final
{
public:
	struct FGroupsIsMemberRequest                 Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsIsMemberResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_IsMember) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_IsMember");
static_assert(sizeof(PlayFabGroupsAPI_IsMember) == 0x000060, "Wrong size on PlayFabGroupsAPI_IsMember");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, Request) == 0x000000, "Member 'PlayFabGroupsAPI_IsMember::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, OnSuccess) == 0x000030, "Member 'PlayFabGroupsAPI_IsMember::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, OnFailure) == 0x000040, "Member 'PlayFabGroupsAPI_IsMember::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, CustomData) == 0x000050, "Member 'PlayFabGroupsAPI_IsMember::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_IsMember, ReturnValue) == 0x000058, "Member 'PlayFabGroupsAPI_IsMember::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListGroupApplications
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListGroupApplications final
{
public:
	struct FGroupsListGroupApplicationsRequest    Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListGroupApplicationsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListGroupApplications) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListGroupApplications");
static_assert(sizeof(PlayFabGroupsAPI_ListGroupApplications) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListGroupApplications");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListGroupApplications::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, OnSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListGroupApplications::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, OnFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListGroupApplications::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, CustomData) == 0x000038, "Member 'PlayFabGroupsAPI_ListGroupApplications::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupApplications, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListGroupApplications::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListGroupBlocks
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListGroupBlocks final
{
public:
	struct FGroupsListGroupBlocksRequest          Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListGroupBlocksResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListGroupBlocks) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListGroupBlocks");
static_assert(sizeof(PlayFabGroupsAPI_ListGroupBlocks) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListGroupBlocks");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListGroupBlocks::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, OnSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListGroupBlocks::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, OnFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListGroupBlocks::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, CustomData) == 0x000038, "Member 'PlayFabGroupsAPI_ListGroupBlocks::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupBlocks, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListGroupBlocks::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListGroupInvitations
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListGroupInvitations final
{
public:
	struct FGroupsListGroupInvitationsRequest     Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListGroupInvitationsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListGroupInvitations) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListGroupInvitations");
static_assert(sizeof(PlayFabGroupsAPI_ListGroupInvitations) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListGroupInvitations");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListGroupInvitations::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, OnSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListGroupInvitations::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, OnFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListGroupInvitations::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, CustomData) == 0x000038, "Member 'PlayFabGroupsAPI_ListGroupInvitations::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupInvitations, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListGroupInvitations::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListGroupMembers
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListGroupMembers final
{
public:
	struct FGroupsListGroupMembersRequest         Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListGroupMembersResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListGroupMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListGroupMembers");
static_assert(sizeof(PlayFabGroupsAPI_ListGroupMembers) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListGroupMembers");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, OnSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListGroupMembers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, OnFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListGroupMembers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, CustomData) == 0x000038, "Member 'PlayFabGroupsAPI_ListGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListGroupMembers, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListMembership
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListMembership final
{
public:
	struct FGroupsListMembershipRequest           Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListMembershipResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListMembership) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListMembership");
static_assert(sizeof(PlayFabGroupsAPI_ListMembership) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListMembership");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListMembership::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, OnSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListMembership::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, OnFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListMembership::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, CustomData) == 0x000038, "Member 'PlayFabGroupsAPI_ListMembership::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembership, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListMembership::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.ListMembershipOpportunities
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_ListMembershipOpportunities final
{
public:
	struct FGroupsListMembershipOpportunitiesRequest Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsListMembershipOpportunitiesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_ListMembershipOpportunities) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_ListMembershipOpportunities");
static_assert(sizeof(PlayFabGroupsAPI_ListMembershipOpportunities) == 0x000048, "Wrong size on PlayFabGroupsAPI_ListMembershipOpportunities");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, Request) == 0x000000, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, OnSuccess) == 0x000018, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, OnFailure) == 0x000028, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, CustomData) == 0x000038, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_ListMembershipOpportunities, ReturnValue) == 0x000040, "Member 'PlayFabGroupsAPI_ListMembershipOpportunities::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.RemoveGroupApplication
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_RemoveGroupApplication final
{
public:
	struct FGroupsRemoveGroupApplicationRequest   Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_RemoveGroupApplication) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_RemoveGroupApplication");
static_assert(sizeof(PlayFabGroupsAPI_RemoveGroupApplication) == 0x000050, "Wrong size on PlayFabGroupsAPI_RemoveGroupApplication");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, Request) == 0x000000, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, OnSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, OnFailure) == 0x000030, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupApplication, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_RemoveGroupApplication::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.RemoveGroupInvitation
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_RemoveGroupInvitation final
{
public:
	struct FGroupsRemoveGroupInvitationRequest    Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_RemoveGroupInvitation) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_RemoveGroupInvitation");
static_assert(sizeof(PlayFabGroupsAPI_RemoveGroupInvitation) == 0x000050, "Wrong size on PlayFabGroupsAPI_RemoveGroupInvitation");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, Request) == 0x000000, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, OnSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, OnFailure) == 0x000030, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveGroupInvitation, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_RemoveGroupInvitation::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.RemoveMembers
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_RemoveMembers final
{
public:
	struct FGroupsRemoveMembersRequest            Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_RemoveMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_RemoveMembers");
static_assert(sizeof(PlayFabGroupsAPI_RemoveMembers) == 0x000068, "Wrong size on PlayFabGroupsAPI_RemoveMembers");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, Request) == 0x000000, "Member 'PlayFabGroupsAPI_RemoveMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, OnSuccess) == 0x000038, "Member 'PlayFabGroupsAPI_RemoveMembers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, OnFailure) == 0x000048, "Member 'PlayFabGroupsAPI_RemoveMembers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, CustomData) == 0x000058, "Member 'PlayFabGroupsAPI_RemoveMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_RemoveMembers, ReturnValue) == 0x000060, "Member 'PlayFabGroupsAPI_RemoveMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.UnblockEntity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_UnblockEntity final
{
public:
	struct FGroupsUnblockEntityRequest            Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_UnblockEntity) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_UnblockEntity");
static_assert(sizeof(PlayFabGroupsAPI_UnblockEntity) == 0x000050, "Wrong size on PlayFabGroupsAPI_UnblockEntity");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, Request) == 0x000000, "Member 'PlayFabGroupsAPI_UnblockEntity::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, OnSuccess) == 0x000020, "Member 'PlayFabGroupsAPI_UnblockEntity::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, OnFailure) == 0x000030, "Member 'PlayFabGroupsAPI_UnblockEntity::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_UnblockEntity::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UnblockEntity, ReturnValue) == 0x000048, "Member 'PlayFabGroupsAPI_UnblockEntity::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.UpdateGroup
// 0x0080 (0x0080 - 0x0000)
struct PlayFabGroupsAPI_UpdateGroup final
{
public:
	struct FGroupsUpdateGroupRequest              Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsUpdateGroupResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_UpdateGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_UpdateGroup");
static_assert(sizeof(PlayFabGroupsAPI_UpdateGroup) == 0x000080, "Wrong size on PlayFabGroupsAPI_UpdateGroup");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, Request) == 0x000000, "Member 'PlayFabGroupsAPI_UpdateGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, OnSuccess) == 0x000050, "Member 'PlayFabGroupsAPI_UpdateGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, OnFailure) == 0x000060, "Member 'PlayFabGroupsAPI_UpdateGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, CustomData) == 0x000070, "Member 'PlayFabGroupsAPI_UpdateGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateGroup, ReturnValue) == 0x000078, "Member 'PlayFabGroupsAPI_UpdateGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.UpdateRole
// 0x0070 (0x0070 - 0x0000)
struct PlayFabGroupsAPI_UpdateRole final
{
public:
	struct FGroupsUpdateGroupRoleRequest          Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FGroupsUpdateGroupRoleResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabGroupsAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_UpdateRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_UpdateRole");
static_assert(sizeof(PlayFabGroupsAPI_UpdateRole) == 0x000070, "Wrong size on PlayFabGroupsAPI_UpdateRole");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, Request) == 0x000000, "Member 'PlayFabGroupsAPI_UpdateRole::Request' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, OnSuccess) == 0x000040, "Member 'PlayFabGroupsAPI_UpdateRole::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, OnFailure) == 0x000050, "Member 'PlayFabGroupsAPI_UpdateRole::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, CustomData) == 0x000060, "Member 'PlayFabGroupsAPI_UpdateRole::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_UpdateRole, ReturnValue) == 0x000068, "Member 'PlayFabGroupsAPI_UpdateRole::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabGroupsAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabGroupsAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessAcceptGroupApplication__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupApplication__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupApplication__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupApplication__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupApplication__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupApplication__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupApplication__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupApplication__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupApplication__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupApplication__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessAcceptGroupInvitation__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupInvitation__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupInvitation__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupInvitation__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupInvitation__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupInvitation__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupInvitation__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupInvitation__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupInvitation__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessAcceptGroupInvitation__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessAddMembers__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessAddMembers__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessAddMembers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessAddMembers__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessAddMembers__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessAddMembers__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessAddMembers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessAddMembers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessAddMembers__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessAddMembers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessApplyToGroup__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessApplyToGroup__DelegateSignature final
{
public:
	struct FGroupsApplyToGroupResponse            Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessApplyToGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessApplyToGroup__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessApplyToGroup__DelegateSignature) == 0x000030, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessApplyToGroup__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessApplyToGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessApplyToGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessApplyToGroup__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabGroupsAPI_DelegateOnSuccessApplyToGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessBlockEntity__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessBlockEntity__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessBlockEntity__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessBlockEntity__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessBlockEntity__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessBlockEntity__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessBlockEntity__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessBlockEntity__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessBlockEntity__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessBlockEntity__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessChangeMemberRole__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessChangeMemberRole__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessChangeMemberRole__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessChangeMemberRole__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessChangeMemberRole__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessChangeMemberRole__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessChangeMemberRole__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessChangeMemberRole__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessChangeMemberRole__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessChangeMemberRole__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessCreateGroup__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessCreateGroup__DelegateSignature final
{
public:
	struct FGroupsCreateGroupResponse             Result;                                            // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessCreateGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessCreateGroup__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessCreateGroup__DelegateSignature) == 0x000068, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessCreateGroup__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessCreateGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessCreateGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessCreateGroup__DelegateSignature, CustomData) == 0x000060, "Member 'PlayFabGroupsAPI_DelegateOnSuccessCreateGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessCreateRole__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessCreateRole__DelegateSignature final
{
public:
	struct FGroupsCreateGroupRoleResponse         Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessCreateRole__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessCreateRole__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessCreateRole__DelegateSignature) == 0x000038, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessCreateRole__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessCreateRole__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessCreateRole__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessCreateRole__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabGroupsAPI_DelegateOnSuccessCreateRole__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessDeleteGroup__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessDeleteGroup__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessDeleteGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessDeleteGroup__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessDeleteGroup__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessDeleteGroup__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessDeleteGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessDeleteGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessDeleteGroup__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessDeleteGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessDeleteRole__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessDeleteRole__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessDeleteRole__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessDeleteRole__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessDeleteRole__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessDeleteRole__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessDeleteRole__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessDeleteRole__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessDeleteRole__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessDeleteRole__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessGetGroup__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessGetGroup__DelegateSignature final
{
public:
	struct FGroupsGetGroupResponse                Result;                                            // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessGetGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessGetGroup__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessGetGroup__DelegateSignature) == 0x000068, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessGetGroup__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessGetGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessGetGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessGetGroup__DelegateSignature, CustomData) == 0x000060, "Member 'PlayFabGroupsAPI_DelegateOnSuccessGetGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessInviteToGroup__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessInviteToGroup__DelegateSignature final
{
public:
	struct FGroupsInviteToGroupResponse           Result;                                            // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessInviteToGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessInviteToGroup__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessInviteToGroup__DelegateSignature) == 0x000048, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessInviteToGroup__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessInviteToGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessInviteToGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessInviteToGroup__DelegateSignature, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_DelegateOnSuccessInviteToGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessIsMember__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessIsMember__DelegateSignature final
{
public:
	struct FGroupsIsMemberResponse                Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessIsMember__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessIsMember__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessIsMember__DelegateSignature) == 0x000018, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessIsMember__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessIsMember__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessIsMember__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessIsMember__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabGroupsAPI_DelegateOnSuccessIsMember__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListGroupApplications__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessListGroupApplications__DelegateSignature final
{
public:
	struct FGroupsListGroupApplicationsResponse   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessListGroupApplications__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessListGroupApplications__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessListGroupApplications__DelegateSignature) == 0x000020, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessListGroupApplications__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListGroupApplications__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListGroupApplications__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListGroupApplications__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListGroupApplications__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListGroupBlocks__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessListGroupBlocks__DelegateSignature final
{
public:
	struct FGroupsListGroupBlocksResponse         Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessListGroupBlocks__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessListGroupBlocks__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessListGroupBlocks__DelegateSignature) == 0x000020, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessListGroupBlocks__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListGroupBlocks__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListGroupBlocks__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListGroupBlocks__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListGroupBlocks__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListGroupInvitations__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessListGroupInvitations__DelegateSignature final
{
public:
	struct FGroupsListGroupInvitationsResponse    Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessListGroupInvitations__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessListGroupInvitations__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessListGroupInvitations__DelegateSignature) == 0x000020, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessListGroupInvitations__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListGroupInvitations__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListGroupInvitations__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListGroupInvitations__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListGroupInvitations__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListGroupMembers__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessListGroupMembers__DelegateSignature final
{
public:
	struct FGroupsListGroupMembersResponse        Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessListGroupMembers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessListGroupMembers__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessListGroupMembers__DelegateSignature) == 0x000020, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessListGroupMembers__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListGroupMembers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListGroupMembers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListGroupMembers__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListGroupMembers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListMembership__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessListMembership__DelegateSignature final
{
public:
	struct FGroupsListMembershipResponse          Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessListMembership__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessListMembership__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessListMembership__DelegateSignature) == 0x000020, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessListMembership__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListMembership__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListMembership__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListMembership__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListMembership__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessListMembershipOpportunities__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessListMembershipOpportunities__DelegateSignature final
{
public:
	struct FGroupsListMembershipOpportunitiesResponse Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessListMembershipOpportunities__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessListMembershipOpportunities__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessListMembershipOpportunities__DelegateSignature) == 0x000030, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessListMembershipOpportunities__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListMembershipOpportunities__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListMembershipOpportunities__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessListMembershipOpportunities__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabGroupsAPI_DelegateOnSuccessListMembershipOpportunities__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessRemoveGroupApplication__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupApplication__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupApplication__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupApplication__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupApplication__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupApplication__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupApplication__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupApplication__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupApplication__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupApplication__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessRemoveGroupInvitation__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupInvitation__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupInvitation__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupInvitation__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupInvitation__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupInvitation__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupInvitation__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupInvitation__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupInvitation__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessRemoveGroupInvitation__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessRemoveMembers__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessRemoveMembers__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessRemoveMembers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessRemoveMembers__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessRemoveMembers__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessRemoveMembers__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessRemoveMembers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessRemoveMembers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessRemoveMembers__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessRemoveMembers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessUnblockEntity__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessUnblockEntity__DelegateSignature final
{
public:
	struct FGroupsEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessUnblockEntity__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessUnblockEntity__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessUnblockEntity__DelegateSignature) == 0x000010, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessUnblockEntity__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessUnblockEntity__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessUnblockEntity__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessUnblockEntity__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabGroupsAPI_DelegateOnSuccessUnblockEntity__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessUpdateGroup__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessUpdateGroup__DelegateSignature final
{
public:
	struct FGroupsUpdateGroupResponse             Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessUpdateGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessUpdateGroup__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessUpdateGroup__DelegateSignature) == 0x000028, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessUpdateGroup__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessUpdateGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessUpdateGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessUpdateGroup__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabGroupsAPI_DelegateOnSuccessUpdateGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabGroupsAPI.DelegateOnSuccessUpdateRole__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabGroupsAPI_DelegateOnSuccessUpdateRole__DelegateSignature final
{
public:
	struct FGroupsUpdateGroupRoleResponse         Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsAPI_DelegateOnSuccessUpdateRole__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_DelegateOnSuccessUpdateRole__DelegateSignature");
static_assert(sizeof(PlayFabGroupsAPI_DelegateOnSuccessUpdateRole__DelegateSignature) == 0x000028, "Wrong size on PlayFabGroupsAPI_DelegateOnSuccessUpdateRole__DelegateSignature");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessUpdateRole__DelegateSignature, Result) == 0x000000, "Member 'PlayFabGroupsAPI_DelegateOnSuccessUpdateRole__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_DelegateOnSuccessUpdateRole__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabGroupsAPI_DelegateOnSuccessUpdateRole__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperAcceptGroupApplication
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperAcceptGroupApplication final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperAcceptGroupApplication) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperAcceptGroupApplication");
static_assert(sizeof(PlayFabGroupsAPI_HelperAcceptGroupApplication) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperAcceptGroupApplication");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupApplication, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperAcceptGroupApplication::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupApplication, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperAcceptGroupApplication::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupApplication, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperAcceptGroupApplication::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperAcceptGroupInvitation
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperAcceptGroupInvitation final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperAcceptGroupInvitation) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperAcceptGroupInvitation");
static_assert(sizeof(PlayFabGroupsAPI_HelperAcceptGroupInvitation) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperAcceptGroupInvitation");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupInvitation, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperAcceptGroupInvitation::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupInvitation, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperAcceptGroupInvitation::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAcceptGroupInvitation, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperAcceptGroupInvitation::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperAddMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperAddMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperAddMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperAddMembers");
static_assert(sizeof(PlayFabGroupsAPI_HelperAddMembers) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperAddMembers");
static_assert(offsetof(PlayFabGroupsAPI_HelperAddMembers, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperAddMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAddMembers, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperAddMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperAddMembers, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperAddMembers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperApplyToGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperApplyToGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperApplyToGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperApplyToGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperApplyToGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperApplyToGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperApplyToGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperApplyToGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperApplyToGroup, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperApplyToGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperApplyToGroup, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperApplyToGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperBlockEntity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperBlockEntity final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperBlockEntity) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperBlockEntity");
static_assert(sizeof(PlayFabGroupsAPI_HelperBlockEntity) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperBlockEntity");
static_assert(offsetof(PlayFabGroupsAPI_HelperBlockEntity, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperBlockEntity::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperBlockEntity, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperBlockEntity::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperBlockEntity, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperBlockEntity::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperChangeMemberRole
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperChangeMemberRole final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AC9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperChangeMemberRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperChangeMemberRole");
static_assert(sizeof(PlayFabGroupsAPI_HelperChangeMemberRole) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperChangeMemberRole");
static_assert(offsetof(PlayFabGroupsAPI_HelperChangeMemberRole, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperChangeMemberRole::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperChangeMemberRole, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperChangeMemberRole::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperChangeMemberRole, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperChangeMemberRole::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperCreateGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperCreateGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ACA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperCreateGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperCreateGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperCreateGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperCreateGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperCreateGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateGroup, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperCreateGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateGroup, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperCreateGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperCreateRole
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperCreateRole final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ACB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperCreateRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperCreateRole");
static_assert(sizeof(PlayFabGroupsAPI_HelperCreateRole) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperCreateRole");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateRole, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperCreateRole::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateRole, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperCreateRole::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperCreateRole, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperCreateRole::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperDeleteGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperDeleteGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ACC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperDeleteGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperDeleteGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperDeleteGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperDeleteGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperDeleteGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteGroup, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperDeleteGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteGroup, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperDeleteGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperDeleteRole
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperDeleteRole final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ACD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperDeleteRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperDeleteRole");
static_assert(sizeof(PlayFabGroupsAPI_HelperDeleteRole) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperDeleteRole");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteRole, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperDeleteRole::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteRole, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperDeleteRole::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperDeleteRole, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperDeleteRole::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperGetGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperGetGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ACE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperGetGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperGetGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperGetGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperGetGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperGetGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperGetGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperGetGroup, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperGetGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperGetGroup, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperGetGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperInviteToGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperInviteToGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ACF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperInviteToGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperInviteToGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperInviteToGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperInviteToGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperInviteToGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperInviteToGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperInviteToGroup, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperInviteToGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperInviteToGroup, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperInviteToGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperIsMember
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperIsMember final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperIsMember) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperIsMember");
static_assert(sizeof(PlayFabGroupsAPI_HelperIsMember) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperIsMember");
static_assert(offsetof(PlayFabGroupsAPI_HelperIsMember, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperIsMember::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperIsMember, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperIsMember::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperIsMember, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperIsMember::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListGroupApplications
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListGroupApplications final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListGroupApplications) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListGroupApplications");
static_assert(sizeof(PlayFabGroupsAPI_HelperListGroupApplications) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListGroupApplications");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupApplications, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListGroupApplications::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupApplications, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListGroupApplications::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupApplications, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListGroupApplications::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListGroupBlocks
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListGroupBlocks final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListGroupBlocks) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListGroupBlocks");
static_assert(sizeof(PlayFabGroupsAPI_HelperListGroupBlocks) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListGroupBlocks");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupBlocks, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListGroupBlocks::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupBlocks, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListGroupBlocks::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupBlocks, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListGroupBlocks::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListGroupInvitations
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListGroupInvitations final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListGroupInvitations) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListGroupInvitations");
static_assert(sizeof(PlayFabGroupsAPI_HelperListGroupInvitations) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListGroupInvitations");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupInvitations, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListGroupInvitations::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupInvitations, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListGroupInvitations::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupInvitations, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListGroupInvitations::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListGroupMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListGroupMembers");
static_assert(sizeof(PlayFabGroupsAPI_HelperListGroupMembers) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListGroupMembers");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupMembers, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupMembers, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListGroupMembers, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListGroupMembers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListMembership
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListMembership final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListMembership) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListMembership");
static_assert(sizeof(PlayFabGroupsAPI_HelperListMembership) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListMembership");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembership, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListMembership::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembership, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListMembership::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembership, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListMembership::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperListMembershipOpportunities
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperListMembershipOpportunities final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperListMembershipOpportunities) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperListMembershipOpportunities");
static_assert(sizeof(PlayFabGroupsAPI_HelperListMembershipOpportunities) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperListMembershipOpportunities");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembershipOpportunities, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperListMembershipOpportunities::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembershipOpportunities, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperListMembershipOpportunities::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperListMembershipOpportunities, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperListMembershipOpportunities::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperRemoveGroupApplication
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperRemoveGroupApplication final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperRemoveGroupApplication) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperRemoveGroupApplication");
static_assert(sizeof(PlayFabGroupsAPI_HelperRemoveGroupApplication) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperRemoveGroupApplication");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupApplication, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperRemoveGroupApplication::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupApplication, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperRemoveGroupApplication::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupApplication, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperRemoveGroupApplication::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperRemoveGroupInvitation
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperRemoveGroupInvitation final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperRemoveGroupInvitation) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperRemoveGroupInvitation");
static_assert(sizeof(PlayFabGroupsAPI_HelperRemoveGroupInvitation) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperRemoveGroupInvitation");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupInvitation, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperRemoveGroupInvitation::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupInvitation, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperRemoveGroupInvitation::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveGroupInvitation, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperRemoveGroupInvitation::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperRemoveMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperRemoveMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AD9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperRemoveMembers) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperRemoveMembers");
static_assert(sizeof(PlayFabGroupsAPI_HelperRemoveMembers) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperRemoveMembers");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveMembers, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperRemoveMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveMembers, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperRemoveMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperRemoveMembers, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperRemoveMembers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperUnblockEntity
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperUnblockEntity final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ADA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperUnblockEntity) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperUnblockEntity");
static_assert(sizeof(PlayFabGroupsAPI_HelperUnblockEntity) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperUnblockEntity");
static_assert(offsetof(PlayFabGroupsAPI_HelperUnblockEntity, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperUnblockEntity::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUnblockEntity, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperUnblockEntity::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUnblockEntity, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperUnblockEntity::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperUpdateGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperUpdateGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ADB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperUpdateGroup) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperUpdateGroup");
static_assert(sizeof(PlayFabGroupsAPI_HelperUpdateGroup) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperUpdateGroup");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateGroup, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperUpdateGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateGroup, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperUpdateGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateGroup, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperUpdateGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsAPI.HelperUpdateRole
// 0x0050 (0x0050 - 0x0000)
struct PlayFabGroupsAPI_HelperUpdateRole final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ADC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabGroupsAPI_HelperUpdateRole) == 0x000008, "Wrong alignment on PlayFabGroupsAPI_HelperUpdateRole");
static_assert(sizeof(PlayFabGroupsAPI_HelperUpdateRole) == 0x000050, "Wrong size on PlayFabGroupsAPI_HelperUpdateRole");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateRole, Response) == 0x000000, "Member 'PlayFabGroupsAPI_HelperUpdateRole::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateRole, CustomData) == 0x000040, "Member 'PlayFabGroupsAPI_HelperUpdateRole::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsAPI_HelperUpdateRole, Successful) == 0x000048, "Member 'PlayFabGroupsAPI_HelperUpdateRole::Successful' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeApplyToGroupResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeApplyToGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsApplyToGroupResponse            ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeApplyToGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeApplyToGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeApplyToGroupResponseResponse) == 0x000030, "Wrong size on PlayFabGroupsModelDecoder_DecodeApplyToGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeApplyToGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeApplyToGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeApplyToGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeApplyToGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeCreateGroupResponseResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeCreateGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsCreateGroupResponse             ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeCreateGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeCreateGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeCreateGroupResponseResponse) == 0x000068, "Wrong size on PlayFabGroupsModelDecoder_DecodeCreateGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeCreateGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeCreateGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeCreateGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeCreateGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeCreateGroupRoleResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeCreateGroupRoleResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsCreateGroupRoleResponse         ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeCreateGroupRoleResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeCreateGroupRoleResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeCreateGroupRoleResponseResponse) == 0x000038, "Wrong size on PlayFabGroupsModelDecoder_DecodeCreateGroupRoleResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeCreateGroupRoleResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeCreateGroupRoleResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeCreateGroupRoleResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeCreateGroupRoleResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsEmptyResponse                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeEmptyResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabGroupsModelDecoder_DecodeEmptyResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeGetGroupResponseResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeGetGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsGetGroupResponse                ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeGetGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeGetGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeGetGroupResponseResponse) == 0x000068, "Wrong size on PlayFabGroupsModelDecoder_DecodeGetGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeGetGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeGetGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeGetGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeGetGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeInviteToGroupResponseResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeInviteToGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsInviteToGroupResponse           ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeInviteToGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeInviteToGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeInviteToGroupResponseResponse) == 0x000048, "Wrong size on PlayFabGroupsModelDecoder_DecodeInviteToGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeInviteToGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeInviteToGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeInviteToGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeInviteToGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeIsMemberResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeIsMemberResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsIsMemberResponse                ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeIsMemberResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeIsMemberResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeIsMemberResponseResponse) == 0x000018, "Wrong size on PlayFabGroupsModelDecoder_DecodeIsMemberResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeIsMemberResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeIsMemberResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeIsMemberResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeIsMemberResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupApplicationsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeListGroupApplicationsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListGroupApplicationsResponse   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeListGroupApplicationsResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeListGroupApplicationsResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeListGroupApplicationsResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_DecodeListGroupApplicationsResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListGroupApplicationsResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeListGroupApplicationsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListGroupApplicationsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeListGroupApplicationsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupBlocksResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeListGroupBlocksResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListGroupBlocksResponse         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeListGroupBlocksResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeListGroupBlocksResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeListGroupBlocksResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_DecodeListGroupBlocksResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListGroupBlocksResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeListGroupBlocksResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListGroupBlocksResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeListGroupBlocksResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupInvitationsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeListGroupInvitationsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListGroupInvitationsResponse    ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeListGroupInvitationsResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeListGroupInvitationsResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeListGroupInvitationsResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_DecodeListGroupInvitationsResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListGroupInvitationsResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeListGroupInvitationsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListGroupInvitationsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeListGroupInvitationsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupMembersResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeListGroupMembersResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListGroupMembersResponse        ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeListGroupMembersResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeListGroupMembersResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeListGroupMembersResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_DecodeListGroupMembersResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListGroupMembersResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeListGroupMembersResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListGroupMembersResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeListGroupMembersResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListMembershipOpportunitiesResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeListMembershipOpportunitiesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListMembershipOpportunitiesResponse ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeListMembershipOpportunitiesResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeListMembershipOpportunitiesResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeListMembershipOpportunitiesResponseResponse) == 0x000030, "Wrong size on PlayFabGroupsModelDecoder_DecodeListMembershipOpportunitiesResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListMembershipOpportunitiesResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeListMembershipOpportunitiesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListMembershipOpportunitiesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeListMembershipOpportunitiesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeListMembershipResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeListMembershipResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsListMembershipResponse          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeListMembershipResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeListMembershipResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeListMembershipResponseResponse) == 0x000020, "Wrong size on PlayFabGroupsModelDecoder_DecodeListMembershipResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListMembershipResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeListMembershipResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeListMembershipResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeListMembershipResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeUpdateGroupResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeUpdateGroupResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsUpdateGroupResponse             ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeUpdateGroupResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeUpdateGroupResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeUpdateGroupResponseResponse) == 0x000028, "Wrong size on PlayFabGroupsModelDecoder_DecodeUpdateGroupResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeUpdateGroupResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeUpdateGroupResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeUpdateGroupResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeUpdateGroupResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabGroupsModelDecoder.decodeUpdateGroupRoleResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabGroupsModelDecoder_DecodeUpdateGroupRoleResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGroupsUpdateGroupRoleResponse         ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabGroupsModelDecoder_DecodeUpdateGroupRoleResponseResponse) == 0x000008, "Wrong alignment on PlayFabGroupsModelDecoder_DecodeUpdateGroupRoleResponseResponse");
static_assert(sizeof(PlayFabGroupsModelDecoder_DecodeUpdateGroupRoleResponseResponse) == 0x000028, "Wrong size on PlayFabGroupsModelDecoder_DecodeUpdateGroupRoleResponseResponse");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeUpdateGroupRoleResponseResponse, Response) == 0x000000, "Member 'PlayFabGroupsModelDecoder_DecodeUpdateGroupRoleResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabGroupsModelDecoder_DecodeUpdateGroupRoleResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabGroupsModelDecoder_DecodeUpdateGroupRoleResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.GetDetails
// 0x0040 (0x0040 - 0x0000)
struct PlayFabInsightsAPI_GetDetails final
{
public:
	struct FInsightsInsightsEmptyRequest          Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsGetDetailsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_GetDetails) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_GetDetails");
static_assert(sizeof(PlayFabInsightsAPI_GetDetails) == 0x000040, "Wrong size on PlayFabInsightsAPI_GetDetails");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, Request) == 0x000000, "Member 'PlayFabInsightsAPI_GetDetails::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, OnSuccess) == 0x000010, "Member 'PlayFabInsightsAPI_GetDetails::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, OnFailure) == 0x000020, "Member 'PlayFabInsightsAPI_GetDetails::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, CustomData) == 0x000030, "Member 'PlayFabInsightsAPI_GetDetails::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetDetails, ReturnValue) == 0x000038, "Member 'PlayFabInsightsAPI_GetDetails::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.GetLimits
// 0x0040 (0x0040 - 0x0000)
struct PlayFabInsightsAPI_GetLimits final
{
public:
	struct FInsightsInsightsEmptyRequest          Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsGetLimitsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_GetLimits) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_GetLimits");
static_assert(sizeof(PlayFabInsightsAPI_GetLimits) == 0x000040, "Wrong size on PlayFabInsightsAPI_GetLimits");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, Request) == 0x000000, "Member 'PlayFabInsightsAPI_GetLimits::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, OnSuccess) == 0x000010, "Member 'PlayFabInsightsAPI_GetLimits::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, OnFailure) == 0x000020, "Member 'PlayFabInsightsAPI_GetLimits::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, CustomData) == 0x000030, "Member 'PlayFabInsightsAPI_GetLimits::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetLimits, ReturnValue) == 0x000038, "Member 'PlayFabInsightsAPI_GetLimits::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.GetOperationStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_GetOperationStatus final
{
public:
	struct FInsightsInsightsGetOperationStatusRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsGetOperationStatusResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_GetOperationStatus) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_GetOperationStatus");
static_assert(sizeof(PlayFabInsightsAPI_GetOperationStatus) == 0x000050, "Wrong size on PlayFabInsightsAPI_GetOperationStatus");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, Request) == 0x000000, "Member 'PlayFabInsightsAPI_GetOperationStatus::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, OnSuccess) == 0x000020, "Member 'PlayFabInsightsAPI_GetOperationStatus::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, OnFailure) == 0x000030, "Member 'PlayFabInsightsAPI_GetOperationStatus::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, CustomData) == 0x000040, "Member 'PlayFabInsightsAPI_GetOperationStatus::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetOperationStatus, ReturnValue) == 0x000048, "Member 'PlayFabInsightsAPI_GetOperationStatus::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.GetPendingOperations
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_GetPendingOperations final
{
public:
	struct FInsightsInsightsGetPendingOperationsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsGetPendingOperationsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_GetPendingOperations) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_GetPendingOperations");
static_assert(sizeof(PlayFabInsightsAPI_GetPendingOperations) == 0x000050, "Wrong size on PlayFabInsightsAPI_GetPendingOperations");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, Request) == 0x000000, "Member 'PlayFabInsightsAPI_GetPendingOperations::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, OnSuccess) == 0x000020, "Member 'PlayFabInsightsAPI_GetPendingOperations::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, OnFailure) == 0x000030, "Member 'PlayFabInsightsAPI_GetPendingOperations::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, CustomData) == 0x000040, "Member 'PlayFabInsightsAPI_GetPendingOperations::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_GetPendingOperations, ReturnValue) == 0x000048, "Member 'PlayFabInsightsAPI_GetPendingOperations::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.SetPerformance
// 0x0048 (0x0048 - 0x0000)
struct PlayFabInsightsAPI_SetPerformance final
{
public:
	struct FInsightsInsightsSetPerformanceRequest Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_SetPerformance) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_SetPerformance");
static_assert(sizeof(PlayFabInsightsAPI_SetPerformance) == 0x000048, "Wrong size on PlayFabInsightsAPI_SetPerformance");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, Request) == 0x000000, "Member 'PlayFabInsightsAPI_SetPerformance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, OnSuccess) == 0x000018, "Member 'PlayFabInsightsAPI_SetPerformance::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, OnFailure) == 0x000028, "Member 'PlayFabInsightsAPI_SetPerformance::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, CustomData) == 0x000038, "Member 'PlayFabInsightsAPI_SetPerformance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetPerformance, ReturnValue) == 0x000040, "Member 'PlayFabInsightsAPI_SetPerformance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.SetStorageRetention
// 0x0048 (0x0048 - 0x0000)
struct PlayFabInsightsAPI_SetStorageRetention final
{
public:
	struct FInsightsInsightsSetStorageRetentionRequest Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabInsightsAPI*                    ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_SetStorageRetention) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_SetStorageRetention");
static_assert(sizeof(PlayFabInsightsAPI_SetStorageRetention) == 0x000048, "Wrong size on PlayFabInsightsAPI_SetStorageRetention");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, Request) == 0x000000, "Member 'PlayFabInsightsAPI_SetStorageRetention::Request' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, OnSuccess) == 0x000018, "Member 'PlayFabInsightsAPI_SetStorageRetention::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, OnFailure) == 0x000028, "Member 'PlayFabInsightsAPI_SetStorageRetention::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, CustomData) == 0x000038, "Member 'PlayFabInsightsAPI_SetStorageRetention::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_SetStorageRetention, ReturnValue) == 0x000040, "Member 'PlayFabInsightsAPI_SetStorageRetention::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabInsightsAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabInsightsAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabInsightsAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabInsightsAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabInsightsAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabInsightsAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabInsightsAPI.DelegateOnSuccessGetDetails__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct PlayFabInsightsAPI_DelegateOnSuccessGetDetails__DelegateSignature final
{
public:
	struct FInsightsInsightsGetDetailsResponse    Result;                                            // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_DelegateOnSuccessGetDetails__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_DelegateOnSuccessGetDetails__DelegateSignature");
static_assert(sizeof(PlayFabInsightsAPI_DelegateOnSuccessGetDetails__DelegateSignature) == 0x000048, "Wrong size on PlayFabInsightsAPI_DelegateOnSuccessGetDetails__DelegateSignature");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessGetDetails__DelegateSignature, Result) == 0x000000, "Member 'PlayFabInsightsAPI_DelegateOnSuccessGetDetails__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessGetDetails__DelegateSignature, CustomData) == 0x000040, "Member 'PlayFabInsightsAPI_DelegateOnSuccessGetDetails__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabInsightsAPI.DelegateOnSuccessGetLimits__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabInsightsAPI_DelegateOnSuccessGetLimits__DelegateSignature final
{
public:
	struct FInsightsInsightsGetLimitsResponse     Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_DelegateOnSuccessGetLimits__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_DelegateOnSuccessGetLimits__DelegateSignature");
static_assert(sizeof(PlayFabInsightsAPI_DelegateOnSuccessGetLimits__DelegateSignature) == 0x000030, "Wrong size on PlayFabInsightsAPI_DelegateOnSuccessGetLimits__DelegateSignature");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessGetLimits__DelegateSignature, Result) == 0x000000, "Member 'PlayFabInsightsAPI_DelegateOnSuccessGetLimits__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessGetLimits__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabInsightsAPI_DelegateOnSuccessGetLimits__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabInsightsAPI.DelegateOnSuccessGetOperationStatus__DelegateSignature
// 0x0088 (0x0088 - 0x0000)
struct PlayFabInsightsAPI_DelegateOnSuccessGetOperationStatus__DelegateSignature final
{
public:
	struct FInsightsInsightsGetOperationStatusResponse Result;                                            // 0x0000(0x0080)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_DelegateOnSuccessGetOperationStatus__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_DelegateOnSuccessGetOperationStatus__DelegateSignature");
static_assert(sizeof(PlayFabInsightsAPI_DelegateOnSuccessGetOperationStatus__DelegateSignature) == 0x000088, "Wrong size on PlayFabInsightsAPI_DelegateOnSuccessGetOperationStatus__DelegateSignature");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessGetOperationStatus__DelegateSignature, Result) == 0x000000, "Member 'PlayFabInsightsAPI_DelegateOnSuccessGetOperationStatus__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessGetOperationStatus__DelegateSignature, CustomData) == 0x000080, "Member 'PlayFabInsightsAPI_DelegateOnSuccessGetOperationStatus__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabInsightsAPI.DelegateOnSuccessGetPendingOperations__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabInsightsAPI_DelegateOnSuccessGetPendingOperations__DelegateSignature final
{
public:
	struct FInsightsInsightsGetPendingOperationsResponse Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_DelegateOnSuccessGetPendingOperations__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_DelegateOnSuccessGetPendingOperations__DelegateSignature");
static_assert(sizeof(PlayFabInsightsAPI_DelegateOnSuccessGetPendingOperations__DelegateSignature) == 0x000020, "Wrong size on PlayFabInsightsAPI_DelegateOnSuccessGetPendingOperations__DelegateSignature");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessGetPendingOperations__DelegateSignature, Result) == 0x000000, "Member 'PlayFabInsightsAPI_DelegateOnSuccessGetPendingOperations__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessGetPendingOperations__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabInsightsAPI_DelegateOnSuccessGetPendingOperations__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabInsightsAPI.DelegateOnSuccessSetPerformance__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabInsightsAPI_DelegateOnSuccessSetPerformance__DelegateSignature final
{
public:
	struct FInsightsInsightsOperationResponse     Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_DelegateOnSuccessSetPerformance__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_DelegateOnSuccessSetPerformance__DelegateSignature");
static_assert(sizeof(PlayFabInsightsAPI_DelegateOnSuccessSetPerformance__DelegateSignature) == 0x000040, "Wrong size on PlayFabInsightsAPI_DelegateOnSuccessSetPerformance__DelegateSignature");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessSetPerformance__DelegateSignature, Result) == 0x000000, "Member 'PlayFabInsightsAPI_DelegateOnSuccessSetPerformance__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessSetPerformance__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabInsightsAPI_DelegateOnSuccessSetPerformance__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabInsightsAPI.DelegateOnSuccessSetStorageRetention__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabInsightsAPI_DelegateOnSuccessSetStorageRetention__DelegateSignature final
{
public:
	struct FInsightsInsightsOperationResponse     Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsAPI_DelegateOnSuccessSetStorageRetention__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_DelegateOnSuccessSetStorageRetention__DelegateSignature");
static_assert(sizeof(PlayFabInsightsAPI_DelegateOnSuccessSetStorageRetention__DelegateSignature) == 0x000040, "Wrong size on PlayFabInsightsAPI_DelegateOnSuccessSetStorageRetention__DelegateSignature");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessSetStorageRetention__DelegateSignature, Result) == 0x000000, "Member 'PlayFabInsightsAPI_DelegateOnSuccessSetStorageRetention__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_DelegateOnSuccessSetStorageRetention__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabInsightsAPI_DelegateOnSuccessSetStorageRetention__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperGetDetails
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperGetDetails final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1ADF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperGetDetails) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperGetDetails");
static_assert(sizeof(PlayFabInsightsAPI_HelperGetDetails) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperGetDetails");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetDetails, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperGetDetails::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetDetails, CustomData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperGetDetails::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetDetails, Successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperGetDetails::Successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperGetLimits
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperGetLimits final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AE0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperGetLimits) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperGetLimits");
static_assert(sizeof(PlayFabInsightsAPI_HelperGetLimits) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperGetLimits");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetLimits, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperGetLimits::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetLimits, CustomData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperGetLimits::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetLimits, Successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperGetLimits::Successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperGetOperationStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperGetOperationStatus final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AE1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperGetOperationStatus) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperGetOperationStatus");
static_assert(sizeof(PlayFabInsightsAPI_HelperGetOperationStatus) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperGetOperationStatus");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetOperationStatus, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperGetOperationStatus::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetOperationStatus, CustomData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperGetOperationStatus::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetOperationStatus, Successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperGetOperationStatus::Successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperGetPendingOperations
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperGetPendingOperations final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AE2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperGetPendingOperations) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperGetPendingOperations");
static_assert(sizeof(PlayFabInsightsAPI_HelperGetPendingOperations) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperGetPendingOperations");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetPendingOperations, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperGetPendingOperations::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetPendingOperations, CustomData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperGetPendingOperations::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperGetPendingOperations, Successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperGetPendingOperations::Successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperSetPerformance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperSetPerformance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AE3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperSetPerformance) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperSetPerformance");
static_assert(sizeof(PlayFabInsightsAPI_HelperSetPerformance) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperSetPerformance");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetPerformance, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperSetPerformance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetPerformance, CustomData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperSetPerformance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetPerformance, Successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperSetPerformance::Successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsAPI.HelperSetStorageRetention
// 0x0050 (0x0050 - 0x0000)
struct PlayFabInsightsAPI_HelperSetStorageRetention final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AE4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabInsightsAPI_HelperSetStorageRetention) == 0x000008, "Wrong alignment on PlayFabInsightsAPI_HelperSetStorageRetention");
static_assert(sizeof(PlayFabInsightsAPI_HelperSetStorageRetention) == 0x000050, "Wrong size on PlayFabInsightsAPI_HelperSetStorageRetention");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetStorageRetention, Response) == 0x000000, "Member 'PlayFabInsightsAPI_HelperSetStorageRetention::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetStorageRetention, CustomData) == 0x000040, "Member 'PlayFabInsightsAPI_HelperSetStorageRetention::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsAPI_HelperSetStorageRetention, Successful) == 0x000048, "Member 'PlayFabInsightsAPI_HelperSetStorageRetention::Successful' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetDetailsResponseResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabInsightsModelDecoder_DecodeInsightsGetDetailsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsGetDetailsResponse    ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_DecodeInsightsGetDetailsResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_DecodeInsightsGetDetailsResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_DecodeInsightsGetDetailsResponseResponse) == 0x000048, "Wrong size on PlayFabInsightsModelDecoder_DecodeInsightsGetDetailsResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsGetDetailsResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsGetDetailsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsGetDetailsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsGetDetailsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetLimitsResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabInsightsModelDecoder_DecodeInsightsGetLimitsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsGetLimitsResponse     ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_DecodeInsightsGetLimitsResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_DecodeInsightsGetLimitsResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_DecodeInsightsGetLimitsResponseResponse) == 0x000030, "Wrong size on PlayFabInsightsModelDecoder_DecodeInsightsGetLimitsResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsGetLimitsResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsGetLimitsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsGetLimitsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsGetLimitsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetOperationStatusResponseResponse
// 0x0088 (0x0088 - 0x0000)
struct PlayFabInsightsModelDecoder_DecodeInsightsGetOperationStatusResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsGetOperationStatusResponse ReturnValue;                                       // 0x0008(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_DecodeInsightsGetOperationStatusResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_DecodeInsightsGetOperationStatusResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_DecodeInsightsGetOperationStatusResponseResponse) == 0x000088, "Wrong size on PlayFabInsightsModelDecoder_DecodeInsightsGetOperationStatusResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsGetOperationStatusResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsGetOperationStatusResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsGetOperationStatusResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsGetOperationStatusResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetPendingOperationsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabInsightsModelDecoder_DecodeInsightsGetPendingOperationsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsGetPendingOperationsResponse ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_DecodeInsightsGetPendingOperationsResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_DecodeInsightsGetPendingOperationsResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_DecodeInsightsGetPendingOperationsResponseResponse) == 0x000020, "Wrong size on PlayFabInsightsModelDecoder_DecodeInsightsGetPendingOperationsResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsGetPendingOperationsResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsGetPendingOperationsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsGetPendingOperationsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsGetPendingOperationsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsOperationResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabInsightsModelDecoder_DecodeInsightsOperationResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInsightsInsightsOperationResponse     ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabInsightsModelDecoder_DecodeInsightsOperationResponseResponse) == 0x000008, "Wrong alignment on PlayFabInsightsModelDecoder_DecodeInsightsOperationResponseResponse");
static_assert(sizeof(PlayFabInsightsModelDecoder_DecodeInsightsOperationResponseResponse) == 0x000040, "Wrong size on PlayFabInsightsModelDecoder_DecodeInsightsOperationResponseResponse");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsOperationResponseResponse, Response) == 0x000000, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsOperationResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabInsightsModelDecoder_DecodeInsightsOperationResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabInsightsModelDecoder_DecodeInsightsOperationResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.ConstructJsonObject
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_ConstructJsonObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonObject*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_ConstructJsonObject) == 0x000008, "Wrong alignment on PlayFabJsonObject_ConstructJsonObject");
static_assert(sizeof(PlayFabJsonObject_ConstructJsonObject) == 0x000010, "Wrong size on PlayFabJsonObject_ConstructJsonObject");
static_assert(offsetof(PlayFabJsonObject_ConstructJsonObject, WorldContextObject) == 0x000000, "Member 'PlayFabJsonObject_ConstructJsonObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_ConstructJsonObject, ReturnValue) == 0x000008, "Member 'PlayFabJsonObject_ConstructJsonObject::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.DecodeJson
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_DecodeJson final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AE6[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_DecodeJson) == 0x000008, "Wrong alignment on PlayFabJsonObject_DecodeJson");
static_assert(sizeof(PlayFabJsonObject_DecodeJson) == 0x000018, "Wrong size on PlayFabJsonObject_DecodeJson");
static_assert(offsetof(PlayFabJsonObject_DecodeJson, JsonString) == 0x000000, "Member 'PlayFabJsonObject_DecodeJson::JsonString' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_DecodeJson, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_DecodeJson::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonValue*>              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetArrayField");
static_assert(sizeof(PlayFabJsonObject_GetArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetArrayField");
static_assert(offsetof(PlayFabJsonObject_GetArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetBoolArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetBoolArrayField");
static_assert(sizeof(PlayFabJsonObject_GetBoolArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetBoolArrayField");
static_assert(offsetof(PlayFabJsonObject_GetBoolArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetBoolArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetBoolArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetFieldNames
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_GetFieldNames final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetFieldNames) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetFieldNames");
static_assert(sizeof(PlayFabJsonObject_GetFieldNames) == 0x000010, "Wrong size on PlayFabJsonObject_GetFieldNames");
static_assert(offsetof(PlayFabJsonObject_GetFieldNames, ReturnValue) == 0x000000, "Member 'PlayFabJsonObject_GetFieldNames::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetNumberArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetNumberArrayField");
static_assert(sizeof(PlayFabJsonObject_GetNumberArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetNumberArrayField");
static_assert(offsetof(PlayFabJsonObject_GetNumberArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetNumberArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetNumberArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonObject*>             ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetObjectArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetObjectArrayField");
static_assert(sizeof(PlayFabJsonObject_GetObjectArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetObjectArrayField");
static_assert(offsetof(PlayFabJsonObject_GetObjectArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetObjectArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetObjectArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetStringArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetStringArrayField");
static_assert(sizeof(PlayFabJsonObject_GetStringArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_GetStringArrayField");
static_assert(offsetof(PlayFabJsonObject_GetStringArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetStringArrayField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetStringArrayField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.MergeJsonObject
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_MergeJsonObject final
{
public:
	class UPlayFabJsonObject*                     InJsonObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Overwrite;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AE7[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_MergeJsonObject) == 0x000008, "Wrong alignment on PlayFabJsonObject_MergeJsonObject");
static_assert(sizeof(PlayFabJsonObject_MergeJsonObject) == 0x000010, "Wrong size on PlayFabJsonObject_MergeJsonObject");
static_assert(offsetof(PlayFabJsonObject_MergeJsonObject, InJsonObject) == 0x000000, "Member 'PlayFabJsonObject_MergeJsonObject::InJsonObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_MergeJsonObject, Overwrite) == 0x000008, "Member 'PlayFabJsonObject_MergeJsonObject::Overwrite' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.RemoveField
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_RemoveField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_RemoveField) == 0x000008, "Wrong alignment on PlayFabJsonObject_RemoveField");
static_assert(sizeof(PlayFabJsonObject_RemoveField) == 0x000010, "Wrong size on PlayFabJsonObject_RemoveField");
static_assert(offsetof(PlayFabJsonObject_RemoveField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_RemoveField::FieldName' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonValue*>              InArray;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetArrayField");
static_assert(sizeof(PlayFabJsonObject_SetArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetArrayField");
static_assert(offsetof(PlayFabJsonObject_SetArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetArrayField, InArray) == 0x000010, "Member 'PlayFabJsonObject_SetArrayField::InArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  BoolArray;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetBoolArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetBoolArrayField");
static_assert(sizeof(PlayFabJsonObject_SetBoolArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetBoolArrayField");
static_assert(offsetof(PlayFabJsonObject_SetBoolArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetBoolArrayField, BoolArray) == 0x000010, "Member 'PlayFabJsonObject_SetBoolArrayField::BoolArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetBoolField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_SetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AE8[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_SetBoolField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetBoolField");
static_assert(sizeof(PlayFabJsonObject_SetBoolField) == 0x000018, "Wrong size on PlayFabJsonObject_SetBoolField");
static_assert(offsetof(PlayFabJsonObject_SetBoolField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetBoolField, InValue) == 0x000010, "Member 'PlayFabJsonObject_SetBoolField::InValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_SetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      JsonValue;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetField");
static_assert(sizeof(PlayFabJsonObject_SetField) == 0x000018, "Wrong size on PlayFabJsonObject_SetField");
static_assert(offsetof(PlayFabJsonObject_SetField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetField, JsonValue) == 0x000010, "Member 'PlayFabJsonObject_SetField::JsonValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetFieldNull
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_SetFieldNull final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetFieldNull) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetFieldNull");
static_assert(sizeof(PlayFabJsonObject_SetFieldNull) == 0x000010, "Wrong size on PlayFabJsonObject_SetFieldNull");
static_assert(offsetof(PlayFabJsonObject_SetFieldNull, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetFieldNull::FieldName' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 NumberArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetNumberArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetNumberArrayField");
static_assert(sizeof(PlayFabJsonObject_SetNumberArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetNumberArrayField");
static_assert(offsetof(PlayFabJsonObject_SetNumberArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetNumberArrayField, NumberArray) == 0x000010, "Member 'PlayFabJsonObject_SetNumberArrayField::NumberArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetNumberField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_SetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Number;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AE9[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_SetNumberField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetNumberField");
static_assert(sizeof(PlayFabJsonObject_SetNumberField) == 0x000018, "Wrong size on PlayFabJsonObject_SetNumberField");
static_assert(offsetof(PlayFabJsonObject_SetNumberField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetNumberField, Number) == 0x000010, "Member 'PlayFabJsonObject_SetNumberField::Number' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonObject*>             ObjectArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetObjectArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetObjectArrayField");
static_assert(sizeof(PlayFabJsonObject_SetObjectArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetObjectArrayField");
static_assert(offsetof(PlayFabJsonObject_SetObjectArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetObjectArrayField, ObjectArray) == 0x000010, "Member 'PlayFabJsonObject_SetObjectArrayField::ObjectArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetObjectField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_SetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonObject*                     JsonObject;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetObjectField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetObjectField");
static_assert(sizeof(PlayFabJsonObject_SetObjectField) == 0x000018, "Wrong size on PlayFabJsonObject_SetObjectField");
static_assert(offsetof(PlayFabJsonObject_SetObjectField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetObjectField, JsonObject) == 0x000010, "Member 'PlayFabJsonObject_SetObjectField::JsonObject' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         StringArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetStringArrayField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetStringArrayField");
static_assert(sizeof(PlayFabJsonObject_SetStringArrayField) == 0x000020, "Wrong size on PlayFabJsonObject_SetStringArrayField");
static_assert(offsetof(PlayFabJsonObject_SetStringArrayField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetStringArrayField, StringArray) == 0x000010, "Member 'PlayFabJsonObject_SetStringArrayField::StringArray' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.SetStringField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_SetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringValue;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_SetStringField) == 0x000008, "Wrong alignment on PlayFabJsonObject_SetStringField");
static_assert(sizeof(PlayFabJsonObject_SetStringField) == 0x000020, "Wrong size on PlayFabJsonObject_SetStringField");
static_assert(offsetof(PlayFabJsonObject_SetStringField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_SetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_SetStringField, StringValue) == 0x000010, "Member 'PlayFabJsonObject_SetStringField::StringValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.EncodeJson
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonObject_EncodeJson final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_EncodeJson) == 0x000008, "Wrong alignment on PlayFabJsonObject_EncodeJson");
static_assert(sizeof(PlayFabJsonObject_EncodeJson) == 0x000010, "Wrong size on PlayFabJsonObject_EncodeJson");
static_assert(offsetof(PlayFabJsonObject_EncodeJson, ReturnValue) == 0x000000, "Member 'PlayFabJsonObject_EncodeJson::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetBoolField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_GetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AEA[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_GetBoolField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetBoolField");
static_assert(sizeof(PlayFabJsonObject_GetBoolField) == 0x000018, "Wrong size on PlayFabJsonObject_GetBoolField");
static_assert(offsetof(PlayFabJsonObject_GetBoolField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetBoolField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetBoolField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_GetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetField");
static_assert(sizeof(PlayFabJsonObject_GetField) == 0x000018, "Wrong size on PlayFabJsonObject_GetField");
static_assert(offsetof(PlayFabJsonObject_GetField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetNumberField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_GetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AEB[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_GetNumberField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetNumberField");
static_assert(sizeof(PlayFabJsonObject_GetNumberField) == 0x000018, "Wrong size on PlayFabJsonObject_GetNumberField");
static_assert(offsetof(PlayFabJsonObject_GetNumberField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetNumberField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetNumberField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetObjectField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_GetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonObject*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetObjectField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetObjectField");
static_assert(sizeof(PlayFabJsonObject_GetObjectField) == 0x000018, "Wrong size on PlayFabJsonObject_GetObjectField");
static_assert(offsetof(PlayFabJsonObject_GetObjectField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetObjectField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetObjectField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.GetStringField
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonObject_GetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonObject_GetStringField) == 0x000008, "Wrong alignment on PlayFabJsonObject_GetStringField");
static_assert(sizeof(PlayFabJsonObject_GetStringField) == 0x000020, "Wrong size on PlayFabJsonObject_GetStringField");
static_assert(offsetof(PlayFabJsonObject_GetStringField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_GetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_GetStringField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_GetStringField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonObject.HasField
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonObject_HasField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AEC[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabJsonObject_HasField) == 0x000008, "Wrong alignment on PlayFabJsonObject_HasField");
static_assert(sizeof(PlayFabJsonObject_HasField) == 0x000018, "Wrong size on PlayFabJsonObject_HasField");
static_assert(offsetof(PlayFabJsonObject_HasField, FieldName) == 0x000000, "Member 'PlayFabJsonObject_HasField::FieldName' has a wrong offset!");
static_assert(offsetof(PlayFabJsonObject_HasField, ReturnValue) == 0x000010, "Member 'PlayFabJsonObject_HasField::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueArray
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayFabJsonValue*>              InArray;                                           // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueArray) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueArray");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueArray) == 0x000020, "Wrong size on PlayFabJsonValue_ConstructJsonValueArray");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueArray, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueArray, InArray) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueArray::InArray' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueArray, ReturnValue) == 0x000018, "Member 'PlayFabJsonValue_ConstructJsonValueArray::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueBool
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueBool final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AEE[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueBool) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueBool");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueBool) == 0x000018, "Wrong size on PlayFabJsonValue_ConstructJsonValueBool");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueBool, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueBool::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueBool, InValue) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueBool::InValue' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueBool, ReturnValue) == 0x000010, "Member 'PlayFabJsonValue_ConstructJsonValueBool::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueNumber
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueNumber final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Number;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AEF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueNumber) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueNumber");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueNumber) == 0x000018, "Wrong size on PlayFabJsonValue_ConstructJsonValueNumber");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueNumber, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueNumber::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueNumber, Number) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueNumber::Number' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueNumber, ReturnValue) == 0x000010, "Member 'PlayFabJsonValue_ConstructJsonValueNumber::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueObject
// 0x0018 (0x0018 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonObject*                     JsonObject;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueObject) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueObject");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueObject) == 0x000018, "Wrong size on PlayFabJsonValue_ConstructJsonValueObject");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueObject, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueObject, JsonObject) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueObject::JsonObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueObject, ReturnValue) == 0x000010, "Member 'PlayFabJsonValue_ConstructJsonValueObject::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.ConstructJsonValueString
// 0x0020 (0x0020 - 0x0000)
struct PlayFabJsonValue_ConstructJsonValueString final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringValue;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabJsonValue*                      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_ConstructJsonValueString) == 0x000008, "Wrong alignment on PlayFabJsonValue_ConstructJsonValueString");
static_assert(sizeof(PlayFabJsonValue_ConstructJsonValueString) == 0x000020, "Wrong size on PlayFabJsonValue_ConstructJsonValueString");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueString, WorldContextObject) == 0x000000, "Member 'PlayFabJsonValue_ConstructJsonValueString::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueString, StringValue) == 0x000008, "Member 'PlayFabJsonValue_ConstructJsonValueString::StringValue' has a wrong offset!");
static_assert(offsetof(PlayFabJsonValue_ConstructJsonValueString, ReturnValue) == 0x000018, "Member 'PlayFabJsonValue_ConstructJsonValueString::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsObject
// 0x0008 (0x0008 - 0x0000)
struct PlayFabJsonValue_AsObject final
{
public:
	class UPlayFabJsonObject*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsObject) == 0x000008, "Wrong alignment on PlayFabJsonValue_AsObject");
static_assert(sizeof(PlayFabJsonValue_AsObject) == 0x000008, "Wrong size on PlayFabJsonValue_AsObject");
static_assert(offsetof(PlayFabJsonValue_AsObject, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsObject::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsArray
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonValue_AsArray final
{
public:
	TArray<class UPlayFabJsonValue*>              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsArray) == 0x000008, "Wrong alignment on PlayFabJsonValue_AsArray");
static_assert(sizeof(PlayFabJsonValue_AsArray) == 0x000010, "Wrong size on PlayFabJsonValue_AsArray");
static_assert(offsetof(PlayFabJsonValue_AsArray, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsArray::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsBool
// 0x0001 (0x0001 - 0x0000)
struct PlayFabJsonValue_AsBool final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsBool) == 0x000001, "Wrong alignment on PlayFabJsonValue_AsBool");
static_assert(sizeof(PlayFabJsonValue_AsBool) == 0x000001, "Wrong size on PlayFabJsonValue_AsBool");
static_assert(offsetof(PlayFabJsonValue_AsBool, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsBool::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsNumber
// 0x0004 (0x0004 - 0x0000)
struct PlayFabJsonValue_AsNumber final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsNumber) == 0x000004, "Wrong alignment on PlayFabJsonValue_AsNumber");
static_assert(sizeof(PlayFabJsonValue_AsNumber) == 0x000004, "Wrong size on PlayFabJsonValue_AsNumber");
static_assert(offsetof(PlayFabJsonValue_AsNumber, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsNumber::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.AsString
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonValue_AsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_AsString) == 0x000008, "Wrong alignment on PlayFabJsonValue_AsString");
static_assert(sizeof(PlayFabJsonValue_AsString) == 0x000010, "Wrong size on PlayFabJsonValue_AsString");
static_assert(offsetof(PlayFabJsonValue_AsString, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_AsString::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.GetType
// 0x0001 (0x0001 - 0x0000)
struct PlayFabJsonValue_GetType final
{
public:
	EPFJson                                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_GetType) == 0x000001, "Wrong alignment on PlayFabJsonValue_GetType");
static_assert(sizeof(PlayFabJsonValue_GetType) == 0x000001, "Wrong size on PlayFabJsonValue_GetType");
static_assert(offsetof(PlayFabJsonValue_GetType, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_GetType::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.GetTypeString
// 0x0010 (0x0010 - 0x0000)
struct PlayFabJsonValue_GetTypeString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_GetTypeString) == 0x000008, "Wrong alignment on PlayFabJsonValue_GetTypeString");
static_assert(sizeof(PlayFabJsonValue_GetTypeString) == 0x000010, "Wrong size on PlayFabJsonValue_GetTypeString");
static_assert(offsetof(PlayFabJsonValue_GetTypeString, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_GetTypeString::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabJsonValue.IsNull
// 0x0001 (0x0001 - 0x0000)
struct PlayFabJsonValue_IsNull final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabJsonValue_IsNull) == 0x000001, "Wrong alignment on PlayFabJsonValue_IsNull");
static_assert(sizeof(PlayFabJsonValue_IsNull) == 0x000001, "Wrong size on PlayFabJsonValue_IsNull");
static_assert(offsetof(PlayFabJsonValue_IsNull, ReturnValue) == 0x000000, "Member 'PlayFabJsonValue_IsNull::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabLocalizationAPI.GetLanguageList
// 0x0040 (0x0040 - 0x0000)
struct PlayFabLocalizationAPI_GetLanguageList final
{
public:
	struct FLocalizationGetLanguageListRequest    Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FLocalizationGetLanguageListResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabLocalizationAPI*                ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabLocalizationAPI_GetLanguageList) == 0x000008, "Wrong alignment on PlayFabLocalizationAPI_GetLanguageList");
static_assert(sizeof(PlayFabLocalizationAPI_GetLanguageList) == 0x000040, "Wrong size on PlayFabLocalizationAPI_GetLanguageList");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, Request) == 0x000000, "Member 'PlayFabLocalizationAPI_GetLanguageList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, OnSuccess) == 0x000010, "Member 'PlayFabLocalizationAPI_GetLanguageList::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, OnFailure) == 0x000020, "Member 'PlayFabLocalizationAPI_GetLanguageList::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, CustomData) == 0x000030, "Member 'PlayFabLocalizationAPI_GetLanguageList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_GetLanguageList, ReturnValue) == 0x000038, "Member 'PlayFabLocalizationAPI_GetLanguageList::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabLocalizationAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabLocalizationAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabLocalizationAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabLocalizationAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabLocalizationAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabLocalizationAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabLocalizationAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabLocalizationAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabLocalizationAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabLocalizationAPI.DelegateOnSuccessGetLanguageList__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabLocalizationAPI_DelegateOnSuccessGetLanguageList__DelegateSignature final
{
public:
	struct FLocalizationGetLanguageListResponse   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabLocalizationAPI_DelegateOnSuccessGetLanguageList__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabLocalizationAPI_DelegateOnSuccessGetLanguageList__DelegateSignature");
static_assert(sizeof(PlayFabLocalizationAPI_DelegateOnSuccessGetLanguageList__DelegateSignature) == 0x000020, "Wrong size on PlayFabLocalizationAPI_DelegateOnSuccessGetLanguageList__DelegateSignature");
static_assert(offsetof(PlayFabLocalizationAPI_DelegateOnSuccessGetLanguageList__DelegateSignature, Result) == 0x000000, "Member 'PlayFabLocalizationAPI_DelegateOnSuccessGetLanguageList__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_DelegateOnSuccessGetLanguageList__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabLocalizationAPI_DelegateOnSuccessGetLanguageList__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabLocalizationAPI.HelperGetLanguageList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabLocalizationAPI_HelperGetLanguageList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AF2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabLocalizationAPI_HelperGetLanguageList) == 0x000008, "Wrong alignment on PlayFabLocalizationAPI_HelperGetLanguageList");
static_assert(sizeof(PlayFabLocalizationAPI_HelperGetLanguageList) == 0x000050, "Wrong size on PlayFabLocalizationAPI_HelperGetLanguageList");
static_assert(offsetof(PlayFabLocalizationAPI_HelperGetLanguageList, Response) == 0x000000, "Member 'PlayFabLocalizationAPI_HelperGetLanguageList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_HelperGetLanguageList, CustomData) == 0x000040, "Member 'PlayFabLocalizationAPI_HelperGetLanguageList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationAPI_HelperGetLanguageList, Successful) == 0x000048, "Member 'PlayFabLocalizationAPI_HelperGetLanguageList::Successful' has a wrong offset!");

// Function PlayFab.PlayFabLocalizationModelDecoder.decodeGetLanguageListResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabLocalizationModelDecoder_DecodeGetLanguageListResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLocalizationGetLanguageListResponse   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabLocalizationModelDecoder_DecodeGetLanguageListResponseResponse) == 0x000008, "Wrong alignment on PlayFabLocalizationModelDecoder_DecodeGetLanguageListResponseResponse");
static_assert(sizeof(PlayFabLocalizationModelDecoder_DecodeGetLanguageListResponseResponse) == 0x000020, "Wrong size on PlayFabLocalizationModelDecoder_DecodeGetLanguageListResponseResponse");
static_assert(offsetof(PlayFabLocalizationModelDecoder_DecodeGetLanguageListResponseResponse, Response) == 0x000000, "Member 'PlayFabLocalizationModelDecoder_DecodeGetLanguageListResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabLocalizationModelDecoder_DecodeGetLanguageListResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabLocalizationModelDecoder_DecodeGetLanguageListResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerAPI.AuthUser
// 0x0048 (0x0048 - 0x0000)
struct PlayFabMatchmakerAPI_AuthUser final
{
public:
	struct FMatchmakerAuthUserRequest             Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMatchmakerAuthUserResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMatchmakerAPI*                  ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerAPI_AuthUser) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_AuthUser");
static_assert(sizeof(PlayFabMatchmakerAPI_AuthUser) == 0x000048, "Wrong size on PlayFabMatchmakerAPI_AuthUser");
static_assert(offsetof(PlayFabMatchmakerAPI_AuthUser, Request) == 0x000000, "Member 'PlayFabMatchmakerAPI_AuthUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_AuthUser, OnSuccess) == 0x000018, "Member 'PlayFabMatchmakerAPI_AuthUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_AuthUser, OnFailure) == 0x000028, "Member 'PlayFabMatchmakerAPI_AuthUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_AuthUser, CustomData) == 0x000038, "Member 'PlayFabMatchmakerAPI_AuthUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_AuthUser, ReturnValue) == 0x000040, "Member 'PlayFabMatchmakerAPI_AuthUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerAPI.PlayerJoined
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMatchmakerAPI_PlayerJoined final
{
public:
	struct FMatchmakerPlayerJoinedRequest         Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMatchmakerPlayerJoinedResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMatchmakerAPI*                  ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerAPI_PlayerJoined) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_PlayerJoined");
static_assert(sizeof(PlayFabMatchmakerAPI_PlayerJoined) == 0x000060, "Wrong size on PlayFabMatchmakerAPI_PlayerJoined");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerJoined, Request) == 0x000000, "Member 'PlayFabMatchmakerAPI_PlayerJoined::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerJoined, OnSuccess) == 0x000030, "Member 'PlayFabMatchmakerAPI_PlayerJoined::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerJoined, OnFailure) == 0x000040, "Member 'PlayFabMatchmakerAPI_PlayerJoined::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerJoined, CustomData) == 0x000050, "Member 'PlayFabMatchmakerAPI_PlayerJoined::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerJoined, ReturnValue) == 0x000058, "Member 'PlayFabMatchmakerAPI_PlayerJoined::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerAPI.PlayerLeft
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMatchmakerAPI_PlayerLeft final
{
public:
	struct FMatchmakerPlayerLeftRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMatchmakerPlayerLeftResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMatchmakerAPI*                  ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerAPI_PlayerLeft) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_PlayerLeft");
static_assert(sizeof(PlayFabMatchmakerAPI_PlayerLeft) == 0x000060, "Wrong size on PlayFabMatchmakerAPI_PlayerLeft");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerLeft, Request) == 0x000000, "Member 'PlayFabMatchmakerAPI_PlayerLeft::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerLeft, OnSuccess) == 0x000030, "Member 'PlayFabMatchmakerAPI_PlayerLeft::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerLeft, OnFailure) == 0x000040, "Member 'PlayFabMatchmakerAPI_PlayerLeft::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerLeft, CustomData) == 0x000050, "Member 'PlayFabMatchmakerAPI_PlayerLeft::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_PlayerLeft, ReturnValue) == 0x000058, "Member 'PlayFabMatchmakerAPI_PlayerLeft::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerAPI.UserInfo
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMatchmakerAPI_UserInfo final
{
public:
	struct FMatchmakerUserInfoRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMatchmakerUserInfoResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMatchmakerAPI*                  ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerAPI_UserInfo) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_UserInfo");
static_assert(sizeof(PlayFabMatchmakerAPI_UserInfo) == 0x000058, "Wrong size on PlayFabMatchmakerAPI_UserInfo");
static_assert(offsetof(PlayFabMatchmakerAPI_UserInfo, Request) == 0x000000, "Member 'PlayFabMatchmakerAPI_UserInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_UserInfo, OnSuccess) == 0x000028, "Member 'PlayFabMatchmakerAPI_UserInfo::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_UserInfo, OnFailure) == 0x000038, "Member 'PlayFabMatchmakerAPI_UserInfo::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_UserInfo, CustomData) == 0x000048, "Member 'PlayFabMatchmakerAPI_UserInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_UserInfo, ReturnValue) == 0x000050, "Member 'PlayFabMatchmakerAPI_UserInfo::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMatchmakerAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMatchmakerAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabMatchmakerAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabMatchmakerAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabMatchmakerAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabMatchmakerAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMatchmakerAPI.DelegateOnSuccessAuthUser__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMatchmakerAPI_DelegateOnSuccessAuthUser__DelegateSignature final
{
public:
	struct FMatchmakerAuthUserResponse            Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerAPI_DelegateOnSuccessAuthUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_DelegateOnSuccessAuthUser__DelegateSignature");
static_assert(sizeof(PlayFabMatchmakerAPI_DelegateOnSuccessAuthUser__DelegateSignature) == 0x000028, "Wrong size on PlayFabMatchmakerAPI_DelegateOnSuccessAuthUser__DelegateSignature");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnSuccessAuthUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMatchmakerAPI_DelegateOnSuccessAuthUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnSuccessAuthUser__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabMatchmakerAPI_DelegateOnSuccessAuthUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMatchmakerAPI.DelegateOnSuccessPlayerJoined__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMatchmakerAPI_DelegateOnSuccessPlayerJoined__DelegateSignature final
{
public:
	struct FMatchmakerPlayerJoinedResponse        Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerAPI_DelegateOnSuccessPlayerJoined__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_DelegateOnSuccessPlayerJoined__DelegateSignature");
static_assert(sizeof(PlayFabMatchmakerAPI_DelegateOnSuccessPlayerJoined__DelegateSignature) == 0x000010, "Wrong size on PlayFabMatchmakerAPI_DelegateOnSuccessPlayerJoined__DelegateSignature");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnSuccessPlayerJoined__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMatchmakerAPI_DelegateOnSuccessPlayerJoined__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnSuccessPlayerJoined__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMatchmakerAPI_DelegateOnSuccessPlayerJoined__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMatchmakerAPI.DelegateOnSuccessPlayerLeft__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMatchmakerAPI_DelegateOnSuccessPlayerLeft__DelegateSignature final
{
public:
	struct FMatchmakerPlayerLeftResponse          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerAPI_DelegateOnSuccessPlayerLeft__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_DelegateOnSuccessPlayerLeft__DelegateSignature");
static_assert(sizeof(PlayFabMatchmakerAPI_DelegateOnSuccessPlayerLeft__DelegateSignature) == 0x000010, "Wrong size on PlayFabMatchmakerAPI_DelegateOnSuccessPlayerLeft__DelegateSignature");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnSuccessPlayerLeft__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMatchmakerAPI_DelegateOnSuccessPlayerLeft__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnSuccessPlayerLeft__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMatchmakerAPI_DelegateOnSuccessPlayerLeft__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMatchmakerAPI.DelegateOnSuccessUserInfo__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMatchmakerAPI_DelegateOnSuccessUserInfo__DelegateSignature final
{
public:
	struct FMatchmakerUserInfoResponse            Result;                                            // 0x0000(0x0070)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerAPI_DelegateOnSuccessUserInfo__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_DelegateOnSuccessUserInfo__DelegateSignature");
static_assert(sizeof(PlayFabMatchmakerAPI_DelegateOnSuccessUserInfo__DelegateSignature) == 0x000078, "Wrong size on PlayFabMatchmakerAPI_DelegateOnSuccessUserInfo__DelegateSignature");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnSuccessUserInfo__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMatchmakerAPI_DelegateOnSuccessUserInfo__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_DelegateOnSuccessUserInfo__DelegateSignature, CustomData) == 0x000070, "Member 'PlayFabMatchmakerAPI_DelegateOnSuccessUserInfo__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerAPI.HelperAuthUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMatchmakerAPI_HelperAuthUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AF5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMatchmakerAPI_HelperAuthUser) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_HelperAuthUser");
static_assert(sizeof(PlayFabMatchmakerAPI_HelperAuthUser) == 0x000050, "Wrong size on PlayFabMatchmakerAPI_HelperAuthUser");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperAuthUser, Response) == 0x000000, "Member 'PlayFabMatchmakerAPI_HelperAuthUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperAuthUser, CustomData) == 0x000040, "Member 'PlayFabMatchmakerAPI_HelperAuthUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperAuthUser, Successful) == 0x000048, "Member 'PlayFabMatchmakerAPI_HelperAuthUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerAPI.HelperPlayerJoined
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMatchmakerAPI_HelperPlayerJoined final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AF6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMatchmakerAPI_HelperPlayerJoined) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_HelperPlayerJoined");
static_assert(sizeof(PlayFabMatchmakerAPI_HelperPlayerJoined) == 0x000050, "Wrong size on PlayFabMatchmakerAPI_HelperPlayerJoined");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperPlayerJoined, Response) == 0x000000, "Member 'PlayFabMatchmakerAPI_HelperPlayerJoined::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperPlayerJoined, CustomData) == 0x000040, "Member 'PlayFabMatchmakerAPI_HelperPlayerJoined::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperPlayerJoined, Successful) == 0x000048, "Member 'PlayFabMatchmakerAPI_HelperPlayerJoined::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerAPI.HelperPlayerLeft
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMatchmakerAPI_HelperPlayerLeft final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AF7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMatchmakerAPI_HelperPlayerLeft) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_HelperPlayerLeft");
static_assert(sizeof(PlayFabMatchmakerAPI_HelperPlayerLeft) == 0x000050, "Wrong size on PlayFabMatchmakerAPI_HelperPlayerLeft");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperPlayerLeft, Response) == 0x000000, "Member 'PlayFabMatchmakerAPI_HelperPlayerLeft::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperPlayerLeft, CustomData) == 0x000040, "Member 'PlayFabMatchmakerAPI_HelperPlayerLeft::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperPlayerLeft, Successful) == 0x000048, "Member 'PlayFabMatchmakerAPI_HelperPlayerLeft::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerAPI.HelperUserInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMatchmakerAPI_HelperUserInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AF8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMatchmakerAPI_HelperUserInfo) == 0x000008, "Wrong alignment on PlayFabMatchmakerAPI_HelperUserInfo");
static_assert(sizeof(PlayFabMatchmakerAPI_HelperUserInfo) == 0x000050, "Wrong size on PlayFabMatchmakerAPI_HelperUserInfo");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperUserInfo, Response) == 0x000000, "Member 'PlayFabMatchmakerAPI_HelperUserInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperUserInfo, CustomData) == 0x000040, "Member 'PlayFabMatchmakerAPI_HelperUserInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerAPI_HelperUserInfo, Successful) == 0x000048, "Member 'PlayFabMatchmakerAPI_HelperUserInfo::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerModelDecoder.decodeAuthUserResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMatchmakerModelDecoder_DecodeAuthUserResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchmakerAuthUserResponse            ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerModelDecoder_DecodeAuthUserResponseResponse) == 0x000008, "Wrong alignment on PlayFabMatchmakerModelDecoder_DecodeAuthUserResponseResponse");
static_assert(sizeof(PlayFabMatchmakerModelDecoder_DecodeAuthUserResponseResponse) == 0x000028, "Wrong size on PlayFabMatchmakerModelDecoder_DecodeAuthUserResponseResponse");
static_assert(offsetof(PlayFabMatchmakerModelDecoder_DecodeAuthUserResponseResponse, Response) == 0x000000, "Member 'PlayFabMatchmakerModelDecoder_DecodeAuthUserResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerModelDecoder_DecodeAuthUserResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMatchmakerModelDecoder_DecodeAuthUserResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerModelDecoder.decodePlayerJoinedResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMatchmakerModelDecoder_DecodePlayerJoinedResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchmakerPlayerJoinedResponse        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerModelDecoder_DecodePlayerJoinedResponseResponse) == 0x000008, "Wrong alignment on PlayFabMatchmakerModelDecoder_DecodePlayerJoinedResponseResponse");
static_assert(sizeof(PlayFabMatchmakerModelDecoder_DecodePlayerJoinedResponseResponse) == 0x000010, "Wrong size on PlayFabMatchmakerModelDecoder_DecodePlayerJoinedResponseResponse");
static_assert(offsetof(PlayFabMatchmakerModelDecoder_DecodePlayerJoinedResponseResponse, Response) == 0x000000, "Member 'PlayFabMatchmakerModelDecoder_DecodePlayerJoinedResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerModelDecoder_DecodePlayerJoinedResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMatchmakerModelDecoder_DecodePlayerJoinedResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerModelDecoder.decodePlayerLeftResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMatchmakerModelDecoder_DecodePlayerLeftResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchmakerPlayerLeftResponse          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerModelDecoder_DecodePlayerLeftResponseResponse) == 0x000008, "Wrong alignment on PlayFabMatchmakerModelDecoder_DecodePlayerLeftResponseResponse");
static_assert(sizeof(PlayFabMatchmakerModelDecoder_DecodePlayerLeftResponseResponse) == 0x000010, "Wrong size on PlayFabMatchmakerModelDecoder_DecodePlayerLeftResponseResponse");
static_assert(offsetof(PlayFabMatchmakerModelDecoder_DecodePlayerLeftResponseResponse, Response) == 0x000000, "Member 'PlayFabMatchmakerModelDecoder_DecodePlayerLeftResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerModelDecoder_DecodePlayerLeftResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMatchmakerModelDecoder_DecodePlayerLeftResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMatchmakerModelDecoder.decodeUserInfoResponseResponse
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMatchmakerModelDecoder_DecodeUserInfoResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMatchmakerUserInfoResponse            ReturnValue;                                       // 0x0008(0x0070)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMatchmakerModelDecoder_DecodeUserInfoResponseResponse) == 0x000008, "Wrong alignment on PlayFabMatchmakerModelDecoder_DecodeUserInfoResponseResponse");
static_assert(sizeof(PlayFabMatchmakerModelDecoder_DecodeUserInfoResponseResponse) == 0x000078, "Wrong size on PlayFabMatchmakerModelDecoder_DecodeUserInfoResponseResponse");
static_assert(offsetof(PlayFabMatchmakerModelDecoder_DecodeUserInfoResponseResponse, Response) == 0x000000, "Member 'PlayFabMatchmakerModelDecoder_DecodeUserInfoResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMatchmakerModelDecoder_DecodeUserInfoResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMatchmakerModelDecoder_DecodeUserInfoResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CancelAllMatchmakingTicketsForPlayer
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer final
{
public:
	struct FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CancelAllServerBackfillTicketsForPlayer
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer final
{
public:
	struct FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CancelMatchmakingTicket
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_CancelMatchmakingTicket final
{
public:
	struct FMultiplayerCancelMatchmakingTicketRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCancelMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CancelMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CancelMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CancelMatchmakingTicket) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_CancelMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelMatchmakingTicket, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_CancelMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CancelServerBackfillTicket
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_CancelServerBackfillTicket final
{
public:
	struct FMultiplayerCancelServerBackfillTicketRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCancelServerBackfillTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CancelServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CancelServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CancelServerBackfillTicket) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_CancelServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CancelServerBackfillTicket, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_CancelServerBackfillTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildAlias
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_CreateBuildAlias final
{
public:
	struct FMultiplayerCreateBuildAliasRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateBuildAlias) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_CreateBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildAlias, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_CreateBuildAlias::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildWithCustomContainer
// 0x00E8 (0x00E8 - 0x0000)
struct PlayFabMultiplayerAPI_CreateBuildWithCustomContainer final
{
public:
	struct FMultiplayerCreateBuildWithCustomContainerRequest Request;                                           // 0x0000(0x00B8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateBuildWithCustomContainerResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x00B8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x00C8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00D8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateBuildWithCustomContainer");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer) == 0x0000E8, "Wrong size on PlayFabMultiplayerAPI_CreateBuildWithCustomContainer");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, OnSuccess) == 0x0000B8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, OnFailure) == 0x0000C8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, CustomData) == 0x0000D8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithCustomContainer, ReturnValue) == 0x0000E0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithCustomContainer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildWithManagedContainer
// 0x00F8 (0x00F8 - 0x0000)
struct PlayFabMultiplayerAPI_CreateBuildWithManagedContainer final
{
public:
	struct FMultiplayerCreateBuildWithManagedContainerRequest Request;                                           // 0x0000(0x00C8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateBuildWithManagedContainerResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x00C8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x00D8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00E8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateBuildWithManagedContainer");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer) == 0x0000F8, "Wrong size on PlayFabMultiplayerAPI_CreateBuildWithManagedContainer");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, OnSuccess) == 0x0000C8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, OnFailure) == 0x0000D8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, CustomData) == 0x0000E8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithManagedContainer, ReturnValue) == 0x0000F0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithManagedContainer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildWithProcessBasedServer
// 0x00F8 (0x00F8 - 0x0000)
struct PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer final
{
public:
	struct FMultiplayerCreateBuildWithProcessBasedServerRequest Request;                                           // 0x0000(0x00C8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateBuildWithProcessBasedServerResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x00C8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x00D8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00E8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer) == 0x0000F8, "Wrong size on PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, OnSuccess) == 0x0000C8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, OnFailure) == 0x0000D8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, CustomData) == 0x0000E8, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer, ReturnValue) == 0x0000F0, "Member 'PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateLobby
// 0x0088 (0x0088 - 0x0000)
struct PlayFabMultiplayerAPI_CreateLobby final
{
public:
	struct FMultiplayerCreateLobbyRequest         Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateLobbyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateLobby) == 0x000088, "Wrong size on PlayFabMultiplayerAPI_CreateLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, OnSuccess) == 0x000058, "Member 'PlayFabMultiplayerAPI_CreateLobby::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, OnFailure) == 0x000068, "Member 'PlayFabMultiplayerAPI_CreateLobby::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, CustomData) == 0x000078, "Member 'PlayFabMultiplayerAPI_CreateLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateLobby, ReturnValue) == 0x000080, "Member 'PlayFabMultiplayerAPI_CreateLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateMatchmakingTicket
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_CreateMatchmakingTicket final
{
public:
	struct FMultiplayerCreateMatchmakingTicketRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateMatchmakingTicket) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_CreateMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, OnSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, OnFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, CustomData) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateMatchmakingTicket, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_CreateMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateRemoteUser
// 0x0090 (0x0090 - 0x0000)
struct PlayFabMultiplayerAPI_CreateRemoteUser final
{
public:
	struct FMultiplayerCreateRemoteUserRequest    Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateRemoteUserResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateRemoteUser) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateRemoteUser");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateRemoteUser) == 0x000090, "Wrong size on PlayFabMultiplayerAPI_CreateRemoteUser");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, OnSuccess) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, OnFailure) == 0x000070, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, CustomData) == 0x000080, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateRemoteUser, ReturnValue) == 0x000088, "Member 'PlayFabMultiplayerAPI_CreateRemoteUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateServerBackfillTicket
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_CreateServerBackfillTicket final
{
public:
	struct FMultiplayerCreateServerBackfillTicketRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateServerBackfillTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateServerBackfillTicket) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_CreateServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, OnSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, OnFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, CustomData) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerBackfillTicket, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_CreateServerBackfillTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateServerMatchmakingTicket
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_CreateServerMatchmakingTicket final
{
public:
	struct FMultiplayerCreateServerMatchmakingTicketRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateServerMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_CreateServerMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, OnSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, OnFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, CustomData) == 0x000058, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateServerMatchmakingTicket, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateServerMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.CreateTitleMultiplayerServersQuotaChange
// 0x0090 (0x0090 - 0x0000)
struct PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange final
{
public:
	struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange");
static_assert(sizeof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange) == 0x000090, "Wrong size on PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, OnSuccess) == 0x000060, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, OnFailure) == 0x000070, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, CustomData) == 0x000080, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange, ReturnValue) == 0x000088, "Member 'PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteAsset
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteAsset final
{
public:
	struct FMultiplayerDeleteAssetRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteAsset) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteAsset");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteAsset) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteAsset");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteAsset::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteAsset::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteAsset::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteAsset::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteAsset, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteAsset::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteBuild
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteBuild final
{
public:
	struct FMultiplayerDeleteBuildRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteBuild) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteBuild");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteBuild) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteBuild");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteBuild::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteBuild::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteBuild::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteBuild::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuild, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteBuild::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteBuildAlias final
{
public:
	struct FMultiplayerDeleteBuildAliasRequest    Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildAlias, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteBuildAlias::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteBuildRegion
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteBuildRegion final
{
public:
	struct FMultiplayerDeleteBuildRegionRequest   Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteBuildRegion) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteBuildRegion");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteBuildRegion) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_DeleteBuildRegion");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteBuildRegion, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_DeleteBuildRegion::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteCertificate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteCertificate final
{
public:
	struct FMultiplayerDeleteCertificateRequest   Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteCertificate) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteCertificate");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteCertificate) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteCertificate");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteCertificate, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteCertificate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteContainerImageRepository
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteContainerImageRepository final
{
public:
	struct FMultiplayerDeleteContainerImageRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteContainerImageRepository) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteContainerImageRepository");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteContainerImageRepository) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteContainerImageRepository");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteContainerImageRepository, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteContainerImageRepository::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteLobby final
{
public:
	struct FMultiplayerDeleteLobbyRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_DeleteLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_DeleteLobby::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_DeleteLobby::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_DeleteLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteLobby, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_DeleteLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.DeleteRemoteUser
// 0x0080 (0x0080 - 0x0000)
struct PlayFabMultiplayerAPI_DeleteRemoteUser final
{
public:
	struct FMultiplayerDeleteRemoteUserRequest    Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DeleteRemoteUser) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DeleteRemoteUser");
static_assert(sizeof(PlayFabMultiplayerAPI_DeleteRemoteUser) == 0x000080, "Wrong size on PlayFabMultiplayerAPI_DeleteRemoteUser");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, OnSuccess) == 0x000050, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, OnFailure) == 0x000060, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, CustomData) == 0x000070, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DeleteRemoteUser, ReturnValue) == 0x000078, "Member 'PlayFabMultiplayerAPI_DeleteRemoteUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.EnableMultiplayerServersForTitle
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle final
{
public:
	struct FMultiplayerEnableMultiplayerServersForTitleRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEnableMultiplayerServersForTitleResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle");
static_assert(sizeof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, OnSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, OnFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.FindFriendLobbies
// 0x0080 (0x0080 - 0x0000)
struct PlayFabMultiplayerAPI_FindFriendLobbies final
{
public:
	struct FMultiplayerFindFriendLobbiesRequest   Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerFindFriendLobbiesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_FindFriendLobbies) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_FindFriendLobbies");
static_assert(sizeof(PlayFabMultiplayerAPI_FindFriendLobbies) == 0x000080, "Wrong size on PlayFabMultiplayerAPI_FindFriendLobbies");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, OnSuccess) == 0x000050, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, OnFailure) == 0x000060, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, CustomData) == 0x000070, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindFriendLobbies, ReturnValue) == 0x000078, "Member 'PlayFabMultiplayerAPI_FindFriendLobbies::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.FindLobbies
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_FindLobbies final
{
public:
	struct FMultiplayerFindLobbiesRequest         Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerFindLobbiesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_FindLobbies) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_FindLobbies");
static_assert(sizeof(PlayFabMultiplayerAPI_FindLobbies) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_FindLobbies");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_FindLobbies::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, OnSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_FindLobbies::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, OnFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_FindLobbies::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, CustomData) == 0x000058, "Member 'PlayFabMultiplayerAPI_FindLobbies::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_FindLobbies, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_FindLobbies::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetAssetDownloadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetAssetDownloadUrl final
{
public:
	struct FMultiplayerGetAssetDownloadUrlRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetAssetDownloadUrlResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetAssetDownloadUrl) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetAssetDownloadUrl");
static_assert(sizeof(PlayFabMultiplayerAPI_GetAssetDownloadUrl) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetAssetDownloadUrl");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetDownloadUrl, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetAssetDownloadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetAssetUploadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetAssetUploadUrl final
{
public:
	struct FMultiplayerGetAssetUploadUrlRequest   Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetAssetUploadUrlResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetAssetUploadUrl) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetAssetUploadUrl");
static_assert(sizeof(PlayFabMultiplayerAPI_GetAssetUploadUrl) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetAssetUploadUrl");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetAssetUploadUrl, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetAssetUploadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetBuild
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetBuild final
{
public:
	struct FMultiplayerGetBuildRequest            Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetBuildResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetBuild) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetBuild");
static_assert(sizeof(PlayFabMultiplayerAPI_GetBuild) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetBuild");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetBuild::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetBuild::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetBuild::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetBuild::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuild, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetBuild::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetBuildAlias final
{
public:
	struct FMultiplayerGetBuildAliasRequest       Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_GetBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetBuildAlias, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetBuildAlias::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetContainerRegistryCredentials
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_GetContainerRegistryCredentials final
{
public:
	struct FMultiplayerGetContainerRegistryCredentialsRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetContainerRegistryCredentialsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetContainerRegistryCredentials");
static_assert(sizeof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_GetContainerRegistryCredentials");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, OnSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, OnFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetContainerRegistryCredentials, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetContainerRegistryCredentials::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetLobby final
{
public:
	struct FMultiplayerGetLobbyRequest            Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetLobbyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_GetLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetLobby::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetLobby::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetLobby, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMatch
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_GetMatch final
{
public:
	struct FMultiplayerGetMatchRequest            Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMatchResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMatch) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMatch");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMatch) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_GetMatch");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMatch::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, OnSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetMatch::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, OnFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_GetMatch::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, CustomData) == 0x000060, "Member 'PlayFabMultiplayerAPI_GetMatch::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatch, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_GetMatch::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMatchmakingTicket
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_GetMatchmakingTicket final
{
public:
	struct FMultiplayerGetMatchmakingTicketRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMatchmakingTicket) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_GetMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, OnSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, OnFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, CustomData) == 0x000058, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMatchmakingTicket, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_GetMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerDetails
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_GetMultiplayerServerDetails final
{
public:
	struct FMultiplayerGetMultiplayerServerDetailsRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMultiplayerServerDetailsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMultiplayerServerDetails");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_GetMultiplayerServerDetails");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, OnSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, OnFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, CustomData) == 0x000060, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerDetails, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerDetails::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerLogs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetMultiplayerServerLogs final
{
public:
	struct FMultiplayerGetMultiplayerServerLogsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMultiplayerServerLogs");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetMultiplayerServerLogs");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerServerLogs, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetMultiplayerServerLogs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetMultiplayerSessionLogsBySessionId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId final
{
public:
	struct FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId");
static_assert(sizeof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetQueueStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetQueueStatistics final
{
public:
	struct FMultiplayerGetQueueStatisticsRequest  Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetQueueStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetQueueStatistics) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetQueueStatistics");
static_assert(sizeof(PlayFabMultiplayerAPI_GetQueueStatistics) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetQueueStatistics");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetQueueStatistics, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetQueueStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetRemoteLoginEndpoint
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_GetRemoteLoginEndpoint final
{
public:
	struct FMultiplayerGetRemoteLoginEndpointRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetRemoteLoginEndpointResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetRemoteLoginEndpoint");
static_assert(sizeof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_GetRemoteLoginEndpoint");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, OnSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, OnFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, CustomData) == 0x000060, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetRemoteLoginEndpoint, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_GetRemoteLoginEndpoint::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetServerBackfillTicket
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_GetServerBackfillTicket final
{
public:
	struct FMultiplayerGetServerBackfillTicketRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetServerBackfillTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_GetServerBackfillTicket) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_GetServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, OnSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, OnFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, CustomData) == 0x000058, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetServerBackfillTicket, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_GetServerBackfillTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetTitleEnabledForMultiplayerServersStatus
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus final
{
public:
	struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus");
static_assert(sizeof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, OnSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, OnFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetTitleMultiplayerServersQuotaChange
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange final
{
public:
	struct FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange");
static_assert(sizeof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.GetTitleMultiplayerServersQuotas
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas final
{
public:
	struct FMultiplayerGetTitleMultiplayerServersQuotasRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotasResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas");
static_assert(sizeof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, OnSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, OnFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.InviteToLobby
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_InviteToLobby final
{
public:
	struct FMultiplayerInviteToLobbyRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_InviteToLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_InviteToLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_InviteToLobby) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_InviteToLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_InviteToLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_InviteToLobby::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_InviteToLobby::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_InviteToLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_InviteToLobby, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_InviteToLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.JoinArrangedLobby
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMultiplayerAPI_JoinArrangedLobby final
{
public:
	struct FMultiplayerJoinArrangedLobbyRequest   Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_JoinArrangedLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_JoinArrangedLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_JoinArrangedLobby) == 0x000078, "Wrong size on PlayFabMultiplayerAPI_JoinArrangedLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, OnSuccess) == 0x000048, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, OnFailure) == 0x000058, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, CustomData) == 0x000068, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinArrangedLobby, ReturnValue) == 0x000070, "Member 'PlayFabMultiplayerAPI_JoinArrangedLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.JoinLobby
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_JoinLobby final
{
public:
	struct FMultiplayerJoinLobbyRequest           Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_JoinLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_JoinLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_JoinLobby) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_JoinLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_JoinLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_JoinLobby::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_JoinLobby::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_JoinLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinLobby, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_JoinLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.JoinMatchmakingTicket
// 0x0068 (0x0068 - 0x0000)
struct PlayFabMultiplayerAPI_JoinMatchmakingTicket final
{
public:
	struct FMultiplayerJoinMatchmakingTicketRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerJoinMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_JoinMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_JoinMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_JoinMatchmakingTicket) == 0x000068, "Wrong size on PlayFabMultiplayerAPI_JoinMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, OnSuccess) == 0x000038, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, OnFailure) == 0x000048, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, CustomData) == 0x000058, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_JoinMatchmakingTicket, ReturnValue) == 0x000060, "Member 'PlayFabMultiplayerAPI_JoinMatchmakingTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.LeaveLobby
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_LeaveLobby final
{
public:
	struct FMultiplayerLeaveLobbyRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_LeaveLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_LeaveLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_LeaveLobby) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_LeaveLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_LeaveLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_LeaveLobby::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_LeaveLobby::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_LeaveLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_LeaveLobby, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_LeaveLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListArchivedMultiplayerServers
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMultiplayerAPI_ListArchivedMultiplayerServers final
{
public:
	struct FMultiplayerListMultiplayerServersRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListArchivedMultiplayerServers");
static_assert(sizeof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers) == 0x000078, "Wrong size on PlayFabMultiplayerAPI_ListArchivedMultiplayerServers");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, OnSuccess) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, OnFailure) == 0x000058, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, CustomData) == 0x000068, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListArchivedMultiplayerServers, ReturnValue) == 0x000070, "Member 'PlayFabMultiplayerAPI_ListArchivedMultiplayerServers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListAssetSummaries
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListAssetSummaries final
{
public:
	struct FMultiplayerListAssetSummariesRequest  Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListAssetSummariesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListAssetSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListAssetSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_ListAssetSummaries) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListAssetSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListAssetSummaries, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListAssetSummaries::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListBuildAliases
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListBuildAliases final
{
public:
	struct FMultiplayerListBuildAliasesRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListBuildAliasesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListBuildAliases) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListBuildAliases");
static_assert(sizeof(PlayFabMultiplayerAPI_ListBuildAliases) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListBuildAliases");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildAliases, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListBuildAliases::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListBuildSummariesV2
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListBuildSummariesV2 final
{
public:
	struct FMultiplayerListBuildSummariesRequest  Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListBuildSummariesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListBuildSummariesV2) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListBuildSummariesV2");
static_assert(sizeof(PlayFabMultiplayerAPI_ListBuildSummariesV2) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListBuildSummariesV2");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListBuildSummariesV2, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListBuildSummariesV2::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListCertificateSummaries
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListCertificateSummaries final
{
public:
	struct FMultiplayerListCertificateSummariesRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListCertificateSummariesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListCertificateSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListCertificateSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_ListCertificateSummaries) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListCertificateSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListCertificateSummaries, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListCertificateSummaries::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListContainerImages
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListContainerImages final
{
public:
	struct FMultiplayerListContainerImagesRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListContainerImagesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListContainerImages) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListContainerImages");
static_assert(sizeof(PlayFabMultiplayerAPI_ListContainerImages) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListContainerImages");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListContainerImages::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListContainerImages::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListContainerImages::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListContainerImages::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImages, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListContainerImages::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListContainerImageTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_ListContainerImageTags final
{
public:
	struct FMultiplayerListContainerImageTagsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListContainerImageTagsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListContainerImageTags) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListContainerImageTags");
static_assert(sizeof(PlayFabMultiplayerAPI_ListContainerImageTags) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_ListContainerImageTags");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListContainerImageTags, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListContainerImageTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListMatchmakingTicketsForPlayer
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer final
{
public:
	struct FMultiplayerListMatchmakingTicketsForPlayerRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListMatchmakingTicketsForPlayerResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListMultiplayerServers
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMultiplayerAPI_ListMultiplayerServers final
{
public:
	struct FMultiplayerListMultiplayerServersRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListMultiplayerServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListMultiplayerServers");
static_assert(sizeof(PlayFabMultiplayerAPI_ListMultiplayerServers) == 0x000078, "Wrong size on PlayFabMultiplayerAPI_ListMultiplayerServers");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, OnSuccess) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, OnFailure) == 0x000058, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, CustomData) == 0x000068, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListMultiplayerServers, ReturnValue) == 0x000070, "Member 'PlayFabMultiplayerAPI_ListMultiplayerServers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListPartyQosServers
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_ListPartyQosServers final
{
public:
	struct FMultiplayerListPartyQosServersRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListPartyQosServersResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListPartyQosServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListPartyQosServers");
static_assert(sizeof(PlayFabMultiplayerAPI_ListPartyQosServers) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_ListPartyQosServers");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, OnSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, OnFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListPartyQosServers, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListPartyQosServers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListQosServersForTitle
// 0x0048 (0x0048 - 0x0000)
struct PlayFabMultiplayerAPI_ListQosServersForTitle final
{
public:
	struct FMultiplayerListQosServersForTitleRequest Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListQosServersForTitleResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListQosServersForTitle) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListQosServersForTitle");
static_assert(sizeof(PlayFabMultiplayerAPI_ListQosServersForTitle) == 0x000048, "Wrong size on PlayFabMultiplayerAPI_ListQosServersForTitle");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, OnSuccess) == 0x000018, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, OnFailure) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, CustomData) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListQosServersForTitle, ReturnValue) == 0x000040, "Member 'PlayFabMultiplayerAPI_ListQosServersForTitle::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListServerBackfillTicketsForPlayer
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer final
{
public:
	struct FMultiplayerListServerBackfillTicketsForPlayerRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListServerBackfillTicketsForPlayerResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListTitleMultiplayerServersQuotaChanges
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges final
{
public:
	struct FMultiplayerListTitleMultiplayerServersQuotaChangesRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges");
static_assert(sizeof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, OnSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, OnFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ListVirtualMachineSummaries
// 0x0078 (0x0078 - 0x0000)
struct PlayFabMultiplayerAPI_ListVirtualMachineSummaries final
{
public:
	struct FMultiplayerListVirtualMachineSummariesRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerListVirtualMachineSummariesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ListVirtualMachineSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries) == 0x000078, "Wrong size on PlayFabMultiplayerAPI_ListVirtualMachineSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, OnSuccess) == 0x000048, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, OnFailure) == 0x000058, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, CustomData) == 0x000068, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ListVirtualMachineSummaries, ReturnValue) == 0x000070, "Member 'PlayFabMultiplayerAPI_ListVirtualMachineSummaries::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.RemoveMember
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_RemoveMember final
{
public:
	struct FMultiplayerRemoveMemberFromLobbyRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_RemoveMember) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_RemoveMember");
static_assert(sizeof(PlayFabMultiplayerAPI_RemoveMember) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_RemoveMember");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_RemoveMember::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_RemoveMember::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_RemoveMember::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_RemoveMember::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RemoveMember, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_RemoveMember::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.RequestMultiplayerServer
// 0x0098 (0x0098 - 0x0000)
struct PlayFabMultiplayerAPI_RequestMultiplayerServer final
{
public:
	struct FMultiplayerRequestMultiplayerServerRequest Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerRequestMultiplayerServerResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_RequestMultiplayerServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_RequestMultiplayerServer");
static_assert(sizeof(PlayFabMultiplayerAPI_RequestMultiplayerServer) == 0x000098, "Wrong size on PlayFabMultiplayerAPI_RequestMultiplayerServer");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, OnSuccess) == 0x000068, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, OnFailure) == 0x000078, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, CustomData) == 0x000088, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RequestMultiplayerServer, ReturnValue) == 0x000090, "Member 'PlayFabMultiplayerAPI_RequestMultiplayerServer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.RolloverContainerRegistryCredentials
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials final
{
public:
	struct FMultiplayerRolloverContainerRegistryCredentialsRequest Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerRolloverContainerRegistryCredentialsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials");
static_assert(sizeof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, OnSuccess) == 0x000010, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, OnFailure) == 0x000020, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials, ReturnValue) == 0x000038, "Member 'PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.ShutdownMultiplayerServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_ShutdownMultiplayerServer final
{
public:
	struct FMultiplayerShutdownMultiplayerServerRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_ShutdownMultiplayerServer");
static_assert(sizeof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_ShutdownMultiplayerServer");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, OnSuccess) == 0x000020, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, OnFailure) == 0x000030, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_ShutdownMultiplayerServer, ReturnValue) == 0x000048, "Member 'PlayFabMultiplayerAPI_ShutdownMultiplayerServer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.SubscribeToLobbyResource
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_SubscribeToLobbyResource final
{
public:
	struct FMultiplayerSubscribeToLobbyResourceRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerSubscribeToLobbyResourceResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_SubscribeToLobbyResource) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_SubscribeToLobbyResource");
static_assert(sizeof(PlayFabMultiplayerAPI_SubscribeToLobbyResource) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_SubscribeToLobbyResource");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, OnSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, OnFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, CustomData) == 0x000060, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_SubscribeToLobbyResource, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_SubscribeToLobbyResource::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UnsubscribeFromLobbyResource
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource final
{
public:
	struct FMultiplayerUnsubscribeFromLobbyResourceRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource");
static_assert(sizeof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, OnSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, OnFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, CustomData) == 0x000060, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UntagContainerImage
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_UntagContainerImage final
{
public:
	struct FMultiplayerUntagContainerImageRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UntagContainerImage) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UntagContainerImage");
static_assert(sizeof(PlayFabMultiplayerAPI_UntagContainerImage) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_UntagContainerImage");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UntagContainerImage, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_UntagContainerImage::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildAlias
// 0x0070 (0x0070 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateBuildAlias final
{
public:
	struct FMultiplayerUpdateBuildAliasRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateBuildAlias) == 0x000070, "Wrong size on PlayFabMultiplayerAPI_UpdateBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, OnSuccess) == 0x000040, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, OnFailure) == 0x000050, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, CustomData) == 0x000060, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildAlias, ReturnValue) == 0x000068, "Member 'PlayFabMultiplayerAPI_UpdateBuildAlias::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildName
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateBuildName final
{
public:
	struct FMultiplayerUpdateBuildNameRequest     Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateBuildName) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateBuildName");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateBuildName) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_UpdateBuildName");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildName, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_UpdateBuildName::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegion
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateBuildRegion final
{
public:
	struct FMultiplayerUpdateBuildRegionRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateBuildRegion) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateBuildRegion");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateBuildRegion) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_UpdateBuildRegion");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, OnSuccess) == 0x000028, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, OnFailure) == 0x000038, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, CustomData) == 0x000048, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegion, ReturnValue) == 0x000050, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegion::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegions
// 0x0060 (0x0060 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateBuildRegions final
{
public:
	struct FMultiplayerUpdateBuildRegionsRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateBuildRegions) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateBuildRegions");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateBuildRegions) == 0x000060, "Wrong size on PlayFabMultiplayerAPI_UpdateBuildRegions");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, OnSuccess) == 0x000030, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, OnFailure) == 0x000040, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateBuildRegions, ReturnValue) == 0x000058, "Member 'PlayFabMultiplayerAPI_UpdateBuildRegions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UpdateLobby
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabMultiplayerAPI_UpdateLobby final
{
public:
	struct FMultiplayerUpdateLobbyRequest         Request;                                           // 0x0000(0x0090)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0090(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x00A0(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x00B8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UpdateLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UpdateLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_UpdateLobby) == 0x0000C0, "Wrong size on PlayFabMultiplayerAPI_UpdateLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UpdateLobby::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, OnSuccess) == 0x000090, "Member 'PlayFabMultiplayerAPI_UpdateLobby::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, OnFailure) == 0x0000A0, "Member 'PlayFabMultiplayerAPI_UpdateLobby::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, CustomData) == 0x0000B0, "Member 'PlayFabMultiplayerAPI_UpdateLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UpdateLobby, ReturnValue) == 0x0000B8, "Member 'PlayFabMultiplayerAPI_UpdateLobby::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.UploadCertificate
// 0x0048 (0x0048 - 0x0000)
struct PlayFabMultiplayerAPI_UploadCertificate final
{
public:
	struct FMultiplayerUploadCertificateRequest   Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabMultiplayerAPI*                 ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_UploadCertificate) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_UploadCertificate");
static_assert(sizeof(PlayFabMultiplayerAPI_UploadCertificate) == 0x000048, "Wrong size on PlayFabMultiplayerAPI_UploadCertificate");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, Request) == 0x000000, "Member 'PlayFabMultiplayerAPI_UploadCertificate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, OnSuccess) == 0x000018, "Member 'PlayFabMultiplayerAPI_UploadCertificate::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, OnFailure) == 0x000028, "Member 'PlayFabMultiplayerAPI_UploadCertificate::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, CustomData) == 0x000038, "Member 'PlayFabMultiplayerAPI_UploadCertificate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_UploadCertificate, ReturnValue) == 0x000040, "Member 'PlayFabMultiplayerAPI_UploadCertificate::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabMultiplayerAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature final
{
public:
	struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature final
{
public:
	struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature final
{
public:
	struct FMultiplayerCancelMatchmakingTicketResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature final
{
public:
	struct FMultiplayerCancelServerBackfillTicketResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateBuildAlias__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildAlias__DelegateSignature final
{
public:
	struct FMultiplayerBuildAliasDetailsResponse  Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildAlias__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildAlias__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildAlias__DelegateSignature) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildAlias__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildAlias__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildAlias__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildAlias__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildAlias__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature
// 0x00F8 (0x00F8 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature final
{
public:
	struct FMultiplayerCreateBuildWithCustomContainerResponse Result;                                            // 0x0000(0x00F0)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00F0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature) == 0x0000F8, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature, CustomData) == 0x0000F0, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature final
{
public:
	struct FMultiplayerCreateBuildWithManagedContainerResponse Result;                                            // 0x0000(0x00F8)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00F8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature) == 0x000100, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature, CustomData) == 0x0000F8, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature final
{
public:
	struct FMultiplayerCreateBuildWithProcessBasedServerResponse Result;                                            // 0x0000(0x00F8)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00F8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature) == 0x000100, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature, CustomData) == 0x0000F8, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateLobby__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateLobby__DelegateSignature final
{
public:
	struct FMultiplayerCreateLobbyResult          Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateLobby__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateLobby__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateLobby__DelegateSignature) == 0x000030, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateLobby__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateLobby__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateLobby__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateLobby__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateLobby__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature final
{
public:
	struct FMultiplayerCreateMatchmakingTicketResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateRemoteUser__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateRemoteUser__DelegateSignature final
{
public:
	struct FMultiplayerCreateRemoteUserResponse   Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateRemoteUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateRemoteUser__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateRemoteUser__DelegateSignature) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateRemoteUser__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateRemoteUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateRemoteUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateRemoteUser__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateRemoteUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature final
{
public:
	struct FMultiplayerCreateServerBackfillTicketResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature final
{
public:
	struct FMultiplayerCreateMatchmakingTicketResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature final
{
public:
	struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature) == 0x000028, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteAsset__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessDeleteAsset__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteAsset__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteAsset__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteAsset__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteAsset__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteAsset__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteAsset__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteAsset__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteAsset__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteBuild__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuild__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuild__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuild__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuild__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuild__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuild__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuild__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuild__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuild__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteBuildAlias__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildAlias__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildAlias__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildAlias__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildAlias__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildAlias__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildAlias__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildAlias__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildAlias__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildAlias__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteBuildRegion__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildRegion__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildRegion__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildRegion__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildRegion__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildRegion__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildRegion__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildRegion__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildRegion__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteBuildRegion__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteCertificate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessDeleteCertificate__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteCertificate__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteCertificate__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteCertificate__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteCertificate__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteCertificate__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteCertificate__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteCertificate__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteCertificate__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteLobby__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessDeleteLobby__DelegateSignature final
{
public:
	struct FMultiplayerLobbyEmptyResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteLobby__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteLobby__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteLobby__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteLobby__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteLobby__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteLobby__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteLobby__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteLobby__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessDeleteRemoteUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessDeleteRemoteUser__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteRemoteUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteRemoteUser__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteRemoteUser__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessDeleteRemoteUser__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteRemoteUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteRemoteUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessDeleteRemoteUser__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessDeleteRemoteUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature final
{
public:
	struct FMultiplayerEnableMultiplayerServersForTitleResponse Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature) == 0x000018, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessFindFriendLobbies__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessFindFriendLobbies__DelegateSignature final
{
public:
	struct FMultiplayerFindFriendLobbiesResult    Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessFindFriendLobbies__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessFindFriendLobbies__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessFindFriendLobbies__DelegateSignature) == 0x000028, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessFindFriendLobbies__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessFindFriendLobbies__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessFindFriendLobbies__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessFindFriendLobbies__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessFindFriendLobbies__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessFindLobbies__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessFindLobbies__DelegateSignature final
{
public:
	struct FMultiplayerFindLobbiesResult          Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessFindLobbies__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessFindLobbies__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessFindLobbies__DelegateSignature) == 0x000028, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessFindLobbies__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessFindLobbies__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessFindLobbies__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessFindLobbies__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessFindLobbies__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature final
{
public:
	struct FMultiplayerGetAssetDownloadUrlResponse Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature) == 0x000030, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetAssetUploadUrl__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetUploadUrl__DelegateSignature final
{
public:
	struct FMultiplayerGetAssetUploadUrlResponse  Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetUploadUrl__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetUploadUrl__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetUploadUrl__DelegateSignature) == 0x000030, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetUploadUrl__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetUploadUrl__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetUploadUrl__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetUploadUrl__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetAssetUploadUrl__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetBuild__DelegateSignature
// 0x0110 (0x0110 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetBuild__DelegateSignature final
{
public:
	struct FMultiplayerGetBuildResponse           Result;                                            // 0x0000(0x0108)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0108(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetBuild__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetBuild__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetBuild__DelegateSignature) == 0x000110, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetBuild__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetBuild__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetBuild__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetBuild__DelegateSignature, CustomData) == 0x000108, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetBuild__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetBuildAlias__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetBuildAlias__DelegateSignature final
{
public:
	struct FMultiplayerBuildAliasDetailsResponse  Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetBuildAlias__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetBuildAlias__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetBuildAlias__DelegateSignature) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetBuildAlias__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetBuildAlias__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetBuildAlias__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetBuildAlias__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetBuildAlias__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature final
{
public:
	struct FMultiplayerGetContainerRegistryCredentialsResponse Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetLobby__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetLobby__DelegateSignature final
{
public:
	struct FMultiplayerGetLobbyResult             Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetLobby__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetLobby__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetLobby__DelegateSignature) == 0x000018, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetLobby__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetLobby__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetLobby__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetLobby__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetLobby__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMatch__DelegateSignature
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetMatch__DelegateSignature final
{
public:
	struct FMultiplayerGetMatchResult             Result;                                            // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMatch__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetMatch__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMatch__DelegateSignature) == 0x000058, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetMatch__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMatch__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMatch__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMatch__DelegateSignature, CustomData) == 0x000050, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMatch__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMatchmakingTicket__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetMatchmakingTicket__DelegateSignature final
{
public:
	struct FMultiplayerGetMatchmakingTicketResult Result;                                            // 0x0000(0x00A0)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00A0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMatchmakingTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetMatchmakingTicket__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMatchmakingTicket__DelegateSignature) == 0x0000A8, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetMatchmakingTicket__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMatchmakingTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMatchmakingTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMatchmakingTicket__DelegateSignature, CustomData) == 0x0000A0, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMatchmakingTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature final
{
public:
	struct FMultiplayerGetMultiplayerServerDetailsResponse Result;                                            // 0x0000(0x00B8)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00B8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature) == 0x0000C0, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature, CustomData) == 0x0000B8, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature final
{
public:
	struct FMultiplayerGetMultiplayerServerLogsResponse Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature final
{
public:
	struct FMultiplayerGetMultiplayerServerLogsResponse Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetQueueStatistics__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetQueueStatistics__DelegateSignature final
{
public:
	struct FMultiplayerGetQueueStatisticsResult   Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetQueueStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetQueueStatistics__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetQueueStatistics__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetQueueStatistics__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetQueueStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetQueueStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetQueueStatistics__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetQueueStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature final
{
public:
	struct FMultiplayerGetRemoteLoginEndpointResponse Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature) == 0x000028, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetServerBackfillTicket__DelegateSignature
// 0x0090 (0x0090 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetServerBackfillTicket__DelegateSignature final
{
public:
	struct FMultiplayerGetServerBackfillTicketResult Result;                                            // 0x0000(0x0088)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetServerBackfillTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetServerBackfillTicket__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetServerBackfillTicket__DelegateSignature) == 0x000090, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetServerBackfillTicket__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetServerBackfillTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetServerBackfillTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetServerBackfillTicket__DelegateSignature, CustomData) == 0x000088, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetServerBackfillTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature final
{
public:
	struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature) == 0x000018, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature final
{
public:
	struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature) == 0x000018, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature final
{
public:
	struct FMultiplayerGetTitleMultiplayerServersQuotasResponse Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature) == 0x000018, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessInviteToLobby__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessInviteToLobby__DelegateSignature final
{
public:
	struct FMultiplayerLobbyEmptyResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessInviteToLobby__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessInviteToLobby__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessInviteToLobby__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessInviteToLobby__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessInviteToLobby__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessInviteToLobby__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessInviteToLobby__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessInviteToLobby__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessJoinArrangedLobby__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessJoinArrangedLobby__DelegateSignature final
{
public:
	struct FMultiplayerJoinLobbyResult            Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinArrangedLobby__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessJoinArrangedLobby__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinArrangedLobby__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessJoinArrangedLobby__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinArrangedLobby__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessJoinArrangedLobby__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinArrangedLobby__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessJoinArrangedLobby__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessJoinLobby__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessJoinLobby__DelegateSignature final
{
public:
	struct FMultiplayerJoinLobbyResult            Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinLobby__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessJoinLobby__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinLobby__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessJoinLobby__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinLobby__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessJoinLobby__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinLobby__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessJoinLobby__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature final
{
public:
	struct FMultiplayerJoinMatchmakingTicketResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessLeaveLobby__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessLeaveLobby__DelegateSignature final
{
public:
	struct FMultiplayerLobbyEmptyResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessLeaveLobby__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessLeaveLobby__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessLeaveLobby__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessLeaveLobby__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessLeaveLobby__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessLeaveLobby__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessLeaveLobby__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessLeaveLobby__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature final
{
public:
	struct FMultiplayerListMultiplayerServersResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListAssetSummaries__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListAssetSummaries__DelegateSignature final
{
public:
	struct FMultiplayerListAssetSummariesResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListAssetSummaries__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListAssetSummaries__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListAssetSummaries__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListAssetSummaries__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListAssetSummaries__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListAssetSummaries__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListAssetSummaries__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListAssetSummaries__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListBuildAliases__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListBuildAliases__DelegateSignature final
{
public:
	struct FMultiplayerListBuildAliasesResponse   Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListBuildAliases__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListBuildAliases__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListBuildAliases__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListBuildAliases__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListBuildAliases__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListBuildAliases__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListBuildAliases__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListBuildAliases__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListBuildSummariesV2__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListBuildSummariesV2__DelegateSignature final
{
public:
	struct FMultiplayerListBuildSummariesResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListBuildSummariesV2__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListBuildSummariesV2__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListBuildSummariesV2__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListBuildSummariesV2__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListBuildSummariesV2__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListBuildSummariesV2__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListBuildSummariesV2__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListBuildSummariesV2__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListCertificateSummaries__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListCertificateSummaries__DelegateSignature final
{
public:
	struct FMultiplayerListCertificateSummariesResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListCertificateSummaries__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListCertificateSummaries__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListCertificateSummaries__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListCertificateSummaries__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListCertificateSummaries__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListCertificateSummaries__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListCertificateSummaries__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListCertificateSummaries__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListContainerImages__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImages__DelegateSignature final
{
public:
	struct FMultiplayerListContainerImagesResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImages__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImages__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImages__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImages__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImages__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImages__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImages__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImages__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListContainerImageTags__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImageTags__DelegateSignature final
{
public:
	struct FMultiplayerListContainerImageTagsResponse Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImageTags__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImageTags__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImageTags__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImageTags__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImageTags__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImageTags__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImageTags__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListContainerImageTags__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature final
{
public:
	struct FMultiplayerListMatchmakingTicketsForPlayerResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListMultiplayerServers__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListMultiplayerServers__DelegateSignature final
{
public:
	struct FMultiplayerListMultiplayerServersResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListMultiplayerServers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListMultiplayerServers__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListMultiplayerServers__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListMultiplayerServers__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListMultiplayerServers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListMultiplayerServers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListMultiplayerServers__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListMultiplayerServers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListPartyQosServers__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListPartyQosServers__DelegateSignature final
{
public:
	struct FMultiplayerListPartyQosServersResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListPartyQosServers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListPartyQosServers__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListPartyQosServers__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListPartyQosServers__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListPartyQosServers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListPartyQosServers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListPartyQosServers__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListPartyQosServers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListQosServersForTitle__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListQosServersForTitle__DelegateSignature final
{
public:
	struct FMultiplayerListQosServersForTitleResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListQosServersForTitle__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListQosServersForTitle__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListQosServersForTitle__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListQosServersForTitle__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListQosServersForTitle__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListQosServersForTitle__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListQosServersForTitle__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListQosServersForTitle__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature final
{
public:
	struct FMultiplayerListServerBackfillTicketsForPlayerResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature final
{
public:
	struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature final
{
public:
	struct FMultiplayerListVirtualMachineSummariesResponse Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature) == 0x000038, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessRemoveMember__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessRemoveMember__DelegateSignature final
{
public:
	struct FMultiplayerLobbyEmptyResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessRemoveMember__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessRemoveMember__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessRemoveMember__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessRemoveMember__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessRemoveMember__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessRemoveMember__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessRemoveMember__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessRemoveMember__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessRequestMultiplayerServer__DelegateSignature
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessRequestMultiplayerServer__DelegateSignature final
{
public:
	struct FMultiplayerRequestMultiplayerServerResponse Result;                                            // 0x0000(0x00B8)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00B8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessRequestMultiplayerServer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessRequestMultiplayerServer__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessRequestMultiplayerServer__DelegateSignature) == 0x0000C0, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessRequestMultiplayerServer__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessRequestMultiplayerServer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessRequestMultiplayerServer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessRequestMultiplayerServer__DelegateSignature, CustomData) == 0x0000B8, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessRequestMultiplayerServer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature final
{
public:
	struct FMultiplayerRolloverContainerRegistryCredentialsResponse Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature final
{
public:
	struct FMultiplayerSubscribeToLobbyResourceResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature) == 0x000020, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature final
{
public:
	struct FMultiplayerLobbyEmptyResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUntagContainerImage__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessUntagContainerImage__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessUntagContainerImage__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessUntagContainerImage__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessUntagContainerImage__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessUntagContainerImage__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUntagContainerImage__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUntagContainerImage__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUntagContainerImage__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUntagContainerImage__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateBuildAlias__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildAlias__DelegateSignature final
{
public:
	struct FMultiplayerBuildAliasDetailsResponse  Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildAlias__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildAlias__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildAlias__DelegateSignature) == 0x000040, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildAlias__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildAlias__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildAlias__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildAlias__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildAlias__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateBuildName__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildName__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildName__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildName__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildName__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildName__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildName__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildName__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildName__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildName__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateBuildRegion__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegion__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegion__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegion__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegion__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegion__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegion__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegion__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegion__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegion__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateBuildRegions__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegions__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegions__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegions__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegions__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegions__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateBuildRegions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUpdateLobby__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessUpdateLobby__DelegateSignature final
{
public:
	struct FMultiplayerLobbyEmptyResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateLobby__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateLobby__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateLobby__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessUpdateLobby__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateLobby__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateLobby__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUpdateLobby__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUpdateLobby__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabMultiplayerAPI.DelegateOnSuccessUploadCertificate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerAPI_DelegateOnSuccessUploadCertificate__DelegateSignature final
{
public:
	struct FMultiplayerEmptyResponse              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerAPI_DelegateOnSuccessUploadCertificate__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_DelegateOnSuccessUploadCertificate__DelegateSignature");
static_assert(sizeof(PlayFabMultiplayerAPI_DelegateOnSuccessUploadCertificate__DelegateSignature) == 0x000010, "Wrong size on PlayFabMultiplayerAPI_DelegateOnSuccessUploadCertificate__DelegateSignature");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUploadCertificate__DelegateSignature, Result) == 0x000000, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUploadCertificate__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_DelegateOnSuccessUploadCertificate__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabMultiplayerAPI_DelegateOnSuccessUploadCertificate__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelAllMatchmakingTicketsForPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AFB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelAllServerBackfillTicketsForPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AFC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AFD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelServerBackfillTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AFE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateBuildAlias final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AFF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildAlias, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildAlias::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildAlias, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildAlias::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildAlias, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildAlias::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithCustomContainer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B00[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithManagedContainer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B01[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithProcessBasedServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B02[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B03[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateLobby, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateLobby::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B04[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateRemoteUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateRemoteUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B05[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateRemoteUser) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateRemoteUser");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateRemoteUser) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateRemoteUser");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateRemoteUser, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateRemoteUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateRemoteUser, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateRemoteUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateRemoteUser, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateRemoteUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateServerBackfillTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B06[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateServerMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B07[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateTitleMultiplayerServersQuotaChange
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B08[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteAsset
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteAsset final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B09[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteAsset) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteAsset");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteAsset) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteAsset");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteAsset, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteAsset::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteAsset, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteAsset::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteAsset, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteAsset::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuild
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteBuild final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteBuild) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteBuild");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteBuild) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteBuild");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuild, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuild::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuild, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuild::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuild, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuild::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteBuildAlias final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildAlias::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildAlias::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildAlias, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildAlias::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuildRegion
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteBuildRegion final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteBuildRegion");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteBuildRegion");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildRegion::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildRegion::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteBuildRegion, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteBuildRegion::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteCertificate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteCertificate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteCertificate) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteCertificate");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteCertificate) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteCertificate");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteCertificate, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteCertificate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteCertificate, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteCertificate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteCertificate, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteCertificate::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteContainerImageRepository
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteLobby, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteLobby::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteRemoteUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperDeleteRemoteUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B10[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperDeleteRemoteUser");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperDeleteRemoteUser");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperDeleteRemoteUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperDeleteRemoteUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperDeleteRemoteUser, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperDeleteRemoteUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperEnableMultiplayerServersForTitle
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B11[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperFindFriendLobbies
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperFindFriendLobbies final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B12[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperFindFriendLobbies) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperFindFriendLobbies");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperFindFriendLobbies) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperFindFriendLobbies");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindFriendLobbies, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperFindFriendLobbies::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindFriendLobbies, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperFindFriendLobbies::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindFriendLobbies, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperFindFriendLobbies::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperFindLobbies
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperFindLobbies final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B13[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperFindLobbies) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperFindLobbies");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperFindLobbies) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperFindLobbies");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindLobbies, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperFindLobbies::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindLobbies, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperFindLobbies::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperFindLobbies, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperFindLobbies::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetAssetDownloadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B14[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetAssetUploadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetAssetUploadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B15[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetAssetUploadUrl");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetAssetUploadUrl");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetAssetUploadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetAssetUploadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetAssetUploadUrl, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetAssetUploadUrl::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetBuild
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetBuild final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B16[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetBuild) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetBuild");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetBuild) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetBuild");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuild, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetBuild::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuild, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetBuild::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuild, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetBuild::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetBuildAlias final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B17[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuildAlias, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetBuildAlias::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuildAlias, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetBuildAlias::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetBuildAlias, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetBuildAlias::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetContainerRegistryCredentials
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B18[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B19[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetLobby, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetLobby::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMatch
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMatch final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMatch) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMatch");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMatch) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMatch");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatch, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMatch::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatch, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMatch::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatch, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMatch::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMatchmakingTicket, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMatchmakingTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerServerDetails
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerServerLogs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerSessionLogsBySessionId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetQueueStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetQueueStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetQueueStatistics) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetQueueStatistics");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetQueueStatistics) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetQueueStatistics");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetQueueStatistics, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetQueueStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetQueueStatistics, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetQueueStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetQueueStatistics, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetQueueStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetRemoteLoginEndpoint
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B20[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetServerBackfillTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetServerBackfillTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B21[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetServerBackfillTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetServerBackfillTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetServerBackfillTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetServerBackfillTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetServerBackfillTicket, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetServerBackfillTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetTitleEnabledForMultiplayerServersStatus
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B22[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetTitleMultiplayerServersQuotaChange
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B23[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperGetTitleMultiplayerServersQuotas
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B24[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperInviteToLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperInviteToLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B25[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperInviteToLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperInviteToLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperInviteToLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperInviteToLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperInviteToLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperInviteToLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperInviteToLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperInviteToLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperInviteToLobby, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperInviteToLobby::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinArrangedLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperJoinArrangedLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B26[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperJoinArrangedLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperJoinArrangedLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperJoinArrangedLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperJoinArrangedLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinArrangedLobby, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperJoinArrangedLobby::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperJoinLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B27[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperJoinLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperJoinLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperJoinLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperJoinLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperJoinLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperJoinLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinLobby, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperJoinLobby::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinMatchmakingTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B28[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperLeaveLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperLeaveLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B29[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperLeaveLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperLeaveLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperLeaveLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperLeaveLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperLeaveLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperLeaveLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperLeaveLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperLeaveLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperLeaveLobby, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperLeaveLobby::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListArchivedMultiplayerServers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B2A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListAssetSummaries
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListAssetSummaries final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B2B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListAssetSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListAssetSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListAssetSummaries) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListAssetSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListAssetSummaries, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListAssetSummaries::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListAssetSummaries, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListAssetSummaries::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListAssetSummaries, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListAssetSummaries::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListBuildAliases
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListBuildAliases final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B2C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListBuildAliases) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListBuildAliases");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListBuildAliases) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListBuildAliases");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildAliases, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListBuildAliases::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildAliases, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListBuildAliases::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildAliases, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListBuildAliases::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListBuildSummariesV2
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListBuildSummariesV2 final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B2D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListBuildSummariesV2");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListBuildSummariesV2");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListBuildSummariesV2::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListBuildSummariesV2::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListBuildSummariesV2, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListBuildSummariesV2::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListCertificateSummaries
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListCertificateSummaries final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B2E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListCertificateSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListCertificateSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListCertificateSummaries) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListCertificateSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListCertificateSummaries, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListCertificateSummaries::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListCertificateSummaries, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListCertificateSummaries::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListCertificateSummaries, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListCertificateSummaries::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListContainerImages
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListContainerImages final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B2F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListContainerImages) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListContainerImages");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListContainerImages) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListContainerImages");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImages, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListContainerImages::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImages, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListContainerImages::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImages, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListContainerImages::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListContainerImageTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListContainerImageTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B30[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListContainerImageTags) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListContainerImageTags");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListContainerImageTags) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListContainerImageTags");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImageTags, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListContainerImageTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImageTags, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListContainerImageTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListContainerImageTags, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListContainerImageTags::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListMatchmakingTicketsForPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B31[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListMultiplayerServers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListMultiplayerServers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B32[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListMultiplayerServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListMultiplayerServers");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListMultiplayerServers) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListMultiplayerServers");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMultiplayerServers, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListMultiplayerServers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMultiplayerServers, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListMultiplayerServers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListMultiplayerServers, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListMultiplayerServers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListPartyQosServers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListPartyQosServers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B33[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListPartyQosServers) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListPartyQosServers");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListPartyQosServers) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListPartyQosServers");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListPartyQosServers, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListPartyQosServers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListPartyQosServers, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListPartyQosServers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListPartyQosServers, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListPartyQosServers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListQosServersForTitle
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListQosServersForTitle final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B34[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListQosServersForTitle) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListQosServersForTitle");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListQosServersForTitle) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListQosServersForTitle");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListQosServersForTitle, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListQosServersForTitle::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListQosServersForTitle, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListQosServersForTitle::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListQosServersForTitle, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListQosServersForTitle::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListServerBackfillTicketsForPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B35[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListTitleMultiplayerServersQuotaChanges
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B36[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperListVirtualMachineSummaries
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B37[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperRemoveMember
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperRemoveMember final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B38[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperRemoveMember) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperRemoveMember");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperRemoveMember) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperRemoveMember");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRemoveMember, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperRemoveMember::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRemoveMember, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperRemoveMember::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRemoveMember, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperRemoveMember::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperRequestMultiplayerServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperRequestMultiplayerServer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B39[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperRequestMultiplayerServer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperRequestMultiplayerServer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperRequestMultiplayerServer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperRequestMultiplayerServer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRequestMultiplayerServer, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperRequestMultiplayerServer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperRolloverContainerRegistryCredentials
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B3A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperShutdownMultiplayerServer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B3B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperSubscribeToLobbyResource
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B3C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUnsubscribeFromLobbyResource
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B3D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUntagContainerImage
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUntagContainerImage final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B3E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUntagContainerImage) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUntagContainerImage");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUntagContainerImage) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUntagContainerImage");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUntagContainerImage, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUntagContainerImage::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUntagContainerImage, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUntagContainerImage::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUntagContainerImage, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUntagContainerImage::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildAlias
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateBuildAlias final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B3F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateBuildAlias");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateBuildAlias");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildAlias::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildAlias::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildAlias, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildAlias::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildName
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateBuildName final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B40[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateBuildName) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateBuildName");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateBuildName) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateBuildName");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildName, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildName::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildName, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildName::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildName, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildName::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildRegion
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateBuildRegion final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B41[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateBuildRegion");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateBuildRegion");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegion::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegion::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegion, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegion::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildRegions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateBuildRegions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B42[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateBuildRegions");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateBuildRegions");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateBuildRegions, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateBuildRegions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateLobby
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUpdateLobby final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B43[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUpdateLobby) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUpdateLobby");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUpdateLobby) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUpdateLobby");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateLobby, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUpdateLobby::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateLobby, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUpdateLobby::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUpdateLobby, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUpdateLobby::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerAPI.HelperUploadCertificate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabMultiplayerAPI_HelperUploadCertificate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B44[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabMultiplayerAPI_HelperUploadCertificate) == 0x000008, "Wrong alignment on PlayFabMultiplayerAPI_HelperUploadCertificate");
static_assert(sizeof(PlayFabMultiplayerAPI_HelperUploadCertificate) == 0x000050, "Wrong size on PlayFabMultiplayerAPI_HelperUploadCertificate");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUploadCertificate, Response) == 0x000000, "Member 'PlayFabMultiplayerAPI_HelperUploadCertificate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUploadCertificate, CustomData) == 0x000040, "Member 'PlayFabMultiplayerAPI_HelperUploadCertificate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerAPI_HelperUploadCertificate, Successful) == 0x000048, "Member 'PlayFabMultiplayerAPI_HelperUploadCertificate::Successful' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeBuildAliasDetailsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeBuildAliasDetailsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerBuildAliasDetailsResponse  ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeBuildAliasDetailsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeBuildAliasDetailsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeBuildAliasDetailsResponseResponse) == 0x000040, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeBuildAliasDetailsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeBuildAliasDetailsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeBuildAliasDetailsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeBuildAliasDetailsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeBuildAliasDetailsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelAllMatchmakingTicketsForPlayerResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCancelAllMatchmakingTicketsForPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCancelAllMatchmakingTicketsForPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCancelAllMatchmakingTicketsForPlayerResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCancelAllMatchmakingTicketsForPlayerResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCancelAllMatchmakingTicketsForPlayerResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCancelAllMatchmakingTicketsForPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCancelAllMatchmakingTicketsForPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCancelAllMatchmakingTicketsForPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCancelAllMatchmakingTicketsForPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelAllServerBackfillTicketsForPlayerResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCancelAllServerBackfillTicketsForPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCancelAllServerBackfillTicketsForPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCancelAllServerBackfillTicketsForPlayerResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCancelAllServerBackfillTicketsForPlayerResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCancelAllServerBackfillTicketsForPlayerResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCancelAllServerBackfillTicketsForPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCancelAllServerBackfillTicketsForPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCancelAllServerBackfillTicketsForPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCancelAllServerBackfillTicketsForPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelMatchmakingTicketResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCancelMatchmakingTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCancelMatchmakingTicketResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCancelMatchmakingTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCancelMatchmakingTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCancelMatchmakingTicketResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCancelMatchmakingTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCancelMatchmakingTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCancelMatchmakingTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCancelMatchmakingTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCancelMatchmakingTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelServerBackfillTicketResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCancelServerBackfillTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCancelServerBackfillTicketResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCancelServerBackfillTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCancelServerBackfillTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCancelServerBackfillTicketResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCancelServerBackfillTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCancelServerBackfillTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCancelServerBackfillTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCancelServerBackfillTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCancelServerBackfillTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithCustomContainerResponseResponse
// 0x00F8 (0x00F8 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithCustomContainerResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateBuildWithCustomContainerResponse ReturnValue;                                       // 0x0008(0x00F0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithCustomContainerResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithCustomContainerResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithCustomContainerResponseResponse) == 0x0000F8, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithCustomContainerResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithCustomContainerResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithCustomContainerResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithCustomContainerResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithCustomContainerResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithManagedContainerResponseResponse
// 0x0100 (0x0100 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithManagedContainerResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateBuildWithManagedContainerResponse ReturnValue;                                       // 0x0008(0x00F8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithManagedContainerResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithManagedContainerResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithManagedContainerResponseResponse) == 0x000100, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithManagedContainerResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithManagedContainerResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithManagedContainerResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithManagedContainerResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithManagedContainerResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithProcessBasedServerResponseResponse
// 0x0100 (0x0100 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithProcessBasedServerResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateBuildWithProcessBasedServerResponse ReturnValue;                                       // 0x0008(0x00F8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithProcessBasedServerResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithProcessBasedServerResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithProcessBasedServerResponseResponse) == 0x000100, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithProcessBasedServerResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithProcessBasedServerResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithProcessBasedServerResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithProcessBasedServerResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateBuildWithProcessBasedServerResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateLobbyResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCreateLobbyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateLobbyResult          ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCreateLobbyResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCreateLobbyResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCreateLobbyResultResponse) == 0x000030, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCreateLobbyResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateLobbyResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateLobbyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateLobbyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateLobbyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateMatchmakingTicketResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCreateMatchmakingTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateMatchmakingTicketResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCreateMatchmakingTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCreateMatchmakingTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCreateMatchmakingTicketResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCreateMatchmakingTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateMatchmakingTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateMatchmakingTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateMatchmakingTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateMatchmakingTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateRemoteUserResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCreateRemoteUserResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateRemoteUserResponse   ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCreateRemoteUserResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCreateRemoteUserResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCreateRemoteUserResponseResponse) == 0x000040, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCreateRemoteUserResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateRemoteUserResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateRemoteUserResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateRemoteUserResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateRemoteUserResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateServerBackfillTicketResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCreateServerBackfillTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateServerBackfillTicketResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCreateServerBackfillTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCreateServerBackfillTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCreateServerBackfillTicketResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCreateServerBackfillTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateServerBackfillTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateServerBackfillTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateServerBackfillTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateServerBackfillTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse) == 0x000028, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerEmptyResponse              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeEmptyResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeEmptyResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeEnableMultiplayerServersForTitleResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeEnableMultiplayerServersForTitleResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerEnableMultiplayerServersForTitleResponse ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeEnableMultiplayerServersForTitleResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeEnableMultiplayerServersForTitleResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeEnableMultiplayerServersForTitleResponseResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeEnableMultiplayerServersForTitleResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeEnableMultiplayerServersForTitleResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeEnableMultiplayerServersForTitleResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeEnableMultiplayerServersForTitleResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeEnableMultiplayerServersForTitleResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeFindFriendLobbiesResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeFindFriendLobbiesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerFindFriendLobbiesResult    ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeFindFriendLobbiesResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeFindFriendLobbiesResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeFindFriendLobbiesResultResponse) == 0x000028, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeFindFriendLobbiesResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeFindFriendLobbiesResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeFindFriendLobbiesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeFindFriendLobbiesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeFindFriendLobbiesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeFindLobbiesResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeFindLobbiesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerFindLobbiesResult          ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeFindLobbiesResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeFindLobbiesResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeFindLobbiesResultResponse) == 0x000028, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeFindLobbiesResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeFindLobbiesResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeFindLobbiesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeFindLobbiesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeFindLobbiesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetAssetDownloadUrlResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetAssetDownloadUrlResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetAssetDownloadUrlResponse ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetAssetDownloadUrlResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetAssetDownloadUrlResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetAssetDownloadUrlResponseResponse) == 0x000030, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetAssetDownloadUrlResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetAssetDownloadUrlResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetAssetDownloadUrlResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetAssetDownloadUrlResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetAssetDownloadUrlResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetAssetUploadUrlResponseResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetAssetUploadUrlResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetAssetUploadUrlResponse  ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetAssetUploadUrlResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetAssetUploadUrlResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetAssetUploadUrlResponseResponse) == 0x000030, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetAssetUploadUrlResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetAssetUploadUrlResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetAssetUploadUrlResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetAssetUploadUrlResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetAssetUploadUrlResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetBuildResponseResponse
// 0x0110 (0x0110 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetBuildResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetBuildResponse           ReturnValue;                                       // 0x0008(0x0108)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetBuildResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetBuildResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetBuildResponseResponse) == 0x000110, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetBuildResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetBuildResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetBuildResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetBuildResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetBuildResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetContainerRegistryCredentialsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetContainerRegistryCredentialsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetContainerRegistryCredentialsResponse ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetContainerRegistryCredentialsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetContainerRegistryCredentialsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetContainerRegistryCredentialsResponseResponse) == 0x000040, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetContainerRegistryCredentialsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetContainerRegistryCredentialsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetContainerRegistryCredentialsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetContainerRegistryCredentialsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetContainerRegistryCredentialsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetLobbyResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetLobbyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetLobbyResult             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetLobbyResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetLobbyResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetLobbyResultResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetLobbyResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetLobbyResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetLobbyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetLobbyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetLobbyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMatchmakingTicketResultResponse
// 0x00A8 (0x00A8 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetMatchmakingTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetMatchmakingTicketResult ReturnValue;                                       // 0x0008(0x00A0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetMatchmakingTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetMatchmakingTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetMatchmakingTicketResultResponse) == 0x0000A8, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetMatchmakingTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetMatchmakingTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetMatchmakingTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetMatchmakingTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetMatchmakingTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMatchResultResponse
// 0x0058 (0x0058 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetMatchResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetMatchResult             ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetMatchResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetMatchResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetMatchResultResponse) == 0x000058, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetMatchResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetMatchResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetMatchResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetMatchResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetMatchResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMultiplayerServerDetailsResponseResponse
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerDetailsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetMultiplayerServerDetailsResponse ReturnValue;                                       // 0x0008(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerDetailsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerDetailsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerDetailsResponseResponse) == 0x0000C0, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerDetailsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerDetailsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerDetailsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerDetailsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerDetailsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMultiplayerServerLogsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerLogsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetMultiplayerServerLogsResponse ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerLogsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerLogsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerLogsResponseResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerLogsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerLogsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerLogsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerLogsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetMultiplayerServerLogsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetQueueStatisticsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetQueueStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetQueueStatisticsResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetQueueStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetQueueStatisticsResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetQueueStatisticsResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetQueueStatisticsResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetQueueStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetQueueStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetQueueStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetQueueStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetRemoteLoginEndpointResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetRemoteLoginEndpointResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetRemoteLoginEndpointResponse ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetRemoteLoginEndpointResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetRemoteLoginEndpointResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetRemoteLoginEndpointResponseResponse) == 0x000028, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetRemoteLoginEndpointResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetRemoteLoginEndpointResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetRemoteLoginEndpointResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetRemoteLoginEndpointResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetRemoteLoginEndpointResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetServerBackfillTicketResultResponse
// 0x0090 (0x0090 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetServerBackfillTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetServerBackfillTicketResult ReturnValue;                                       // 0x0008(0x0088)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetServerBackfillTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetServerBackfillTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetServerBackfillTicketResultResponse) == 0x000090, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetServerBackfillTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetServerBackfillTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetServerBackfillTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetServerBackfillTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetServerBackfillTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleMultiplayerServersQuotaChangeResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleMultiplayerServersQuotasResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotasResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerGetTitleMultiplayerServersQuotasResponse ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotasResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotasResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotasResponseResponse) == 0x000018, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotasResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotasResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotasResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotasResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeGetTitleMultiplayerServersQuotasResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeJoinLobbyResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeJoinLobbyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerJoinLobbyResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeJoinLobbyResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeJoinLobbyResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeJoinLobbyResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeJoinLobbyResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeJoinLobbyResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeJoinLobbyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeJoinLobbyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeJoinLobbyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeJoinMatchmakingTicketResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeJoinMatchmakingTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerJoinMatchmakingTicketResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeJoinMatchmakingTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeJoinMatchmakingTicketResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeJoinMatchmakingTicketResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeJoinMatchmakingTicketResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeJoinMatchmakingTicketResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeJoinMatchmakingTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeJoinMatchmakingTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeJoinMatchmakingTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListAssetSummariesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListAssetSummariesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListAssetSummariesResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListAssetSummariesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListAssetSummariesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListAssetSummariesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListAssetSummariesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListAssetSummariesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListAssetSummariesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListAssetSummariesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListAssetSummariesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListBuildAliasesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListBuildAliasesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListBuildAliasesResponse   ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListBuildAliasesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListBuildAliasesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListBuildAliasesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListBuildAliasesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListBuildAliasesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListBuildAliasesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListBuildAliasesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListBuildAliasesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListBuildSummariesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListBuildSummariesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListBuildSummariesResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListBuildSummariesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListBuildSummariesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListBuildSummariesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListBuildSummariesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListBuildSummariesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListBuildSummariesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListBuildSummariesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListBuildSummariesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListCertificateSummariesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListCertificateSummariesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListCertificateSummariesResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListCertificateSummariesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListCertificateSummariesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListCertificateSummariesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListCertificateSummariesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListCertificateSummariesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListCertificateSummariesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListCertificateSummariesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListCertificateSummariesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListContainerImagesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListContainerImagesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListContainerImagesResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListContainerImagesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListContainerImagesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListContainerImagesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListContainerImagesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListContainerImagesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListContainerImagesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListContainerImagesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListContainerImagesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListContainerImageTagsResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListContainerImageTagsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListContainerImageTagsResponse ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListContainerImageTagsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListContainerImageTagsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListContainerImageTagsResponseResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListContainerImageTagsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListContainerImageTagsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListContainerImageTagsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListContainerImageTagsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListContainerImageTagsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListMatchmakingTicketsForPlayerResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListMatchmakingTicketsForPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListMatchmakingTicketsForPlayerResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListMatchmakingTicketsForPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListMatchmakingTicketsForPlayerResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListMatchmakingTicketsForPlayerResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListMatchmakingTicketsForPlayerResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListMatchmakingTicketsForPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListMatchmakingTicketsForPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListMatchmakingTicketsForPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListMatchmakingTicketsForPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListMultiplayerServersResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListMultiplayerServersResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListMultiplayerServersResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListMultiplayerServersResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListMultiplayerServersResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListMultiplayerServersResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListMultiplayerServersResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListMultiplayerServersResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListMultiplayerServersResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListMultiplayerServersResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListMultiplayerServersResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListPartyQosServersResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListPartyQosServersResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListPartyQosServersResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListPartyQosServersResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListPartyQosServersResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListPartyQosServersResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListPartyQosServersResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListPartyQosServersResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListPartyQosServersResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListPartyQosServersResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListPartyQosServersResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListQosServersForTitleResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListQosServersForTitleResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListQosServersForTitleResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListQosServersForTitleResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListQosServersForTitleResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListQosServersForTitleResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListQosServersForTitleResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListQosServersForTitleResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListQosServersForTitleResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListQosServersForTitleResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListQosServersForTitleResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListServerBackfillTicketsForPlayerResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListServerBackfillTicketsForPlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListServerBackfillTicketsForPlayerResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListServerBackfillTicketsForPlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListServerBackfillTicketsForPlayerResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListServerBackfillTicketsForPlayerResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListServerBackfillTicketsForPlayerResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListServerBackfillTicketsForPlayerResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListServerBackfillTicketsForPlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListServerBackfillTicketsForPlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListServerBackfillTicketsForPlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListTitleMultiplayerServersQuotaChangesResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListTitleMultiplayerServersQuotaChangesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListTitleMultiplayerServersQuotaChangesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListTitleMultiplayerServersQuotaChangesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListTitleMultiplayerServersQuotaChangesResponseResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListTitleMultiplayerServersQuotaChangesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListTitleMultiplayerServersQuotaChangesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListTitleMultiplayerServersQuotaChangesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListTitleMultiplayerServersQuotaChangesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListTitleMultiplayerServersQuotaChangesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListVirtualMachineSummariesResponseResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeListVirtualMachineSummariesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerListVirtualMachineSummariesResponse ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeListVirtualMachineSummariesResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeListVirtualMachineSummariesResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeListVirtualMachineSummariesResponseResponse) == 0x000038, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeListVirtualMachineSummariesResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListVirtualMachineSummariesResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeListVirtualMachineSummariesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeListVirtualMachineSummariesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeListVirtualMachineSummariesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeLobbyEmptyResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeLobbyEmptyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerLobbyEmptyResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeLobbyEmptyResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeLobbyEmptyResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeLobbyEmptyResultResponse) == 0x000010, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeLobbyEmptyResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeLobbyEmptyResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeLobbyEmptyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeLobbyEmptyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeLobbyEmptyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeRequestMultiplayerServerResponseResponse
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeRequestMultiplayerServerResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerRequestMultiplayerServerResponse ReturnValue;                                       // 0x0008(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeRequestMultiplayerServerResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeRequestMultiplayerServerResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeRequestMultiplayerServerResponseResponse) == 0x0000C0, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeRequestMultiplayerServerResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeRequestMultiplayerServerResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeRequestMultiplayerServerResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeRequestMultiplayerServerResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeRequestMultiplayerServerResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeRolloverContainerRegistryCredentialsResponseResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeRolloverContainerRegistryCredentialsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerRolloverContainerRegistryCredentialsResponse ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeRolloverContainerRegistryCredentialsResponseResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeRolloverContainerRegistryCredentialsResponseResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeRolloverContainerRegistryCredentialsResponseResponse) == 0x000040, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeRolloverContainerRegistryCredentialsResponseResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeRolloverContainerRegistryCredentialsResponseResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeRolloverContainerRegistryCredentialsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeRolloverContainerRegistryCredentialsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeRolloverContainerRegistryCredentialsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeSubscribeToLobbyResourceResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabMultiplayerModelDecoder_DecodeSubscribeToLobbyResourceResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiplayerSubscribeToLobbyResourceResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabMultiplayerModelDecoder_DecodeSubscribeToLobbyResourceResultResponse) == 0x000008, "Wrong alignment on PlayFabMultiplayerModelDecoder_DecodeSubscribeToLobbyResourceResultResponse");
static_assert(sizeof(PlayFabMultiplayerModelDecoder_DecodeSubscribeToLobbyResourceResultResponse) == 0x000020, "Wrong size on PlayFabMultiplayerModelDecoder_DecodeSubscribeToLobbyResourceResultResponse");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeSubscribeToLobbyResourceResultResponse, Response) == 0x000000, "Member 'PlayFabMultiplayerModelDecoder_DecodeSubscribeToLobbyResourceResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabMultiplayerModelDecoder_DecodeSubscribeToLobbyResourceResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabMultiplayerModelDecoder_DecodeSubscribeToLobbyResourceResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.GetGlobalPolicy
// 0x0048 (0x0048 - 0x0000)
struct PlayFabProfilesAPI_GetGlobalPolicy final
{
public:
	struct FProfilesGetGlobalPolicyRequest        Request;                                           // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesGetGlobalPolicyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_GetGlobalPolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_GetGlobalPolicy");
static_assert(sizeof(PlayFabProfilesAPI_GetGlobalPolicy) == 0x000048, "Wrong size on PlayFabProfilesAPI_GetGlobalPolicy");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, Request) == 0x000000, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, OnSuccess) == 0x000018, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, OnFailure) == 0x000028, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, CustomData) == 0x000038, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetGlobalPolicy, ReturnValue) == 0x000040, "Member 'PlayFabProfilesAPI_GetGlobalPolicy::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.GetProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_GetProfile final
{
public:
	struct FProfilesGetEntityProfileRequest       Request;                                           // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesGetEntityProfileResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_GetProfile) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_GetProfile");
static_assert(sizeof(PlayFabProfilesAPI_GetProfile) == 0x000050, "Wrong size on PlayFabProfilesAPI_GetProfile");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, Request) == 0x000000, "Member 'PlayFabProfilesAPI_GetProfile::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, OnSuccess) == 0x000020, "Member 'PlayFabProfilesAPI_GetProfile::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, OnFailure) == 0x000030, "Member 'PlayFabProfilesAPI_GetProfile::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_GetProfile::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfile, ReturnValue) == 0x000048, "Member 'PlayFabProfilesAPI_GetProfile::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.GetProfiles
// 0x0058 (0x0058 - 0x0000)
struct PlayFabProfilesAPI_GetProfiles final
{
public:
	struct FProfilesGetEntityProfilesRequest      Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesGetEntityProfilesResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_GetProfiles) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_GetProfiles");
static_assert(sizeof(PlayFabProfilesAPI_GetProfiles) == 0x000058, "Wrong size on PlayFabProfilesAPI_GetProfiles");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, Request) == 0x000000, "Member 'PlayFabProfilesAPI_GetProfiles::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, OnSuccess) == 0x000028, "Member 'PlayFabProfilesAPI_GetProfiles::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, OnFailure) == 0x000038, "Member 'PlayFabProfilesAPI_GetProfiles::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, CustomData) == 0x000048, "Member 'PlayFabProfilesAPI_GetProfiles::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetProfiles, ReturnValue) == 0x000050, "Member 'PlayFabProfilesAPI_GetProfiles::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.GetTitlePlayersFromMasterPlayerAccountIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds final
{
public:
	struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds");
static_assert(sizeof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds) == 0x000050, "Wrong size on PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, Request) == 0x000000, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, OnSuccess) == 0x000020, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, OnFailure) == 0x000030, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds, ReturnValue) == 0x000048, "Member 'PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.SetGlobalPolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_SetGlobalPolicy final
{
public:
	struct FProfilesSetGlobalPolicyRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesSetGlobalPolicyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_SetGlobalPolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_SetGlobalPolicy");
static_assert(sizeof(PlayFabProfilesAPI_SetGlobalPolicy) == 0x000050, "Wrong size on PlayFabProfilesAPI_SetGlobalPolicy");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, Request) == 0x000000, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, OnSuccess) == 0x000020, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, OnFailure) == 0x000030, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetGlobalPolicy, ReturnValue) == 0x000048, "Member 'PlayFabProfilesAPI_SetGlobalPolicy::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.SetProfileLanguage
// 0x0060 (0x0060 - 0x0000)
struct PlayFabProfilesAPI_SetProfileLanguage final
{
public:
	struct FProfilesSetProfileLanguageRequest     Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesSetProfileLanguageResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_SetProfileLanguage) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_SetProfileLanguage");
static_assert(sizeof(PlayFabProfilesAPI_SetProfileLanguage) == 0x000060, "Wrong size on PlayFabProfilesAPI_SetProfileLanguage");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, Request) == 0x000000, "Member 'PlayFabProfilesAPI_SetProfileLanguage::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, OnSuccess) == 0x000030, "Member 'PlayFabProfilesAPI_SetProfileLanguage::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, OnFailure) == 0x000040, "Member 'PlayFabProfilesAPI_SetProfileLanguage::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, CustomData) == 0x000050, "Member 'PlayFabProfilesAPI_SetProfileLanguage::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfileLanguage, ReturnValue) == 0x000058, "Member 'PlayFabProfilesAPI_SetProfileLanguage::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.SetProfilePolicy
// 0x0058 (0x0058 - 0x0000)
struct PlayFabProfilesAPI_SetProfilePolicy final
{
public:
	struct FProfilesSetEntityProfilePolicyRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FProfilesSetEntityProfilePolicyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabProfilesAPI*                    ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_SetProfilePolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_SetProfilePolicy");
static_assert(sizeof(PlayFabProfilesAPI_SetProfilePolicy) == 0x000058, "Wrong size on PlayFabProfilesAPI_SetProfilePolicy");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, Request) == 0x000000, "Member 'PlayFabProfilesAPI_SetProfilePolicy::Request' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, OnSuccess) == 0x000028, "Member 'PlayFabProfilesAPI_SetProfilePolicy::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, OnFailure) == 0x000038, "Member 'PlayFabProfilesAPI_SetProfilePolicy::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, CustomData) == 0x000048, "Member 'PlayFabProfilesAPI_SetProfilePolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_SetProfilePolicy, ReturnValue) == 0x000050, "Member 'PlayFabProfilesAPI_SetProfilePolicy::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabProfilesAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabProfilesAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabProfilesAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabProfilesAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabProfilesAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabProfilesAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabProfilesAPI.DelegateOnSuccessGetGlobalPolicy__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabProfilesAPI_DelegateOnSuccessGetGlobalPolicy__DelegateSignature final
{
public:
	struct FProfilesGetGlobalPolicyResponse       Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_DelegateOnSuccessGetGlobalPolicy__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_DelegateOnSuccessGetGlobalPolicy__DelegateSignature");
static_assert(sizeof(PlayFabProfilesAPI_DelegateOnSuccessGetGlobalPolicy__DelegateSignature) == 0x000020, "Wrong size on PlayFabProfilesAPI_DelegateOnSuccessGetGlobalPolicy__DelegateSignature");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessGetGlobalPolicy__DelegateSignature, Result) == 0x000000, "Member 'PlayFabProfilesAPI_DelegateOnSuccessGetGlobalPolicy__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessGetGlobalPolicy__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabProfilesAPI_DelegateOnSuccessGetGlobalPolicy__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabProfilesAPI.DelegateOnSuccessGetProfile__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabProfilesAPI_DelegateOnSuccessGetProfile__DelegateSignature final
{
public:
	struct FProfilesGetEntityProfileResponse      Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_DelegateOnSuccessGetProfile__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_DelegateOnSuccessGetProfile__DelegateSignature");
static_assert(sizeof(PlayFabProfilesAPI_DelegateOnSuccessGetProfile__DelegateSignature) == 0x000018, "Wrong size on PlayFabProfilesAPI_DelegateOnSuccessGetProfile__DelegateSignature");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessGetProfile__DelegateSignature, Result) == 0x000000, "Member 'PlayFabProfilesAPI_DelegateOnSuccessGetProfile__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessGetProfile__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabProfilesAPI_DelegateOnSuccessGetProfile__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabProfilesAPI.DelegateOnSuccessGetProfiles__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabProfilesAPI_DelegateOnSuccessGetProfiles__DelegateSignature final
{
public:
	struct FProfilesGetEntityProfilesResponse     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_DelegateOnSuccessGetProfiles__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_DelegateOnSuccessGetProfiles__DelegateSignature");
static_assert(sizeof(PlayFabProfilesAPI_DelegateOnSuccessGetProfiles__DelegateSignature) == 0x000020, "Wrong size on PlayFabProfilesAPI_DelegateOnSuccessGetProfiles__DelegateSignature");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessGetProfiles__DelegateSignature, Result) == 0x000000, "Member 'PlayFabProfilesAPI_DelegateOnSuccessGetProfiles__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessGetProfiles__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabProfilesAPI_DelegateOnSuccessGetProfiles__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabProfilesAPI.DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabProfilesAPI_DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature final
{
public:
	struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature");
static_assert(sizeof(PlayFabProfilesAPI_DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature) == 0x000028, "Wrong size on PlayFabProfilesAPI_DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature, Result) == 0x000000, "Member 'PlayFabProfilesAPI_DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabProfilesAPI_DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabProfilesAPI.DelegateOnSuccessSetGlobalPolicy__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabProfilesAPI_DelegateOnSuccessSetGlobalPolicy__DelegateSignature final
{
public:
	struct FProfilesSetGlobalPolicyResponse       Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_DelegateOnSuccessSetGlobalPolicy__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_DelegateOnSuccessSetGlobalPolicy__DelegateSignature");
static_assert(sizeof(PlayFabProfilesAPI_DelegateOnSuccessSetGlobalPolicy__DelegateSignature) == 0x000010, "Wrong size on PlayFabProfilesAPI_DelegateOnSuccessSetGlobalPolicy__DelegateSignature");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessSetGlobalPolicy__DelegateSignature, Result) == 0x000000, "Member 'PlayFabProfilesAPI_DelegateOnSuccessSetGlobalPolicy__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessSetGlobalPolicy__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabProfilesAPI_DelegateOnSuccessSetGlobalPolicy__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabProfilesAPI.DelegateOnSuccessSetProfileLanguage__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabProfilesAPI_DelegateOnSuccessSetProfileLanguage__DelegateSignature final
{
public:
	struct FProfilesSetProfileLanguageResponse    Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_DelegateOnSuccessSetProfileLanguage__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_DelegateOnSuccessSetProfileLanguage__DelegateSignature");
static_assert(sizeof(PlayFabProfilesAPI_DelegateOnSuccessSetProfileLanguage__DelegateSignature) == 0x000018, "Wrong size on PlayFabProfilesAPI_DelegateOnSuccessSetProfileLanguage__DelegateSignature");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessSetProfileLanguage__DelegateSignature, Result) == 0x000000, "Member 'PlayFabProfilesAPI_DelegateOnSuccessSetProfileLanguage__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessSetProfileLanguage__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabProfilesAPI_DelegateOnSuccessSetProfileLanguage__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabProfilesAPI.DelegateOnSuccessSetProfilePolicy__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabProfilesAPI_DelegateOnSuccessSetProfilePolicy__DelegateSignature final
{
public:
	struct FProfilesSetEntityProfilePolicyResponse Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesAPI_DelegateOnSuccessSetProfilePolicy__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_DelegateOnSuccessSetProfilePolicy__DelegateSignature");
static_assert(sizeof(PlayFabProfilesAPI_DelegateOnSuccessSetProfilePolicy__DelegateSignature) == 0x000020, "Wrong size on PlayFabProfilesAPI_DelegateOnSuccessSetProfilePolicy__DelegateSignature");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessSetProfilePolicy__DelegateSignature, Result) == 0x000000, "Member 'PlayFabProfilesAPI_DelegateOnSuccessSetProfilePolicy__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_DelegateOnSuccessSetProfilePolicy__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabProfilesAPI_DelegateOnSuccessSetProfilePolicy__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperGetGlobalPolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperGetGlobalPolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B47[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperGetGlobalPolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperGetGlobalPolicy");
static_assert(sizeof(PlayFabProfilesAPI_HelperGetGlobalPolicy) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperGetGlobalPolicy");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetGlobalPolicy, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperGetGlobalPolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetGlobalPolicy, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperGetGlobalPolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetGlobalPolicy, Successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperGetGlobalPolicy::Successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperGetProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperGetProfile final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B48[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperGetProfile) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperGetProfile");
static_assert(sizeof(PlayFabProfilesAPI_HelperGetProfile) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperGetProfile");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfile, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperGetProfile::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfile, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperGetProfile::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfile, Successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperGetProfile::Successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperGetProfiles
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperGetProfiles final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B49[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperGetProfiles) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperGetProfiles");
static_assert(sizeof(PlayFabProfilesAPI_HelperGetProfiles) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperGetProfiles");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfiles, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperGetProfiles::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfiles, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperGetProfiles::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetProfiles, Successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperGetProfiles::Successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperGetTitlePlayersFromMasterPlayerAccountIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B4A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds");
static_assert(sizeof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds, Successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds::Successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperSetGlobalPolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperSetGlobalPolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B4B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperSetGlobalPolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperSetGlobalPolicy");
static_assert(sizeof(PlayFabProfilesAPI_HelperSetGlobalPolicy) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperSetGlobalPolicy");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetGlobalPolicy, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperSetGlobalPolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetGlobalPolicy, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperSetGlobalPolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetGlobalPolicy, Successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperSetGlobalPolicy::Successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperSetProfileLanguage
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperSetProfileLanguage final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B4C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperSetProfileLanguage) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperSetProfileLanguage");
static_assert(sizeof(PlayFabProfilesAPI_HelperSetProfileLanguage) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperSetProfileLanguage");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfileLanguage, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperSetProfileLanguage::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfileLanguage, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperSetProfileLanguage::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfileLanguage, Successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperSetProfileLanguage::Successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesAPI.HelperSetProfilePolicy
// 0x0050 (0x0050 - 0x0000)
struct PlayFabProfilesAPI_HelperSetProfilePolicy final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B4D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabProfilesAPI_HelperSetProfilePolicy) == 0x000008, "Wrong alignment on PlayFabProfilesAPI_HelperSetProfilePolicy");
static_assert(sizeof(PlayFabProfilesAPI_HelperSetProfilePolicy) == 0x000050, "Wrong size on PlayFabProfilesAPI_HelperSetProfilePolicy");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfilePolicy, Response) == 0x000000, "Member 'PlayFabProfilesAPI_HelperSetProfilePolicy::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfilePolicy, CustomData) == 0x000040, "Member 'PlayFabProfilesAPI_HelperSetProfilePolicy::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesAPI_HelperSetProfilePolicy, Successful) == 0x000048, "Member 'PlayFabProfilesAPI_HelperSetProfilePolicy::Successful' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetEntityProfileResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabProfilesModelDecoder_DecodeGetEntityProfileResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesGetEntityProfileResponse      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_DecodeGetEntityProfileResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_DecodeGetEntityProfileResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_DecodeGetEntityProfileResponseResponse) == 0x000018, "Wrong size on PlayFabProfilesModelDecoder_DecodeGetEntityProfileResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeGetEntityProfileResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_DecodeGetEntityProfileResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeGetEntityProfileResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_DecodeGetEntityProfileResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetEntityProfilesResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabProfilesModelDecoder_DecodeGetEntityProfilesResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesGetEntityProfilesResponse     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_DecodeGetEntityProfilesResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_DecodeGetEntityProfilesResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_DecodeGetEntityProfilesResponseResponse) == 0x000020, "Wrong size on PlayFabProfilesModelDecoder_DecodeGetEntityProfilesResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeGetEntityProfilesResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_DecodeGetEntityProfilesResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeGetEntityProfilesResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_DecodeGetEntityProfilesResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetGlobalPolicyResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabProfilesModelDecoder_DecodeGetGlobalPolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesGetGlobalPolicyResponse       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_DecodeGetGlobalPolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_DecodeGetGlobalPolicyResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_DecodeGetGlobalPolicyResponseResponse) == 0x000020, "Wrong size on PlayFabProfilesModelDecoder_DecodeGetGlobalPolicyResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeGetGlobalPolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_DecodeGetGlobalPolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeGetGlobalPolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_DecodeGetGlobalPolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabProfilesModelDecoder_DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse) == 0x000028, "Wrong size on PlayFabProfilesModelDecoder_DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeSetEntityProfilePolicyResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabProfilesModelDecoder_DecodeSetEntityProfilePolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesSetEntityProfilePolicyResponse ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_DecodeSetEntityProfilePolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_DecodeSetEntityProfilePolicyResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_DecodeSetEntityProfilePolicyResponseResponse) == 0x000020, "Wrong size on PlayFabProfilesModelDecoder_DecodeSetEntityProfilePolicyResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeSetEntityProfilePolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_DecodeSetEntityProfilePolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeSetEntityProfilePolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_DecodeSetEntityProfilePolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeSetGlobalPolicyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabProfilesModelDecoder_DecodeSetGlobalPolicyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesSetGlobalPolicyResponse       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_DecodeSetGlobalPolicyResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_DecodeSetGlobalPolicyResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_DecodeSetGlobalPolicyResponseResponse) == 0x000010, "Wrong size on PlayFabProfilesModelDecoder_DecodeSetGlobalPolicyResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeSetGlobalPolicyResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_DecodeSetGlobalPolicyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeSetGlobalPolicyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_DecodeSetGlobalPolicyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabProfilesModelDecoder.decodeSetProfileLanguageResponseResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabProfilesModelDecoder_DecodeSetProfileLanguageResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProfilesSetProfileLanguageResponse    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabProfilesModelDecoder_DecodeSetProfileLanguageResponseResponse) == 0x000008, "Wrong alignment on PlayFabProfilesModelDecoder_DecodeSetProfileLanguageResponseResponse");
static_assert(sizeof(PlayFabProfilesModelDecoder_DecodeSetProfileLanguageResponseResponse) == 0x000018, "Wrong size on PlayFabProfilesModelDecoder_DecodeSetProfileLanguageResponseResponse");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeSetProfileLanguageResponseResponse, Response) == 0x000000, "Member 'PlayFabProfilesModelDecoder_DecodeSetProfileLanguageResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabProfilesModelDecoder_DecodeSetProfileLanguageResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabProfilesModelDecoder_DecodeSetProfileLanguageResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddCharacterVirtualCurrency
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_AddCharacterVirtualCurrency final
{
public:
	struct FServerAddCharacterVirtualCurrencyRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddCharacterVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddCharacterVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_AddCharacterVirtualCurrency) == 0x000078, "Wrong size on PlayFabServerAPI_AddCharacterVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, Request) == 0x000000, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, OnSuccess) == 0x000048, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, OnFailure) == 0x000058, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, CustomData) == 0x000068, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddCharacterVirtualCurrency, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_AddCharacterVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddFriend
// 0x0088 (0x0088 - 0x0000)
struct PlayFabServerAPI_AddFriend final
{
public:
	struct FServerAddFriendRequest                Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddFriend) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddFriend");
static_assert(sizeof(PlayFabServerAPI_AddFriend) == 0x000088, "Wrong size on PlayFabServerAPI_AddFriend");
static_assert(offsetof(PlayFabServerAPI_AddFriend, Request) == 0x000000, "Member 'PlayFabServerAPI_AddFriend::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddFriend, OnSuccess) == 0x000058, "Member 'PlayFabServerAPI_AddFriend::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddFriend, OnFailure) == 0x000068, "Member 'PlayFabServerAPI_AddFriend::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddFriend, CustomData) == 0x000078, "Member 'PlayFabServerAPI_AddFriend::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddFriend, ReturnValue) == 0x000080, "Member 'PlayFabServerAPI_AddFriend::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_AddGenericID final
{
public:
	struct FServerAddGenericIDRequest             Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddGenericID) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddGenericID");
static_assert(sizeof(PlayFabServerAPI_AddGenericID) == 0x000050, "Wrong size on PlayFabServerAPI_AddGenericID");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, Request) == 0x000000, "Member 'PlayFabServerAPI_AddGenericID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_AddGenericID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_AddGenericID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, CustomData) == 0x000040, "Member 'PlayFabServerAPI_AddGenericID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddGenericID, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_AddGenericID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddPlayerTag
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_AddPlayerTag final
{
public:
	struct FServerAddPlayerTagRequest             Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerAddPlayerTagResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddPlayerTag) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddPlayerTag");
static_assert(sizeof(PlayFabServerAPI_AddPlayerTag) == 0x000060, "Wrong size on PlayFabServerAPI_AddPlayerTag");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, Request) == 0x000000, "Member 'PlayFabServerAPI_AddPlayerTag::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_AddPlayerTag::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_AddPlayerTag::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, CustomData) == 0x000050, "Member 'PlayFabServerAPI_AddPlayerTag::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddPlayerTag, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_AddPlayerTag::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddSharedGroupMembers
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_AddSharedGroupMembers final
{
public:
	struct FServerAddSharedGroupMembersRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerAddSharedGroupMembersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddSharedGroupMembers");
static_assert(sizeof(PlayFabServerAPI_AddSharedGroupMembers) == 0x000058, "Wrong size on PlayFabServerAPI_AddSharedGroupMembers");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, Request) == 0x000000, "Member 'PlayFabServerAPI_AddSharedGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_AddSharedGroupMembers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_AddSharedGroupMembers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, CustomData) == 0x000048, "Member 'PlayFabServerAPI_AddSharedGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddSharedGroupMembers, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_AddSharedGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AddUserVirtualCurrency
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_AddUserVirtualCurrency final
{
public:
	struct FServerAddUserVirtualCurrencyRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_AddUserVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_AddUserVirtualCurrency) == 0x000068, "Wrong size on PlayFabServerAPI_AddUserVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, CustomData) == 0x000058, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AddUserVirtualCurrency, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_AddUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AuthenticateSessionTicket
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_AuthenticateSessionTicket final
{
public:
	struct FServerAuthenticateSessionTicketRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerAuthenticateSessionTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AuthenticateSessionTicket) == 0x000008, "Wrong alignment on PlayFabServerAPI_AuthenticateSessionTicket");
static_assert(sizeof(PlayFabServerAPI_AuthenticateSessionTicket) == 0x000048, "Wrong size on PlayFabServerAPI_AuthenticateSessionTicket");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, Request) == 0x000000, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, CustomData) == 0x000038, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AuthenticateSessionTicket, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_AuthenticateSessionTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.AwardSteamAchievement
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_AwardSteamAchievement final
{
public:
	struct FServerAwardSteamAchievementRequest    Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerAwardSteamAchievementResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_AwardSteamAchievement) == 0x000008, "Wrong alignment on PlayFabServerAPI_AwardSteamAchievement");
static_assert(sizeof(PlayFabServerAPI_AwardSteamAchievement) == 0x000048, "Wrong size on PlayFabServerAPI_AwardSteamAchievement");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, Request) == 0x000000, "Member 'PlayFabServerAPI_AwardSteamAchievement::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_AwardSteamAchievement::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_AwardSteamAchievement::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, CustomData) == 0x000038, "Member 'PlayFabServerAPI_AwardSteamAchievement::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_AwardSteamAchievement, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_AwardSteamAchievement::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.BanUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_BanUsers final
{
public:
	struct FServerBanUsersRequest                 Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerBanUsersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_BanUsers) == 0x000008, "Wrong alignment on PlayFabServerAPI_BanUsers");
static_assert(sizeof(PlayFabServerAPI_BanUsers) == 0x000050, "Wrong size on PlayFabServerAPI_BanUsers");
static_assert(offsetof(PlayFabServerAPI_BanUsers, Request) == 0x000000, "Member 'PlayFabServerAPI_BanUsers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_BanUsers, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_BanUsers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_BanUsers, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_BanUsers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_BanUsers, CustomData) == 0x000040, "Member 'PlayFabServerAPI_BanUsers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_BanUsers, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_BanUsers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.ConsumeItem
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_ConsumeItem final
{
public:
	struct FServerConsumeItemRequest              Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerConsumeItemResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_ConsumeItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_ConsumeItem");
static_assert(sizeof(PlayFabServerAPI_ConsumeItem) == 0x000078, "Wrong size on PlayFabServerAPI_ConsumeItem");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, Request) == 0x000000, "Member 'PlayFabServerAPI_ConsumeItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, OnSuccess) == 0x000048, "Member 'PlayFabServerAPI_ConsumeItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, OnFailure) == 0x000058, "Member 'PlayFabServerAPI_ConsumeItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, CustomData) == 0x000068, "Member 'PlayFabServerAPI_ConsumeItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ConsumeItem, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_ConsumeItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.CreateSharedGroup
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_CreateSharedGroup final
{
public:
	struct FServerCreateSharedGroupRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerCreateSharedGroupResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_CreateSharedGroup) == 0x000008, "Wrong alignment on PlayFabServerAPI_CreateSharedGroup");
static_assert(sizeof(PlayFabServerAPI_CreateSharedGroup) == 0x000048, "Wrong size on PlayFabServerAPI_CreateSharedGroup");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, Request) == 0x000000, "Member 'PlayFabServerAPI_CreateSharedGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_CreateSharedGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_CreateSharedGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, CustomData) == 0x000038, "Member 'PlayFabServerAPI_CreateSharedGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_CreateSharedGroup, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_CreateSharedGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.DeleteCharacterFromUser
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_DeleteCharacterFromUser final
{
public:
	struct FServerDeleteCharacterFromUserRequest  Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerDeleteCharacterFromUserResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DeleteCharacterFromUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_DeleteCharacterFromUser");
static_assert(sizeof(PlayFabServerAPI_DeleteCharacterFromUser) == 0x000068, "Wrong size on PlayFabServerAPI_DeleteCharacterFromUser");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, Request) == 0x000000, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, CustomData) == 0x000058, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteCharacterFromUser, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_DeleteCharacterFromUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.DeletePlayer
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_DeletePlayer final
{
public:
	struct FServerDeletePlayerRequest             Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerDeletePlayerResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DeletePlayer) == 0x000008, "Wrong alignment on PlayFabServerAPI_DeletePlayer");
static_assert(sizeof(PlayFabServerAPI_DeletePlayer) == 0x000048, "Wrong size on PlayFabServerAPI_DeletePlayer");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, Request) == 0x000000, "Member 'PlayFabServerAPI_DeletePlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_DeletePlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_DeletePlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, CustomData) == 0x000038, "Member 'PlayFabServerAPI_DeletePlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePlayer, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_DeletePlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.DeletePushNotificationTemplate
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_DeletePushNotificationTemplate final
{
public:
	struct FServerDeletePushNotificationTemplateRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerDeletePushNotificationTemplateResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DeletePushNotificationTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_DeletePushNotificationTemplate");
static_assert(sizeof(PlayFabServerAPI_DeletePushNotificationTemplate) == 0x000048, "Wrong size on PlayFabServerAPI_DeletePushNotificationTemplate");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, Request) == 0x000000, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, CustomData) == 0x000038, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeletePushNotificationTemplate, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_DeletePushNotificationTemplate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.DeleteSharedGroup
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_DeleteSharedGroup final
{
public:
	struct FServerDeleteSharedGroupRequest        Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DeleteSharedGroup) == 0x000008, "Wrong alignment on PlayFabServerAPI_DeleteSharedGroup");
static_assert(sizeof(PlayFabServerAPI_DeleteSharedGroup) == 0x000048, "Wrong size on PlayFabServerAPI_DeleteSharedGroup");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, Request) == 0x000000, "Member 'PlayFabServerAPI_DeleteSharedGroup::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_DeleteSharedGroup::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_DeleteSharedGroup::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, CustomData) == 0x000038, "Member 'PlayFabServerAPI_DeleteSharedGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeleteSharedGroup, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_DeleteSharedGroup::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.DeregisterGame
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_DeregisterGame final
{
public:
	struct FServerDeregisterGameRequest           Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerDeregisterGameResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DeregisterGame) == 0x000008, "Wrong alignment on PlayFabServerAPI_DeregisterGame");
static_assert(sizeof(PlayFabServerAPI_DeregisterGame) == 0x000050, "Wrong size on PlayFabServerAPI_DeregisterGame");
static_assert(offsetof(PlayFabServerAPI_DeregisterGame, Request) == 0x000000, "Member 'PlayFabServerAPI_DeregisterGame::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeregisterGame, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_DeregisterGame::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeregisterGame, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_DeregisterGame::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeregisterGame, CustomData) == 0x000040, "Member 'PlayFabServerAPI_DeregisterGame::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DeregisterGame, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_DeregisterGame::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.EvaluateRandomResultTable
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_EvaluateRandomResultTable final
{
public:
	struct FServerEvaluateRandomResultTableRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEvaluateRandomResultTableResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_EvaluateRandomResultTable) == 0x000008, "Wrong alignment on PlayFabServerAPI_EvaluateRandomResultTable");
static_assert(sizeof(PlayFabServerAPI_EvaluateRandomResultTable) == 0x000058, "Wrong size on PlayFabServerAPI_EvaluateRandomResultTable");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, Request) == 0x000000, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, CustomData) == 0x000048, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_EvaluateRandomResultTable, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_EvaluateRandomResultTable::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.ExecuteCloudScript
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_ExecuteCloudScript final
{
public:
	struct FServerExecuteCloudScriptServerRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerExecuteCloudScriptResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_ExecuteCloudScript) == 0x000008, "Wrong alignment on PlayFabServerAPI_ExecuteCloudScript");
static_assert(sizeof(PlayFabServerAPI_ExecuteCloudScript) == 0x000078, "Wrong size on PlayFabServerAPI_ExecuteCloudScript");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, Request) == 0x000000, "Member 'PlayFabServerAPI_ExecuteCloudScript::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, OnSuccess) == 0x000048, "Member 'PlayFabServerAPI_ExecuteCloudScript::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, OnFailure) == 0x000058, "Member 'PlayFabServerAPI_ExecuteCloudScript::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, CustomData) == 0x000068, "Member 'PlayFabServerAPI_ExecuteCloudScript::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ExecuteCloudScript, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_ExecuteCloudScript::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetAllSegments
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_GetAllSegments final
{
public:
	struct FServerGetAllSegmentsRequest           Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetAllSegmentsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetAllSegments) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetAllSegments");
static_assert(sizeof(PlayFabServerAPI_GetAllSegments) == 0x000038, "Wrong size on PlayFabServerAPI_GetAllSegments");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, Request) == 0x000000, "Member 'PlayFabServerAPI_GetAllSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, OnSuccess) == 0x000008, "Member 'PlayFabServerAPI_GetAllSegments::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, OnFailure) == 0x000018, "Member 'PlayFabServerAPI_GetAllSegments::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, CustomData) == 0x000028, "Member 'PlayFabServerAPI_GetAllSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllSegments, ReturnValue) == 0x000030, "Member 'PlayFabServerAPI_GetAllSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetAllUsersCharacters
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetAllUsersCharacters final
{
public:
	struct FServerListUsersCharactersRequest      Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerListUsersCharactersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetAllUsersCharacters) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetAllUsersCharacters");
static_assert(sizeof(PlayFabServerAPI_GetAllUsersCharacters) == 0x000048, "Wrong size on PlayFabServerAPI_GetAllUsersCharacters");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, Request) == 0x000000, "Member 'PlayFabServerAPI_GetAllUsersCharacters::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetAllUsersCharacters::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetAllUsersCharacters::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetAllUsersCharacters::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetAllUsersCharacters, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetAllUsersCharacters::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCatalogItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetCatalogItems final
{
public:
	struct FServerGetCatalogItemsRequest          Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCatalogItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCatalogItems");
static_assert(sizeof(PlayFabServerAPI_GetCatalogItems) == 0x000048, "Wrong size on PlayFabServerAPI_GetCatalogItems");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCatalogItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetCatalogItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetCatalogItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCatalogItems, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetCatalogItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetCharacterData final
{
public:
	struct FServerGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterData");
static_assert(sizeof(PlayFabServerAPI_GetCharacterData) == 0x000070, "Wrong size on PlayFabServerAPI_GetCharacterData");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, CustomData) == 0x000060, "Member 'PlayFabServerAPI_GetCharacterData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetCharacterData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterInternalData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetCharacterInternalData final
{
public:
	struct FServerGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterInternalData");
static_assert(sizeof(PlayFabServerAPI_GetCharacterInternalData) == 0x000070, "Wrong size on PlayFabServerAPI_GetCharacterInternalData");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, CustomData) == 0x000060, "Member 'PlayFabServerAPI_GetCharacterInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInternalData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetCharacterInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterInventory
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetCharacterInventory final
{
public:
	struct FServerGetCharacterInventoryRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterInventoryResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterInventory) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterInventory");
static_assert(sizeof(PlayFabServerAPI_GetCharacterInventory) == 0x000070, "Wrong size on PlayFabServerAPI_GetCharacterInventory");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterInventory::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterInventory::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, CustomData) == 0x000060, "Member 'PlayFabServerAPI_GetCharacterInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterInventory, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetCharacterInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterLeaderboard
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetCharacterLeaderboard final
{
public:
	struct FServerGetCharacterLeaderboardRequest  Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterLeaderboardResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterLeaderboard");
static_assert(sizeof(PlayFabServerAPI_GetCharacterLeaderboard) == 0x000060, "Wrong size on PlayFabServerAPI_GetCharacterLeaderboard");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterLeaderboard, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetCharacterLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetCharacterReadOnlyData final
{
public:
	struct FServerGetCharacterDataRequest         Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_GetCharacterReadOnlyData) == 0x000070, "Wrong size on PlayFabServerAPI_GetCharacterReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, CustomData) == 0x000060, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetCharacterReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetCharacterStatistics
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetCharacterStatistics final
{
public:
	struct FServerGetCharacterStatisticsRequest   Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetCharacterStatistics");
static_assert(sizeof(PlayFabServerAPI_GetCharacterStatistics) == 0x000058, "Wrong size on PlayFabServerAPI_GetCharacterStatistics");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, Request) == 0x000000, "Member 'PlayFabServerAPI_GetCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetCharacterStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_GetCharacterStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, CustomData) == 0x000048, "Member 'PlayFabServerAPI_GetCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetCharacterStatistics, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetContentDownloadUrl
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetContentDownloadUrl final
{
public:
	struct FServerGetContentDownloadUrlRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetContentDownloadUrlResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetContentDownloadUrl) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetContentDownloadUrl");
static_assert(sizeof(PlayFabServerAPI_GetContentDownloadUrl) == 0x000060, "Wrong size on PlayFabServerAPI_GetContentDownloadUrl");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, Request) == 0x000000, "Member 'PlayFabServerAPI_GetContentDownloadUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetContentDownloadUrl::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetContentDownloadUrl::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetContentDownloadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetContentDownloadUrl, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetContentDownloadUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetFriendLeaderboard
// 0x0090 (0x0090 - 0x0000)
struct PlayFabServerAPI_GetFriendLeaderboard final
{
public:
	struct FServerGetFriendLeaderboardRequest     Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetFriendLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetFriendLeaderboard");
static_assert(sizeof(PlayFabServerAPI_GetFriendLeaderboard) == 0x000090, "Wrong size on PlayFabServerAPI_GetFriendLeaderboard");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, Request) == 0x000000, "Member 'PlayFabServerAPI_GetFriendLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, OnSuccess) == 0x000060, "Member 'PlayFabServerAPI_GetFriendLeaderboard::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, OnFailure) == 0x000070, "Member 'PlayFabServerAPI_GetFriendLeaderboard::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, CustomData) == 0x000080, "Member 'PlayFabServerAPI_GetFriendLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendLeaderboard, ReturnValue) == 0x000088, "Member 'PlayFabServerAPI_GetFriendLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetFriendsList
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetFriendsList final
{
public:
	struct FServerGetFriendsListRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetFriendsListResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetFriendsList) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetFriendsList");
static_assert(sizeof(PlayFabServerAPI_GetFriendsList) == 0x000070, "Wrong size on PlayFabServerAPI_GetFriendsList");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, Request) == 0x000000, "Member 'PlayFabServerAPI_GetFriendsList::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetFriendsList::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_GetFriendsList::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, CustomData) == 0x000060, "Member 'PlayFabServerAPI_GetFriendsList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetFriendsList, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetFriendsList::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetLeaderboard
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetLeaderboard final
{
public:
	struct FServerGetLeaderboardRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetLeaderboard");
static_assert(sizeof(PlayFabServerAPI_GetLeaderboard) == 0x000070, "Wrong size on PlayFabServerAPI_GetLeaderboard");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, Request) == 0x000000, "Member 'PlayFabServerAPI_GetLeaderboard::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetLeaderboard::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_GetLeaderboard::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, CustomData) == 0x000060, "Member 'PlayFabServerAPI_GetLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboard, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetLeaderboard::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetLeaderboardAroundCharacter
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_GetLeaderboardAroundCharacter final
{
public:
	struct FServerGetLeaderboardAroundCharacterRequest Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardAroundCharacterResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetLeaderboardAroundCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetLeaderboardAroundCharacter");
static_assert(sizeof(PlayFabServerAPI_GetLeaderboardAroundCharacter) == 0x000080, "Wrong size on PlayFabServerAPI_GetLeaderboardAroundCharacter");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, Request) == 0x000000, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, OnSuccess) == 0x000050, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, OnFailure) == 0x000060, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, CustomData) == 0x000070, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundCharacter, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_GetLeaderboardAroundCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetLeaderboardAroundUser
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_GetLeaderboardAroundUser final
{
public:
	struct FServerGetLeaderboardAroundUserRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardAroundUserResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetLeaderboardAroundUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetLeaderboardAroundUser");
static_assert(sizeof(PlayFabServerAPI_GetLeaderboardAroundUser) == 0x000078, "Wrong size on PlayFabServerAPI_GetLeaderboardAroundUser");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, Request) == 0x000000, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, OnSuccess) == 0x000048, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, OnFailure) == 0x000058, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, CustomData) == 0x000068, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardAroundUser, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_GetLeaderboardAroundUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetLeaderboardForUserCharacters
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetLeaderboardForUserCharacters final
{
public:
	struct FServerGetLeaderboardForUsersCharactersRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetLeaderboardForUsersCharactersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetLeaderboardForUserCharacters) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetLeaderboardForUserCharacters");
static_assert(sizeof(PlayFabServerAPI_GetLeaderboardForUserCharacters) == 0x000058, "Wrong size on PlayFabServerAPI_GetLeaderboardForUserCharacters");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, Request) == 0x000000, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, CustomData) == 0x000048, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetLeaderboardForUserCharacters, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetLeaderboardForUserCharacters::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerCombinedInfo
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetPlayerCombinedInfo final
{
public:
	struct FServerGetPlayerCombinedInfoRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerCombinedInfoResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerCombinedInfo) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerCombinedInfo");
static_assert(sizeof(PlayFabServerAPI_GetPlayerCombinedInfo) == 0x000058, "Wrong size on PlayFabServerAPI_GetPlayerCombinedInfo");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, CustomData) == 0x000048, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerCombinedInfo, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetPlayerCombinedInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerProfile
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetPlayerProfile final
{
public:
	struct FServerGetPlayerProfileRequest         Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerProfileResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerProfile");
static_assert(sizeof(PlayFabServerAPI_GetPlayerProfile) == 0x000058, "Wrong size on PlayFabServerAPI_GetPlayerProfile");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerProfile::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetPlayerProfile::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_GetPlayerProfile::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, CustomData) == 0x000048, "Member 'PlayFabServerAPI_GetPlayerProfile::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerProfile, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetPlayerProfile::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetPlayerSegments final
{
public:
	struct FServerGetPlayersSegmentsRequest       Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerSegmentsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerSegments");
static_assert(sizeof(PlayFabServerAPI_GetPlayerSegments) == 0x000050, "Wrong size on PlayFabServerAPI_GetPlayerSegments");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerSegments::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetPlayerSegments::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_GetPlayerSegments::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, CustomData) == 0x000040, "Member 'PlayFabServerAPI_GetPlayerSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerSegments, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetPlayerSegments::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayersInSegment
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_GetPlayersInSegment final
{
public:
	struct FServerGetPlayersInSegmentRequest      Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayersInSegmentResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayersInSegment");
static_assert(sizeof(PlayFabServerAPI_GetPlayersInSegment) == 0x000068, "Wrong size on PlayFabServerAPI_GetPlayersInSegment");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayersInSegment::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_GetPlayersInSegment::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_GetPlayersInSegment::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, CustomData) == 0x000058, "Member 'PlayFabServerAPI_GetPlayersInSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayersInSegment, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_GetPlayersInSegment::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerStatistics
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetPlayerStatistics final
{
public:
	struct FServerGetPlayerStatisticsRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerStatistics");
static_assert(sizeof(PlayFabServerAPI_GetPlayerStatistics) == 0x000070, "Wrong size on PlayFabServerAPI_GetPlayerStatistics");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetPlayerStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_GetPlayerStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, CustomData) == 0x000060, "Member 'PlayFabServerAPI_GetPlayerStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatistics, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetPlayerStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetPlayerStatisticVersions final
{
public:
	struct FServerGetPlayerStatisticVersionsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerStatisticVersionsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerStatisticVersions");
static_assert(sizeof(PlayFabServerAPI_GetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabServerAPI_GetPlayerStatisticVersions");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, CustomData) == 0x000040, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerStatisticVersions, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetPlayerStatisticVersions::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayerTags
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetPlayerTags final
{
public:
	struct FServerGetPlayerTagsRequest            Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayerTagsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayerTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayerTags");
static_assert(sizeof(PlayFabServerAPI_GetPlayerTags) == 0x000060, "Wrong size on PlayFabServerAPI_GetPlayerTags");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayerTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetPlayerTags::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetPlayerTags::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetPlayerTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayerTags, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetPlayerTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromFacebookIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs final
{
public:
	struct FServerGetPlayFabIDsFromFacebookIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromFacebookInstantGamesIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds final
{
public:
	struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromGenericIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromGenericIDs final
{
public:
	struct FServerGetPlayFabIDsFromGenericIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromGenericIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromGenericIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromGenericIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromGenericIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromGenericIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromNintendoServiceAccountIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds final
{
public:
	struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds final
{
public:
	struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromPSNAccountIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs final
{
public:
	struct FServerGetPlayFabIDsFromPSNAccountIDsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs) == 0x000050, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, CustomData) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromSteamIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromSteamIDs final
{
public:
	struct FServerGetPlayFabIDsFromSteamIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromSteamIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromSteamIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromSteamIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromSteamIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromSteamIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromTwitchIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs final
{
public:
	struct FServerGetPlayFabIDsFromTwitchIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromXboxLiveIDs
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs final
{
public:
	struct FServerGetPlayFabIDsFromXboxLiveIDsRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs");
static_assert(sizeof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs) == 0x000058, "Wrong size on PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, CustomData) == 0x000048, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetPublisherData
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetPublisherData final
{
public:
	struct FServerGetPublisherDataRequest         Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetPublisherData");
static_assert(sizeof(PlayFabServerAPI_GetPublisherData) == 0x000048, "Wrong size on PlayFabServerAPI_GetPublisherData");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetPublisherData, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetRandomResultTables
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetRandomResultTables final
{
public:
	struct FServerGetRandomResultTablesRequest    Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetRandomResultTablesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetRandomResultTables) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetRandomResultTables");
static_assert(sizeof(PlayFabServerAPI_GetRandomResultTables) == 0x000058, "Wrong size on PlayFabServerAPI_GetRandomResultTables");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, Request) == 0x000000, "Member 'PlayFabServerAPI_GetRandomResultTables::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetRandomResultTables::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_GetRandomResultTables::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, CustomData) == 0x000048, "Member 'PlayFabServerAPI_GetRandomResultTables::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetRandomResultTables, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetRandomResultTables::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetServerCustomIDsFromPlayFabIDs
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs final
{
public:
	struct FServerGetServerCustomIDsFromPlayFabIDsRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetServerCustomIDsFromPlayFabIDsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs");
static_assert(sizeof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs) == 0x000048, "Wrong size on PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, Request) == 0x000000, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetSharedGroupData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetSharedGroupData final
{
public:
	struct FServerGetSharedGroupDataRequest       Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetSharedGroupDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetSharedGroupData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetSharedGroupData");
static_assert(sizeof(PlayFabServerAPI_GetSharedGroupData) == 0x000060, "Wrong size on PlayFabServerAPI_GetSharedGroupData");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetSharedGroupData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetSharedGroupData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetSharedGroupData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetSharedGroupData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetSharedGroupData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetSharedGroupData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetStoreItems
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GetStoreItems final
{
public:
	struct FServerGetStoreItemsServerRequest      Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetStoreItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetStoreItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetStoreItems");
static_assert(sizeof(PlayFabServerAPI_GetStoreItems) == 0x000070, "Wrong size on PlayFabServerAPI_GetStoreItems");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, Request) == 0x000000, "Member 'PlayFabServerAPI_GetStoreItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_GetStoreItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_GetStoreItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, CustomData) == 0x000060, "Member 'PlayFabServerAPI_GetStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetStoreItems, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GetStoreItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetTime
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_GetTime final
{
public:
	struct FServerGetTimeRequest                  Request;                                           // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetTimeResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetTime) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetTime");
static_assert(sizeof(PlayFabServerAPI_GetTime) == 0x000038, "Wrong size on PlayFabServerAPI_GetTime");
static_assert(offsetof(PlayFabServerAPI_GetTime, Request) == 0x000000, "Member 'PlayFabServerAPI_GetTime::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTime, OnSuccess) == 0x000008, "Member 'PlayFabServerAPI_GetTime::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTime, OnFailure) == 0x000018, "Member 'PlayFabServerAPI_GetTime::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTime, CustomData) == 0x000028, "Member 'PlayFabServerAPI_GetTime::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTime, ReturnValue) == 0x000030, "Member 'PlayFabServerAPI_GetTime::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetTitleData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetTitleData final
{
public:
	struct FServerGetTitleDataRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetTitleData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetTitleData");
static_assert(sizeof(PlayFabServerAPI_GetTitleData) == 0x000058, "Wrong size on PlayFabServerAPI_GetTitleData");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetTitleData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_GetTitleData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, CustomData) == 0x000048, "Member 'PlayFabServerAPI_GetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleData, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetTitleInternalData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_GetTitleInternalData final
{
public:
	struct FServerGetTitleDataRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetTitleInternalData");
static_assert(sizeof(PlayFabServerAPI_GetTitleInternalData) == 0x000058, "Wrong size on PlayFabServerAPI_GetTitleInternalData");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetTitleInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_GetTitleInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_GetTitleInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, CustomData) == 0x000048, "Member 'PlayFabServerAPI_GetTitleInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleInternalData, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_GetTitleInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetTitleNews
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerAPI_GetTitleNews final
{
public:
	struct FServerGetTitleNewsRequest             Request;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetTitleNewsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetTitleNews) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetTitleNews");
static_assert(sizeof(PlayFabServerAPI_GetTitleNews) == 0x000040, "Wrong size on PlayFabServerAPI_GetTitleNews");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, Request) == 0x000000, "Member 'PlayFabServerAPI_GetTitleNews::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, OnSuccess) == 0x000010, "Member 'PlayFabServerAPI_GetTitleNews::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, OnFailure) == 0x000020, "Member 'PlayFabServerAPI_GetTitleNews::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, CustomData) == 0x000030, "Member 'PlayFabServerAPI_GetTitleNews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetTitleNews, ReturnValue) == 0x000038, "Member 'PlayFabServerAPI_GetTitleNews::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserAccountInfo
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetUserAccountInfo final
{
public:
	struct FServerGetUserAccountInfoRequest       Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserAccountInfoResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserAccountInfo) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserAccountInfo");
static_assert(sizeof(PlayFabServerAPI_GetUserAccountInfo) == 0x000048, "Wrong size on PlayFabServerAPI_GetUserAccountInfo");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserAccountInfo::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetUserAccountInfo::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetUserAccountInfo::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetUserAccountInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserAccountInfo, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetUserAccountInfo::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_GetUserBans final
{
public:
	struct FServerGetUserBansRequest              Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserBansResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserBans");
static_assert(sizeof(PlayFabServerAPI_GetUserBans) == 0x000048, "Wrong size on PlayFabServerAPI_GetUserBans");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_GetUserBans::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_GetUserBans::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, CustomData) == 0x000038, "Member 'PlayFabServerAPI_GetUserBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserBans, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_GetUserBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserData");
static_assert(sizeof(PlayFabServerAPI_GetUserData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserData");
static_assert(offsetof(PlayFabServerAPI_GetUserData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserData, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserData, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserData, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserInternalData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserInternalData");
static_assert(sizeof(PlayFabServerAPI_GetUserInternalData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserInternalData");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetUserInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInternalData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_GetUserInventory final
{
public:
	struct FServerGetUserInventoryRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserInventoryResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserInventory) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserInventory");
static_assert(sizeof(PlayFabServerAPI_GetUserInventory) == 0x000050, "Wrong size on PlayFabServerAPI_GetUserInventory");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserInventory::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_GetUserInventory::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_GetUserInventory::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, CustomData) == 0x000040, "Member 'PlayFabServerAPI_GetUserInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserInventory, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_GetUserInventory::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserPublisherData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserPublisherData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserPublisherData");
static_assert(sizeof(PlayFabServerAPI_GetUserPublisherData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserPublisherData");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserPublisherInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserPublisherInternalData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserPublisherInternalData");
static_assert(sizeof(PlayFabServerAPI_GetUserPublisherInternalData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserPublisherInternalData");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherInternalData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserPublisherInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserPublisherReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserPublisherReadOnlyData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_GetUserPublisherReadOnlyData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserPublisherReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GetUserReadOnlyData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GetUserReadOnlyData final
{
public:
	struct FServerGetUserDataRequest              Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_GetUserReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_GetUserReadOnlyData) == 0x000060, "Wrong size on PlayFabServerAPI_GetUserReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_GetUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GetUserReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GetUserReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GetUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GetUserReadOnlyData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GetUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GrantCharacterToUser
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_GrantCharacterToUser final
{
public:
	struct FServerGrantCharacterToUserRequest     Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGrantCharacterToUserResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GrantCharacterToUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_GrantCharacterToUser");
static_assert(sizeof(PlayFabServerAPI_GrantCharacterToUser) == 0x000070, "Wrong size on PlayFabServerAPI_GrantCharacterToUser");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, Request) == 0x000000, "Member 'PlayFabServerAPI_GrantCharacterToUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_GrantCharacterToUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_GrantCharacterToUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, CustomData) == 0x000060, "Member 'PlayFabServerAPI_GrantCharacterToUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantCharacterToUser, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_GrantCharacterToUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GrantItemsToCharacter
// 0x0090 (0x0090 - 0x0000)
struct PlayFabServerAPI_GrantItemsToCharacter final
{
public:
	struct FServerGrantItemsToCharacterRequest    Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGrantItemsToCharacterResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GrantItemsToCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_GrantItemsToCharacter");
static_assert(sizeof(PlayFabServerAPI_GrantItemsToCharacter) == 0x000090, "Wrong size on PlayFabServerAPI_GrantItemsToCharacter");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, Request) == 0x000000, "Member 'PlayFabServerAPI_GrantItemsToCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, OnSuccess) == 0x000060, "Member 'PlayFabServerAPI_GrantItemsToCharacter::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, OnFailure) == 0x000070, "Member 'PlayFabServerAPI_GrantItemsToCharacter::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, CustomData) == 0x000080, "Member 'PlayFabServerAPI_GrantItemsToCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToCharacter, ReturnValue) == 0x000088, "Member 'PlayFabServerAPI_GrantItemsToCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GrantItemsToUser
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_GrantItemsToUser final
{
public:
	struct FServerGrantItemsToUserRequest         Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGrantItemsToUserResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GrantItemsToUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_GrantItemsToUser");
static_assert(sizeof(PlayFabServerAPI_GrantItemsToUser) == 0x000080, "Wrong size on PlayFabServerAPI_GrantItemsToUser");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, Request) == 0x000000, "Member 'PlayFabServerAPI_GrantItemsToUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, OnSuccess) == 0x000050, "Member 'PlayFabServerAPI_GrantItemsToUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, OnFailure) == 0x000060, "Member 'PlayFabServerAPI_GrantItemsToUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, CustomData) == 0x000070, "Member 'PlayFabServerAPI_GrantItemsToUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUser, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_GrantItemsToUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.GrantItemsToUsers
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_GrantItemsToUsers final
{
public:
	struct FServerGrantItemsToUsersRequest        Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerGrantItemsToUsersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_GrantItemsToUsers) == 0x000008, "Wrong alignment on PlayFabServerAPI_GrantItemsToUsers");
static_assert(sizeof(PlayFabServerAPI_GrantItemsToUsers) == 0x000060, "Wrong size on PlayFabServerAPI_GrantItemsToUsers");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, Request) == 0x000000, "Member 'PlayFabServerAPI_GrantItemsToUsers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_GrantItemsToUsers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_GrantItemsToUsers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, CustomData) == 0x000050, "Member 'PlayFabServerAPI_GrantItemsToUsers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_GrantItemsToUsers, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_GrantItemsToUsers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkPSNAccount
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_LinkPSNAccount final
{
public:
	struct FServerLinkPSNAccountRequest           Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerLinkPSNAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkPSNAccount");
static_assert(sizeof(PlayFabServerAPI_LinkPSNAccount) == 0x000078, "Wrong size on PlayFabServerAPI_LinkPSNAccount");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkPSNAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, OnSuccess) == 0x000048, "Member 'PlayFabServerAPI_LinkPSNAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, OnFailure) == 0x000058, "Member 'PlayFabServerAPI_LinkPSNAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, CustomData) == 0x000068, "Member 'PlayFabServerAPI_LinkPSNAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkPSNAccount, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_LinkPSNAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkServerCustomId
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_LinkServerCustomId final
{
public:
	struct FServerLinkServerCustomIdRequest       Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerLinkServerCustomIdResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkServerCustomId");
static_assert(sizeof(PlayFabServerAPI_LinkServerCustomId) == 0x000068, "Wrong size on PlayFabServerAPI_LinkServerCustomId");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkServerCustomId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_LinkServerCustomId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_LinkServerCustomId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, CustomData) == 0x000058, "Member 'PlayFabServerAPI_LinkServerCustomId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkServerCustomId, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_LinkServerCustomId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LinkXboxAccount
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_LinkXboxAccount final
{
public:
	struct FServerLinkXboxAccountRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerLinkXboxAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_LinkXboxAccount");
static_assert(sizeof(PlayFabServerAPI_LinkXboxAccount) == 0x000068, "Wrong size on PlayFabServerAPI_LinkXboxAccount");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_LinkXboxAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_LinkXboxAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_LinkXboxAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, CustomData) == 0x000058, "Member 'PlayFabServerAPI_LinkXboxAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LinkXboxAccount, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_LinkXboxAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LoginWithServerCustomId
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_LoginWithServerCustomId final
{
public:
	struct FServerLoginWithServerCustomIdRequest  Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LoginWithServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LoginWithServerCustomId");
static_assert(sizeof(PlayFabServerAPI_LoginWithServerCustomId) == 0x000070, "Wrong size on PlayFabServerAPI_LoginWithServerCustomId");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, Request) == 0x000000, "Member 'PlayFabServerAPI_LoginWithServerCustomId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_LoginWithServerCustomId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_LoginWithServerCustomId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, CustomData) == 0x000060, "Member 'PlayFabServerAPI_LoginWithServerCustomId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithServerCustomId, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_LoginWithServerCustomId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LoginWithSteamId
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_LoginWithSteamId final
{
public:
	struct FServerLoginWithSteamIdRequest         Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LoginWithSteamId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LoginWithSteamId");
static_assert(sizeof(PlayFabServerAPI_LoginWithSteamId) == 0x000060, "Wrong size on PlayFabServerAPI_LoginWithSteamId");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, Request) == 0x000000, "Member 'PlayFabServerAPI_LoginWithSteamId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_LoginWithSteamId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_LoginWithSteamId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, CustomData) == 0x000050, "Member 'PlayFabServerAPI_LoginWithSteamId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithSteamId, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_LoginWithSteamId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LoginWithXbox
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_LoginWithXbox final
{
public:
	struct FServerLoginWithXboxRequest            Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LoginWithXbox) == 0x000008, "Wrong alignment on PlayFabServerAPI_LoginWithXbox");
static_assert(sizeof(PlayFabServerAPI_LoginWithXbox) == 0x000060, "Wrong size on PlayFabServerAPI_LoginWithXbox");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, Request) == 0x000000, "Member 'PlayFabServerAPI_LoginWithXbox::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_LoginWithXbox::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_LoginWithXbox::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, CustomData) == 0x000050, "Member 'PlayFabServerAPI_LoginWithXbox::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXbox, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_LoginWithXbox::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.LoginWithXboxId
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_LoginWithXboxId final
{
public:
	struct FServerLoginWithXboxIdRequest          Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_LoginWithXboxId) == 0x000008, "Wrong alignment on PlayFabServerAPI_LoginWithXboxId");
static_assert(sizeof(PlayFabServerAPI_LoginWithXboxId) == 0x000070, "Wrong size on PlayFabServerAPI_LoginWithXboxId");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, Request) == 0x000000, "Member 'PlayFabServerAPI_LoginWithXboxId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_LoginWithXboxId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_LoginWithXboxId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, CustomData) == 0x000060, "Member 'PlayFabServerAPI_LoginWithXboxId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_LoginWithXboxId, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_LoginWithXboxId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.ModifyItemUses
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_ModifyItemUses final
{
public:
	struct FServerModifyItemUsesRequest           Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyItemUsesResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_ModifyItemUses) == 0x000008, "Wrong alignment on PlayFabServerAPI_ModifyItemUses");
static_assert(sizeof(PlayFabServerAPI_ModifyItemUses) == 0x000068, "Wrong size on PlayFabServerAPI_ModifyItemUses");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, Request) == 0x000000, "Member 'PlayFabServerAPI_ModifyItemUses::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_ModifyItemUses::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_ModifyItemUses::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, CustomData) == 0x000058, "Member 'PlayFabServerAPI_ModifyItemUses::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ModifyItemUses, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_ModifyItemUses::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.MoveItemToCharacterFromCharacter
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_MoveItemToCharacterFromCharacter final
{
public:
	struct FServerMoveItemToCharacterFromCharacterRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerMoveItemToCharacterFromCharacterResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_MoveItemToCharacterFromCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_MoveItemToCharacterFromCharacter");
static_assert(sizeof(PlayFabServerAPI_MoveItemToCharacterFromCharacter) == 0x000078, "Wrong size on PlayFabServerAPI_MoveItemToCharacterFromCharacter");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, Request) == 0x000000, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, OnSuccess) == 0x000048, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, OnFailure) == 0x000058, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, CustomData) == 0x000068, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromCharacter, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_MoveItemToCharacterFromCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.MoveItemToCharacterFromUser
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_MoveItemToCharacterFromUser final
{
public:
	struct FServerMoveItemToCharacterFromUserRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerMoveItemToCharacterFromUserResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_MoveItemToCharacterFromUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_MoveItemToCharacterFromUser");
static_assert(sizeof(PlayFabServerAPI_MoveItemToCharacterFromUser) == 0x000068, "Wrong size on PlayFabServerAPI_MoveItemToCharacterFromUser");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, Request) == 0x000000, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, CustomData) == 0x000058, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToCharacterFromUser, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_MoveItemToCharacterFromUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.MoveItemToUserFromCharacter
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_MoveItemToUserFromCharacter final
{
public:
	struct FServerMoveItemToUserFromCharacterRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerMoveItemToUserFromCharacterResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_MoveItemToUserFromCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_MoveItemToUserFromCharacter");
static_assert(sizeof(PlayFabServerAPI_MoveItemToUserFromCharacter) == 0x000068, "Wrong size on PlayFabServerAPI_MoveItemToUserFromCharacter");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, Request) == 0x000000, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, CustomData) == 0x000058, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_MoveItemToUserFromCharacter, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_MoveItemToUserFromCharacter::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.NotifyMatchmakerPlayerLeft
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_NotifyMatchmakerPlayerLeft final
{
public:
	struct FServerNotifyMatchmakerPlayerLeftRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerNotifyMatchmakerPlayerLeftResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_NotifyMatchmakerPlayerLeft) == 0x000008, "Wrong alignment on PlayFabServerAPI_NotifyMatchmakerPlayerLeft");
static_assert(sizeof(PlayFabServerAPI_NotifyMatchmakerPlayerLeft) == 0x000060, "Wrong size on PlayFabServerAPI_NotifyMatchmakerPlayerLeft");
static_assert(offsetof(PlayFabServerAPI_NotifyMatchmakerPlayerLeft, Request) == 0x000000, "Member 'PlayFabServerAPI_NotifyMatchmakerPlayerLeft::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_NotifyMatchmakerPlayerLeft, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_NotifyMatchmakerPlayerLeft::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_NotifyMatchmakerPlayerLeft, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_NotifyMatchmakerPlayerLeft::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_NotifyMatchmakerPlayerLeft, CustomData) == 0x000050, "Member 'PlayFabServerAPI_NotifyMatchmakerPlayerLeft::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_NotifyMatchmakerPlayerLeft, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_NotifyMatchmakerPlayerLeft::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RedeemCoupon
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_RedeemCoupon final
{
public:
	struct FServerRedeemCouponRequest             Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRedeemCouponResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RedeemCoupon) == 0x000008, "Wrong alignment on PlayFabServerAPI_RedeemCoupon");
static_assert(sizeof(PlayFabServerAPI_RedeemCoupon) == 0x000080, "Wrong size on PlayFabServerAPI_RedeemCoupon");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, Request) == 0x000000, "Member 'PlayFabServerAPI_RedeemCoupon::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, OnSuccess) == 0x000050, "Member 'PlayFabServerAPI_RedeemCoupon::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, OnFailure) == 0x000060, "Member 'PlayFabServerAPI_RedeemCoupon::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, CustomData) == 0x000070, "Member 'PlayFabServerAPI_RedeemCoupon::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemCoupon, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_RedeemCoupon::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RedeemMatchmakerTicket
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_RedeemMatchmakerTicket final
{
public:
	struct FServerRedeemMatchmakerTicketRequest   Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRedeemMatchmakerTicketResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RedeemMatchmakerTicket) == 0x000008, "Wrong alignment on PlayFabServerAPI_RedeemMatchmakerTicket");
static_assert(sizeof(PlayFabServerAPI_RedeemMatchmakerTicket) == 0x000060, "Wrong size on PlayFabServerAPI_RedeemMatchmakerTicket");
static_assert(offsetof(PlayFabServerAPI_RedeemMatchmakerTicket, Request) == 0x000000, "Member 'PlayFabServerAPI_RedeemMatchmakerTicket::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemMatchmakerTicket, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_RedeemMatchmakerTicket::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemMatchmakerTicket, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_RedeemMatchmakerTicket::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemMatchmakerTicket, CustomData) == 0x000050, "Member 'PlayFabServerAPI_RedeemMatchmakerTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RedeemMatchmakerTicket, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_RedeemMatchmakerTicket::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RefreshGameServerInstanceHeartbeat
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_RefreshGameServerInstanceHeartbeat final
{
public:
	struct FServerRefreshGameServerInstanceHeartbeatRequest Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRefreshGameServerInstanceHeartbeatResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RefreshGameServerInstanceHeartbeat) == 0x000008, "Wrong alignment on PlayFabServerAPI_RefreshGameServerInstanceHeartbeat");
static_assert(sizeof(PlayFabServerAPI_RefreshGameServerInstanceHeartbeat) == 0x000048, "Wrong size on PlayFabServerAPI_RefreshGameServerInstanceHeartbeat");
static_assert(offsetof(PlayFabServerAPI_RefreshGameServerInstanceHeartbeat, Request) == 0x000000, "Member 'PlayFabServerAPI_RefreshGameServerInstanceHeartbeat::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RefreshGameServerInstanceHeartbeat, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_RefreshGameServerInstanceHeartbeat::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RefreshGameServerInstanceHeartbeat, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_RefreshGameServerInstanceHeartbeat::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RefreshGameServerInstanceHeartbeat, CustomData) == 0x000038, "Member 'PlayFabServerAPI_RefreshGameServerInstanceHeartbeat::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RefreshGameServerInstanceHeartbeat, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_RefreshGameServerInstanceHeartbeat::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RegisterGame
// 0x00C0 (0x00C0 - 0x0000)
struct PlayFabServerAPI_RegisterGame final
{
public:
	struct FServerRegisterGameRequest             Request;                                           // 0x0000(0x0090)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRegisterGameResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0090(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x00A0(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x00B8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RegisterGame) == 0x000008, "Wrong alignment on PlayFabServerAPI_RegisterGame");
static_assert(sizeof(PlayFabServerAPI_RegisterGame) == 0x0000C0, "Wrong size on PlayFabServerAPI_RegisterGame");
static_assert(offsetof(PlayFabServerAPI_RegisterGame, Request) == 0x000000, "Member 'PlayFabServerAPI_RegisterGame::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RegisterGame, OnSuccess) == 0x000090, "Member 'PlayFabServerAPI_RegisterGame::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RegisterGame, OnFailure) == 0x0000A0, "Member 'PlayFabServerAPI_RegisterGame::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RegisterGame, CustomData) == 0x0000B0, "Member 'PlayFabServerAPI_RegisterGame::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RegisterGame, ReturnValue) == 0x0000B8, "Member 'PlayFabServerAPI_RegisterGame::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RemoveFriend
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_RemoveFriend final
{
public:
	struct FServerRemoveFriendRequest             Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RemoveFriend) == 0x000008, "Wrong alignment on PlayFabServerAPI_RemoveFriend");
static_assert(sizeof(PlayFabServerAPI_RemoveFriend) == 0x000058, "Wrong size on PlayFabServerAPI_RemoveFriend");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, Request) == 0x000000, "Member 'PlayFabServerAPI_RemoveFriend::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_RemoveFriend::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_RemoveFriend::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, CustomData) == 0x000048, "Member 'PlayFabServerAPI_RemoveFriend::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveFriend, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_RemoveFriend::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RemoveGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_RemoveGenericID final
{
public:
	struct FServerRemoveGenericIDRequest          Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RemoveGenericID) == 0x000008, "Wrong alignment on PlayFabServerAPI_RemoveGenericID");
static_assert(sizeof(PlayFabServerAPI_RemoveGenericID) == 0x000050, "Wrong size on PlayFabServerAPI_RemoveGenericID");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, Request) == 0x000000, "Member 'PlayFabServerAPI_RemoveGenericID::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_RemoveGenericID::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_RemoveGenericID::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, CustomData) == 0x000040, "Member 'PlayFabServerAPI_RemoveGenericID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveGenericID, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_RemoveGenericID::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RemovePlayerTag
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_RemovePlayerTag final
{
public:
	struct FServerRemovePlayerTagRequest          Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRemovePlayerTagResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RemovePlayerTag) == 0x000008, "Wrong alignment on PlayFabServerAPI_RemovePlayerTag");
static_assert(sizeof(PlayFabServerAPI_RemovePlayerTag) == 0x000060, "Wrong size on PlayFabServerAPI_RemovePlayerTag");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, Request) == 0x000000, "Member 'PlayFabServerAPI_RemovePlayerTag::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_RemovePlayerTag::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_RemovePlayerTag::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, CustomData) == 0x000050, "Member 'PlayFabServerAPI_RemovePlayerTag::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemovePlayerTag, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_RemovePlayerTag::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RemoveSharedGroupMembers
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_RemoveSharedGroupMembers final
{
public:
	struct FServerRemoveSharedGroupMembersRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRemoveSharedGroupMembersResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RemoveSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabServerAPI_RemoveSharedGroupMembers");
static_assert(sizeof(PlayFabServerAPI_RemoveSharedGroupMembers) == 0x000058, "Wrong size on PlayFabServerAPI_RemoveSharedGroupMembers");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, Request) == 0x000000, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, CustomData) == 0x000048, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RemoveSharedGroupMembers, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_RemoveSharedGroupMembers::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.ReportPlayer
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_ReportPlayer final
{
public:
	struct FServerReportPlayerServerRequest       Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerReportPlayerServerResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_ReportPlayer) == 0x000008, "Wrong alignment on PlayFabServerAPI_ReportPlayer");
static_assert(sizeof(PlayFabServerAPI_ReportPlayer) == 0x000070, "Wrong size on PlayFabServerAPI_ReportPlayer");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, Request) == 0x000000, "Member 'PlayFabServerAPI_ReportPlayer::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_ReportPlayer::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_ReportPlayer::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, CustomData) == 0x000060, "Member 'PlayFabServerAPI_ReportPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_ReportPlayer, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_ReportPlayer::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RevokeAllBansForUser
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_RevokeAllBansForUser final
{
public:
	struct FServerRevokeAllBansForUserRequest     Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRevokeAllBansForUserResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RevokeAllBansForUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_RevokeAllBansForUser");
static_assert(sizeof(PlayFabServerAPI_RevokeAllBansForUser) == 0x000048, "Wrong size on PlayFabServerAPI_RevokeAllBansForUser");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, Request) == 0x000000, "Member 'PlayFabServerAPI_RevokeAllBansForUser::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_RevokeAllBansForUser::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_RevokeAllBansForUser::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, CustomData) == 0x000038, "Member 'PlayFabServerAPI_RevokeAllBansForUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeAllBansForUser, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_RevokeAllBansForUser::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RevokeBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_RevokeBans final
{
public:
	struct FServerRevokeBansRequest               Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRevokeBansResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RevokeBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_RevokeBans");
static_assert(sizeof(PlayFabServerAPI_RevokeBans) == 0x000048, "Wrong size on PlayFabServerAPI_RevokeBans");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, Request) == 0x000000, "Member 'PlayFabServerAPI_RevokeBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_RevokeBans::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_RevokeBans::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, CustomData) == 0x000038, "Member 'PlayFabServerAPI_RevokeBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeBans, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_RevokeBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RevokeInventoryItem
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_RevokeInventoryItem final
{
public:
	struct FServerRevokeInventoryItemRequest      Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRevokeInventoryResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RevokeInventoryItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_RevokeInventoryItem");
static_assert(sizeof(PlayFabServerAPI_RevokeInventoryItem) == 0x000068, "Wrong size on PlayFabServerAPI_RevokeInventoryItem");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, Request) == 0x000000, "Member 'PlayFabServerAPI_RevokeInventoryItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_RevokeInventoryItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_RevokeInventoryItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, CustomData) == 0x000058, "Member 'PlayFabServerAPI_RevokeInventoryItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItem, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_RevokeInventoryItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.RevokeInventoryItems
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_RevokeInventoryItems final
{
public:
	struct FServerRevokeInventoryItemsRequest     Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerRevokeInventoryItemsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_RevokeInventoryItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_RevokeInventoryItems");
static_assert(sizeof(PlayFabServerAPI_RevokeInventoryItems) == 0x000048, "Wrong size on PlayFabServerAPI_RevokeInventoryItems");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, Request) == 0x000000, "Member 'PlayFabServerAPI_RevokeInventoryItems::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_RevokeInventoryItems::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_RevokeInventoryItems::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, CustomData) == 0x000038, "Member 'PlayFabServerAPI_RevokeInventoryItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_RevokeInventoryItems, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_RevokeInventoryItems::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SavePushNotificationTemplate
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_SavePushNotificationTemplate final
{
public:
	struct FServerSavePushNotificationTemplateRequest Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSavePushNotificationTemplateResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SavePushNotificationTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_SavePushNotificationTemplate");
static_assert(sizeof(PlayFabServerAPI_SavePushNotificationTemplate) == 0x000080, "Wrong size on PlayFabServerAPI_SavePushNotificationTemplate");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, Request) == 0x000000, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, OnSuccess) == 0x000050, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, OnFailure) == 0x000060, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, CustomData) == 0x000070, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SavePushNotificationTemplate, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_SavePushNotificationTemplate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SendCustomAccountRecoveryEmail
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_SendCustomAccountRecoveryEmail final
{
public:
	struct FServerSendCustomAccountRecoveryEmailRequest Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSendCustomAccountRecoveryEmailResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SendCustomAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabServerAPI_SendCustomAccountRecoveryEmail");
static_assert(sizeof(PlayFabServerAPI_SendCustomAccountRecoveryEmail) == 0x000070, "Wrong size on PlayFabServerAPI_SendCustomAccountRecoveryEmail");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, Request) == 0x000000, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, CustomData) == 0x000060, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendCustomAccountRecoveryEmail, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_SendCustomAccountRecoveryEmail::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SendEmailFromTemplate
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_SendEmailFromTemplate final
{
public:
	struct FServerSendEmailFromTemplateRequest    Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSendEmailFromTemplateResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SendEmailFromTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_SendEmailFromTemplate");
static_assert(sizeof(PlayFabServerAPI_SendEmailFromTemplate) == 0x000060, "Wrong size on PlayFabServerAPI_SendEmailFromTemplate");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, Request) == 0x000000, "Member 'PlayFabServerAPI_SendEmailFromTemplate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_SendEmailFromTemplate::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_SendEmailFromTemplate::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, CustomData) == 0x000050, "Member 'PlayFabServerAPI_SendEmailFromTemplate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendEmailFromTemplate, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_SendEmailFromTemplate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SendPushNotification
// 0x0098 (0x0098 - 0x0000)
struct PlayFabServerAPI_SendPushNotification final
{
public:
	struct FServerSendPushNotificationRequest     Request;                                           // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0078(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0088(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SendPushNotification) == 0x000008, "Wrong alignment on PlayFabServerAPI_SendPushNotification");
static_assert(sizeof(PlayFabServerAPI_SendPushNotification) == 0x000098, "Wrong size on PlayFabServerAPI_SendPushNotification");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, Request) == 0x000000, "Member 'PlayFabServerAPI_SendPushNotification::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, OnSuccess) == 0x000068, "Member 'PlayFabServerAPI_SendPushNotification::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, OnFailure) == 0x000078, "Member 'PlayFabServerAPI_SendPushNotification::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, CustomData) == 0x000088, "Member 'PlayFabServerAPI_SendPushNotification::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotification, ReturnValue) == 0x000090, "Member 'PlayFabServerAPI_SendPushNotification::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SendPushNotificationFromTemplate
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_SendPushNotificationFromTemplate final
{
public:
	struct FServerSendPushNotificationFromTemplateRequest Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SendPushNotificationFromTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_SendPushNotificationFromTemplate");
static_assert(sizeof(PlayFabServerAPI_SendPushNotificationFromTemplate) == 0x000060, "Wrong size on PlayFabServerAPI_SendPushNotificationFromTemplate");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, Request) == 0x000000, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, CustomData) == 0x000050, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SendPushNotificationFromTemplate, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_SendPushNotificationFromTemplate::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetFriendTags
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_SetFriendTags final
{
public:
	struct FServerSetFriendTagsRequest            Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetFriendTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetFriendTags");
static_assert(sizeof(PlayFabServerAPI_SetFriendTags) == 0x000068, "Wrong size on PlayFabServerAPI_SetFriendTags");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, Request) == 0x000000, "Member 'PlayFabServerAPI_SetFriendTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_SetFriendTags::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_SetFriendTags::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, CustomData) == 0x000058, "Member 'PlayFabServerAPI_SetFriendTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetFriendTags, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_SetFriendTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetGameServerInstanceData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_SetGameServerInstanceData final
{
public:
	struct FServerSetGameServerInstanceDataRequest Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetGameServerInstanceDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetGameServerInstanceData) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetGameServerInstanceData");
static_assert(sizeof(PlayFabServerAPI_SetGameServerInstanceData) == 0x000058, "Wrong size on PlayFabServerAPI_SetGameServerInstanceData");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceData, Request) == 0x000000, "Member 'PlayFabServerAPI_SetGameServerInstanceData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceData, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_SetGameServerInstanceData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceData, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_SetGameServerInstanceData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceData, CustomData) == 0x000048, "Member 'PlayFabServerAPI_SetGameServerInstanceData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceData, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_SetGameServerInstanceData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetGameServerInstanceState
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_SetGameServerInstanceState final
{
public:
	struct FServerSetGameServerInstanceStateRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetGameServerInstanceStateResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetGameServerInstanceState) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetGameServerInstanceState");
static_assert(sizeof(PlayFabServerAPI_SetGameServerInstanceState) == 0x000050, "Wrong size on PlayFabServerAPI_SetGameServerInstanceState");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceState, Request) == 0x000000, "Member 'PlayFabServerAPI_SetGameServerInstanceState::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceState, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_SetGameServerInstanceState::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceState, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_SetGameServerInstanceState::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceState, CustomData) == 0x000040, "Member 'PlayFabServerAPI_SetGameServerInstanceState::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceState, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_SetGameServerInstanceState::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetGameServerInstanceTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_SetGameServerInstanceTags final
{
public:
	struct FServerSetGameServerInstanceTagsRequest Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetGameServerInstanceTagsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetGameServerInstanceTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetGameServerInstanceTags");
static_assert(sizeof(PlayFabServerAPI_SetGameServerInstanceTags) == 0x000050, "Wrong size on PlayFabServerAPI_SetGameServerInstanceTags");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceTags, Request) == 0x000000, "Member 'PlayFabServerAPI_SetGameServerInstanceTags::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceTags, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_SetGameServerInstanceTags::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceTags, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_SetGameServerInstanceTags::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceTags, CustomData) == 0x000040, "Member 'PlayFabServerAPI_SetGameServerInstanceTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetGameServerInstanceTags, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_SetGameServerInstanceTags::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetPlayerSecret
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_SetPlayerSecret final
{
public:
	struct FServerSetPlayerSecretRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetPlayerSecretResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetPlayerSecret");
static_assert(sizeof(PlayFabServerAPI_SetPlayerSecret) == 0x000058, "Wrong size on PlayFabServerAPI_SetPlayerSecret");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, Request) == 0x000000, "Member 'PlayFabServerAPI_SetPlayerSecret::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_SetPlayerSecret::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_SetPlayerSecret::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, CustomData) == 0x000048, "Member 'PlayFabServerAPI_SetPlayerSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPlayerSecret, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_SetPlayerSecret::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetPublisherData
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_SetPublisherData final
{
public:
	struct FServerSetPublisherDataRequest         Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetPublisherData");
static_assert(sizeof(PlayFabServerAPI_SetPublisherData) == 0x000058, "Wrong size on PlayFabServerAPI_SetPublisherData");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, Request) == 0x000000, "Member 'PlayFabServerAPI_SetPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_SetPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_SetPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, CustomData) == 0x000048, "Member 'PlayFabServerAPI_SetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetPublisherData, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_SetPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetTitleData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_SetTitleData final
{
public:
	struct FServerSetTitleDataRequest             Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetTitleData) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetTitleData");
static_assert(sizeof(PlayFabServerAPI_SetTitleData) == 0x000060, "Wrong size on PlayFabServerAPI_SetTitleData");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, Request) == 0x000000, "Member 'PlayFabServerAPI_SetTitleData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_SetTitleData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_SetTitleData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, CustomData) == 0x000050, "Member 'PlayFabServerAPI_SetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_SetTitleData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SetTitleInternalData
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_SetTitleInternalData final
{
public:
	struct FServerSetTitleDataRequest             Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_SetTitleInternalData");
static_assert(sizeof(PlayFabServerAPI_SetTitleInternalData) == 0x000060, "Wrong size on PlayFabServerAPI_SetTitleInternalData");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_SetTitleInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_SetTitleInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_SetTitleInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, CustomData) == 0x000050, "Member 'PlayFabServerAPI_SetTitleInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SetTitleInternalData, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_SetTitleInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SubtractCharacterVirtualCurrency
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_SubtractCharacterVirtualCurrency final
{
public:
	struct FServerSubtractCharacterVirtualCurrencyRequest Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SubtractCharacterVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_SubtractCharacterVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_SubtractCharacterVirtualCurrency) == 0x000078, "Wrong size on PlayFabServerAPI_SubtractCharacterVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, Request) == 0x000000, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, OnSuccess) == 0x000048, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, OnFailure) == 0x000058, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, CustomData) == 0x000068, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractCharacterVirtualCurrency, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_SubtractCharacterVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.SubtractUserVirtualCurrency
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_SubtractUserVirtualCurrency final
{
public:
	struct FServerSubtractUserVirtualCurrencyRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_SubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_SubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_SubtractUserVirtualCurrency) == 0x000068, "Wrong size on PlayFabServerAPI_SubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, Request) == 0x000000, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, CustomData) == 0x000058, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_SubtractUserVirtualCurrency, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_SubtractUserVirtualCurrency::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_UnlinkPSNAccount final
{
public:
	struct FServerUnlinkPSNAccountRequest         Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlinkPSNAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlinkPSNAccount");
static_assert(sizeof(PlayFabServerAPI_UnlinkPSNAccount) == 0x000050, "Wrong size on PlayFabServerAPI_UnlinkPSNAccount");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlinkPSNAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_UnlinkPSNAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_UnlinkPSNAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, CustomData) == 0x000040, "Member 'PlayFabServerAPI_UnlinkPSNAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkPSNAccount, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_UnlinkPSNAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlinkServerCustomId
// 0x0060 (0x0060 - 0x0000)
struct PlayFabServerAPI_UnlinkServerCustomId final
{
public:
	struct FServerUnlinkServerCustomIdRequest     Request;                                           // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlinkServerCustomIdResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlinkServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlinkServerCustomId");
static_assert(sizeof(PlayFabServerAPI_UnlinkServerCustomId) == 0x000060, "Wrong size on PlayFabServerAPI_UnlinkServerCustomId");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlinkServerCustomId::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, OnSuccess) == 0x000030, "Member 'PlayFabServerAPI_UnlinkServerCustomId::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, OnFailure) == 0x000040, "Member 'PlayFabServerAPI_UnlinkServerCustomId::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, CustomData) == 0x000050, "Member 'PlayFabServerAPI_UnlinkServerCustomId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkServerCustomId, ReturnValue) == 0x000058, "Member 'PlayFabServerAPI_UnlinkServerCustomId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_UnlinkXboxAccount final
{
public:
	struct FServerUnlinkXboxAccountRequest        Request;                                           // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlinkXboxAccountResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlinkXboxAccount");
static_assert(sizeof(PlayFabServerAPI_UnlinkXboxAccount) == 0x000050, "Wrong size on PlayFabServerAPI_UnlinkXboxAccount");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlinkXboxAccount::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, OnSuccess) == 0x000020, "Member 'PlayFabServerAPI_UnlinkXboxAccount::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, OnFailure) == 0x000030, "Member 'PlayFabServerAPI_UnlinkXboxAccount::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, CustomData) == 0x000040, "Member 'PlayFabServerAPI_UnlinkXboxAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlinkXboxAccount, ReturnValue) == 0x000048, "Member 'PlayFabServerAPI_UnlinkXboxAccount::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlockContainerInstance
// 0x0090 (0x0090 - 0x0000)
struct PlayFabServerAPI_UnlockContainerInstance final
{
public:
	struct FServerUnlockContainerInstanceRequest  Request;                                           // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0070(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0080(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlockContainerInstance) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlockContainerInstance");
static_assert(sizeof(PlayFabServerAPI_UnlockContainerInstance) == 0x000090, "Wrong size on PlayFabServerAPI_UnlockContainerInstance");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlockContainerInstance::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, OnSuccess) == 0x000060, "Member 'PlayFabServerAPI_UnlockContainerInstance::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, OnFailure) == 0x000070, "Member 'PlayFabServerAPI_UnlockContainerInstance::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, CustomData) == 0x000080, "Member 'PlayFabServerAPI_UnlockContainerInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerInstance, ReturnValue) == 0x000088, "Member 'PlayFabServerAPI_UnlockContainerInstance::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UnlockContainerItem
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_UnlockContainerItem final
{
public:
	struct FServerUnlockContainerItemRequest      Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UnlockContainerItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_UnlockContainerItem");
static_assert(sizeof(PlayFabServerAPI_UnlockContainerItem) == 0x000080, "Wrong size on PlayFabServerAPI_UnlockContainerItem");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, Request) == 0x000000, "Member 'PlayFabServerAPI_UnlockContainerItem::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, OnSuccess) == 0x000050, "Member 'PlayFabServerAPI_UnlockContainerItem::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, OnFailure) == 0x000060, "Member 'PlayFabServerAPI_UnlockContainerItem::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, CustomData) == 0x000070, "Member 'PlayFabServerAPI_UnlockContainerItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UnlockContainerItem, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_UnlockContainerItem::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateAvatarUrl
// 0x0058 (0x0058 - 0x0000)
struct PlayFabServerAPI_UpdateAvatarUrl final
{
public:
	struct FServerUpdateAvatarUrlRequest          Request;                                           // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateAvatarUrl) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateAvatarUrl");
static_assert(sizeof(PlayFabServerAPI_UpdateAvatarUrl) == 0x000058, "Wrong size on PlayFabServerAPI_UpdateAvatarUrl");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateAvatarUrl::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, OnSuccess) == 0x000028, "Member 'PlayFabServerAPI_UpdateAvatarUrl::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, OnFailure) == 0x000038, "Member 'PlayFabServerAPI_UpdateAvatarUrl::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, CustomData) == 0x000048, "Member 'PlayFabServerAPI_UpdateAvatarUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateAvatarUrl, ReturnValue) == 0x000050, "Member 'PlayFabServerAPI_UpdateAvatarUrl::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateBans
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_UpdateBans final
{
public:
	struct FServerUpdateBansRequest               Request;                                           // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateBansResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0028(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateBans");
static_assert(sizeof(PlayFabServerAPI_UpdateBans) == 0x000048, "Wrong size on PlayFabServerAPI_UpdateBans");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateBans::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, OnSuccess) == 0x000018, "Member 'PlayFabServerAPI_UpdateBans::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, OnFailure) == 0x000028, "Member 'PlayFabServerAPI_UpdateBans::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, CustomData) == 0x000038, "Member 'PlayFabServerAPI_UpdateBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateBans, ReturnValue) == 0x000040, "Member 'PlayFabServerAPI_UpdateBans::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateCharacterData
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_UpdateCharacterData final
{
public:
	struct FServerUpdateCharacterDataRequest      Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateCharacterData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateCharacterData");
static_assert(sizeof(PlayFabServerAPI_UpdateCharacterData) == 0x000080, "Wrong size on PlayFabServerAPI_UpdateCharacterData");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateCharacterData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, OnSuccess) == 0x000050, "Member 'PlayFabServerAPI_UpdateCharacterData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, OnFailure) == 0x000060, "Member 'PlayFabServerAPI_UpdateCharacterData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, CustomData) == 0x000070, "Member 'PlayFabServerAPI_UpdateCharacterData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterData, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_UpdateCharacterData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateCharacterInternalData
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_UpdateCharacterInternalData final
{
public:
	struct FServerUpdateCharacterDataRequest      Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateCharacterInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateCharacterInternalData");
static_assert(sizeof(PlayFabServerAPI_UpdateCharacterInternalData) == 0x000080, "Wrong size on PlayFabServerAPI_UpdateCharacterInternalData");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, OnSuccess) == 0x000050, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, OnFailure) == 0x000060, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, CustomData) == 0x000070, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterInternalData, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_UpdateCharacterInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateCharacterReadOnlyData
// 0x0080 (0x0080 - 0x0000)
struct PlayFabServerAPI_UpdateCharacterReadOnlyData final
{
public:
	struct FServerUpdateCharacterDataRequest      Request;                                           // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0070(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateCharacterReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_UpdateCharacterReadOnlyData) == 0x000080, "Wrong size on PlayFabServerAPI_UpdateCharacterReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, OnSuccess) == 0x000050, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, OnFailure) == 0x000060, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, CustomData) == 0x000070, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterReadOnlyData, ReturnValue) == 0x000078, "Member 'PlayFabServerAPI_UpdateCharacterReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateCharacterStatistics
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_UpdateCharacterStatistics final
{
public:
	struct FServerUpdateCharacterStatisticsRequest Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateCharacterStatistics");
static_assert(sizeof(PlayFabServerAPI_UpdateCharacterStatistics) == 0x000068, "Wrong size on PlayFabServerAPI_UpdateCharacterStatistics");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, CustomData) == 0x000058, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateCharacterStatistics, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_UpdateCharacterStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdatePlayerStatistics
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_UpdatePlayerStatistics final
{
public:
	struct FServerUpdatePlayerStatisticsRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdatePlayerStatisticsResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdatePlayerStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdatePlayerStatistics");
static_assert(sizeof(PlayFabServerAPI_UpdatePlayerStatistics) == 0x000068, "Wrong size on PlayFabServerAPI_UpdatePlayerStatistics");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, CustomData) == 0x000058, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdatePlayerStatistics, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_UpdatePlayerStatistics::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateSharedGroupData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateSharedGroupData final
{
public:
	struct FServerUpdateSharedGroupDataRequest    Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateSharedGroupDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateSharedGroupData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateSharedGroupData");
static_assert(sizeof(PlayFabServerAPI_UpdateSharedGroupData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateSharedGroupData");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateSharedGroupData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateSharedGroupData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateSharedGroupData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, CustomData) == 0x000060, "Member 'PlayFabServerAPI_UpdateSharedGroupData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateSharedGroupData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateSharedGroupData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateUserData final
{
public:
	struct FServerUpdateUserDataRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateUserData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateUserData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateUserData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, CustomData) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserInternalData
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_UpdateUserInternalData final
{
public:
	struct FServerUpdateUserInternalDataRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserInternalData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserInternalData) == 0x000068, "Wrong size on PlayFabServerAPI_UpdateUserInternalData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_UpdateUserInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_UpdateUserInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, CustomData) == 0x000058, "Member 'PlayFabServerAPI_UpdateUserInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInternalData, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserInventoryItemCustomData
// 0x0088 (0x0088 - 0x0000)
struct PlayFabServerAPI_UpdateUserInventoryItemCustomData final
{
public:
	struct FServerUpdateUserInventoryItemDataRequest Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserInventoryItemCustomData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserInventoryItemCustomData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserInventoryItemCustomData) == 0x000088, "Wrong size on PlayFabServerAPI_UpdateUserInventoryItemCustomData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, OnSuccess) == 0x000058, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, OnFailure) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, CustomData) == 0x000078, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserInventoryItemCustomData, ReturnValue) == 0x000080, "Member 'PlayFabServerAPI_UpdateUserInventoryItemCustomData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserPublisherData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateUserPublisherData final
{
public:
	struct FServerUpdateUserDataRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserPublisherData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserPublisherData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateUserPublisherData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserPublisherData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateUserPublisherData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateUserPublisherData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, CustomData) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserPublisherData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserPublisherInternalData
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_UpdateUserPublisherInternalData final
{
public:
	struct FServerUpdateUserInternalDataRequest   Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserPublisherInternalData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserPublisherInternalData) == 0x000068, "Wrong size on PlayFabServerAPI_UpdateUserPublisherInternalData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, CustomData) == 0x000058, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherInternalData, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserPublisherInternalData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserPublisherReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateUserPublisherReadOnlyData final
{
public:
	struct FServerUpdateUserDataRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, CustomData) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserPublisherReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserPublisherReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.UpdateUserReadOnlyData
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_UpdateUserReadOnlyData final
{
public:
	struct FServerUpdateUserDataRequest           Request;                                           // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_UpdateUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_UpdateUserReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_UpdateUserReadOnlyData) == 0x000070, "Wrong size on PlayFabServerAPI_UpdateUserReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, Request) == 0x000000, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, OnSuccess) == 0x000040, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, OnFailure) == 0x000050, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, CustomData) == 0x000060, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_UpdateUserReadOnlyData, ReturnValue) == 0x000068, "Member 'PlayFabServerAPI_UpdateUserReadOnlyData::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.WriteCharacterEvent
// 0x0088 (0x0088 - 0x0000)
struct PlayFabServerAPI_WriteCharacterEvent final
{
public:
	struct FServerWriteServerCharacterEventRequest Request;                                           // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0068(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_WriteCharacterEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_WriteCharacterEvent");
static_assert(sizeof(PlayFabServerAPI_WriteCharacterEvent) == 0x000088, "Wrong size on PlayFabServerAPI_WriteCharacterEvent");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, Request) == 0x000000, "Member 'PlayFabServerAPI_WriteCharacterEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, OnSuccess) == 0x000058, "Member 'PlayFabServerAPI_WriteCharacterEvent::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, OnFailure) == 0x000068, "Member 'PlayFabServerAPI_WriteCharacterEvent::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, CustomData) == 0x000078, "Member 'PlayFabServerAPI_WriteCharacterEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteCharacterEvent, ReturnValue) == 0x000080, "Member 'PlayFabServerAPI_WriteCharacterEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.WritePlayerEvent
// 0x0078 (0x0078 - 0x0000)
struct PlayFabServerAPI_WritePlayerEvent final
{
public:
	struct FServerWriteServerPlayerEventRequest   Request;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_WritePlayerEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_WritePlayerEvent");
static_assert(sizeof(PlayFabServerAPI_WritePlayerEvent) == 0x000078, "Wrong size on PlayFabServerAPI_WritePlayerEvent");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, Request) == 0x000000, "Member 'PlayFabServerAPI_WritePlayerEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, OnSuccess) == 0x000048, "Member 'PlayFabServerAPI_WritePlayerEvent::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, OnFailure) == 0x000058, "Member 'PlayFabServerAPI_WritePlayerEvent::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, CustomData) == 0x000068, "Member 'PlayFabServerAPI_WritePlayerEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WritePlayerEvent, ReturnValue) == 0x000070, "Member 'PlayFabServerAPI_WritePlayerEvent::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.WriteTitleEvent
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_WriteTitleEvent final
{
public:
	struct FServerWriteTitleEventRequest          Request;                                           // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* CustomData)> OnSuccess;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure;                                         // 0x0048(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlayFabServerAPI*                      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_WriteTitleEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_WriteTitleEvent");
static_assert(sizeof(PlayFabServerAPI_WriteTitleEvent) == 0x000068, "Wrong size on PlayFabServerAPI_WriteTitleEvent");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, Request) == 0x000000, "Member 'PlayFabServerAPI_WriteTitleEvent::Request' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, OnSuccess) == 0x000038, "Member 'PlayFabServerAPI_WriteTitleEvent::OnSuccess' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, OnFailure) == 0x000048, "Member 'PlayFabServerAPI_WriteTitleEvent::OnFailure' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, CustomData) == 0x000058, "Member 'PlayFabServerAPI_WriteTitleEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_WriteTitleEvent, ReturnValue) == 0x000060, "Member 'PlayFabServerAPI_WriteTitleEvent::ReturnValue' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnFailurePlayFabError__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerAPI_DelegateOnFailurePlayFabError__DelegateSignature final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnFailurePlayFabError__DelegateSignature) == 0x000040, "Wrong size on PlayFabServerAPI_DelegateOnFailurePlayFabError__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnFailurePlayFabError__DelegateSignature, Error) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnFailurePlayFabError__DelegateSignature::Error' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnFailurePlayFabError__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabServerAPI_DelegateOnFailurePlayFabError__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature final
{
public:
	struct FServerModifyCharacterVirtualCurrencyResult Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature) == 0x000028, "Wrong size on PlayFabServerAPI_DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabServerAPI_DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessAddFriend__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessAddFriend__DelegateSignature final
{
public:
	struct FServerEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessAddFriend__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessAddFriend__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessAddFriend__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessAddFriend__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddFriend__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessAddFriend__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddFriend__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessAddFriend__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessAddGenericID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessAddGenericID__DelegateSignature final
{
public:
	struct FServerEmptyResult                     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessAddGenericID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessAddGenericID__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessAddGenericID__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessAddGenericID__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddGenericID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessAddGenericID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddGenericID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessAddGenericID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessAddPlayerTag__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature final
{
public:
	struct FServerAddPlayerTagResult              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessAddPlayerTag__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessAddSharedGroupMembers__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature final
{
public:
	struct FServerAddSharedGroupMembersResult     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessAddSharedGroupMembers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature final
{
public:
	struct FServerModifyUserVirtualCurrencyResult Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature) == 0x000038, "Wrong size on PlayFabServerAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabServerAPI_DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature final
{
public:
	struct FServerAuthenticateSessionTicketResult Result;                                            // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessAwardSteamAchievement__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessAwardSteamAchievement__DelegateSignature final
{
public:
	struct FServerAwardSteamAchievementResult     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessAwardSteamAchievement__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessAwardSteamAchievement__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessAwardSteamAchievement__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessAwardSteamAchievement__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAwardSteamAchievement__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessAwardSteamAchievement__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessAwardSteamAchievement__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessAwardSteamAchievement__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessBanUsers__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessBanUsers__DelegateSignature final
{
public:
	struct FServerBanUsersResult                  Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessBanUsers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessBanUsers__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessBanUsers__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessBanUsers__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessBanUsers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessBanUsers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessBanUsers__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessBanUsers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessConsumeItem__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessConsumeItem__DelegateSignature final
{
public:
	struct FServerConsumeItemResult               Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessConsumeItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessConsumeItem__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessConsumeItem__DelegateSignature) == 0x000028, "Wrong size on PlayFabServerAPI_DelegateOnSuccessConsumeItem__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessConsumeItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessConsumeItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessConsumeItem__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabServerAPI_DelegateOnSuccessConsumeItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessCreateSharedGroup__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature final
{
public:
	struct FServerCreateSharedGroupResult         Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessCreateSharedGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature final
{
public:
	struct FServerDeleteCharacterFromUserResult   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessDeletePlayer__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessDeletePlayer__DelegateSignature final
{
public:
	struct FServerDeletePlayerResult              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessDeletePlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessDeletePlayer__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessDeletePlayer__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessDeletePlayer__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeletePlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessDeletePlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeletePlayer__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessDeletePlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature final
{
public:
	struct FServerDeletePushNotificationTemplateResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessDeleteSharedGroup__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessDeleteSharedGroup__DelegateSignature final
{
public:
	struct FServerEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessDeleteSharedGroup__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessDeleteSharedGroup__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessDeleteSharedGroup__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessDeleteSharedGroup__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeleteSharedGroup__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessDeleteSharedGroup__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeleteSharedGroup__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessDeleteSharedGroup__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessDeregisterGame__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessDeregisterGame__DelegateSignature final
{
public:
	struct FServerDeregisterGameResponse          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessDeregisterGame__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessDeregisterGame__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessDeregisterGame__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessDeregisterGame__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeregisterGame__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessDeregisterGame__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessDeregisterGame__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessDeregisterGame__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature final
{
public:
	struct FServerEvaluateRandomResultTableResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessExecuteCloudScript__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature final
{
public:
	struct FServerExecuteCloudScriptResult        Result;                                            // 0x0000(0x0060)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0060(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature) == 0x000068, "Wrong size on PlayFabServerAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature, CustomData) == 0x000060, "Member 'PlayFabServerAPI_DelegateOnSuccessExecuteCloudScript__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetAllSegments__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetAllSegments__DelegateSignature final
{
public:
	struct FServerGetAllSegmentsResult            Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetAllSegments__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetAllSegments__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetAllSegments__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetAllSegments__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetAllSegments__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetAllSegments__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetAllSegments__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetAllSegments__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetAllUsersCharacters__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature final
{
public:
	struct FServerListUsersCharactersResult       Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetAllUsersCharacters__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCatalogItems__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature final
{
public:
	struct FServerGetCatalogItemsResult           Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCatalogItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterData__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetCharacterData__DelegateSignature final
{
public:
	struct FServerGetCharacterDataResult          Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetCharacterData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetCharacterData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetCharacterData__DelegateSignature) == 0x000040, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetCharacterData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterData__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterInternalData__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetCharacterInternalData__DelegateSignature final
{
public:
	struct FServerGetCharacterDataResult          Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetCharacterInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetCharacterInternalData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetCharacterInternalData__DelegateSignature) == 0x000040, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetCharacterInternalData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterInternalData__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterInventory__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature final
{
public:
	struct FServerGetCharacterInventoryResult     Result;                                            // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature) == 0x000050, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature, CustomData) == 0x000048, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterInventory__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature final
{
public:
	struct FServerGetCharacterLeaderboardResult   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature final
{
public:
	struct FServerGetCharacterDataResult          Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature) == 0x000040, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetCharacterStatistics__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature final
{
public:
	struct FServerGetCharacterStatisticsResult    Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature) == 0x000038, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabServerAPI_DelegateOnSuccessGetCharacterStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetContentDownloadUrl__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature final
{
public:
	struct FServerGetContentDownloadUrlResult     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetContentDownloadUrl__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetFriendLeaderboard__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature final
{
public:
	struct FServerGetLeaderboardResult            Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature) == 0x000038, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabServerAPI_DelegateOnSuccessGetFriendLeaderboard__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetFriendsList__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetFriendsList__DelegateSignature final
{
public:
	struct FServerGetFriendsListResult            Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetFriendsList__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetFriendsList__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetFriendsList__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetFriendsList__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetFriendsList__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetFriendsList__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetFriendsList__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetFriendsList__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetLeaderboard__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature final
{
public:
	struct FServerGetLeaderboardResult            Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature) == 0x000038, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabServerAPI_DelegateOnSuccessGetLeaderboard__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature final
{
public:
	struct FServerGetLeaderboardAroundCharacterResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature final
{
public:
	struct FServerGetLeaderboardAroundUserResult  Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature) == 0x000038, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabServerAPI_DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature final
{
public:
	struct FServerGetLeaderboardForUsersCharactersResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature final
{
public:
	struct FServerGetPlayerCombinedInfoResult     Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature) == 0x000028, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerProfile__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature final
{
public:
	struct FServerGetPlayerProfileResult          Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerProfile__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerSegments__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature final
{
public:
	struct FServerGetPlayerSegmentsResult         Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerSegments__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayersInSegment__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature final
{
public:
	struct FServerGetPlayersInSegmentResult       Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature) == 0x000038, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayersInSegment__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerStatistics__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature final
{
public:
	struct FServerGetPlayerStatisticsResult       Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature) == 0x000030, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature final
{
public:
	struct FServerGetPlayerStatisticVersionsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayerTags__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature final
{
public:
	struct FServerGetPlayerTagsResult             Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature) == 0x000030, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayerTags__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature final
{
public:
	struct FServerGetPlayFabIDsFromFacebookIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature final
{
public:
	struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature final
{
public:
	struct FServerGetPlayFabIDsFromGenericIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature final
{
public:
	struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature final
{
public:
	struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature final
{
public:
	struct FServerGetPlayFabIDsFromPSNAccountIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature final
{
public:
	struct FServerGetPlayFabIDsFromSteamIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature final
{
public:
	struct FServerGetPlayFabIDsFromTwitchIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature final
{
public:
	struct FServerGetPlayFabIDsFromXboxLiveIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetPublisherData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetPublisherData__DelegateSignature final
{
public:
	struct FServerGetPublisherDataResult          Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetPublisherData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetPublisherData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessGetPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetRandomResultTables__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature final
{
public:
	struct FServerGetRandomResultTablesResult     Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessGetRandomResultTables__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature final
{
public:
	struct FServerGetServerCustomIDsFromPlayFabIDsResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetSharedGroupData__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature final
{
public:
	struct FServerGetSharedGroupDataResult        Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature) == 0x000028, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabServerAPI_DelegateOnSuccessGetSharedGroupData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetStoreItems__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetStoreItems__DelegateSignature final
{
public:
	struct FServerGetStoreItemsResult             Result;                                            // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetStoreItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetStoreItems__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetStoreItems__DelegateSignature) == 0x000050, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetStoreItems__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetStoreItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetStoreItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetStoreItems__DelegateSignature, CustomData) == 0x000048, "Member 'PlayFabServerAPI_DelegateOnSuccessGetStoreItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetTime__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetTime__DelegateSignature final
{
public:
	struct FServerGetTimeResult                   Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetTime__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetTime__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetTime__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetTime__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetTime__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetTime__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetTime__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetTime__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetTitleData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetTitleData__DelegateSignature final
{
public:
	struct FServerGetTitleDataResult              Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetTitleData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetTitleData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetTitleData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetTitleData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetTitleData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetTitleData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetTitleData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessGetTitleData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetTitleInternalData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature final
{
public:
	struct FServerGetTitleDataResult              Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessGetTitleInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetTitleNews__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetTitleNews__DelegateSignature final
{
public:
	struct FServerGetTitleNewsResult              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetTitleNews__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetTitleNews__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetTitleNews__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetTitleNews__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetTitleNews__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetTitleNews__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetTitleNews__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetTitleNews__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserAccountInfo__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature final
{
public:
	struct FServerGetUserAccountInfoResult        Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserAccountInfo__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserBans__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetUserBans__DelegateSignature final
{
public:
	struct FServerGetUserBansResult               Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetUserBans__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetUserBans__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetUserBans__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetUserBans__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserBans__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserBans__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserBans__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserBans__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetUserData__DelegateSignature final
{
public:
	struct FServerGetUserDataResult               Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetUserData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetUserData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetUserData__DelegateSignature) == 0x000030, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetUserData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserInternalData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature final
{
public:
	struct FServerGetUserDataResult               Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature) == 0x000030, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserInventory__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetUserInventory__DelegateSignature final
{
public:
	struct FServerGetUserInventoryResult          Result;                                            // 0x0000(0x0038)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetUserInventory__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetUserInventory__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetUserInventory__DelegateSignature) == 0x000040, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetUserInventory__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserInventory__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserInventory__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserInventory__DelegateSignature, CustomData) == 0x000038, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserInventory__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserPublisherData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature final
{
public:
	struct FServerGetUserDataResult               Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature) == 0x000030, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature final
{
public:
	struct FServerGetUserDataResult               Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature) == 0x000030, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature final
{
public:
	struct FServerGetUserDataResult               Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature) == 0x000030, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGetUserReadOnlyData__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature final
{
public:
	struct FServerGetUserDataResult               Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature) == 0x000030, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabServerAPI_DelegateOnSuccessGetUserReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGrantCharacterToUser__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature final
{
public:
	struct FServerGrantCharacterToUserResult      Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGrantCharacterToUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGrantItemsToCharacter__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGrantItemsToCharacter__DelegateSignature final
{
public:
	struct FServerGrantItemsToCharacterResult     Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToCharacter__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGrantItemsToCharacter__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToCharacter__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGrantItemsToCharacter__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToCharacter__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGrantItemsToCharacter__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToCharacter__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGrantItemsToCharacter__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGrantItemsToUser__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGrantItemsToUser__DelegateSignature final
{
public:
	struct FServerGrantItemsToUserResult          Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGrantItemsToUser__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToUser__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGrantItemsToUser__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGrantItemsToUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToUser__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGrantItemsToUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessGrantItemsToUsers__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature final
{
public:
	struct FServerGrantItemsToUsersResult         Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessGrantItemsToUsers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessLinkPSNAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature final
{
public:
	struct FServerLinkPSNAccountResult            Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessLinkPSNAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessLinkServerCustomId__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessLinkServerCustomId__DelegateSignature final
{
public:
	struct FServerLinkServerCustomIdResult        Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessLinkServerCustomId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessLinkServerCustomId__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessLinkServerCustomId__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessLinkServerCustomId__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLinkServerCustomId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessLinkServerCustomId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLinkServerCustomId__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessLinkServerCustomId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessLinkXboxAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature final
{
public:
	struct FServerLinkXboxAccountResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessLinkXboxAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessLoginWithServerCustomId__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessLoginWithServerCustomId__DelegateSignature final
{
public:
	struct FServerServerLoginResult               Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessLoginWithServerCustomId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessLoginWithServerCustomId__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessLoginWithServerCustomId__DelegateSignature) == 0x000070, "Wrong size on PlayFabServerAPI_DelegateOnSuccessLoginWithServerCustomId__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLoginWithServerCustomId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessLoginWithServerCustomId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLoginWithServerCustomId__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabServerAPI_DelegateOnSuccessLoginWithServerCustomId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessLoginWithSteamId__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessLoginWithSteamId__DelegateSignature final
{
public:
	struct FServerServerLoginResult               Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessLoginWithSteamId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessLoginWithSteamId__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessLoginWithSteamId__DelegateSignature) == 0x000070, "Wrong size on PlayFabServerAPI_DelegateOnSuccessLoginWithSteamId__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLoginWithSteamId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessLoginWithSteamId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLoginWithSteamId__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabServerAPI_DelegateOnSuccessLoginWithSteamId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessLoginWithXbox__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature final
{
public:
	struct FServerServerLoginResult               Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature) == 0x000070, "Wrong size on PlayFabServerAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabServerAPI_DelegateOnSuccessLoginWithXbox__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessLoginWithXboxId__DelegateSignature
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessLoginWithXboxId__DelegateSignature final
{
public:
	struct FServerServerLoginResult               Result;                                            // 0x0000(0x0068)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0068(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessLoginWithXboxId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessLoginWithXboxId__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessLoginWithXboxId__DelegateSignature) == 0x000070, "Wrong size on PlayFabServerAPI_DelegateOnSuccessLoginWithXboxId__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLoginWithXboxId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessLoginWithXboxId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessLoginWithXboxId__DelegateSignature, CustomData) == 0x000068, "Member 'PlayFabServerAPI_DelegateOnSuccessLoginWithXboxId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessModifyItemUses__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessModifyItemUses__DelegateSignature final
{
public:
	struct FServerModifyItemUsesResult            Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessModifyItemUses__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessModifyItemUses__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessModifyItemUses__DelegateSignature) == 0x000028, "Wrong size on PlayFabServerAPI_DelegateOnSuccessModifyItemUses__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessModifyItemUses__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessModifyItemUses__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessModifyItemUses__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabServerAPI_DelegateOnSuccessModifyItemUses__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature final
{
public:
	struct FServerMoveItemToCharacterFromCharacterResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature final
{
public:
	struct FServerMoveItemToCharacterFromUserResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature final
{
public:
	struct FServerMoveItemToUserFromCharacterResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature final
{
public:
	struct FServerNotifyMatchmakerPlayerLeftResult Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRedeemCoupon__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature final
{
public:
	struct FServerRedeemCouponResult              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessRedeemCoupon__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature final
{
public:
	struct FServerRedeemMatchmakerTicketResult    Result;                                            // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature) == 0x000030, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature, CustomData) == 0x000028, "Member 'PlayFabServerAPI_DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature final
{
public:
	struct FServerRefreshGameServerInstanceHeartbeatResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRegisterGame__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRegisterGame__DelegateSignature final
{
public:
	struct FServerRegisterGameResponse            Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRegisterGame__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRegisterGame__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRegisterGame__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRegisterGame__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRegisterGame__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRegisterGame__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRegisterGame__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessRegisterGame__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRemoveFriend__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRemoveFriend__DelegateSignature final
{
public:
	struct FServerEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRemoveFriend__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRemoveFriend__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRemoveFriend__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRemoveFriend__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRemoveFriend__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRemoveFriend__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRemoveFriend__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessRemoveFriend__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRemoveGenericID__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature final
{
public:
	struct FServerEmptyResult                     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessRemoveGenericID__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRemovePlayerTag__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature final
{
public:
	struct FServerRemovePlayerTagResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessRemovePlayerTag__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature final
{
public:
	struct FServerRemoveSharedGroupMembersResult  Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessReportPlayer__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessReportPlayer__DelegateSignature final
{
public:
	struct FServerReportPlayerServerResult        Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessReportPlayer__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessReportPlayer__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessReportPlayer__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessReportPlayer__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessReportPlayer__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessReportPlayer__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessReportPlayer__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessReportPlayer__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRevokeAllBansForUser__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature final
{
public:
	struct FServerRevokeAllBansForUserResult      Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessRevokeAllBansForUser__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRevokeBans__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRevokeBans__DelegateSignature final
{
public:
	struct FServerRevokeBansResult                Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRevokeBans__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRevokeBans__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRevokeBans__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRevokeBans__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRevokeBans__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRevokeBans__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRevokeBans__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessRevokeBans__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRevokeInventoryItem__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature final
{
public:
	struct FServerRevokeInventoryResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessRevokeInventoryItems__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature final
{
public:
	struct FServerRevokeInventoryItemsResult      Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessRevokeInventoryItems__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature final
{
public:
	struct FServerSavePushNotificationTemplateResult Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature final
{
public:
	struct FServerSendCustomAccountRecoveryEmailResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSendEmailFromTemplate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSendEmailFromTemplate__DelegateSignature final
{
public:
	struct FServerSendEmailFromTemplateResult     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSendEmailFromTemplate__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSendEmailFromTemplate__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSendEmailFromTemplate__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSendEmailFromTemplate__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSendEmailFromTemplate__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSendEmailFromTemplate__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSendEmailFromTemplate__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSendEmailFromTemplate__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSendPushNotification__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSendPushNotification__DelegateSignature final
{
public:
	struct FServerSendPushNotificationResult      Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSendPushNotification__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSendPushNotification__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSendPushNotification__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSendPushNotification__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSendPushNotification__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSendPushNotification__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSendPushNotification__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSendPushNotification__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature final
{
public:
	struct FServerSendPushNotificationResult      Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSetFriendTags__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSetFriendTags__DelegateSignature final
{
public:
	struct FServerEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSetFriendTags__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSetFriendTags__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSetFriendTags__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSetFriendTags__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetFriendTags__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSetFriendTags__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetFriendTags__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSetFriendTags__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSetGameServerInstanceData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceData__DelegateSignature final
{
public:
	struct FServerSetGameServerInstanceDataResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceData__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSetGameServerInstanceState__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceState__DelegateSignature final
{
public:
	struct FServerSetGameServerInstanceStateResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceState__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceState__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceState__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceState__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceState__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceState__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceState__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceState__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature final
{
public:
	struct FServerSetGameServerInstanceTagsResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSetPlayerSecret__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature final
{
public:
	struct FServerSetPlayerSecretResult           Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSetPlayerSecret__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSetPublisherData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSetPublisherData__DelegateSignature final
{
public:
	struct FServerSetPublisherDataResult          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSetPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSetPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSetPublisherData__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSetPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSetPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetPublisherData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSetPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSetTitleData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSetTitleData__DelegateSignature final
{
public:
	struct FServerSetTitleDataResult              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSetTitleData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSetTitleData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSetTitleData__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSetTitleData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetTitleData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSetTitleData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetTitleData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSetTitleData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSetTitleInternalData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature final
{
public:
	struct FServerSetTitleDataResult              Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessSetTitleInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature final
{
public:
	struct FServerModifyCharacterVirtualCurrencyResult Result;                                            // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature) == 0x000028, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature, CustomData) == 0x000020, "Member 'PlayFabServerAPI_DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature final
{
public:
	struct FServerModifyUserVirtualCurrencyResult Result;                                            // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature) == 0x000038, "Wrong size on PlayFabServerAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature, CustomData) == 0x000030, "Member 'PlayFabServerAPI_DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlinkPSNAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature final
{
public:
	struct FServerUnlinkPSNAccountResult          Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlinkPSNAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlinkServerCustomId__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUnlinkServerCustomId__DelegateSignature final
{
public:
	struct FServerUnlinkServerCustomIdResult      Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUnlinkServerCustomId__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUnlinkServerCustomId__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUnlinkServerCustomId__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUnlinkServerCustomId__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlinkServerCustomId__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlinkServerCustomId__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlinkServerCustomId__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlinkServerCustomId__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlinkXboxAccount__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature final
{
public:
	struct FServerUnlinkXboxAccountResult         Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlinkXboxAccount__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlockContainerInstance__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature final
{
public:
	struct FServerUnlockContainerItemResult       Result;                                            // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature) == 0x000048, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature, CustomData) == 0x000040, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlockContainerInstance__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUnlockContainerItem__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature final
{
public:
	struct FServerUnlockContainerItemResult       Result;                                            // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature) == 0x000048, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature, CustomData) == 0x000040, "Member 'PlayFabServerAPI_DelegateOnSuccessUnlockContainerItem__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateAvatarUrl__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature final
{
public:
	struct FServerEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateAvatarUrl__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateBans__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateBans__DelegateSignature final
{
public:
	struct FServerUpdateBansResult                Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateBans__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateBans__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateBans__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateBans__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateBans__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateBans__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateBans__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateBans__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateCharacterData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature final
{
public:
	struct FServerUpdateCharacterDataResult       Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateCharacterData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature final
{
public:
	struct FServerUpdateCharacterDataResult       Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature final
{
public:
	struct FServerUpdateCharacterDataResult       Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature final
{
public:
	struct FServerUpdateCharacterStatisticsResult Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature final
{
public:
	struct FServerUpdatePlayerStatisticsResult    Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateSharedGroupData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature final
{
public:
	struct FServerUpdateSharedGroupDataResult     Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateSharedGroupData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateUserData__DelegateSignature final
{
public:
	struct FServerUpdateUserDataResult            Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateUserData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateUserData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateUserData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateUserData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserInternalData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature final
{
public:
	struct FServerUpdateUserDataResult            Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature final
{
public:
	struct FServerEmptyResponse                   Result;                                            // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature) == 0x000010, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature, CustomData) == 0x000008, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserPublisherData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature final
{
public:
	struct FServerUpdateUserDataResult            Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature final
{
public:
	struct FServerUpdateUserDataResult            Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature final
{
public:
	struct FServerUpdateUserDataResult            Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature final
{
public:
	struct FServerUpdateUserDataResult            Result;                                            // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature) == 0x000018, "Wrong size on PlayFabServerAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature, CustomData) == 0x000010, "Member 'PlayFabServerAPI_DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessWriteCharacterEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature final
{
public:
	struct FServerWriteEventResponse              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessWriteCharacterEvent__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessWritePlayerEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature final
{
public:
	struct FServerWriteEventResponse              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessWritePlayerEvent__DelegateSignature::CustomData' has a wrong offset!");

// DelegateFunction PlayFab.PlayFabServerAPI.DelegateOnSuccessWriteTitleEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature final
{
public:
	struct FServerWriteEventResponse              Result;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature) == 0x000008, "Wrong alignment on PlayFabServerAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature");
static_assert(sizeof(PlayFabServerAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature) == 0x000020, "Wrong size on PlayFabServerAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature, Result) == 0x000000, "Member 'PlayFabServerAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature, CustomData) == 0x000018, "Member 'PlayFabServerAPI_DelegateOnSuccessWriteTitleEvent__DelegateSignature::CustomData' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddCharacterVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddCharacterVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B50[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddCharacterVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddCharacterVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddCharacterVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddCharacterVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddCharacterVirtualCurrency, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddCharacterVirtualCurrency::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddFriend
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddFriend final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B51[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddFriend) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddFriend");
static_assert(sizeof(PlayFabServerAPI_HelperAddFriend) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddFriend");
static_assert(offsetof(PlayFabServerAPI_HelperAddFriend, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddFriend::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddFriend, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddFriend::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddFriend, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddFriend::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddGenericID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B52[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddGenericID) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddGenericID");
static_assert(sizeof(PlayFabServerAPI_HelperAddGenericID) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddGenericID");
static_assert(offsetof(PlayFabServerAPI_HelperAddGenericID, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddGenericID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddGenericID, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddGenericID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddGenericID, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddGenericID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddPlayerTag
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddPlayerTag final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B53[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddPlayerTag) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddPlayerTag");
static_assert(sizeof(PlayFabServerAPI_HelperAddPlayerTag) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddPlayerTag");
static_assert(offsetof(PlayFabServerAPI_HelperAddPlayerTag, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddPlayerTag::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddPlayerTag, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddPlayerTag::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddPlayerTag, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddPlayerTag::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddSharedGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddSharedGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B54[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddSharedGroupMembers");
static_assert(sizeof(PlayFabServerAPI_HelperAddSharedGroupMembers) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddSharedGroupMembers");
static_assert(offsetof(PlayFabServerAPI_HelperAddSharedGroupMembers, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddSharedGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddSharedGroupMembers, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddSharedGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddSharedGroupMembers, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddSharedGroupMembers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAddUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAddUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B55[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAddUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAddUserVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_HelperAddUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAddUserVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_HelperAddUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAddUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddUserVirtualCurrency, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperAddUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAddUserVirtualCurrency, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAddUserVirtualCurrency::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAuthenticateSessionTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAuthenticateSessionTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B56[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAuthenticateSessionTicket) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAuthenticateSessionTicket");
static_assert(sizeof(PlayFabServerAPI_HelperAuthenticateSessionTicket) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAuthenticateSessionTicket");
static_assert(offsetof(PlayFabServerAPI_HelperAuthenticateSessionTicket, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAuthenticateSessionTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAuthenticateSessionTicket, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperAuthenticateSessionTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAuthenticateSessionTicket, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAuthenticateSessionTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperAwardSteamAchievement
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperAwardSteamAchievement final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B57[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperAwardSteamAchievement) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperAwardSteamAchievement");
static_assert(sizeof(PlayFabServerAPI_HelperAwardSteamAchievement) == 0x000050, "Wrong size on PlayFabServerAPI_HelperAwardSteamAchievement");
static_assert(offsetof(PlayFabServerAPI_HelperAwardSteamAchievement, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperAwardSteamAchievement::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAwardSteamAchievement, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperAwardSteamAchievement::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperAwardSteamAchievement, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperAwardSteamAchievement::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperBanUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperBanUsers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B58[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperBanUsers) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperBanUsers");
static_assert(sizeof(PlayFabServerAPI_HelperBanUsers) == 0x000050, "Wrong size on PlayFabServerAPI_HelperBanUsers");
static_assert(offsetof(PlayFabServerAPI_HelperBanUsers, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperBanUsers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperBanUsers, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperBanUsers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperBanUsers, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperBanUsers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperConsumeItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperConsumeItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B59[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperConsumeItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperConsumeItem");
static_assert(sizeof(PlayFabServerAPI_HelperConsumeItem) == 0x000050, "Wrong size on PlayFabServerAPI_HelperConsumeItem");
static_assert(offsetof(PlayFabServerAPI_HelperConsumeItem, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperConsumeItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperConsumeItem, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperConsumeItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperConsumeItem, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperConsumeItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperCreateSharedGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperCreateSharedGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B5A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperCreateSharedGroup) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperCreateSharedGroup");
static_assert(sizeof(PlayFabServerAPI_HelperCreateSharedGroup) == 0x000050, "Wrong size on PlayFabServerAPI_HelperCreateSharedGroup");
static_assert(offsetof(PlayFabServerAPI_HelperCreateSharedGroup, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperCreateSharedGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperCreateSharedGroup, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperCreateSharedGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperCreateSharedGroup, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperCreateSharedGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperDeleteCharacterFromUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperDeleteCharacterFromUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B5B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperDeleteCharacterFromUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperDeleteCharacterFromUser");
static_assert(sizeof(PlayFabServerAPI_HelperDeleteCharacterFromUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperDeleteCharacterFromUser");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteCharacterFromUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperDeleteCharacterFromUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteCharacterFromUser, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperDeleteCharacterFromUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteCharacterFromUser, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperDeleteCharacterFromUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperDeletePlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperDeletePlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B5C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperDeletePlayer) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperDeletePlayer");
static_assert(sizeof(PlayFabServerAPI_HelperDeletePlayer) == 0x000050, "Wrong size on PlayFabServerAPI_HelperDeletePlayer");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePlayer, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperDeletePlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePlayer, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperDeletePlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePlayer, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperDeletePlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperDeletePushNotificationTemplate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperDeletePushNotificationTemplate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B5D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperDeletePushNotificationTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperDeletePushNotificationTemplate");
static_assert(sizeof(PlayFabServerAPI_HelperDeletePushNotificationTemplate) == 0x000050, "Wrong size on PlayFabServerAPI_HelperDeletePushNotificationTemplate");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePushNotificationTemplate, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperDeletePushNotificationTemplate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePushNotificationTemplate, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperDeletePushNotificationTemplate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeletePushNotificationTemplate, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperDeletePushNotificationTemplate::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperDeleteSharedGroup
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperDeleteSharedGroup final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B5E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperDeleteSharedGroup) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperDeleteSharedGroup");
static_assert(sizeof(PlayFabServerAPI_HelperDeleteSharedGroup) == 0x000050, "Wrong size on PlayFabServerAPI_HelperDeleteSharedGroup");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteSharedGroup, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperDeleteSharedGroup::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteSharedGroup, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperDeleteSharedGroup::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeleteSharedGroup, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperDeleteSharedGroup::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperDeregisterGame
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperDeregisterGame final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B5F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperDeregisterGame) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperDeregisterGame");
static_assert(sizeof(PlayFabServerAPI_HelperDeregisterGame) == 0x000050, "Wrong size on PlayFabServerAPI_HelperDeregisterGame");
static_assert(offsetof(PlayFabServerAPI_HelperDeregisterGame, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperDeregisterGame::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeregisterGame, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperDeregisterGame::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperDeregisterGame, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperDeregisterGame::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperEvaluateRandomResultTable
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperEvaluateRandomResultTable final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B60[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperEvaluateRandomResultTable) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperEvaluateRandomResultTable");
static_assert(sizeof(PlayFabServerAPI_HelperEvaluateRandomResultTable) == 0x000050, "Wrong size on PlayFabServerAPI_HelperEvaluateRandomResultTable");
static_assert(offsetof(PlayFabServerAPI_HelperEvaluateRandomResultTable, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperEvaluateRandomResultTable::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperEvaluateRandomResultTable, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperEvaluateRandomResultTable::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperEvaluateRandomResultTable, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperEvaluateRandomResultTable::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperExecuteCloudScript
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperExecuteCloudScript final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B61[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperExecuteCloudScript) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperExecuteCloudScript");
static_assert(sizeof(PlayFabServerAPI_HelperExecuteCloudScript) == 0x000050, "Wrong size on PlayFabServerAPI_HelperExecuteCloudScript");
static_assert(offsetof(PlayFabServerAPI_HelperExecuteCloudScript, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperExecuteCloudScript::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperExecuteCloudScript, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperExecuteCloudScript::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperExecuteCloudScript, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperExecuteCloudScript::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetAllSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetAllSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B62[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetAllSegments) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetAllSegments");
static_assert(sizeof(PlayFabServerAPI_HelperGetAllSegments) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetAllSegments");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllSegments, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetAllSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllSegments, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetAllSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllSegments, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetAllSegments::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetAllUsersCharacters
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetAllUsersCharacters final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B63[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetAllUsersCharacters) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetAllUsersCharacters");
static_assert(sizeof(PlayFabServerAPI_HelperGetAllUsersCharacters) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetAllUsersCharacters");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllUsersCharacters, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetAllUsersCharacters::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllUsersCharacters, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetAllUsersCharacters::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetAllUsersCharacters, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetAllUsersCharacters::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCatalogItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCatalogItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B64[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCatalogItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCatalogItems");
static_assert(sizeof(PlayFabServerAPI_HelperGetCatalogItems) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCatalogItems");
static_assert(offsetof(PlayFabServerAPI_HelperGetCatalogItems, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCatalogItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCatalogItems, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCatalogItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCatalogItems, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCatalogItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B65[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterData");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterData");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B66[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInternalData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInternalData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B67[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterInventory) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterInventory");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterInventory) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterInventory");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInventory, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInventory, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterInventory, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterInventory::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B68[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterLeaderboard");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterLeaderboard) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterLeaderboard");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterLeaderboard, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterLeaderboard, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterLeaderboard, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterLeaderboard::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B69[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterReadOnlyData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B6A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetCharacterStatistics");
static_assert(sizeof(PlayFabServerAPI_HelperGetCharacterStatistics) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetCharacterStatistics");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterStatistics, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterStatistics, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetCharacterStatistics, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetCharacterStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetContentDownloadUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetContentDownloadUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B6B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetContentDownloadUrl) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetContentDownloadUrl");
static_assert(sizeof(PlayFabServerAPI_HelperGetContentDownloadUrl) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetContentDownloadUrl");
static_assert(offsetof(PlayFabServerAPI_HelperGetContentDownloadUrl, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetContentDownloadUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetContentDownloadUrl, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetContentDownloadUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetContentDownloadUrl, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetContentDownloadUrl::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetFriendLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetFriendLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B6C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetFriendLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetFriendLeaderboard");
static_assert(sizeof(PlayFabServerAPI_HelperGetFriendLeaderboard) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetFriendLeaderboard");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendLeaderboard, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetFriendLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendLeaderboard, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetFriendLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendLeaderboard, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetFriendLeaderboard::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetFriendsList
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetFriendsList final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B6D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetFriendsList) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetFriendsList");
static_assert(sizeof(PlayFabServerAPI_HelperGetFriendsList) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetFriendsList");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendsList, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetFriendsList::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendsList, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetFriendsList::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetFriendsList, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetFriendsList::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboard
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetLeaderboard final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B6E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetLeaderboard) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetLeaderboard");
static_assert(sizeof(PlayFabServerAPI_HelperGetLeaderboard) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetLeaderboard");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboard, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetLeaderboard::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboard, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetLeaderboard::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboard, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetLeaderboard::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboardAroundCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetLeaderboardAroundCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B6F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetLeaderboardAroundCharacter");
static_assert(sizeof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetLeaderboardAroundCharacter");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundCharacter, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundCharacter::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboardAroundUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetLeaderboardAroundUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B70[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetLeaderboardAroundUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetLeaderboardAroundUser");
static_assert(sizeof(PlayFabServerAPI_HelperGetLeaderboardAroundUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetLeaderboardAroundUser");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundUser, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardAroundUser, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetLeaderboardAroundUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboardForUserCharacters
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetLeaderboardForUserCharacters final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B71[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetLeaderboardForUserCharacters");
static_assert(sizeof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetLeaderboardForUserCharacters");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetLeaderboardForUserCharacters::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetLeaderboardForUserCharacters::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetLeaderboardForUserCharacters, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetLeaderboardForUserCharacters::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerCombinedInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerCombinedInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B72[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerCombinedInfo) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerCombinedInfo");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerCombinedInfo) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerCombinedInfo");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerCombinedInfo, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerCombinedInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerCombinedInfo, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerCombinedInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerCombinedInfo, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerCombinedInfo::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerProfile
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerProfile final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B73[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerProfile) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerProfile");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerProfile) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerProfile");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerProfile, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerProfile::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerProfile, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerProfile::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerProfile, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerProfile::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerSegments
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerSegments final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B74[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerSegments) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerSegments");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerSegments) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerSegments");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerSegments, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerSegments::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerSegments, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerSegments::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerSegments, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerSegments::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayersInSegment
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayersInSegment final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B75[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayersInSegment) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayersInSegment");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayersInSegment) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayersInSegment");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayersInSegment, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayersInSegment::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayersInSegment, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayersInSegment::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayersInSegment, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayersInSegment::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B76[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerStatistics");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerStatistics) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerStatistics");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatistics, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatistics, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatistics, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerStatisticVersions
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerStatisticVersions final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B77[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerStatisticVersions) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerStatisticVersions");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerStatisticVersions) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerStatisticVersions");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatisticVersions, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerStatisticVersions::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatisticVersions, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerStatisticVersions::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerStatisticVersions, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerStatisticVersions::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayerTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayerTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B78[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayerTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayerTags");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayerTags) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayerTags");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerTags, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayerTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerTags, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayerTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayerTags, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayerTags::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromFacebookIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B79[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromFacebookInstantGamesIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B7A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromGenericIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B7B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromNintendoServiceAccountIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B7C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromNintendoSwitchDeviceIds
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B7D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromPSNAccountIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B7E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromSteamIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B7F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromTwitchIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B80[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromXboxLiveIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B81[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B82[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetPublisherData");
static_assert(sizeof(PlayFabServerAPI_HelperGetPublisherData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetPublisherData");
static_assert(offsetof(PlayFabServerAPI_HelperGetPublisherData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPublisherData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetPublisherData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetRandomResultTables
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetRandomResultTables final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B83[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetRandomResultTables) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetRandomResultTables");
static_assert(sizeof(PlayFabServerAPI_HelperGetRandomResultTables) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetRandomResultTables");
static_assert(offsetof(PlayFabServerAPI_HelperGetRandomResultTables, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetRandomResultTables::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetRandomResultTables, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetRandomResultTables::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetRandomResultTables, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetRandomResultTables::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetServerCustomIDsFromPlayFabIDs
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B84[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs");
static_assert(sizeof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs");
static_assert(offsetof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetSharedGroupData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetSharedGroupData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B85[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetSharedGroupData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetSharedGroupData");
static_assert(sizeof(PlayFabServerAPI_HelperGetSharedGroupData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetSharedGroupData");
static_assert(offsetof(PlayFabServerAPI_HelperGetSharedGroupData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetSharedGroupData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetSharedGroupData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetSharedGroupData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetSharedGroupData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetSharedGroupData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetStoreItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetStoreItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B86[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetStoreItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetStoreItems");
static_assert(sizeof(PlayFabServerAPI_HelperGetStoreItems) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetStoreItems");
static_assert(offsetof(PlayFabServerAPI_HelperGetStoreItems, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetStoreItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetStoreItems, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetStoreItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetStoreItems, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetStoreItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetTime
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetTime final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B87[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetTime) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetTime");
static_assert(sizeof(PlayFabServerAPI_HelperGetTime) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetTime");
static_assert(offsetof(PlayFabServerAPI_HelperGetTime, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetTime::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTime, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetTime::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTime, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetTime::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B88[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetTitleData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetTitleData");
static_assert(sizeof(PlayFabServerAPI_HelperGetTitleData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetTitleData");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetTitleData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetTitleInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetTitleInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B89[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetTitleInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperGetTitleInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetTitleInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetTitleInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleInternalData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetTitleInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleInternalData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetTitleInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetTitleNews
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetTitleNews final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetTitleNews) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetTitleNews");
static_assert(sizeof(PlayFabServerAPI_HelperGetTitleNews) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetTitleNews");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleNews, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetTitleNews::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleNews, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetTitleNews::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetTitleNews, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetTitleNews::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserAccountInfo
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserAccountInfo final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserAccountInfo) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserAccountInfo");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserAccountInfo) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserAccountInfo");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserAccountInfo, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserAccountInfo::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserAccountInfo, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserAccountInfo::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserAccountInfo, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserAccountInfo::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserBans");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserBans) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserBans");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserBans, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserBans, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserBans, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserBans::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInternalData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInternalData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserInventory
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserInventory final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserInventory) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserInventory");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserInventory) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserInventory");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInventory, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserInventory::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInventory, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserInventory::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserInventory, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserInventory::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B90[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserPublisherData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserPublisherData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserPublisherData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserPublisherInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserPublisherInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B91[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserPublisherInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserPublisherInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserPublisherInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserPublisherInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherInternalData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserPublisherInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherInternalData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserPublisherInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B92[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserPublisherReadOnlyData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserPublisherReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGetUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGetUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B93[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGetUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGetUserReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperGetUserReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGetUserReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGetUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGetUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGetUserReadOnlyData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGetUserReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGrantCharacterToUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGrantCharacterToUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B94[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGrantCharacterToUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGrantCharacterToUser");
static_assert(sizeof(PlayFabServerAPI_HelperGrantCharacterToUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGrantCharacterToUser");
static_assert(offsetof(PlayFabServerAPI_HelperGrantCharacterToUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGrantCharacterToUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantCharacterToUser, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGrantCharacterToUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantCharacterToUser, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGrantCharacterToUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGrantItemsToCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGrantItemsToCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B95[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGrantItemsToCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGrantItemsToCharacter");
static_assert(sizeof(PlayFabServerAPI_HelperGrantItemsToCharacter) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGrantItemsToCharacter");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToCharacter, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGrantItemsToCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToCharacter, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGrantItemsToCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToCharacter, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGrantItemsToCharacter::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGrantItemsToUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGrantItemsToUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B96[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGrantItemsToUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGrantItemsToUser");
static_assert(sizeof(PlayFabServerAPI_HelperGrantItemsToUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGrantItemsToUser");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGrantItemsToUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUser, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGrantItemsToUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUser, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGrantItemsToUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperGrantItemsToUsers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperGrantItemsToUsers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B97[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperGrantItemsToUsers) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperGrantItemsToUsers");
static_assert(sizeof(PlayFabServerAPI_HelperGrantItemsToUsers) == 0x000050, "Wrong size on PlayFabServerAPI_HelperGrantItemsToUsers");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUsers, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperGrantItemsToUsers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUsers, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperGrantItemsToUsers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperGrantItemsToUsers, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperGrantItemsToUsers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkPSNAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B98[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkPSNAccount");
static_assert(sizeof(PlayFabServerAPI_HelperLinkPSNAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkPSNAccount");
static_assert(offsetof(PlayFabServerAPI_HelperLinkPSNAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkPSNAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkPSNAccount, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkPSNAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkPSNAccount, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkPSNAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkServerCustomId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkServerCustomId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B99[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkServerCustomId");
static_assert(sizeof(PlayFabServerAPI_HelperLinkServerCustomId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkServerCustomId");
static_assert(offsetof(PlayFabServerAPI_HelperLinkServerCustomId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkServerCustomId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkServerCustomId, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkServerCustomId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkServerCustomId, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkServerCustomId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLinkXboxAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9A[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLinkXboxAccount");
static_assert(sizeof(PlayFabServerAPI_HelperLinkXboxAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLinkXboxAccount");
static_assert(offsetof(PlayFabServerAPI_HelperLinkXboxAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLinkXboxAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkXboxAccount, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperLinkXboxAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLinkXboxAccount, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLinkXboxAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLoginWithServerCustomId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLoginWithServerCustomId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9B[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLoginWithServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLoginWithServerCustomId");
static_assert(sizeof(PlayFabServerAPI_HelperLoginWithServerCustomId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLoginWithServerCustomId");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithServerCustomId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLoginWithServerCustomId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithServerCustomId, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperLoginWithServerCustomId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithServerCustomId, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLoginWithServerCustomId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLoginWithSteamId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLoginWithSteamId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9C[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLoginWithSteamId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLoginWithSteamId");
static_assert(sizeof(PlayFabServerAPI_HelperLoginWithSteamId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLoginWithSteamId");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithSteamId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLoginWithSteamId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithSteamId, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperLoginWithSteamId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithSteamId, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLoginWithSteamId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLoginWithXbox
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLoginWithXbox final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9D[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLoginWithXbox) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLoginWithXbox");
static_assert(sizeof(PlayFabServerAPI_HelperLoginWithXbox) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLoginWithXbox");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXbox, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLoginWithXbox::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXbox, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperLoginWithXbox::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXbox, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLoginWithXbox::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperLoginWithXboxId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperLoginWithXboxId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperLoginWithXboxId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperLoginWithXboxId");
static_assert(sizeof(PlayFabServerAPI_HelperLoginWithXboxId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperLoginWithXboxId");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXboxId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperLoginWithXboxId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXboxId, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperLoginWithXboxId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperLoginWithXboxId, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperLoginWithXboxId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperModifyItemUses
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperModifyItemUses final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9F[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperModifyItemUses) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperModifyItemUses");
static_assert(sizeof(PlayFabServerAPI_HelperModifyItemUses) == 0x000050, "Wrong size on PlayFabServerAPI_HelperModifyItemUses");
static_assert(offsetof(PlayFabServerAPI_HelperModifyItemUses, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperModifyItemUses::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperModifyItemUses, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperModifyItemUses::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperModifyItemUses, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperModifyItemUses::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperMoveItemToCharacterFromCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter");
static_assert(sizeof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter) == 0x000050, "Wrong size on PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperMoveItemToCharacterFromUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperMoveItemToCharacterFromUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperMoveItemToCharacterFromUser");
static_assert(sizeof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperMoveItemToCharacterFromUser");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToCharacterFromUser, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperMoveItemToCharacterFromUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperMoveItemToUserFromCharacter
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperMoveItemToUserFromCharacter final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperMoveItemToUserFromCharacter");
static_assert(sizeof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter) == 0x000050, "Wrong size on PlayFabServerAPI_HelperMoveItemToUserFromCharacter");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperMoveItemToUserFromCharacter::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperMoveItemToUserFromCharacter::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperMoveItemToUserFromCharacter, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperMoveItemToUserFromCharacter::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperNotifyMatchmakerPlayerLeft
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft");
static_assert(sizeof(PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft) == 0x000050, "Wrong size on PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft");
static_assert(offsetof(PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRedeemCoupon
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRedeemCoupon final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRedeemCoupon) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRedeemCoupon");
static_assert(sizeof(PlayFabServerAPI_HelperRedeemCoupon) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRedeemCoupon");
static_assert(offsetof(PlayFabServerAPI_HelperRedeemCoupon, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRedeemCoupon::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRedeemCoupon, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRedeemCoupon::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRedeemCoupon, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRedeemCoupon::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRedeemMatchmakerTicket
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRedeemMatchmakerTicket final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRedeemMatchmakerTicket) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRedeemMatchmakerTicket");
static_assert(sizeof(PlayFabServerAPI_HelperRedeemMatchmakerTicket) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRedeemMatchmakerTicket");
static_assert(offsetof(PlayFabServerAPI_HelperRedeemMatchmakerTicket, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRedeemMatchmakerTicket::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRedeemMatchmakerTicket, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRedeemMatchmakerTicket::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRedeemMatchmakerTicket, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRedeemMatchmakerTicket::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRefreshGameServerInstanceHeartbeat
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat");
static_assert(sizeof(PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat");
static_assert(offsetof(PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRegisterGame
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRegisterGame final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRegisterGame) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRegisterGame");
static_assert(sizeof(PlayFabServerAPI_HelperRegisterGame) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRegisterGame");
static_assert(offsetof(PlayFabServerAPI_HelperRegisterGame, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRegisterGame::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRegisterGame, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRegisterGame::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRegisterGame, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRegisterGame::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRemoveFriend
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRemoveFriend final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRemoveFriend) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRemoveFriend");
static_assert(sizeof(PlayFabServerAPI_HelperRemoveFriend) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRemoveFriend");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveFriend, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRemoveFriend::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveFriend, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRemoveFriend::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveFriend, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRemoveFriend::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRemoveGenericID
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRemoveGenericID final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRemoveGenericID) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRemoveGenericID");
static_assert(sizeof(PlayFabServerAPI_HelperRemoveGenericID) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRemoveGenericID");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveGenericID, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRemoveGenericID::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveGenericID, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRemoveGenericID::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveGenericID, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRemoveGenericID::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRemovePlayerTag
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRemovePlayerTag final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BAA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRemovePlayerTag) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRemovePlayerTag");
static_assert(sizeof(PlayFabServerAPI_HelperRemovePlayerTag) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRemovePlayerTag");
static_assert(offsetof(PlayFabServerAPI_HelperRemovePlayerTag, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRemovePlayerTag::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemovePlayerTag, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRemovePlayerTag::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemovePlayerTag, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRemovePlayerTag::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRemoveSharedGroupMembers
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRemoveSharedGroupMembers final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BAB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRemoveSharedGroupMembers) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRemoveSharedGroupMembers");
static_assert(sizeof(PlayFabServerAPI_HelperRemoveSharedGroupMembers) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRemoveSharedGroupMembers");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveSharedGroupMembers, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRemoveSharedGroupMembers::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveSharedGroupMembers, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRemoveSharedGroupMembers::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRemoveSharedGroupMembers, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRemoveSharedGroupMembers::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperReportPlayer
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperReportPlayer final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BAC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperReportPlayer) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperReportPlayer");
static_assert(sizeof(PlayFabServerAPI_HelperReportPlayer) == 0x000050, "Wrong size on PlayFabServerAPI_HelperReportPlayer");
static_assert(offsetof(PlayFabServerAPI_HelperReportPlayer, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperReportPlayer::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperReportPlayer, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperReportPlayer::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperReportPlayer, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperReportPlayer::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRevokeAllBansForUser
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRevokeAllBansForUser final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BAD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRevokeAllBansForUser) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRevokeAllBansForUser");
static_assert(sizeof(PlayFabServerAPI_HelperRevokeAllBansForUser) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRevokeAllBansForUser");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeAllBansForUser, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRevokeAllBansForUser::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeAllBansForUser, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRevokeAllBansForUser::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeAllBansForUser, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRevokeAllBansForUser::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRevokeBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRevokeBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BAE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRevokeBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRevokeBans");
static_assert(sizeof(PlayFabServerAPI_HelperRevokeBans) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRevokeBans");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeBans, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRevokeBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeBans, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRevokeBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeBans, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRevokeBans::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRevokeInventoryItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRevokeInventoryItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BAF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRevokeInventoryItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRevokeInventoryItem");
static_assert(sizeof(PlayFabServerAPI_HelperRevokeInventoryItem) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRevokeInventoryItem");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItem, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRevokeInventoryItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItem, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRevokeInventoryItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItem, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRevokeInventoryItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperRevokeInventoryItems
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperRevokeInventoryItems final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperRevokeInventoryItems) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperRevokeInventoryItems");
static_assert(sizeof(PlayFabServerAPI_HelperRevokeInventoryItems) == 0x000050, "Wrong size on PlayFabServerAPI_HelperRevokeInventoryItems");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItems, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperRevokeInventoryItems::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItems, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperRevokeInventoryItems::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperRevokeInventoryItems, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperRevokeInventoryItems::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSavePushNotificationTemplate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSavePushNotificationTemplate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSavePushNotificationTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSavePushNotificationTemplate");
static_assert(sizeof(PlayFabServerAPI_HelperSavePushNotificationTemplate) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSavePushNotificationTemplate");
static_assert(offsetof(PlayFabServerAPI_HelperSavePushNotificationTemplate, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSavePushNotificationTemplate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSavePushNotificationTemplate, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSavePushNotificationTemplate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSavePushNotificationTemplate, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSavePushNotificationTemplate::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSendCustomAccountRecoveryEmail
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail");
static_assert(sizeof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail");
static_assert(offsetof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSendEmailFromTemplate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSendEmailFromTemplate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSendEmailFromTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSendEmailFromTemplate");
static_assert(sizeof(PlayFabServerAPI_HelperSendEmailFromTemplate) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSendEmailFromTemplate");
static_assert(offsetof(PlayFabServerAPI_HelperSendEmailFromTemplate, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSendEmailFromTemplate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendEmailFromTemplate, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSendEmailFromTemplate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendEmailFromTemplate, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSendEmailFromTemplate::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSendPushNotification
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSendPushNotification final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSendPushNotification) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSendPushNotification");
static_assert(sizeof(PlayFabServerAPI_HelperSendPushNotification) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSendPushNotification");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotification, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSendPushNotification::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotification, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSendPushNotification::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotification, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSendPushNotification::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSendPushNotificationFromTemplate
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSendPushNotificationFromTemplate final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSendPushNotificationFromTemplate");
static_assert(sizeof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSendPushNotificationFromTemplate");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSendPushNotificationFromTemplate::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSendPushNotificationFromTemplate::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSendPushNotificationFromTemplate, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSendPushNotificationFromTemplate::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetFriendTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetFriendTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetFriendTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetFriendTags");
static_assert(sizeof(PlayFabServerAPI_HelperSetFriendTags) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetFriendTags");
static_assert(offsetof(PlayFabServerAPI_HelperSetFriendTags, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetFriendTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetFriendTags, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetFriendTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetFriendTags, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetFriendTags::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetGameServerInstanceData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetGameServerInstanceData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetGameServerInstanceData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetGameServerInstanceData");
static_assert(sizeof(PlayFabServerAPI_HelperSetGameServerInstanceData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetGameServerInstanceData");
static_assert(offsetof(PlayFabServerAPI_HelperSetGameServerInstanceData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetGameServerInstanceData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetGameServerInstanceData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetGameServerInstanceData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetGameServerInstanceData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetGameServerInstanceData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetGameServerInstanceState
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetGameServerInstanceState final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetGameServerInstanceState) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetGameServerInstanceState");
static_assert(sizeof(PlayFabServerAPI_HelperSetGameServerInstanceState) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetGameServerInstanceState");
static_assert(offsetof(PlayFabServerAPI_HelperSetGameServerInstanceState, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetGameServerInstanceState::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetGameServerInstanceState, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetGameServerInstanceState::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetGameServerInstanceState, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetGameServerInstanceState::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetGameServerInstanceTags
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetGameServerInstanceTags final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BB9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetGameServerInstanceTags) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetGameServerInstanceTags");
static_assert(sizeof(PlayFabServerAPI_HelperSetGameServerInstanceTags) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetGameServerInstanceTags");
static_assert(offsetof(PlayFabServerAPI_HelperSetGameServerInstanceTags, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetGameServerInstanceTags::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetGameServerInstanceTags, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetGameServerInstanceTags::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetGameServerInstanceTags, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetGameServerInstanceTags::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetPlayerSecret
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetPlayerSecret final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BBA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetPlayerSecret) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetPlayerSecret");
static_assert(sizeof(PlayFabServerAPI_HelperSetPlayerSecret) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetPlayerSecret");
static_assert(offsetof(PlayFabServerAPI_HelperSetPlayerSecret, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetPlayerSecret::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetPlayerSecret, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetPlayerSecret::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetPlayerSecret, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetPlayerSecret::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BBB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetPublisherData");
static_assert(sizeof(PlayFabServerAPI_HelperSetPublisherData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetPublisherData");
static_assert(offsetof(PlayFabServerAPI_HelperSetPublisherData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetPublisherData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetPublisherData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetTitleData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetTitleData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BBC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetTitleData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetTitleData");
static_assert(sizeof(PlayFabServerAPI_HelperSetTitleData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetTitleData");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetTitleData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetTitleData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetTitleData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSetTitleInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSetTitleInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BBD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSetTitleInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSetTitleInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperSetTitleInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSetTitleInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSetTitleInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleInternalData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSetTitleInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSetTitleInternalData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSetTitleInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSubtractCharacterVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BBE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperSubtractUserVirtualCurrency
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperSubtractUserVirtualCurrency final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BBF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperSubtractUserVirtualCurrency");
static_assert(sizeof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency) == 0x000050, "Wrong size on PlayFabServerAPI_HelperSubtractUserVirtualCurrency");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperSubtractUserVirtualCurrency::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperSubtractUserVirtualCurrency::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperSubtractUserVirtualCurrency, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperSubtractUserVirtualCurrency::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlinkPSNAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlinkPSNAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlinkPSNAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlinkPSNAccount");
static_assert(sizeof(PlayFabServerAPI_HelperUnlinkPSNAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlinkPSNAccount");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkPSNAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlinkPSNAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkPSNAccount, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlinkPSNAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkPSNAccount, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlinkPSNAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlinkServerCustomId
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlinkServerCustomId final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlinkServerCustomId) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlinkServerCustomId");
static_assert(sizeof(PlayFabServerAPI_HelperUnlinkServerCustomId) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlinkServerCustomId");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkServerCustomId, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlinkServerCustomId::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkServerCustomId, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlinkServerCustomId::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkServerCustomId, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlinkServerCustomId::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlinkXboxAccount
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlinkXboxAccount final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlinkXboxAccount) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlinkXboxAccount");
static_assert(sizeof(PlayFabServerAPI_HelperUnlinkXboxAccount) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlinkXboxAccount");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkXboxAccount, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlinkXboxAccount::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkXboxAccount, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlinkXboxAccount::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlinkXboxAccount, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlinkXboxAccount::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlockContainerInstance
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlockContainerInstance final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlockContainerInstance) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlockContainerInstance");
static_assert(sizeof(PlayFabServerAPI_HelperUnlockContainerInstance) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlockContainerInstance");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerInstance, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlockContainerInstance::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerInstance, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlockContainerInstance::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerInstance, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlockContainerInstance::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUnlockContainerItem
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUnlockContainerItem final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUnlockContainerItem) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUnlockContainerItem");
static_assert(sizeof(PlayFabServerAPI_HelperUnlockContainerItem) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUnlockContainerItem");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerItem, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUnlockContainerItem::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerItem, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUnlockContainerItem::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUnlockContainerItem, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUnlockContainerItem::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateAvatarUrl
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateAvatarUrl final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateAvatarUrl) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateAvatarUrl");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateAvatarUrl) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateAvatarUrl");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateAvatarUrl, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateAvatarUrl::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateAvatarUrl, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateAvatarUrl::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateAvatarUrl, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateAvatarUrl::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateBans
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateBans final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateBans) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateBans");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateBans) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateBans");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateBans, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateBans::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateBans, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateBans::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateBans, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateBans::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateCharacterData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC7[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateCharacterData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateCharacterData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateCharacterData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateCharacterData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateCharacterData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateCharacterData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateCharacterData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateCharacterInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC8[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateCharacterInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateCharacterInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateCharacterInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateCharacterInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateCharacterInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterInternalData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateCharacterInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterInternalData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateCharacterInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateCharacterReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC9[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateCharacterReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateCharacterReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateCharacterReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateCharacterReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterReadOnlyData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateCharacterReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateCharacterStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BCA[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateCharacterStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateCharacterStatistics");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateCharacterStatistics) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateCharacterStatistics");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterStatistics, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateCharacterStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterStatistics, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateCharacterStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateCharacterStatistics, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateCharacterStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdatePlayerStatistics
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdatePlayerStatistics final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BCB[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdatePlayerStatistics) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdatePlayerStatistics");
static_assert(sizeof(PlayFabServerAPI_HelperUpdatePlayerStatistics) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdatePlayerStatistics");
static_assert(offsetof(PlayFabServerAPI_HelperUpdatePlayerStatistics, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdatePlayerStatistics::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdatePlayerStatistics, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdatePlayerStatistics::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdatePlayerStatistics, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdatePlayerStatistics::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateSharedGroupData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateSharedGroupData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BCC[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateSharedGroupData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateSharedGroupData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateSharedGroupData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateSharedGroupData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateSharedGroupData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateSharedGroupData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateSharedGroupData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateSharedGroupData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateSharedGroupData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateSharedGroupData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BCD[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BCE[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInternalData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInternalData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserInventoryItemCustomData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BCF[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserPublisherData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD0[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserPublisherData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserPublisherData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserPublisherData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserPublisherData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherInternalData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserPublisherInternalData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD1[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserPublisherInternalData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserPublisherInternalData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherInternalData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherInternalData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherInternalData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherInternalData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD2[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperUpdateUserReadOnlyData
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperUpdateUserReadOnlyData final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD3[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperUpdateUserReadOnlyData) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperUpdateUserReadOnlyData");
static_assert(sizeof(PlayFabServerAPI_HelperUpdateUserReadOnlyData) == 0x000050, "Wrong size on PlayFabServerAPI_HelperUpdateUserReadOnlyData");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserReadOnlyData, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperUpdateUserReadOnlyData::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserReadOnlyData, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperUpdateUserReadOnlyData::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperUpdateUserReadOnlyData, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperUpdateUserReadOnlyData::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperWriteCharacterEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperWriteCharacterEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD4[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperWriteCharacterEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperWriteCharacterEvent");
static_assert(sizeof(PlayFabServerAPI_HelperWriteCharacterEvent) == 0x000050, "Wrong size on PlayFabServerAPI_HelperWriteCharacterEvent");
static_assert(offsetof(PlayFabServerAPI_HelperWriteCharacterEvent, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperWriteCharacterEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWriteCharacterEvent, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperWriteCharacterEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWriteCharacterEvent, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperWriteCharacterEvent::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperWritePlayerEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperWritePlayerEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD5[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperWritePlayerEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperWritePlayerEvent");
static_assert(sizeof(PlayFabServerAPI_HelperWritePlayerEvent) == 0x000050, "Wrong size on PlayFabServerAPI_HelperWritePlayerEvent");
static_assert(offsetof(PlayFabServerAPI_HelperWritePlayerEvent, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperWritePlayerEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWritePlayerEvent, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperWritePlayerEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWritePlayerEvent, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperWritePlayerEvent::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerAPI.HelperWriteTitleEvent
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerAPI_HelperWriteTitleEvent final
{
public:
	struct FPlayFabBaseModel                      Response;                                          // 0x0000(0x0040)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                CustomData;                                        // 0x0040(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Successful;                                        // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD6[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PlayFabServerAPI_HelperWriteTitleEvent) == 0x000008, "Wrong alignment on PlayFabServerAPI_HelperWriteTitleEvent");
static_assert(sizeof(PlayFabServerAPI_HelperWriteTitleEvent) == 0x000050, "Wrong size on PlayFabServerAPI_HelperWriteTitleEvent");
static_assert(offsetof(PlayFabServerAPI_HelperWriteTitleEvent, Response) == 0x000000, "Member 'PlayFabServerAPI_HelperWriteTitleEvent::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWriteTitleEvent, CustomData) == 0x000040, "Member 'PlayFabServerAPI_HelperWriteTitleEvent::CustomData' has a wrong offset!");
static_assert(offsetof(PlayFabServerAPI_HelperWriteTitleEvent, Successful) == 0x000048, "Member 'PlayFabServerAPI_HelperWriteTitleEvent::Successful' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeAddPlayerTagResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeAddPlayerTagResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerAddPlayerTagResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeAddPlayerTagResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeAddPlayerTagResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeAddPlayerTagResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeAddPlayerTagResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeAddPlayerTagResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeAddPlayerTagResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeAddPlayerTagResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeAddPlayerTagResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeAddSharedGroupMembersResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeAddSharedGroupMembersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerAddSharedGroupMembersResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeAddSharedGroupMembersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeAddSharedGroupMembersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeAddSharedGroupMembersResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeAddSharedGroupMembersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeAddSharedGroupMembersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeAddSharedGroupMembersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeAddSharedGroupMembersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeAddSharedGroupMembersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeAuthenticateSessionTicketResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeAuthenticateSessionTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerAuthenticateSessionTicketResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeAuthenticateSessionTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeAuthenticateSessionTicketResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeAuthenticateSessionTicketResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeAuthenticateSessionTicketResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeAuthenticateSessionTicketResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeAuthenticateSessionTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeAuthenticateSessionTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeAuthenticateSessionTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeAwardSteamAchievementResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeAwardSteamAchievementResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerAwardSteamAchievementResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeAwardSteamAchievementResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeAwardSteamAchievementResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeAwardSteamAchievementResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeAwardSteamAchievementResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeAwardSteamAchievementResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeAwardSteamAchievementResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeAwardSteamAchievementResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeAwardSteamAchievementResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeBanUsersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeBanUsersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerBanUsersResult                  ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeBanUsersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeBanUsersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeBanUsersResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeBanUsersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeBanUsersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeBanUsersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeBanUsersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeBanUsersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeConsumeItemResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_DecodeConsumeItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerConsumeItemResult               ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeConsumeItemResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeConsumeItemResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeConsumeItemResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_DecodeConsumeItemResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeConsumeItemResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeConsumeItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeConsumeItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeConsumeItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeCreateSharedGroupResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeCreateSharedGroupResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerCreateSharedGroupResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeCreateSharedGroupResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeCreateSharedGroupResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeCreateSharedGroupResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeCreateSharedGroupResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeCreateSharedGroupResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeCreateSharedGroupResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeCreateSharedGroupResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeCreateSharedGroupResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeDeleteCharacterFromUserResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeDeleteCharacterFromUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerDeleteCharacterFromUserResult   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeDeleteCharacterFromUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeDeleteCharacterFromUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeDeleteCharacterFromUserResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeDeleteCharacterFromUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeDeleteCharacterFromUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeDeleteCharacterFromUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeDeleteCharacterFromUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeDeleteCharacterFromUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeDeletePlayerResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeDeletePlayerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerDeletePlayerResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeDeletePlayerResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeDeletePlayerResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeDeletePlayerResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeDeletePlayerResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeDeletePlayerResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeDeletePlayerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeDeletePlayerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeDeletePlayerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeDeletePushNotificationTemplateResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeDeletePushNotificationTemplateResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerDeletePushNotificationTemplateResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeDeletePushNotificationTemplateResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeDeletePushNotificationTemplateResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeDeletePushNotificationTemplateResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeDeletePushNotificationTemplateResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeDeletePushNotificationTemplateResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeDeletePushNotificationTemplateResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeDeletePushNotificationTemplateResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeDeletePushNotificationTemplateResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeDeregisterGameResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeDeregisterGameResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerDeregisterGameResponse          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeDeregisterGameResponseResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeDeregisterGameResponseResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeDeregisterGameResponseResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeDeregisterGameResponseResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeDeregisterGameResponseResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeDeregisterGameResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeDeregisterGameResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeDeregisterGameResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeEmptyResponseResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeEmptyResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerEmptyResponse                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeEmptyResponseResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeEmptyResponseResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeEmptyResponseResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeEmptyResponseResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeEmptyResponseResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeEmptyResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeEmptyResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeEmptyResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeEmptyResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeEmptyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerEmptyResult                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeEmptyResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeEmptyResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeEmptyResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeEmptyResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeEmptyResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeEmptyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeEmptyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeEmptyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeEvaluateRandomResultTableResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeEvaluateRandomResultTableResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerEvaluateRandomResultTableResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeEvaluateRandomResultTableResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeEvaluateRandomResultTableResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeEvaluateRandomResultTableResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeEvaluateRandomResultTableResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeEvaluateRandomResultTableResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeEvaluateRandomResultTableResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeEvaluateRandomResultTableResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeEvaluateRandomResultTableResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeExecuteCloudScriptResultResponse
// 0x0068 (0x0068 - 0x0000)
struct PlayFabServerModelDecoder_DecodeExecuteCloudScriptResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerExecuteCloudScriptResult        ReturnValue;                                       // 0x0008(0x0060)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeExecuteCloudScriptResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeExecuteCloudScriptResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeExecuteCloudScriptResultResponse) == 0x000068, "Wrong size on PlayFabServerModelDecoder_DecodeExecuteCloudScriptResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeExecuteCloudScriptResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeExecuteCloudScriptResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeExecuteCloudScriptResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeExecuteCloudScriptResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetAllSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetAllSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetAllSegmentsResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetAllSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetAllSegmentsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetAllSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetAllSegmentsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetAllSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetAllSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetAllSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetAllSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCatalogItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetCatalogItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCatalogItemsResult           ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetCatalogItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetCatalogItemsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetCatalogItemsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetCatalogItemsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCatalogItemsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetCatalogItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCatalogItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetCatalogItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterDataResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetCharacterDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCharacterDataResult          ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetCharacterDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetCharacterDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetCharacterDataResultResponse) == 0x000040, "Wrong size on PlayFabServerModelDecoder_DecodeGetCharacterDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCharacterDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetCharacterDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCharacterDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetCharacterDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterInventoryResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetCharacterInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCharacterInventoryResult     ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetCharacterInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetCharacterInventoryResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetCharacterInventoryResultResponse) == 0x000050, "Wrong size on PlayFabServerModelDecoder_DecodeGetCharacterInventoryResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCharacterInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetCharacterInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCharacterInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetCharacterInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterLeaderboardResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetCharacterLeaderboardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCharacterLeaderboardResult   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetCharacterLeaderboardResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetCharacterLeaderboardResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetCharacterLeaderboardResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetCharacterLeaderboardResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCharacterLeaderboardResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetCharacterLeaderboardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCharacterLeaderboardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetCharacterLeaderboardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterStatisticsResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetCharacterStatisticsResult    ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetCharacterStatisticsResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_DecodeGetCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetContentDownloadUrlResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetContentDownloadUrlResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetContentDownloadUrlResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetContentDownloadUrlResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetContentDownloadUrlResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetContentDownloadUrlResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetContentDownloadUrlResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetContentDownloadUrlResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetContentDownloadUrlResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetContentDownloadUrlResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetContentDownloadUrlResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetFriendsListResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetFriendsListResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetFriendsListResult            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetFriendsListResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetFriendsListResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetFriendsListResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetFriendsListResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetFriendsListResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetFriendsListResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetFriendsListResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetFriendsListResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardAroundCharacterResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetLeaderboardAroundCharacterResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetLeaderboardAroundCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardAroundUserResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetLeaderboardAroundUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetLeaderboardAroundUserResult  ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetLeaderboardAroundUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetLeaderboardAroundUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetLeaderboardAroundUserResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_DecodeGetLeaderboardAroundUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetLeaderboardAroundUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetLeaderboardAroundUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetLeaderboardAroundUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetLeaderboardAroundUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardForUsersCharactersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetLeaderboardForUsersCharactersResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetLeaderboardForUsersCharactersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetLeaderboardResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetLeaderboardResult            ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetLeaderboardResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetLeaderboardResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetLeaderboardResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_DecodeGetLeaderboardResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetLeaderboardResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetLeaderboardResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetLeaderboardResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetLeaderboardResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerCombinedInfoResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayerCombinedInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerCombinedInfoResult     ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayerCombinedInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayerCombinedInfoResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayerCombinedInfoResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayerCombinedInfoResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerCombinedInfoResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerCombinedInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerCombinedInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerCombinedInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerProfileResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayerProfileResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerProfileResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayerProfileResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayerProfileResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayerProfileResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayerProfileResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerProfileResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerProfileResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerProfileResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerProfileResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerSegmentsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayerSegmentsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerSegmentsResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayerSegmentsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayerSegmentsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayerSegmentsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayerSegmentsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerSegmentsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerSegmentsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerSegmentsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerSegmentsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayersInSegmentResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayersInSegmentResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayersInSegmentResult       ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayersInSegmentResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayersInSegmentResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayersInSegmentResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayersInSegmentResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayersInSegmentResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayersInSegmentResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayersInSegmentResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayersInSegmentResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerStatisticsResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayerStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerStatisticsResult       ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayerStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayerStatisticsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayerStatisticsResultResponse) == 0x000030, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayerStatisticsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerStatisticVersionsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerStatisticVersionsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerTagsResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayerTagsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayerTagsResult             ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayerTagsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayerTagsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayerTagsResultResponse) == 0x000030, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayerTagsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerTagsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerTagsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayerTagsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayerTagsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromFacebookIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromFacebookIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromGenericIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromGenericIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromGenericIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromPSNAccountIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromPSNAccountIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromSteamIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromSteamIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromSteamIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromTwitchIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromTwitchIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromTwitchIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromXboxLiveIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPlayFabIDsFromXboxLiveIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetPublisherDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetPublisherDataResult          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetPublisherDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetPublisherDataResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_DecodeGetPublisherDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetRandomResultTablesResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetRandomResultTablesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetRandomResultTablesResult     ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetRandomResultTablesResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetRandomResultTablesResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetRandomResultTablesResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_DecodeGetRandomResultTablesResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetRandomResultTablesResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetRandomResultTablesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetRandomResultTablesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetRandomResultTablesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetServerCustomIDsFromPlayFabIDsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetServerCustomIDsFromPlayFabIDsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetServerCustomIDsFromPlayFabIDsResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetServerCustomIDsFromPlayFabIDsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetServerCustomIDsFromPlayFabIDsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetServerCustomIDsFromPlayFabIDsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetServerCustomIDsFromPlayFabIDsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetServerCustomIDsFromPlayFabIDsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetServerCustomIDsFromPlayFabIDsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetServerCustomIDsFromPlayFabIDsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetServerCustomIDsFromPlayFabIDsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetSharedGroupDataResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetSharedGroupDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetSharedGroupDataResult        ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetSharedGroupDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetSharedGroupDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetSharedGroupDataResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_DecodeGetSharedGroupDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetSharedGroupDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetSharedGroupDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetSharedGroupDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetSharedGroupDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetStoreItemsResultResponse
// 0x0050 (0x0050 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetStoreItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetStoreItemsResult             ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetStoreItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetStoreItemsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetStoreItemsResultResponse) == 0x000050, "Wrong size on PlayFabServerModelDecoder_DecodeGetStoreItemsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetStoreItemsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetStoreItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetStoreItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetStoreItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetTimeResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetTimeResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetTimeResult                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetTimeResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetTimeResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetTimeResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetTimeResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetTimeResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetTimeResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetTimeResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetTimeResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetTitleDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetTitleDataResult              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetTitleDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetTitleDataResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_DecodeGetTitleDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetTitleNewsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetTitleNewsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetTitleNewsResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetTitleNewsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetTitleNewsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetTitleNewsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetTitleNewsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetTitleNewsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetTitleNewsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetTitleNewsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetTitleNewsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserAccountInfoResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetUserAccountInfoResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetUserAccountInfoResult        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetUserAccountInfoResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetUserAccountInfoResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetUserAccountInfoResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_DecodeGetUserAccountInfoResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetUserAccountInfoResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetUserAccountInfoResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetUserAccountInfoResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetUserAccountInfoResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetUserBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetUserBansResult               ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetUserBansResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetUserBansResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetUserBansResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGetUserBansResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetUserBansResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetUserBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetUserBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetUserBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserDataResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetUserDataResult               ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetUserDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetUserDataResultResponse) == 0x000030, "Wrong size on PlayFabServerModelDecoder_DecodeGetUserDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserInventoryResultResponse
// 0x0040 (0x0040 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGetUserInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGetUserInventoryResult          ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGetUserInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGetUserInventoryResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGetUserInventoryResultResponse) == 0x000040, "Wrong size on PlayFabServerModelDecoder_DecodeGetUserInventoryResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetUserInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGetUserInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGetUserInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGetUserInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGrantCharacterToUserResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGrantCharacterToUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGrantCharacterToUserResult      ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGrantCharacterToUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGrantCharacterToUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGrantCharacterToUserResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGrantCharacterToUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGrantCharacterToUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGrantCharacterToUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGrantCharacterToUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGrantCharacterToUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToCharacterResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGrantItemsToCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGrantItemsToCharacterResult     ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGrantItemsToCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGrantItemsToCharacterResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGrantItemsToCharacterResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGrantItemsToCharacterResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGrantItemsToCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGrantItemsToCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGrantItemsToCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGrantItemsToCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToUserResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGrantItemsToUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGrantItemsToUserResult          ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGrantItemsToUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGrantItemsToUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGrantItemsToUserResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGrantItemsToUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGrantItemsToUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGrantItemsToUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGrantItemsToUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGrantItemsToUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToUsersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeGrantItemsToUsersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerGrantItemsToUsersResult         ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeGrantItemsToUsersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeGrantItemsToUsersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeGrantItemsToUsersResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeGrantItemsToUsersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGrantItemsToUsersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeGrantItemsToUsersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeGrantItemsToUsersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeGrantItemsToUsersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeLinkPSNAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeLinkPSNAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLinkPSNAccountResult            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeLinkPSNAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeLinkPSNAccountResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeLinkPSNAccountResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeLinkPSNAccountResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeLinkPSNAccountResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeLinkPSNAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeLinkPSNAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeLinkPSNAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeLinkServerCustomIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeLinkServerCustomIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLinkServerCustomIdResult        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeLinkServerCustomIdResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeLinkServerCustomIdResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeLinkServerCustomIdResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeLinkServerCustomIdResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeLinkServerCustomIdResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeLinkServerCustomIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeLinkServerCustomIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeLinkServerCustomIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeLinkXboxAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeLinkXboxAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLinkXboxAccountResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeLinkXboxAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeLinkXboxAccountResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeLinkXboxAccountResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeLinkXboxAccountResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeLinkXboxAccountResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeLinkXboxAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeLinkXboxAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeLinkXboxAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeListUsersCharactersResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeListUsersCharactersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerListUsersCharactersResult       ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeListUsersCharactersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeListUsersCharactersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeListUsersCharactersResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeListUsersCharactersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeListUsersCharactersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeListUsersCharactersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeListUsersCharactersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeListUsersCharactersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeModifyCharacterVirtualCurrencyResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_DecodeModifyCharacterVirtualCurrencyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerModifyCharacterVirtualCurrencyResult ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeModifyCharacterVirtualCurrencyResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeModifyCharacterVirtualCurrencyResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeModifyCharacterVirtualCurrencyResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_DecodeModifyCharacterVirtualCurrencyResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeModifyCharacterVirtualCurrencyResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeModifyCharacterVirtualCurrencyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeModifyCharacterVirtualCurrencyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeModifyCharacterVirtualCurrencyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeModifyItemUsesResultResponse
// 0x0028 (0x0028 - 0x0000)
struct PlayFabServerModelDecoder_DecodeModifyItemUsesResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerModifyItemUsesResult            ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeModifyItemUsesResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeModifyItemUsesResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeModifyItemUsesResultResponse) == 0x000028, "Wrong size on PlayFabServerModelDecoder_DecodeModifyItemUsesResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeModifyItemUsesResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeModifyItemUsesResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeModifyItemUsesResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeModifyItemUsesResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
// 0x0038 (0x0038 - 0x0000)
struct PlayFabServerModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerModifyUserVirtualCurrencyResult ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse) == 0x000038, "Wrong size on PlayFabServerModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeModifyUserVirtualCurrencyResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeMoveItemToCharacterFromCharacterResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerMoveItemToCharacterFromCharacterResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromCharacterResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromCharacterResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromCharacterResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeMoveItemToCharacterFromUserResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerMoveItemToCharacterFromUserResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromUserResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeMoveItemToCharacterFromUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeMoveItemToUserFromCharacterResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeMoveItemToUserFromCharacterResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerMoveItemToUserFromCharacterResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeMoveItemToUserFromCharacterResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeMoveItemToUserFromCharacterResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeMoveItemToUserFromCharacterResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeMoveItemToUserFromCharacterResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeMoveItemToUserFromCharacterResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeMoveItemToUserFromCharacterResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeMoveItemToUserFromCharacterResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeMoveItemToUserFromCharacterResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeNotifyMatchmakerPlayerLeftResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_DecodeNotifyMatchmakerPlayerLeftResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerNotifyMatchmakerPlayerLeftResult ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeNotifyMatchmakerPlayerLeftResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeNotifyMatchmakerPlayerLeftResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeNotifyMatchmakerPlayerLeftResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_DecodeNotifyMatchmakerPlayerLeftResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeNotifyMatchmakerPlayerLeftResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeNotifyMatchmakerPlayerLeftResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeNotifyMatchmakerPlayerLeftResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeNotifyMatchmakerPlayerLeftResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRedeemCouponResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRedeemCouponResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRedeemCouponResult              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRedeemCouponResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRedeemCouponResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRedeemCouponResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeRedeemCouponResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRedeemCouponResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRedeemCouponResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRedeemCouponResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRedeemCouponResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRedeemMatchmakerTicketResultResponse
// 0x0030 (0x0030 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRedeemMatchmakerTicketResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRedeemMatchmakerTicketResult    ReturnValue;                                       // 0x0008(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRedeemMatchmakerTicketResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRedeemMatchmakerTicketResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRedeemMatchmakerTicketResultResponse) == 0x000030, "Wrong size on PlayFabServerModelDecoder_DecodeRedeemMatchmakerTicketResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRedeemMatchmakerTicketResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRedeemMatchmakerTicketResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRedeemMatchmakerTicketResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRedeemMatchmakerTicketResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRefreshGameServerInstanceHeartbeatResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRefreshGameServerInstanceHeartbeatResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRefreshGameServerInstanceHeartbeatResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRefreshGameServerInstanceHeartbeatResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRefreshGameServerInstanceHeartbeatResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRefreshGameServerInstanceHeartbeatResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeRefreshGameServerInstanceHeartbeatResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRefreshGameServerInstanceHeartbeatResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRefreshGameServerInstanceHeartbeatResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRefreshGameServerInstanceHeartbeatResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRefreshGameServerInstanceHeartbeatResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRegisterGameResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRegisterGameResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRegisterGameResponse            ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRegisterGameResponseResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRegisterGameResponseResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRegisterGameResponseResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeRegisterGameResponseResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRegisterGameResponseResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRegisterGameResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRegisterGameResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRegisterGameResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRemovePlayerTagResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRemovePlayerTagResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRemovePlayerTagResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRemovePlayerTagResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRemovePlayerTagResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRemovePlayerTagResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeRemovePlayerTagResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRemovePlayerTagResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRemovePlayerTagResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRemovePlayerTagResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRemovePlayerTagResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRemoveSharedGroupMembersResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRemoveSharedGroupMembersResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRemoveSharedGroupMembersResult  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRemoveSharedGroupMembersResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRemoveSharedGroupMembersResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRemoveSharedGroupMembersResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeRemoveSharedGroupMembersResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRemoveSharedGroupMembersResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRemoveSharedGroupMembersResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRemoveSharedGroupMembersResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRemoveSharedGroupMembersResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeReportPlayerServerResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_DecodeReportPlayerServerResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerReportPlayerServerResult        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeReportPlayerServerResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeReportPlayerServerResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeReportPlayerServerResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_DecodeReportPlayerServerResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeReportPlayerServerResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeReportPlayerServerResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeReportPlayerServerResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeReportPlayerServerResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeAllBansForUserResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRevokeAllBansForUserResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRevokeAllBansForUserResult      ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRevokeAllBansForUserResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRevokeAllBansForUserResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRevokeAllBansForUserResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeRevokeAllBansForUserResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRevokeAllBansForUserResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRevokeAllBansForUserResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRevokeAllBansForUserResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRevokeAllBansForUserResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRevokeBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRevokeBansResult                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRevokeBansResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRevokeBansResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRevokeBansResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeRevokeBansResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRevokeBansResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRevokeBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRevokeBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRevokeBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeInventoryItemsResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRevokeInventoryItemsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRevokeInventoryItemsResult      ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRevokeInventoryItemsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRevokeInventoryItemsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRevokeInventoryItemsResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeRevokeInventoryItemsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRevokeInventoryItemsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRevokeInventoryItemsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRevokeInventoryItemsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRevokeInventoryItemsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeInventoryResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeRevokeInventoryResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerRevokeInventoryResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeRevokeInventoryResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeRevokeInventoryResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeRevokeInventoryResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeRevokeInventoryResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRevokeInventoryResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeRevokeInventoryResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeRevokeInventoryResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeRevokeInventoryResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSavePushNotificationTemplateResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSavePushNotificationTemplateResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSavePushNotificationTemplateResult ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSavePushNotificationTemplateResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSavePushNotificationTemplateResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSavePushNotificationTemplateResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeSavePushNotificationTemplateResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSavePushNotificationTemplateResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSavePushNotificationTemplateResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSavePushNotificationTemplateResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSavePushNotificationTemplateResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSendCustomAccountRecoveryEmailResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSendCustomAccountRecoveryEmailResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSendCustomAccountRecoveryEmailResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSendCustomAccountRecoveryEmailResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSendCustomAccountRecoveryEmailResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSendCustomAccountRecoveryEmailResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeSendCustomAccountRecoveryEmailResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSendCustomAccountRecoveryEmailResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSendCustomAccountRecoveryEmailResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSendCustomAccountRecoveryEmailResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSendCustomAccountRecoveryEmailResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSendEmailFromTemplateResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSendEmailFromTemplateResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSendEmailFromTemplateResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSendEmailFromTemplateResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSendEmailFromTemplateResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSendEmailFromTemplateResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeSendEmailFromTemplateResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSendEmailFromTemplateResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSendEmailFromTemplateResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSendEmailFromTemplateResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSendEmailFromTemplateResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSendPushNotificationResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSendPushNotificationResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSendPushNotificationResult      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSendPushNotificationResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSendPushNotificationResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSendPushNotificationResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeSendPushNotificationResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSendPushNotificationResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSendPushNotificationResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSendPushNotificationResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSendPushNotificationResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeServerLoginResultResponse
// 0x0070 (0x0070 - 0x0000)
struct PlayFabServerModelDecoder_DecodeServerLoginResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerServerLoginResult               ReturnValue;                                       // 0x0008(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeServerLoginResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeServerLoginResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeServerLoginResultResponse) == 0x000070, "Wrong size on PlayFabServerModelDecoder_DecodeServerLoginResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeServerLoginResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeServerLoginResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeServerLoginResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeServerLoginResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSetGameServerInstanceDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSetGameServerInstanceDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSetGameServerInstanceDataResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSetGameServerInstanceDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceDataResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeSetGameServerInstanceDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSetGameServerInstanceDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSetGameServerInstanceDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSetGameServerInstanceStateResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSetGameServerInstanceStateResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSetGameServerInstanceStateResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceStateResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSetGameServerInstanceStateResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceStateResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeSetGameServerInstanceStateResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceStateResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSetGameServerInstanceStateResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceStateResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSetGameServerInstanceStateResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSetGameServerInstanceTagsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSetGameServerInstanceTagsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSetGameServerInstanceTagsResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceTagsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSetGameServerInstanceTagsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceTagsResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeSetGameServerInstanceTagsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceTagsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSetGameServerInstanceTagsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetGameServerInstanceTagsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSetGameServerInstanceTagsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSetPlayerSecretResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSetPlayerSecretResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSetPlayerSecretResult           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSetPlayerSecretResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSetPlayerSecretResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSetPlayerSecretResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeSetPlayerSecretResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetPlayerSecretResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSetPlayerSecretResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetPlayerSecretResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSetPlayerSecretResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSetPublisherDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSetPublisherDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSetPublisherDataResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSetPublisherDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSetPublisherDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSetPublisherDataResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeSetPublisherDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetPublisherDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSetPublisherDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetPublisherDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSetPublisherDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeSetTitleDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeSetTitleDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerSetTitleDataResult              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeSetTitleDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeSetTitleDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeSetTitleDataResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeSetTitleDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetTitleDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeSetTitleDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeSetTitleDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeSetTitleDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkPSNAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUnlinkPSNAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlinkPSNAccountResult          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUnlinkPSNAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUnlinkPSNAccountResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUnlinkPSNAccountResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeUnlinkPSNAccountResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUnlinkPSNAccountResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUnlinkPSNAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUnlinkPSNAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUnlinkPSNAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkServerCustomIdResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUnlinkServerCustomIdResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlinkServerCustomIdResult      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUnlinkServerCustomIdResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUnlinkServerCustomIdResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUnlinkServerCustomIdResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeUnlinkServerCustomIdResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUnlinkServerCustomIdResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUnlinkServerCustomIdResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUnlinkServerCustomIdResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUnlinkServerCustomIdResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkXboxAccountResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUnlinkXboxAccountResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlinkXboxAccountResult         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUnlinkXboxAccountResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUnlinkXboxAccountResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUnlinkXboxAccountResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeUnlinkXboxAccountResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUnlinkXboxAccountResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUnlinkXboxAccountResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUnlinkXboxAccountResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUnlinkXboxAccountResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUnlockContainerItemResultResponse
// 0x0048 (0x0048 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUnlockContainerItemResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUnlockContainerItemResult       ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUnlockContainerItemResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUnlockContainerItemResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUnlockContainerItemResultResponse) == 0x000048, "Wrong size on PlayFabServerModelDecoder_DecodeUnlockContainerItemResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUnlockContainerItemResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUnlockContainerItemResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUnlockContainerItemResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUnlockContainerItemResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateBansResultResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUpdateBansResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateBansResult                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUpdateBansResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUpdateBansResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUpdateBansResultResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeUpdateBansResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateBansResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUpdateBansResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateBansResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUpdateBansResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateCharacterDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUpdateCharacterDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateCharacterDataResult       ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUpdateCharacterDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUpdateCharacterDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUpdateCharacterDataResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_DecodeUpdateCharacterDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateCharacterDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUpdateCharacterDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateCharacterDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUpdateCharacterDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateCharacterStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUpdateCharacterStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateCharacterStatisticsResult ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUpdateCharacterStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUpdateCharacterStatisticsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUpdateCharacterStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeUpdateCharacterStatisticsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateCharacterStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUpdateCharacterStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateCharacterStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUpdateCharacterStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdatePlayerStatisticsResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUpdatePlayerStatisticsResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdatePlayerStatisticsResult    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUpdatePlayerStatisticsResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUpdatePlayerStatisticsResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUpdatePlayerStatisticsResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeUpdatePlayerStatisticsResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdatePlayerStatisticsResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUpdatePlayerStatisticsResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdatePlayerStatisticsResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUpdatePlayerStatisticsResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateSharedGroupDataResultResponse
// 0x0010 (0x0010 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUpdateSharedGroupDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateSharedGroupDataResult     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUpdateSharedGroupDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUpdateSharedGroupDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUpdateSharedGroupDataResultResponse) == 0x000010, "Wrong size on PlayFabServerModelDecoder_DecodeUpdateSharedGroupDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateSharedGroupDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUpdateSharedGroupDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateSharedGroupDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUpdateSharedGroupDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateUserDataResultResponse
// 0x0018 (0x0018 - 0x0000)
struct PlayFabServerModelDecoder_DecodeUpdateUserDataResultResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerUpdateUserDataResult            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeUpdateUserDataResultResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeUpdateUserDataResultResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeUpdateUserDataResultResponse) == 0x000018, "Wrong size on PlayFabServerModelDecoder_DecodeUpdateUserDataResultResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateUserDataResultResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeUpdateUserDataResultResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeUpdateUserDataResultResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeUpdateUserDataResultResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabServerModelDecoder.decodeWriteEventResponseResponse
// 0x0020 (0x0020 - 0x0000)
struct PlayFabServerModelDecoder_DecodeWriteEventResponseResponse final
{
public:
	class UPlayFabJsonObject*                     Response;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerWriteEventResponse              ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabServerModelDecoder_DecodeWriteEventResponseResponse) == 0x000008, "Wrong alignment on PlayFabServerModelDecoder_DecodeWriteEventResponseResponse");
static_assert(sizeof(PlayFabServerModelDecoder_DecodeWriteEventResponseResponse) == 0x000020, "Wrong size on PlayFabServerModelDecoder_DecodeWriteEventResponseResponse");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeWriteEventResponseResponse, Response) == 0x000000, "Member 'PlayFabServerModelDecoder_DecodeWriteEventResponseResponse::Response' has a wrong offset!");
static_assert(offsetof(PlayFabServerModelDecoder_DecodeWriteEventResponseResponse, ReturnValue) == 0x000008, "Member 'PlayFabServerModelDecoder_DecodeWriteEventResponseResponse::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabUtilities.getErrorText
// 0x0018 (0x0018 - 0x0000)
struct PlayFabUtilities_GetErrorText final
{
public:
	int32                                         Code;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabUtilities_GetErrorText) == 0x000008, "Wrong alignment on PlayFabUtilities_GetErrorText");
static_assert(sizeof(PlayFabUtilities_GetErrorText) == 0x000018, "Wrong size on PlayFabUtilities_GetErrorText");
static_assert(offsetof(PlayFabUtilities_GetErrorText, Code) == 0x000000, "Member 'PlayFabUtilities_GetErrorText::Code' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_GetErrorText, ReturnValue) == 0x000008, "Member 'PlayFabUtilities_GetErrorText::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabUtilities.getPhotonAppId
// 0x0018 (0x0018 - 0x0000)
struct PlayFabUtilities_GetPhotonAppId final
{
public:
	bool                                          Realtime;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Chat;                                              // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Turnbased;                                         // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BD8[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabUtilities_GetPhotonAppId) == 0x000008, "Wrong alignment on PlayFabUtilities_GetPhotonAppId");
static_assert(sizeof(PlayFabUtilities_GetPhotonAppId) == 0x000018, "Wrong size on PlayFabUtilities_GetPhotonAppId");
static_assert(offsetof(PlayFabUtilities_GetPhotonAppId, Realtime) == 0x000000, "Member 'PlayFabUtilities_GetPhotonAppId::Realtime' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_GetPhotonAppId, Chat) == 0x000001, "Member 'PlayFabUtilities_GetPhotonAppId::Chat' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_GetPhotonAppId, Turnbased) == 0x000002, "Member 'PlayFabUtilities_GetPhotonAppId::Turnbased' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_GetPhotonAppId, ReturnValue) == 0x000008, "Member 'PlayFabUtilities_GetPhotonAppId::ReturnValue' has a wrong offset!");

// Function PlayFab.PlayFabUtilities.setPlayFabSettings
// 0x0060 (0x0060 - 0x0000)
struct PlayFabUtilities_SetPlayFabSettings final
{
public:
	class FString                                 GameTitleId;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlayFabSecretApiKey;                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProductionUrl;                                     // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhotonRealtimeAppId;                               // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhotonTurnbasedAppId;                              // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PhotonChatAppId;                                   // 0x0050(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PlayFabUtilities_SetPlayFabSettings) == 0x000008, "Wrong alignment on PlayFabUtilities_SetPlayFabSettings");
static_assert(sizeof(PlayFabUtilities_SetPlayFabSettings) == 0x000060, "Wrong size on PlayFabUtilities_SetPlayFabSettings");
static_assert(offsetof(PlayFabUtilities_SetPlayFabSettings, GameTitleId) == 0x000000, "Member 'PlayFabUtilities_SetPlayFabSettings::GameTitleId' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_SetPlayFabSettings, PlayFabSecretApiKey) == 0x000010, "Member 'PlayFabUtilities_SetPlayFabSettings::PlayFabSecretApiKey' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_SetPlayFabSettings, ProductionUrl) == 0x000020, "Member 'PlayFabUtilities_SetPlayFabSettings::ProductionUrl' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_SetPlayFabSettings, PhotonRealtimeAppId) == 0x000030, "Member 'PlayFabUtilities_SetPlayFabSettings::PhotonRealtimeAppId' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_SetPlayFabSettings, PhotonTurnbasedAppId) == 0x000040, "Member 'PlayFabUtilities_SetPlayFabSettings::PhotonTurnbasedAppId' has a wrong offset!");
static_assert(offsetof(PlayFabUtilities_SetPlayFabSettings, PhotonChatAppId) == 0x000050, "Member 'PlayFabUtilities_SetPlayFabSettings::PhotonChatAppId' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_VoteItem.UMG_VoteItem_C
// 0x00D0 (0x0330 - 0x0260)
class UUMG_VoteItem_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Badge;                                             // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BottomBorder;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BottomText;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Main;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Main;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Reflection;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Secondary;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                InfoBG;                                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_VoteInfoButton_C*                  InfoButton;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopBorder;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TopText;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             UnitTypeSlot;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VoteCount;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   ChoiceId;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   PlayerName;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             VoteItemSelected;                                  // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          DisplayVoteCount;                                  // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          ReadOnly;                                          // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_41D9[0x6];                                     // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             InfoSelected;                                      // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USoundCue*                              ClickSound;                                        // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              HoverSound;                                        // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41DA[0x3];                                     // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         VoteCountNumber;                                   // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowInfoButton;                                    // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void VoteItemSelected__DelegateSignature(class FName Choice);
	void InfoSelected__DelegateSignature(class FName Param_ChoiceId);
	void ExecuteUbergraph_UMG_VoteItem(int32 EntryPoint);
	void BndEvt__UMG_VoteItem_InfoButton_K2Node_ComponentBoundEvent_6_InfoClicked__DelegateSignature();
	void BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void Construct();
	void FillFromTexture(TSoftObjectPtr<class UTexture2D> Texture, const class FText& TopName, const class FText& BottomName);
	void UpdateStatus(int32 Vote_Count, bool Has_Voted_For);
	void MarkSelected(bool Selected);
	void OnVoteUpdated(class USQVoteSessionClient* VoteSession, int32 PlayerCurrentVotes);
	void UpdateFlagMaterial(TSoftObjectPtr<class UTexture2D> FlagTexture, TSoftObjectPtr<class UTexture2D> TeamTexture, TSoftObjectPtr<class UTexture2D> BadgeTexture, const class FText& TopName, const class FText& BottomName, TSoftObjectPtr<class UTexture2D> RoleIcon, const class FText& RoleName);
	void GetVisualData(bool* VoteVisible, bool* Selected, class FText* VoteCountText);
	void SelectOption();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_VoteItem_C">();
	}
	static class UUMG_VoteItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_VoteItem_C>();
	}
};
static_assert(alignof(UUMG_VoteItem_C) == 0x000008, "Wrong alignment on UUMG_VoteItem_C");
static_assert(sizeof(UUMG_VoteItem_C) == 0x000330, "Wrong size on UUMG_VoteItem_C");
static_assert(offsetof(UUMG_VoteItem_C, UberGraphFrame) == 0x000260, "Member 'UUMG_VoteItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, Hover) == 0x000268, "Member 'UUMG_VoteItem_C::Hover' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, Badge) == 0x000270, "Member 'UUMG_VoteItem_C::Badge' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, BottomBorder) == 0x000278, "Member 'UUMG_VoteItem_C::BottomBorder' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, BottomText) == 0x000280, "Member 'UUMG_VoteItem_C::BottomText' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, Button_Main) == 0x000288, "Member 'UUMG_VoteItem_C::Button_Main' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, Image_Main) == 0x000290, "Member 'UUMG_VoteItem_C::Image_Main' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, Image_Reflection) == 0x000298, "Member 'UUMG_VoteItem_C::Image_Reflection' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, Image_Secondary) == 0x0002A0, "Member 'UUMG_VoteItem_C::Image_Secondary' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, InfoBG) == 0x0002A8, "Member 'UUMG_VoteItem_C::InfoBG' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, InfoButton) == 0x0002B0, "Member 'UUMG_VoteItem_C::InfoButton' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, TopBorder) == 0x0002B8, "Member 'UUMG_VoteItem_C::TopBorder' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, TopText) == 0x0002C0, "Member 'UUMG_VoteItem_C::TopText' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, UnitTypeSlot) == 0x0002C8, "Member 'UUMG_VoteItem_C::UnitTypeSlot' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, VoteCount) == 0x0002D0, "Member 'UUMG_VoteItem_C::VoteCount' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, ChoiceId) == 0x0002D8, "Member 'UUMG_VoteItem_C::ChoiceId' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, PlayerName) == 0x0002E0, "Member 'UUMG_VoteItem_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, VoteItemSelected) == 0x0002E8, "Member 'UUMG_VoteItem_C::VoteItemSelected' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, DisplayVoteCount) == 0x0002F8, "Member 'UUMG_VoteItem_C::DisplayVoteCount' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, ReadOnly) == 0x0002F9, "Member 'UUMG_VoteItem_C::ReadOnly' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, InfoSelected) == 0x000300, "Member 'UUMG_VoteItem_C::InfoSelected' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, ClickSound) == 0x000310, "Member 'UUMG_VoteItem_C::ClickSound' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, HoverSound) == 0x000318, "Member 'UUMG_VoteItem_C::HoverSound' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, IsSelected) == 0x000320, "Member 'UUMG_VoteItem_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, VoteCountNumber) == 0x000324, "Member 'UUMG_VoteItem_C::VoteCountNumber' has a wrong offset!");
static_assert(offsetof(UUMG_VoteItem_C, ShowInfoButton) == 0x000328, "Member 'UUMG_VoteItem_C::ShowInfoButton' has a wrong offset!");

}


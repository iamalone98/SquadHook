#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SubRoleItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSQRoleEntry_structs.hpp"
#include "UMG_structs.hpp"
#include "SQUnavailabilityReason_structs.hpp"


namespace SDK::Params
{

// Function W_SubRoleItem.W_SubRoleItem_C.ExecuteUbergraph_W_SubRoleItem
// 0x0098 (0x0098 - 0x0000)
struct W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQAvailabilityState_Role              K2Node_CustomEvent_In_Role_State;                  // 0x0008(0x0058)(ContainsInstancedReference)
	class USQRoleSettings*                        K2Node_CustomEvent_In_Current_Role;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRole_Out_success;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479F[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetRole_Out_Role_Setting;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRole_Out_success_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A0[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetRole_Out_Role_Setting_1;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRole_Out_success_2;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A1[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetRole_Out_Role_Setting_2;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem) == 0x000008, "Wrong alignment on W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem");
static_assert(sizeof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem) == 0x000098, "Wrong size on W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem");
static_assert(offsetof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem, EntryPoint) == 0x000000, "Member 'W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem, K2Node_CustomEvent_In_Role_State) == 0x000008, "Member 'W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem::K2Node_CustomEvent_In_Role_State' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem, K2Node_CustomEvent_In_Current_Role) == 0x000060, "Member 'W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem::K2Node_CustomEvent_In_Current_Role' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem, CallFunc_GetRole_Out_success) == 0x000068, "Member 'W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem::CallFunc_GetRole_Out_success' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem, CallFunc_GetRole_Out_Role_Setting) == 0x000070, "Member 'W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem::CallFunc_GetRole_Out_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem, CallFunc_GetRole_Out_success_1) == 0x000078, "Member 'W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem::CallFunc_GetRole_Out_success_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem, CallFunc_GetRole_Out_Role_Setting_1) == 0x000080, "Member 'W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem::CallFunc_GetRole_Out_Role_Setting_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem, CallFunc_GetRole_Out_success_2) == 0x000088, "Member 'W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem::CallFunc_GetRole_Out_success_2' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem, CallFunc_GetRole_Out_Role_Setting_2) == 0x000090, "Member 'W_SubRoleItem_C_ExecuteUbergraph_W_SubRoleItem::CallFunc_GetRole_Out_Role_Setting_2' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.OnRoleChange
// 0x0008 (0x0008 - 0x0000)
struct W_SubRoleItem_C_OnRoleChange final
{
public:
	class USQRoleSettings*                        In_Current_Role;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SubRoleItem_C_OnRoleChange) == 0x000008, "Wrong alignment on W_SubRoleItem_C_OnRoleChange");
static_assert(sizeof(W_SubRoleItem_C_OnRoleChange) == 0x000008, "Wrong size on W_SubRoleItem_C_OnRoleChange");
static_assert(offsetof(W_SubRoleItem_C_OnRoleChange, In_Current_Role) == 0x000000, "Member 'W_SubRoleItem_C_OnRoleChange::In_Current_Role' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.On Refresh UI
// 0x0058 (0x0058 - 0x0000)
struct W_SubRoleItem_C_On_Refresh_UI final
{
public:
	struct FSQAvailabilityState_Role              In_Role_State;                                     // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(W_SubRoleItem_C_On_Refresh_UI) == 0x000008, "Wrong alignment on W_SubRoleItem_C_On_Refresh_UI");
static_assert(sizeof(W_SubRoleItem_C_On_Refresh_UI) == 0x000058, "Wrong size on W_SubRoleItem_C_On_Refresh_UI");
static_assert(offsetof(W_SubRoleItem_C_On_Refresh_UI, In_Role_State) == 0x000000, "Member 'W_SubRoleItem_C_On_Refresh_UI::In_Role_State' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.SetupExposition
// 0x0170 (0x0170 - 0x0000)
struct W_SubRoleItem_C_SetupExposition final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_OutEntry;                    // 0x0020(0x00C0)(HasGetValueTypeHash)
	class FText                                   CallFunc_Get_Weapon_Name_Name;                     // 0x00E0(0x0018)()
	struct FSQInventoryData                       CallFunc_Get_Weapon_Name_Inventory;                // 0x00F8(0x0038)()
	int32                                         CallFunc_Get_Weapon_Magazine_Count_Item_Count;     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47A3[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0138(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A4[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0158(0x0018)()
};
static_assert(alignof(W_SubRoleItem_C_SetupExposition) == 0x000008, "Wrong alignment on W_SubRoleItem_C_SetupExposition");
static_assert(sizeof(W_SubRoleItem_C_SetupExposition) == 0x000170, "Wrong size on W_SubRoleItem_C_SetupExposition");
static_assert(offsetof(W_SubRoleItem_C_SetupExposition, Temp_bool_Variable) == 0x000000, "Member 'W_SubRoleItem_C_SetupExposition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_SetupExposition, Temp_text_Variable) == 0x000008, "Member 'W_SubRoleItem_C_SetupExposition::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_SetupExposition, CallFunc_GetRoleEntry_OutEntry) == 0x000020, "Member 'W_SubRoleItem_C_SetupExposition::CallFunc_GetRoleEntry_OutEntry' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_SetupExposition, CallFunc_Get_Weapon_Name_Name) == 0x0000E0, "Member 'W_SubRoleItem_C_SetupExposition::CallFunc_Get_Weapon_Name_Name' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_SetupExposition, CallFunc_Get_Weapon_Name_Inventory) == 0x0000F8, "Member 'W_SubRoleItem_C_SetupExposition::CallFunc_Get_Weapon_Name_Inventory' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_SetupExposition, CallFunc_Get_Weapon_Magazine_Count_Item_Count) == 0x000130, "Member 'W_SubRoleItem_C_SetupExposition::CallFunc_Get_Weapon_Magazine_Count_Item_Count' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_SetupExposition, CallFunc_Conv_IntToText_ReturnValue) == 0x000138, "Member 'W_SubRoleItem_C_SetupExposition::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_SetupExposition, CallFunc_Greater_IntInt_ReturnValue) == 0x000150, "Member 'W_SubRoleItem_C_SetupExposition::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_SetupExposition, K2Node_Select_Default) == 0x000158, "Member 'W_SubRoleItem_C_SetupExposition::K2Node_Select_Default' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.UpdateExposition
// 0x0058 (0x0058 - 0x0000)
struct W_SubRoleItem_C_UpdateExposition final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRole_Out_success;                      // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USQRoleSettings*                        CallFunc_GetRole_Out_Role_Setting;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAvailable_Out_Available;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRoleSelected_Out_Selected;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47A6[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_State_Color_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SubRoleItem_C_UpdateExposition) == 0x000008, "Wrong alignment on W_SubRoleItem_C_UpdateExposition");
static_assert(sizeof(W_SubRoleItem_C_UpdateExposition) == 0x000058, "Wrong size on W_SubRoleItem_C_UpdateExposition");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, Temp_bool_Variable) == 0x000000, "Member 'W_SubRoleItem_C_UpdateExposition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, Temp_struct_Variable) == 0x000004, "Member 'W_SubRoleItem_C_UpdateExposition::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, Temp_struct_Variable_1) == 0x000014, "Member 'W_SubRoleItem_C_UpdateExposition::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, Temp_bool_Variable_1) == 0x000024, "Member 'W_SubRoleItem_C_UpdateExposition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, Temp_byte_Variable) == 0x000025, "Member 'W_SubRoleItem_C_UpdateExposition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, Temp_byte_Variable_1) == 0x000026, "Member 'W_SubRoleItem_C_UpdateExposition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, CallFunc_GetRole_Out_success) == 0x000027, "Member 'W_SubRoleItem_C_UpdateExposition::CallFunc_GetRole_Out_success' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, CallFunc_GetRole_Out_Role_Setting) == 0x000028, "Member 'W_SubRoleItem_C_UpdateExposition::CallFunc_GetRole_Out_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, CallFunc_IsAvailable_Out_Available) == 0x000030, "Member 'W_SubRoleItem_C_UpdateExposition::CallFunc_IsAvailable_Out_Available' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, CallFunc_IsRoleSelected_Out_Selected) == 0x000031, "Member 'W_SubRoleItem_C_UpdateExposition::CallFunc_IsRoleSelected_Out_Selected' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'W_SubRoleItem_C_UpdateExposition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'W_SubRoleItem_C_UpdateExposition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, CallFunc_BooleanAND_ReturnValue_1) == 0x000034, "Member 'W_SubRoleItem_C_UpdateExposition::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, K2Node_Select_Default) == 0x000035, "Member 'W_SubRoleItem_C_UpdateExposition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, CallFunc_Get_State_Color_ReturnValue) == 0x000038, "Member 'W_SubRoleItem_C_UpdateExposition::CallFunc_Get_State_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_UpdateExposition, K2Node_Select_Default_1) == 0x000048, "Member 'W_SubRoleItem_C_UpdateExposition::K2Node_Select_Default_1' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.Get State Color
// 0x0058 (0x0058 - 0x0000)
struct W_SubRoleItem_C_Get_State_Color final
{
public:
	bool                                          In_Locked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          In_Selected;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A7[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A8[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SubRoleItem_C_Get_State_Color) == 0x000004, "Wrong alignment on W_SubRoleItem_C_Get_State_Color");
static_assert(sizeof(W_SubRoleItem_C_Get_State_Color) == 0x000058, "Wrong size on W_SubRoleItem_C_Get_State_Color");
static_assert(offsetof(W_SubRoleItem_C_Get_State_Color, In_Locked) == 0x000000, "Member 'W_SubRoleItem_C_Get_State_Color::In_Locked' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_State_Color, In_Selected) == 0x000001, "Member 'W_SubRoleItem_C_Get_State_Color::In_Selected' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_State_Color, ReturnValue) == 0x000004, "Member 'W_SubRoleItem_C_Get_State_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_State_Color, CallFunc_IsHovered_ReturnValue) == 0x000014, "Member 'W_SubRoleItem_C_Get_State_Color::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_State_Color, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'W_SubRoleItem_C_Get_State_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_State_Color, CallFunc_SelectColor_ReturnValue_1) == 0x000028, "Member 'W_SubRoleItem_C_Get_State_Color::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_State_Color, CallFunc_SelectColor_ReturnValue_2) == 0x000038, "Member 'W_SubRoleItem_C_Get_State_Color::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_State_Color, CallFunc_SelectColor_ReturnValue_3) == 0x000048, "Member 'W_SubRoleItem_C_Get_State_Color::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.PlayerNotSpawned
// 0x0018 (0x0018 - 0x0000)
struct W_SubRoleItem_C_PlayerNotSpawned final
{
public:
	bool                                          Out_Is_NOT_Spawned;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SubRoleItem_C_PlayerNotSpawned) == 0x000008, "Wrong alignment on W_SubRoleItem_C_PlayerNotSpawned");
static_assert(sizeof(W_SubRoleItem_C_PlayerNotSpawned) == 0x000018, "Wrong size on W_SubRoleItem_C_PlayerNotSpawned");
static_assert(offsetof(W_SubRoleItem_C_PlayerNotSpawned, Out_Is_NOT_Spawned) == 0x000000, "Member 'W_SubRoleItem_C_PlayerNotSpawned::Out_Is_NOT_Spawned' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_PlayerNotSpawned, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'W_SubRoleItem_C_PlayerNotSpawned::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_PlayerNotSpawned, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_SubRoleItem_C_PlayerNotSpawned::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_PlayerNotSpawned, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'W_SubRoleItem_C_PlayerNotSpawned::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.IsRoleSelected
// 0x0020 (0x0020 - 0x0000)
struct W_SubRoleItem_C_IsRoleSelected final
{
public:
	class USQRoleSettings*                        In_Role_Setting;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_Selected;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47AA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetDeployRole_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SubRoleItem_C_IsRoleSelected) == 0x000008, "Wrong alignment on W_SubRoleItem_C_IsRoleSelected");
static_assert(sizeof(W_SubRoleItem_C_IsRoleSelected) == 0x000020, "Wrong size on W_SubRoleItem_C_IsRoleSelected");
static_assert(offsetof(W_SubRoleItem_C_IsRoleSelected, In_Role_Setting) == 0x000000, "Member 'W_SubRoleItem_C_IsRoleSelected::In_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_IsRoleSelected, Out_Selected) == 0x000008, "Member 'W_SubRoleItem_C_IsRoleSelected::Out_Selected' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_IsRoleSelected, CallFunc_GetDeployRole_ReturnValue) == 0x000010, "Member 'W_SubRoleItem_C_IsRoleSelected::CallFunc_GetDeployRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_IsRoleSelected, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'W_SubRoleItem_C_IsRoleSelected::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.GetRoleEntry
// 0x01A0 (0x01A0 - 0x0000)
struct W_SubRoleItem_C_GetRoleEntry final
{
public:
	struct FFSQRoleEntry                          OutEntry;                                          // 0x0000(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetRole_Out_success;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47AB[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetRole_Out_Role_Setting;                 // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQRoleSettings_C*                   K2Node_DynamicCast_AsBP_SQRole_Settings;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRoleEntry_Success;                     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47AC[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_RoleEntry;                   // 0x00E0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(W_SubRoleItem_C_GetRoleEntry) == 0x000008, "Wrong alignment on W_SubRoleItem_C_GetRoleEntry");
static_assert(sizeof(W_SubRoleItem_C_GetRoleEntry) == 0x0001A0, "Wrong size on W_SubRoleItem_C_GetRoleEntry");
static_assert(offsetof(W_SubRoleItem_C_GetRoleEntry, OutEntry) == 0x000000, "Member 'W_SubRoleItem_C_GetRoleEntry::OutEntry' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetRoleEntry, CallFunc_GetRole_Out_success) == 0x0000C0, "Member 'W_SubRoleItem_C_GetRoleEntry::CallFunc_GetRole_Out_success' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetRoleEntry, CallFunc_GetRole_Out_Role_Setting) == 0x0000C8, "Member 'W_SubRoleItem_C_GetRoleEntry::CallFunc_GetRole_Out_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetRoleEntry, K2Node_DynamicCast_AsBP_SQRole_Settings) == 0x0000D0, "Member 'W_SubRoleItem_C_GetRoleEntry::K2Node_DynamicCast_AsBP_SQRole_Settings' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetRoleEntry, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'W_SubRoleItem_C_GetRoleEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetRoleEntry, CallFunc_GetRoleEntry_Success) == 0x0000D9, "Member 'W_SubRoleItem_C_GetRoleEntry::CallFunc_GetRoleEntry_Success' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetRoleEntry, CallFunc_GetRoleEntry_RoleEntry) == 0x0000E0, "Member 'W_SubRoleItem_C_GetRoleEntry::CallFunc_GetRoleEntry_RoleEntry' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.IsAvailable
// 0x0003 (0x0003 - 0x0000)
struct W_SubRoleItem_C_IsAvailable final
{
public:
	bool                                          Out_Available;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAvailable_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SubRoleItem_C_IsAvailable) == 0x000001, "Wrong alignment on W_SubRoleItem_C_IsAvailable");
static_assert(sizeof(W_SubRoleItem_C_IsAvailable) == 0x000003, "Wrong size on W_SubRoleItem_C_IsAvailable");
static_assert(offsetof(W_SubRoleItem_C_IsAvailable, Out_Available) == 0x000000, "Member 'W_SubRoleItem_C_IsAvailable::Out_Available' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_IsAvailable, CallFunc_IsAvailable_ReturnValue) == 0x000001, "Member 'W_SubRoleItem_C_IsAvailable::CallFunc_IsAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_IsAvailable, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'W_SubRoleItem_C_IsAvailable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.GetCounts
// 0x0008 (0x0008 - 0x0000)
struct W_SubRoleItem_C_GetCounts final
{
public:
	int32                                         Out_Used;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out_Availability;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SubRoleItem_C_GetCounts) == 0x000004, "Wrong alignment on W_SubRoleItem_C_GetCounts");
static_assert(sizeof(W_SubRoleItem_C_GetCounts) == 0x000008, "Wrong size on W_SubRoleItem_C_GetCounts");
static_assert(offsetof(W_SubRoleItem_C_GetCounts, Out_Used) == 0x000000, "Member 'W_SubRoleItem_C_GetCounts::Out_Used' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCounts, Out_Availability) == 0x000004, "Member 'W_SubRoleItem_C_GetCounts::Out_Availability' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.GetUnavailabilityReason
// 0x0150 (0x0150 - 0x0000)
struct W_SubRoleItem_C_GetUnavailabilityReason final
{
public:
	class FText                                   OutReason;                                         // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetCountText_ReturnValue;                 // 0x0018(0x0018)()
	bool                                          CallFunc_HasActiveTimer_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47AD[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQUnavailabilityReason                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47AE[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetAvailabilityDelay_ReturnValue;         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeconds_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinutes_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
};
static_assert(alignof(W_SubRoleItem_C_GetUnavailabilityReason) == 0x000008, "Wrong alignment on W_SubRoleItem_C_GetUnavailabilityReason");
static_assert(sizeof(W_SubRoleItem_C_GetUnavailabilityReason) == 0x000150, "Wrong size on W_SubRoleItem_C_GetUnavailabilityReason");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, OutReason) == 0x000000, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::OutReason' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, CallFunc_GetCountText_ReturnValue) == 0x000018, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::CallFunc_GetCountText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, CallFunc_HasActiveTimer_ReturnValue) == 0x000030, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::CallFunc_HasActiveTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, CallFunc_GetAvailabilityDelay_ReturnValue) == 0x000098, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::CallFunc_GetAvailabilityDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, CallFunc_GetSeconds_ReturnValue) == 0x0000A0, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::CallFunc_GetSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, CallFunc_GetMinutes_ReturnValue) == 0x0000A4, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::CallFunc_GetMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, K2Node_MakeArray_Array) == 0x000128, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetUnavailabilityReason, CallFunc_Format_ReturnValue) == 0x000138, "Member 'W_SubRoleItem_C_GetUnavailabilityReason::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.GetToolTip
// 0x0128 (0x0128 - 0x0000)
struct W_SubRoleItem_C_GetToolTip final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47AF[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_Out_DisplayName;           // 0x0010(0x0018)()
	class FText                                   CallFunc_GetCountText_ReturnValue;                 // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetUnavailabilityReason_OutReason;        // 0x0080(0x0018)()
	bool                                          CallFunc_IsAvailable_Out_Available;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B0[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0110(0x0018)()
};
static_assert(alignof(W_SubRoleItem_C_GetToolTip) == 0x000008, "Wrong alignment on W_SubRoleItem_C_GetToolTip");
static_assert(sizeof(W_SubRoleItem_C_GetToolTip) == 0x000128, "Wrong size on W_SubRoleItem_C_GetToolTip");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, ReturnValue) == 0x000000, "Member 'W_SubRoleItem_C_GetToolTip::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, Temp_bool_Variable) == 0x000008, "Member 'W_SubRoleItem_C_GetToolTip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, CallFunc_GetDisplayName_Out_DisplayName) == 0x000010, "Member 'W_SubRoleItem_C_GetToolTip::CallFunc_GetDisplayName_Out_DisplayName' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, CallFunc_GetCountText_ReturnValue) == 0x000028, "Member 'W_SubRoleItem_C_GetToolTip::CallFunc_GetCountText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'W_SubRoleItem_C_GetToolTip::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, CallFunc_GetUnavailabilityReason_OutReason) == 0x000080, "Member 'W_SubRoleItem_C_GetToolTip::CallFunc_GetUnavailabilityReason_OutReason' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, CallFunc_IsAvailable_Out_Available) == 0x000098, "Member 'W_SubRoleItem_C_GetToolTip::CallFunc_IsAvailable_Out_Available' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'W_SubRoleItem_C_GetToolTip::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, K2Node_MakeArray_Array) == 0x0000E0, "Member 'W_SubRoleItem_C_GetToolTip::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'W_SubRoleItem_C_GetToolTip::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, CallFunc_Create_ReturnValue) == 0x000108, "Member 'W_SubRoleItem_C_GetToolTip::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetToolTip, K2Node_Select_Default) == 0x000110, "Member 'W_SubRoleItem_C_GetToolTip::K2Node_Select_Default' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.GetDisplayName
// 0x00D8 (0x00D8 - 0x0000)
struct W_SubRoleItem_C_GetDisplayName final
{
public:
	class FText                                   Out_DisplayName;                                   // 0x0000(0x0018)(Parm, OutParm)
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_OutEntry;                    // 0x0018(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(W_SubRoleItem_C_GetDisplayName) == 0x000008, "Wrong alignment on W_SubRoleItem_C_GetDisplayName");
static_assert(sizeof(W_SubRoleItem_C_GetDisplayName) == 0x0000D8, "Wrong size on W_SubRoleItem_C_GetDisplayName");
static_assert(offsetof(W_SubRoleItem_C_GetDisplayName, Out_DisplayName) == 0x000000, "Member 'W_SubRoleItem_C_GetDisplayName::Out_DisplayName' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetDisplayName, CallFunc_GetRoleEntry_OutEntry) == 0x000018, "Member 'W_SubRoleItem_C_GetDisplayName::CallFunc_GetRoleEntry_OutEntry' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.Get Weapon Name
// 0x02B8 (0x02B8 - 0x0000)
struct W_SubRoleItem_C_Get_Weapon_Name final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(Parm, OutParm)
	struct FSQInventoryData                       Inventory;                                         // 0x0018(0x0038)(Parm, OutParm)
	struct FFSQRoleEntry                          L_RoleEntry;                                       // 0x0050(0x00C0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FSQInventoryData>               L_Weapons;                                         // 0x0110(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSQInventoryWeaponGroupData>    L_Inventory;                                       // 0x0120(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_OutEntry;                    // 0x0148(0x00C0)(HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRole_Out_success;                      // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B1[0x6];                                     // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetRole_Out_Role_Setting;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQInventoryWeaponGroupData            CallFunc_Array_Get_Item;                           // 0x0220(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B2[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B3[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQInventoryData                       CallFunc_Array_Get_Item_1;                         // 0x0240(0x0038)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B4[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSQEquipable_Item;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B5[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B6[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       K2Node_DynamicCast_AsSQEquipable_Item;             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SubRoleItem_C_Get_Weapon_Name) == 0x000008, "Wrong alignment on W_SubRoleItem_C_Get_Weapon_Name");
static_assert(sizeof(W_SubRoleItem_C_Get_Weapon_Name) == 0x0002B8, "Wrong size on W_SubRoleItem_C_Get_Weapon_Name");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, Param_Name) == 0x000000, "Member 'W_SubRoleItem_C_Get_Weapon_Name::Param_Name' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, Inventory) == 0x000018, "Member 'W_SubRoleItem_C_Get_Weapon_Name::Inventory' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, L_RoleEntry) == 0x000050, "Member 'W_SubRoleItem_C_Get_Weapon_Name::L_RoleEntry' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, L_Weapons) == 0x000110, "Member 'W_SubRoleItem_C_Get_Weapon_Name::L_Weapons' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, L_Inventory) == 0x000120, "Member 'W_SubRoleItem_C_Get_Weapon_Name::L_Inventory' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, Temp_int_Array_Index_Variable) == 0x000130, "Member 'W_SubRoleItem_C_Get_Weapon_Name::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, Temp_int_Loop_Counter_Variable) == 0x000134, "Member 'W_SubRoleItem_C_Get_Weapon_Name::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'W_SubRoleItem_C_Get_Weapon_Name::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000140, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_GetRoleEntry_OutEntry) == 0x000148, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_GetRoleEntry_OutEntry' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, K2Node_DynamicCast_AsTexture_2D) == 0x000208, "Member 'W_SubRoleItem_C_Get_Weapon_Name::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'W_SubRoleItem_C_Get_Weapon_Name::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_GetRole_Out_success) == 0x000211, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_GetRole_Out_success' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_GetRole_Out_Role_Setting) == 0x000218, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_GetRole_Out_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Array_Get_Item) == 0x000220, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Array_Length_ReturnValue) == 0x000230, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Less_IntInt_ReturnValue) == 0x000234, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, Temp_int_Loop_Counter_Variable_1) == 0x000238, "Member 'W_SubRoleItem_C_Get_Weapon_Name::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Array_Get_Item_1) == 0x000240, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Add_IntInt_ReturnValue_1) == 0x000278, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000280, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, K2Node_ClassDynamicCast_AsSQEquipable_Item) == 0x000288, "Member 'W_SubRoleItem_C_Get_Weapon_Name::K2Node_ClassDynamicCast_AsSQEquipable_Item' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, K2Node_ClassDynamicCast_bSuccess) == 0x000290, "Member 'W_SubRoleItem_C_Get_Weapon_Name::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000298, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Array_Length_ReturnValue_1) == 0x0002A0, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, K2Node_DynamicCast_AsSQEquipable_Item) == 0x0002A8, "Member 'W_SubRoleItem_C_Get_Weapon_Name::K2Node_DynamicCast_AsSQEquipable_Item' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, K2Node_DynamicCast_bSuccess_1) == 0x0002B0, "Member 'W_SubRoleItem_C_Get_Weapon_Name::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002B1, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002B2, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0002B3, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Name, CallFunc_BooleanOR_ReturnValue) == 0x0002B4, "Member 'W_SubRoleItem_C_Get_Weapon_Name::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.Get Weapon Magazine Count
// 0x0070 (0x0070 - 0x0000)
struct W_SubRoleItem_C_Get_Weapon_Magazine_Count final
{
public:
	struct FSQInventoryData                       SQInventoryData;                                   // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Item_Count;                                        // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B7[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSQEquipable_Item;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B8[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SubRoleItem_C_Get_Weapon_Magazine_Count) == 0x000008, "Wrong alignment on W_SubRoleItem_C_Get_Weapon_Magazine_Count");
static_assert(sizeof(W_SubRoleItem_C_Get_Weapon_Magazine_Count) == 0x000070, "Wrong size on W_SubRoleItem_C_Get_Weapon_Magazine_Count");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Magazine_Count, SQInventoryData) == 0x000000, "Member 'W_SubRoleItem_C_Get_Weapon_Magazine_Count::SQInventoryData' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Magazine_Count, Item_Count) == 0x000038, "Member 'W_SubRoleItem_C_Get_Weapon_Magazine_Count::Item_Count' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Magazine_Count, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000040, "Member 'W_SubRoleItem_C_Get_Weapon_Magazine_Count::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Magazine_Count, K2Node_ClassDynamicCast_AsSQEquipable_Item) == 0x000048, "Member 'W_SubRoleItem_C_Get_Weapon_Magazine_Count::K2Node_ClassDynamicCast_AsSQEquipable_Item' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Magazine_Count, K2Node_ClassDynamicCast_bSuccess) == 0x000050, "Member 'W_SubRoleItem_C_Get_Weapon_Magazine_Count::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Magazine_Count, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000058, "Member 'W_SubRoleItem_C_Get_Weapon_Magazine_Count::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Magazine_Count, K2Node_DynamicCast_AsSQWeapon) == 0x000060, "Member 'W_SubRoleItem_C_Get_Weapon_Magazine_Count::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_Get_Weapon_Magazine_Count, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_SubRoleItem_C_Get_Weapon_Magazine_Count::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.GetRole
// 0x0018 (0x0018 - 0x0000)
struct W_SubRoleItem_C_GetRole final
{
public:
	bool                                          Out_Success;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47B9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        Out_Role_Setting;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SubRoleItem_C_GetRole) == 0x000008, "Wrong alignment on W_SubRoleItem_C_GetRole");
static_assert(sizeof(W_SubRoleItem_C_GetRole) == 0x000018, "Wrong size on W_SubRoleItem_C_GetRole");
static_assert(offsetof(W_SubRoleItem_C_GetRole, Out_Success) == 0x000000, "Member 'W_SubRoleItem_C_GetRole::Out_Success' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetRole, Out_Role_Setting) == 0x000008, "Member 'W_SubRoleItem_C_GetRole::Out_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetRole, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_SubRoleItem_C_GetRole::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetRole, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'W_SubRoleItem_C_GetRole::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_SubRoleItem.W_SubRoleItem_C.GetCountText
// 0x0208 (0x0208 - 0x0000)
struct W_SubRoleItem_C_GetCountText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47BA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_Out_DisplayName;           // 0x0020(0x0018)()
	class FText                                   CallFunc_GetDisplayName_Out_DisplayName_1;         // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetCounts_Out_Used;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCounts_Out_Availability;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0118(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47BB[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0170(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0188(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x01F0(0x0018)()
};
static_assert(alignof(W_SubRoleItem_C_GetCountText) == 0x000008, "Wrong alignment on W_SubRoleItem_C_GetCountText");
static_assert(sizeof(W_SubRoleItem_C_GetCountText) == 0x000208, "Wrong size on W_SubRoleItem_C_GetCountText");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, ReturnValue) == 0x000000, "Member 'W_SubRoleItem_C_GetCountText::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, Temp_bool_Variable) == 0x000018, "Member 'W_SubRoleItem_C_GetCountText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, CallFunc_GetDisplayName_Out_DisplayName) == 0x000020, "Member 'W_SubRoleItem_C_GetCountText::CallFunc_GetDisplayName_Out_DisplayName' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, CallFunc_GetDisplayName_Out_DisplayName_1) == 0x000038, "Member 'W_SubRoleItem_C_GetCountText::CallFunc_GetDisplayName_Out_DisplayName_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'W_SubRoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'W_SubRoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, CallFunc_GetCounts_Out_Used) == 0x0000D0, "Member 'W_SubRoleItem_C_GetCountText::CallFunc_GetCounts_Out_Used' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, CallFunc_GetCounts_Out_Availability) == 0x0000D4, "Member 'W_SubRoleItem_C_GetCountText::CallFunc_GetCounts_Out_Availability' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'W_SubRoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000118, "Member 'W_SubRoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000158, "Member 'W_SubRoleItem_C_GetCountText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, K2Node_MakeArray_Array) == 0x000160, "Member 'W_SubRoleItem_C_GetCountText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, CallFunc_Format_ReturnValue) == 0x000170, "Member 'W_SubRoleItem_C_GetCountText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData_4) == 0x000188, "Member 'W_SubRoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, K2Node_MakeArray_Array_1) == 0x0001C8, "Member 'W_SubRoleItem_C_GetCountText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, CallFunc_Format_ReturnValue_1) == 0x0001D8, "Member 'W_SubRoleItem_C_GetCountText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SubRoleItem_C_GetCountText, K2Node_Select_Default) == 0x0001F0, "Member 'W_SubRoleItem_C_GetCountText::K2Node_Select_Default' has a wrong offset!");

}


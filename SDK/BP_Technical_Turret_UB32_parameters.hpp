#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Technical_Turret_UB32

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.ExecuteUbergraph_BP_Technical_Turret_UB32
// 0x0158 (0x0158 - 0x0000)
struct BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C06[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C07[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleInventoryComponent*           CallFunc_GetVehicleInventory_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0030(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C08[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C09[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetYawInputScale_ReturnValue;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C0A[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C0B[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C0C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPitchInputScale_ReturnValue;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C0D[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C0E[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller_2;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C0F[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_OldController;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller_3;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C10[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller_1;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C11[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x00F8(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0118(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32");
static_assert(sizeof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32) == 0x000158, "Wrong size on BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, EntryPoint) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000008, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_GetVehicleInventory_ReturnValue) == 0x000018, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_GetVehicleInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_InputAxisEvent_AxisValue_3) == 0x000020, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_InputAxisEvent_AxisValue_2) == 0x000024, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_InputActionEvent_Key_1) == 0x000030, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000050, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_GetYawInputScale_ReturnValue) == 0x00005C, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_GetYawInputScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_GetController_ReturnValue_1) == 0x000060, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_IsValid_ReturnValue_1) == 0x00006C, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_AsSQPlayer_Controller_1) == 0x000080, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_AsSQPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_InputAxisEvent_AxisValue_1) == 0x00008C, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_GetPitchInputScale_ReturnValue) == 0x000090, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_GetPitchInputScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000094, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000098, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_InputAxisEvent_AxisValue) == 0x00009C, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000A0, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_Event_NewController) == 0x0000A8, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_MakeRotator_ReturnValue_1) == 0x0000B0, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_AsSQPlayer_Controller_2) == 0x0000C0, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_AsSQPlayer_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_Event_OldController) == 0x0000D0, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_AsSQPlayer_Controller_3) == 0x0000D8, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_AsSQPlayer_Controller_3' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_bSuccess_4) == 0x0000E0, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_AsBP_Player_Controller_1) == 0x0000E8, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_AsBP_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_DynamicCast_bSuccess_5) == 0x0000F0, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_IsValidClass_ReturnValue) == 0x0000F1, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, Temp_struct_Variable) == 0x0000F8, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000110, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000114, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, K2Node_InputActionEvent_Key) == 0x000118, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000130, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_MakeRotator_ReturnValue_2) == 0x000134, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000140, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000144, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32, CallFunc_MakeRotator_ReturnValue_3) == 0x000148, "Member 'BP_Technical_Turret_UB32_C_ExecuteUbergraph_BP_Technical_Turret_UB32::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_Technical_Turret_UB32_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_ReceiveUnpossessed");
static_assert(sizeof(BP_Technical_Turret_UB32_C_ReceiveUnpossessed) == 0x000008, "Wrong size on BP_Technical_Turret_UB32_C_ReceiveUnpossessed");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_Technical_Turret_UB32_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_ReceivePossessed");
static_assert(sizeof(BP_Technical_Turret_UB32_C_ReceivePossessed) == 0x000008, "Wrong size on BP_Technical_Turret_UB32_C_ReceivePossessed");
static_assert(offsetof(BP_Technical_Turret_UB32_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_61
// 0x0004 (0x0004 - 0x0000)
struct BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_61 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_61) == 0x000004, "Wrong alignment on BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_61");
static_assert(sizeof(BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_61) == 0x000004, "Wrong size on BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_61");
static_assert(offsetof(BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_61, AxisValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_61::AxisValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_57
// 0x0004 (0x0004 - 0x0000)
struct BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_57 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_57) == 0x000004, "Wrong alignment on BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_57");
static_assert(sizeof(BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_57) == 0x000004, "Wrong size on BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_57");
static_assert(offsetof(BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_57, AxisValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_57::AxisValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_42
// 0x0004 (0x0004 - 0x0000)
struct BP_Technical_Turret_UB32_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42) == 0x000004, "Wrong alignment on BP_Technical_Turret_UB32_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42");
static_assert(sizeof(BP_Technical_Turret_UB32_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42) == 0x000004, "Wrong size on BP_Technical_Turret_UB32_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42");
static_assert(offsetof(BP_Technical_Turret_UB32_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42, AxisValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42::AxisValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_39
// 0x0004 (0x0004 - 0x0000)
struct BP_Technical_Turret_UB32_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39) == 0x000004, "Wrong alignment on BP_Technical_Turret_UB32_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39");
static_assert(sizeof(BP_Technical_Turret_UB32_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39) == 0x000004, "Wrong size on BP_Technical_Turret_UB32_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39");
static_assert(offsetof(BP_Technical_Turret_UB32_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39, AxisValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39::AxisValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.InpActEvt_Fire_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.InpActEvt_Fire_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_InpActEvt_Fire_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.IsSoldierAlive
// 0x0028 (0x0028 - 0x0000)
struct BP_Technical_Turret_UB32_C_IsSoldierAlive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C12[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleWeapon*                       K2Node_DynamicCast_AsSQVehicle_Weapon;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C13[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_IsSoldierAlive) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_IsSoldierAlive");
static_assert(sizeof(BP_Technical_Turret_UB32_C_IsSoldierAlive) == 0x000028, "Wrong size on BP_Technical_Turret_UB32_C_IsSoldierAlive");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsSoldierAlive, ReturnValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_IsSoldierAlive::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsSoldierAlive, K2Node_DynamicCast_AsSQVehicle_Weapon) == 0x000008, "Member 'BP_Technical_Turret_UB32_C_IsSoldierAlive::K2Node_DynamicCast_AsSQVehicle_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsSoldierAlive, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Technical_Turret_UB32_C_IsSoldierAlive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsSoldierAlive, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_Technical_Turret_UB32_C_IsSoldierAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsSoldierAlive, CallFunc_GetSoldier_ReturnValue) == 0x000018, "Member 'BP_Technical_Turret_UB32_C_IsSoldierAlive::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsSoldierAlive, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_Technical_Turret_UB32_C_IsSoldierAlive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsSoldierAlive, CallFunc_IsAlive_ReturnValue) == 0x000021, "Member 'BP_Technical_Turret_UB32_C_IsSoldierAlive::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.IsCurrentWeaponInputEnabled
// 0x0018 (0x0018 - 0x0000)
struct BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled final
{
public:
	bool                                          bInputEnabled;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSoldierAlive_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C14[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleWeapon*                       K2Node_DynamicCast_AsSQVehicle_Weapon;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled");
static_assert(sizeof(BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled) == 0x000018, "Wrong size on BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled, bInputEnabled) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled::bInputEnabled' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled, CallFunc_IsSoldierAlive_ReturnValue) == 0x000001, "Member 'BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled::CallFunc_IsSoldierAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled, K2Node_DynamicCast_AsSQVehicle_Weapon) == 0x000008, "Member 'BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled::K2Node_DynamicCast_AsSQVehicle_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Technical_Turret_UB32_C_IsCurrentWeaponInputEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.Get3PAttachComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Technical_Turret_UB32_C_Get3PAttachComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_Get3PAttachComponent) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_Get3PAttachComponent");
static_assert(sizeof(BP_Technical_Turret_UB32_C_Get3PAttachComponent) == 0x000008, "Wrong size on BP_Technical_Turret_UB32_C_Get3PAttachComponent");
static_assert(offsetof(BP_Technical_Turret_UB32_C_Get3PAttachComponent, ReturnValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_Get3PAttachComponent::ReturnValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.Get1PAttachComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Technical_Turret_UB32_C_Get1PAttachComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_Get1PAttachComponent) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_Get1PAttachComponent");
static_assert(sizeof(BP_Technical_Turret_UB32_C_Get1PAttachComponent) == 0x000008, "Wrong size on BP_Technical_Turret_UB32_C_Get1PAttachComponent");
static_assert(offsetof(BP_Technical_Turret_UB32_C_Get1PAttachComponent, ReturnValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_Get1PAttachComponent::ReturnValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.GetMasterPoseComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Technical_Turret_UB32_C_GetMasterPoseComponent final
{
public:
	class USkinnedMeshComponent*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_GetMasterPoseComponent) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_GetMasterPoseComponent");
static_assert(sizeof(BP_Technical_Turret_UB32_C_GetMasterPoseComponent) == 0x000008, "Wrong size on BP_Technical_Turret_UB32_C_GetMasterPoseComponent");
static_assert(offsetof(BP_Technical_Turret_UB32_C_GetMasterPoseComponent, ReturnValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_GetMasterPoseComponent::ReturnValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.GetWeaponAttachComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Technical_Turret_UB32_C_GetWeaponAttachComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_GetWeaponAttachComponent) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_GetWeaponAttachComponent");
static_assert(sizeof(BP_Technical_Turret_UB32_C_GetWeaponAttachComponent) == 0x000008, "Wrong size on BP_Technical_Turret_UB32_C_GetWeaponAttachComponent");
static_assert(offsetof(BP_Technical_Turret_UB32_C_GetWeaponAttachComponent, ReturnValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_GetWeaponAttachComponent::ReturnValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.GetSoldierAttachComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_Technical_Turret_UB32_C_GetSoldierAttachComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             CallFunc_GetVehicle_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_GetSoldierAttachComponent) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_GetSoldierAttachComponent");
static_assert(sizeof(BP_Technical_Turret_UB32_C_GetSoldierAttachComponent) == 0x000010, "Wrong size on BP_Technical_Turret_UB32_C_GetSoldierAttachComponent");
static_assert(offsetof(BP_Technical_Turret_UB32_C_GetSoldierAttachComponent, ReturnValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_GetSoldierAttachComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Technical_Turret_UB32_C_GetSoldierAttachComponent, CallFunc_GetVehicle_ReturnValue) == 0x000008, "Member 'BP_Technical_Turret_UB32_C_GetSoldierAttachComponent::CallFunc_GetVehicle_ReturnValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.GetDefaultCameraLocationComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Technical_Turret_UB32_C_GetDefaultCameraLocationComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_GetDefaultCameraLocationComponent) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_GetDefaultCameraLocationComponent");
static_assert(sizeof(BP_Technical_Turret_UB32_C_GetDefaultCameraLocationComponent) == 0x000008, "Wrong size on BP_Technical_Turret_UB32_C_GetDefaultCameraLocationComponent");
static_assert(offsetof(BP_Technical_Turret_UB32_C_GetDefaultCameraLocationComponent, ReturnValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_GetDefaultCameraLocationComponent::ReturnValue' has a wrong offset!");

// Function BP_Technical_Turret_UB32.BP_Technical_Turret_UB32_C.GetADSCameraLocationComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Technical_Turret_UB32_C_GetADSCameraLocationComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Technical_Turret_UB32_C_GetADSCameraLocationComponent) == 0x000008, "Wrong alignment on BP_Technical_Turret_UB32_C_GetADSCameraLocationComponent");
static_assert(sizeof(BP_Technical_Turret_UB32_C_GetADSCameraLocationComponent) == 0x000008, "Wrong size on BP_Technical_Turret_UB32_C_GetADSCameraLocationComponent");
static_assert(offsetof(BP_Technical_Turret_UB32_C_GetADSCameraLocationComponent, ReturnValue) == 0x000000, "Member 'BP_Technical_Turret_UB32_C_GetADSCameraLocationComponent::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetCaptureZone

#include "Basic.hpp"

#include "BP_MapWidgetCaptureZone_classes.hpp"
#include "BP_MapWidgetCaptureZone_parameters.hpp"


namespace SDK
{

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.ExecuteUbergraph_BP_MapWidgetCaptureZone
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetCaptureZone_C::ExecuteUbergraph_BP_MapWidgetCaptureZone(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "ExecuteUbergraph_BP_MapWidgetCaptureZone");

	Params::BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnTeamKnowledgeChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::OnTeamKnowledgeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnTeamKnowledgeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnCapturePercentDirectionChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::OnCapturePercentDirectionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnCapturePercentDirectionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.Update Contested State
// (BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::Update_Contested_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "Update Contested State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnScaleChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   UniformScale                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetCaptureZone_C::OnScaleChanged(float UniformScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnScaleChanged");

	Params::BP_MapWidgetCaptureZone_C_OnScaleChanged Parms{};

	Parms.UniformScale = UniformScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnCapturingTeamChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::OnCapturingTeamChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnCapturingTeamChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnOwningTeamChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::OnOwningTeamChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnOwningTeamChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnCapturePercentChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::OnCapturePercentChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnCapturePercentChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnContestingChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::OnContestingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnContestingChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnUncappableChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::OnUncappableChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnUncappableChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnFlagTextureChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::OnFlagTextureChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnFlagTextureChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnFlagNameChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::OnFlagNameChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "OnFlagNameChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.Get_FlagImage_ToolTipWidget_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UBP_MapWidgetCaptureZone_C::Get_FlagImage_ToolTipWidget_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "Get_FlagImage_ToolTipWidget_0");

	Params::BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.Get Same Team
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Same                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapWidgetCaptureZone_C::Get_Same_Team(bool* Same)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "Get Same Team");

	Params::BP_MapWidgetCaptureZone_C_Get_Same_Team Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Same != nullptr)
		*Same = Parms.Same;
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.Update Capture Bar Visibility
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::Update_Capture_Bar_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "Update Capture Bar Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.update fog of war
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Out_Has_Fog_Of_War                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapWidgetCaptureZone_C::Update_fog_of_war(bool* Out_Has_Fog_Of_War)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "update fog of war");

	Params::BP_MapWidgetCaptureZone_C_Update_fog_of_war Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Has_Fog_Of_War != nullptr)
		*Out_Has_Fog_Of_War = Parms.Out_Has_Fog_Of_War;
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.IsKnownToLocalPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bKnown                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MapWidgetCaptureZone_C::IsKnownToLocalPlayer(bool* bKnown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "IsKnownToLocalPlayer");

	Params::BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bKnown != nullptr)
		*bKnown = Parms.bKnown;
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.GetCaptureStateCircleColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetCaptureZone_C::GetCaptureStateCircleColor(struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "GetCaptureStateCircleColor");

	Params::BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.UpdateOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ZoomAmount                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetCaptureZone_C::UpdateOpacity(float ZoomAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "UpdateOpacity");

	Params::BP_MapWidgetCaptureZone_C_UpdateOpacity Parms{};

	Parms.ZoomAmount = ZoomAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.HandleMapCoreChanged
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::HandleMapCoreChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "HandleMapCoreChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.HandleMapZoom
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetCaptureZone_C::HandleMapZoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetCaptureZone_C", "HandleMapZoom");

	UObject::ProcessEvent(Func, nullptr);
}

}


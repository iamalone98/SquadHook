#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InteractableList_Mines

#include "Basic.hpp"

#include "W_InteractableList_Mines_classes.hpp"
#include "W_InteractableList_Mines_parameters.hpp"


namespace SDK
{

// Function W_InteractableList_Mines.W_InteractableList_Mines_C.ExecuteUbergraph_W_InteractableList_Mines
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableList_Mines_C::ExecuteUbergraph_W_InteractableList_Mines(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "ExecuteUbergraph_W_InteractableList_Mines");

	Params::W_InteractableList_Mines_C_ExecuteUbergraph_W_InteractableList_Mines Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InteractableList_Mines.W_InteractableList_Mines_C.Set Custom Data
// (BlueprintCallable, BlueprintEvent)

void UW_InteractableList_Mines_C::Set_Custom_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "Set Custom Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_InteractableList_Mines.W_InteractableList_Mines_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableList_Mines_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "Tick");

	Params::W_InteractableList_Mines_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InteractableList_Mines.W_InteractableList_Mines_C.Soldier Has Shovel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Shovel_Equipped                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Owns_Shovel                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_InteractableList_Mines_C::Soldier_Has_Shovel(bool* Shovel_Equipped, bool* Owns_Shovel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "Soldier Has Shovel");

	Params::W_InteractableList_Mines_C_Soldier_Has_Shovel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Shovel_Equipped != nullptr)
		*Shovel_Equipped = Parms.Shovel_Equipped;

	if (Owns_Shovel != nullptr)
		*Owns_Shovel = Parms.Owns_Shovel;
}


// Function W_InteractableList_Mines.W_InteractableList_Mines_C.Is Deployable Built
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Full_Health                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESQBuildState                           BuildState                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableList_Mines_C::Is_Deployable_Built(bool* Full_Health, ESQBuildState* BuildState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "Is Deployable Built");

	Params::W_InteractableList_Mines_C_Is_Deployable_Built Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Full_Health != nullptr)
		*Full_Health = Parms.Full_Health;

	if (BuildState != nullptr)
		*BuildState = Parms.BuildState;
}


// Function W_InteractableList_Mines.W_InteractableList_Mines_C.Create Shovel Items
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_InteractableList_Mines_C::Create_Shovel_Items()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "Create Shovel Items");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_InteractableList_Mines.W_InteractableList_Mines_C.Get Interact List
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UVerticalBox*                     Param_InteractList                                     (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableList_Mines_C::Get_Interact_List(class UVerticalBox** Param_InteractList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "Get Interact List");

	Params::W_InteractableList_Mines_C_Get_Interact_List Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_InteractList != nullptr)
		*Param_InteractList = Parms.Param_InteractList;
}


// Function W_InteractableList_Mines.W_InteractableList_Mines_C.Get Fade Animation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidgetAnimation*                 Fade_Animation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableList_Mines_C::Get_Fade_Animation(class UWidgetAnimation** Fade_Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "Get Fade Animation");

	Params::W_InteractableList_Mines_C_Get_Fade_Animation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Fade_Animation != nullptr)
		*Fade_Animation = Parms.Fade_Animation;
}


// Function W_InteractableList_Mines.W_InteractableList_Mines_C.Soldier Has Mines
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Owns_Mines                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_InteractableList_Mines_C::Soldier_Has_Mines(bool* Owns_Mines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "Soldier Has Mines");

	Params::W_InteractableList_Mines_C_Soldier_Has_Mines Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Owns_Mines != nullptr)
		*Owns_Mines = Parms.Owns_Mines;
}


// Function W_InteractableList_Mines.W_InteractableList_Mines_C.InsertPickupInteractData
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSQUsableWidgetData>      InteractData                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ESQBuildState                           CurrentBuildState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InsertAtIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableList_Mines_C::InsertPickupInteractData(TArray<struct FSQUsableWidgetData>& InteractData, ESQBuildState CurrentBuildState, int32 InsertAtIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableList_Mines_C", "InsertPickupInteractData");

	Params::W_InteractableList_Mines_C_InsertPickupInteractData Parms{};

	Parms.InteractData = std::move(InteractData);
	Parms.CurrentBuildState = CurrentBuildState;
	Parms.InsertAtIndex = InsertAtIndex;

	UObject::ProcessEvent(Func, &Parms);

	InteractData = std::move(Parms.InteractData);
}

}


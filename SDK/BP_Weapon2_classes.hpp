#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Weapon2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Weapon2.BP_Weapon2_C
// 0x0060 (0x09A0 - 0x0940)
class ABP_Weapon2_C : public ASQInfantryWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0940(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraShakeBase*                       ADSCameraSway;                                     // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DOF_Focus_Distance_Hipfire;                        // 0x0950(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DOF_Focus_Distance_ADS;                            // 0x0954(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DOF_Apeture_Hipfire;                               // 0x0958(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DOF_Apeture_ADS;                                   // 0x095C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DOF_Aim_Time_Multiplier;                           // 0x0960(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeIntensityMultiplier;                          // 0x0964(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugSnapToHorizon;                               // 0x0968(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AD[0x7];                                     // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           DOFTransitionCurve;                                // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             BPOnLocalWeaponFired;                              // 0x0978(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         DOF_Recoil_Ramp_Up_Speed;                          // 0x0988(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DOF_Recoil_Decay_Speed;                            // 0x098C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DOF_Recoil_Random_Min;                             // 0x0990(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DOF_Recoil_Random_Max;                             // 0x0994(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowWeaponHandlingIndicator;                       // 0x0998(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void BPOnLocalWeaponFired__DelegateSignature();
	void ExecuteUbergraph_BP_Weapon2(int32 EntryPoint);
	void DebugStaticInfoWarning();
	void BlueprintOnEquipped();
	void DebugCvarUpdated(const class FString& CVarName);
	void ReceiveBeginPlay();
	void BlueprintOnFire(const struct FVector& Origin);
	void ReceiveTick(float DeltaSeconds);
	void PrintSocketDebug();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Weapon2_C">();
	}
	static class ABP_Weapon2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Weapon2_C>();
	}
};
static_assert(alignof(ABP_Weapon2_C) == 0x000010, "Wrong alignment on ABP_Weapon2_C");
static_assert(sizeof(ABP_Weapon2_C) == 0x0009A0, "Wrong size on ABP_Weapon2_C");
static_assert(offsetof(ABP_Weapon2_C, UberGraphFrame) == 0x000940, "Member 'ABP_Weapon2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, ADSCameraSway) == 0x000948, "Member 'ABP_Weapon2_C::ADSCameraSway' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOF_Focus_Distance_Hipfire) == 0x000950, "Member 'ABP_Weapon2_C::DOF_Focus_Distance_Hipfire' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOF_Focus_Distance_ADS) == 0x000954, "Member 'ABP_Weapon2_C::DOF_Focus_Distance_ADS' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOF_Apeture_Hipfire) == 0x000958, "Member 'ABP_Weapon2_C::DOF_Apeture_Hipfire' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOF_Apeture_ADS) == 0x00095C, "Member 'ABP_Weapon2_C::DOF_Apeture_ADS' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOF_Aim_Time_Multiplier) == 0x000960, "Member 'ABP_Weapon2_C::DOF_Aim_Time_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, ShakeIntensityMultiplier) == 0x000964, "Member 'ABP_Weapon2_C::ShakeIntensityMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, bDebugSnapToHorizon) == 0x000968, "Member 'ABP_Weapon2_C::bDebugSnapToHorizon' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOFTransitionCurve) == 0x000970, "Member 'ABP_Weapon2_C::DOFTransitionCurve' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, BPOnLocalWeaponFired) == 0x000978, "Member 'ABP_Weapon2_C::BPOnLocalWeaponFired' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOF_Recoil_Ramp_Up_Speed) == 0x000988, "Member 'ABP_Weapon2_C::DOF_Recoil_Ramp_Up_Speed' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOF_Recoil_Decay_Speed) == 0x00098C, "Member 'ABP_Weapon2_C::DOF_Recoil_Decay_Speed' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOF_Recoil_Random_Min) == 0x000990, "Member 'ABP_Weapon2_C::DOF_Recoil_Random_Min' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, DOF_Recoil_Random_Max) == 0x000994, "Member 'ABP_Weapon2_C::DOF_Recoil_Random_Max' has a wrong offset!");
static_assert(offsetof(ABP_Weapon2_C, ShowWeaponHandlingIndicator) == 0x000998, "Member 'ABP_Weapon2_C::ShowWeaponHandlingIndicator' has a wrong offset!");

}


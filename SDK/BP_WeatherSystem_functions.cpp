#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeatherSystem

#include "Basic.hpp"

#include "BP_WeatherSystem_classes.hpp"
#include "BP_WeatherSystem_parameters.hpp"


namespace SDK
{

// Function BP_WeatherSystem.BP_WeatherSystem_C.ExecuteUbergraph_BP_WeatherSystem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSystem_C::ExecuteUbergraph_BP_WeatherSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "ExecuteUbergraph_BP_WeatherSystem");

	Params::BP_WeatherSystem_C_ExecuteUbergraph_BP_WeatherSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSystem_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "ReceiveTick");

	Params::BP_WeatherSystem_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_WeatherSystem_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.UpdateWeatherDirection
// (BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::UpdateWeatherDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "UpdateWeatherDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.CheckPlayerProximity
// (BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::CheckPlayerProximity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "CheckPlayerProximity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.SetEffectLocation
// (BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::SetEffectLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "SetEffectLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.ApplyWeatherToMap
// (BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::ApplyWeatherToMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "ApplyWeatherToMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.EnterNegativeArea
// (BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::EnterNegativeArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "EnterNegativeArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.LeaveNegativeArea
// (BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::LeaveNegativeArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "LeaveNegativeArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.ResetSpawningParticles
// (BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::ResetSpawningParticles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "ResetSpawningParticles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.CheckRoofMaterial
// (BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::CheckRoofMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "CheckRoofMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.CheckRoomType
// (BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::CheckRoomType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "CheckRoomType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.SetRadius
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::SetRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "SetRadius");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.SpawnDistantParticleSystem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::SpawnDistantParticleSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "SpawnDistantParticleSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.WeatherSystemDirection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::WeatherSystemDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "WeatherSystemDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.SpawnParticleSystem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::SpawnParticleSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "SpawnParticleSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.drawRoom
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_CeilingHeight                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_RoomWidth                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_RoomLenght                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        FloorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_WeatherSystem_C::DrawRoom(float* Param_CeilingHeight, float* Param_RoomWidth, float* Param_RoomLenght, EPhysicalSurface* FloorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "drawRoom");

	Params::BP_WeatherSystem_C_DrawRoom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CeilingHeight != nullptr)
		*Param_CeilingHeight = Parms.Param_CeilingHeight;

	if (Param_RoomWidth != nullptr)
		*Param_RoomWidth = Parms.Param_RoomWidth;

	if (Param_RoomLenght != nullptr)
		*Param_RoomLenght = Parms.Param_RoomLenght;

	if (FloorType != nullptr)
		*FloorType = Parms.FloorType;
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.SetupWindMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::SetupWindMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "SetupWindMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_WeatherSystem.BP_WeatherSystem_C.SetupGlobalWind
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_WeatherSystem_C::SetupGlobalWind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WeatherSystem_C", "SetupGlobalWind");

	UObject::ProcessEvent(Func, nullptr);
}

}


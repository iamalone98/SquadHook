#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TravelQueueWidgetSmall

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TravelQueueWidgetSmall.TravelQueueWidgetSmall_C.ExecuteUbergraph_TravelQueueWidgetSmall
// 0x0118 (0x0118 - 0x0000)
struct TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3870[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        K2Node_DynamicCast_AsSQGame_Instance;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3871[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3872[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3873[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3874[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ASQJoinBeaconClient*                    CallFunc_Get_Queue_JoinQueueClient;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3875[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall) == 0x000008, "Wrong alignment on TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall");
static_assert(sizeof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall) == 0x000118, "Wrong size on TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, EntryPoint) == 0x000000, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::EntryPoint' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, K2Node_DynamicCast_AsSQGame_Instance) == 0x000010, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::K2Node_DynamicCast_AsSQGame_Instance' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_RightChop_ReturnValue) == 0x000020, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_Left_ReturnValue) == 0x000030, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_Len_ReturnValue) == 0x000040, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, K2Node_MakeArray_Array) == 0x0000A8, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_IsHovered_ReturnValue) == 0x0000B8, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D8, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, K2Node_CreateDelegate_OutputDelegate) == 0x0000E8, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F8, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_Get_Queue_JoinQueueClient) == 0x000100, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_Get_Queue_JoinQueueClient' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_Len_ReturnValue_1) == 0x00010C, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000110, "Member 'TravelQueueWidgetSmall_C_ExecuteUbergraph_TravelQueueWidgetSmall::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function TravelQueueWidgetSmall.TravelQueueWidgetSmall_C.Get Queue
// 0x0020 (0x0020 - 0x0000)
struct TravelQueueWidgetSmall_C_Get_Queue final
{
public:
	class ASQJoinBeaconClient*                    JoinQueueClient;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        K2Node_DynamicCast_AsSQGame_Instance;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TravelQueueWidgetSmall_C_Get_Queue) == 0x000008, "Wrong alignment on TravelQueueWidgetSmall_C_Get_Queue");
static_assert(sizeof(TravelQueueWidgetSmall_C_Get_Queue) == 0x000020, "Wrong size on TravelQueueWidgetSmall_C_Get_Queue");
static_assert(offsetof(TravelQueueWidgetSmall_C_Get_Queue, JoinQueueClient) == 0x000000, "Member 'TravelQueueWidgetSmall_C_Get_Queue::JoinQueueClient' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Get_Queue, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'TravelQueueWidgetSmall_C_Get_Queue::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Get_Queue, K2Node_DynamicCast_AsSQGame_Instance) == 0x000010, "Member 'TravelQueueWidgetSmall_C_Get_Queue::K2Node_DynamicCast_AsSQGame_Instance' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Get_Queue, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TravelQueueWidgetSmall_C_Get_Queue::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TravelQueueWidgetSmall.TravelQueueWidgetSmall_C.Bind Text Position
// 0x0100 (0x0100 - 0x0000)
struct TravelQueueWidgetSmall_C_Bind_Text_Position final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3876[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3877[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00E8(0x0018)()
};
static_assert(alignof(TravelQueueWidgetSmall_C_Bind_Text_Position) == 0x000008, "Wrong alignment on TravelQueueWidgetSmall_C_Bind_Text_Position");
static_assert(sizeof(TravelQueueWidgetSmall_C_Bind_Text_Position) == 0x000100, "Wrong size on TravelQueueWidgetSmall_C_Bind_Text_Position");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, ReturnValue) == 0x000000, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, Temp_text_Variable) == 0x000018, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, K2Node_MakeArray_Array) == 0x0000B8, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, Temp_bool_Variable) == 0x0000E0, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Position, K2Node_Select_Default) == 0x0000E8, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Position::K2Node_Select_Default' has a wrong offset!");

// Function TravelQueueWidgetSmall.TravelQueueWidgetSmall_C.Bind Text Countdown
// 0x0080 (0x0080 - 0x0000)
struct TravelQueueWidgetSmall_C_Bind_Text_Countdown final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
};
static_assert(alignof(TravelQueueWidgetSmall_C_Bind_Text_Countdown) == 0x000008, "Wrong alignment on TravelQueueWidgetSmall_C_Bind_Text_Countdown");
static_assert(sizeof(TravelQueueWidgetSmall_C_Bind_Text_Countdown) == 0x000080, "Wrong size on TravelQueueWidgetSmall_C_Bind_Text_Countdown");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Countdown, ReturnValue) == 0x000000, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Countdown::ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Countdown, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Countdown::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Countdown, K2Node_MakeArray_Array) == 0x000058, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Countdown::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Countdown, CallFunc_Format_ReturnValue) == 0x000068, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Countdown::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function TravelQueueWidgetSmall.TravelQueueWidgetSmall_C.Bind Text Detailed Queue 1
// 0x0110 (0x0110 - 0x0000)
struct TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3878[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetReservedSlots_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0060(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxPlayers_ReturnValue;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
};
static_assert(alignof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1) == 0x000008, "Wrong alignment on TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1");
static_assert(sizeof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1) == 0x000110, "Wrong size on TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, ReturnValue) == 0x000000, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, CallFunc_GetReservedSlots_ReturnValue) == 0x00001C, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::CallFunc_GetReservedSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, K2Node_MakeStruct_FormatArgumentData_1) == 0x000060, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, CallFunc_GetMaxPlayers_ReturnValue) == 0x0000A0, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::CallFunc_GetMaxPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000A4, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000A8, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, K2Node_MakeArray_Array) == 0x0000E8, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_1::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function TravelQueueWidgetSmall.TravelQueueWidgetSmall_C.Bind Text Detailed Queue 2
// 0x00D8 (0x00D8 - 0x0000)
struct TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3879[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
};
static_assert(alignof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2) == 0x000008, "Wrong alignment on TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2");
static_assert(sizeof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2) == 0x0000D8, "Wrong size on TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, ReturnValue) == 0x000000, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000024, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, CallFunc_Max_ReturnValue) == 0x000028, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, CallFunc_Min_ReturnValue) == 0x00002C, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, K2Node_MakeArray_Array) == 0x0000B0, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'TravelQueueWidgetSmall_C_Bind_Text_Detailed_Queue_2::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function TravelQueueWidgetSmall.TravelQueueWidgetSmall_C.Bind Visibility via bToggle
// 0x0005 (0x0005 - 0x0000)
struct TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle) == 0x000001, "Wrong alignment on TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle");
static_assert(sizeof(TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle) == 0x000005, "Wrong size on TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle, ReturnValue) == 0x000000, "Member 'TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle::ReturnValue' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle, Temp_bool_Variable) == 0x000001, "Member 'TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle, Temp_byte_Variable) == 0x000002, "Member 'TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle, Temp_byte_Variable_1) == 0x000003, "Member 'TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle, K2Node_Select_Default) == 0x000004, "Member 'TravelQueueWidgetSmall_C_Bind_Visibility_via_bToggle::K2Node_Select_Default' has a wrong offset!");

}


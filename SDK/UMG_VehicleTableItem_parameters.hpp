#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VehicleTableItem

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UMG_VehicleTableItem.UMG_VehicleTableItem_C.Setup
// 0x0090 (0x0090 - 0x0000)
struct UMG_VehicleTableItem_C_Setup final
{
public:
	TSoftObjectPtr<class UTexture2D>              Param_VehicleImage;                                // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   MainName;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Count;                                             // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Time;                                              // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Ticket;                                            // 0x0070(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Amphibious;                                        // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleTableItem_C_Setup) == 0x000008, "Wrong alignment on UMG_VehicleTableItem_C_Setup");
static_assert(sizeof(UMG_VehicleTableItem_C_Setup) == 0x000090, "Wrong size on UMG_VehicleTableItem_C_Setup");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, Param_VehicleImage) == 0x000000, "Member 'UMG_VehicleTableItem_C_Setup::Param_VehicleImage' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, MainName) == 0x000028, "Member 'UMG_VehicleTableItem_C_Setup::MainName' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, Count) == 0x000040, "Member 'UMG_VehicleTableItem_C_Setup::Count' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, Time) == 0x000058, "Member 'UMG_VehicleTableItem_C_Setup::Time' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, Ticket) == 0x000070, "Member 'UMG_VehicleTableItem_C_Setup::Ticket' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, Amphibious) == 0x000088, "Member 'UMG_VehicleTableItem_C_Setup::Amphibious' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, Temp_bool_Variable) == 0x000089, "Member 'UMG_VehicleTableItem_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, Temp_byte_Variable) == 0x00008A, "Member 'UMG_VehicleTableItem_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, Temp_byte_Variable_1) == 0x00008B, "Member 'UMG_VehicleTableItem_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleTableItem_C_Setup, K2Node_Select_Default) == 0x00008C, "Member 'UMG_VehicleTableItem_C_Setup::K2Node_Select_Default' has a wrong offset!");

}


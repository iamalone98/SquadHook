#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NLAW_Proj

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NLAW_Proj.BP_NLAW_Proj_C.ExecuteUbergraph_BP_NLAW_Proj
// 0x0110 (0x0110 - 0x0000)
struct BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_SelfActor;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0024(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3FB1[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB2[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB3[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_InertialGuidance_C> K2Node_DynamicCast_AsBPI_Inertial_Guidance;        // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB4[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTargetAngularSpeedDegrees_Target_Angular_Speed; // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj) == 0x000008, "Wrong alignment on BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj");
static_assert(sizeof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj) == 0x000110, "Wrong size on BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, EntryPoint) == 0x000000, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, K2Node_Event_SelfActor) == 0x000008, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::K2Node_Event_SelfActor' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, K2Node_Event_OtherActor) == 0x000010, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, K2Node_Event_NormalImpulse) == 0x000018, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, K2Node_Event_Hit) == 0x000024, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0000B0, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x0000B8, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000C0, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C8, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D4, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_DegreesToRadians_ReturnValue) == 0x0000E0, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_GetOwner_ReturnValue) == 0x0000E8, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, K2Node_DynamicCast_AsBPI_Inertial_Guidance) == 0x0000F0, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::K2Node_DynamicCast_AsBPI_Inertial_Guidance' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_DoesImplementInterface_ReturnValue) == 0x000101, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_GetTargetAngularSpeedDegrees_Target_Angular_Speed) == 0x000104, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_GetTargetAngularSpeedDegrees_Target_Angular_Speed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, K2Node_Event_DeltaSeconds) == 0x000108, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00010C, "Member 'BP_NLAW_Proj_C_ExecuteUbergraph_BP_NLAW_Proj::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_NLAW_Proj.BP_NLAW_Proj_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_NLAW_Proj_C_ReceiveTick final
{
public:
	float                                         Param_DeltaSeconds;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NLAW_Proj_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_NLAW_Proj_C_ReceiveTick");
static_assert(sizeof(BP_NLAW_Proj_C_ReceiveTick) == 0x000004, "Wrong size on BP_NLAW_Proj_C_ReceiveTick");
static_assert(offsetof(BP_NLAW_Proj_C_ReceiveTick, Param_DeltaSeconds) == 0x000000, "Member 'BP_NLAW_Proj_C_ReceiveTick::Param_DeltaSeconds' has a wrong offset!");

// Function BP_NLAW_Proj.BP_NLAW_Proj_C.OnImpact
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NLAW_Proj_C_OnImpact final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x001C(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NLAW_Proj_C_OnImpact) == 0x000008, "Wrong alignment on BP_NLAW_Proj_C_OnImpact");
static_assert(sizeof(BP_NLAW_Proj_C_OnImpact) == 0x0000A8, "Wrong size on BP_NLAW_Proj_C_OnImpact");
static_assert(offsetof(BP_NLAW_Proj_C_OnImpact, SelfActor) == 0x000000, "Member 'BP_NLAW_Proj_C_OnImpact::SelfActor' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_OnImpact, OtherActor) == 0x000008, "Member 'BP_NLAW_Proj_C_OnImpact::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_OnImpact, NormalImpulse) == 0x000010, "Member 'BP_NLAW_Proj_C_OnImpact::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_OnImpact, Hit) == 0x00001C, "Member 'BP_NLAW_Proj_C_OnImpact::Hit' has a wrong offset!");

// Function BP_NLAW_Proj.BP_NLAW_Proj_C.UpdateIgnoreGravity
// 0x0038 (0x0038 - 0x0000)
struct BP_NLAW_Proj_C_UpdateIgnoreGravity final
{
public:
	struct FVector                                L_Current_Location;                                // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQProjectileMovement*                  K2Node_DynamicCast_AsSQProjectile_Movement;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NLAW_Proj_C_UpdateIgnoreGravity) == 0x000008, "Wrong alignment on BP_NLAW_Proj_C_UpdateIgnoreGravity");
static_assert(sizeof(BP_NLAW_Proj_C_UpdateIgnoreGravity) == 0x000038, "Wrong size on BP_NLAW_Proj_C_UpdateIgnoreGravity");
static_assert(offsetof(BP_NLAW_Proj_C_UpdateIgnoreGravity, L_Current_Location) == 0x000000, "Member 'BP_NLAW_Proj_C_UpdateIgnoreGravity::L_Current_Location' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_UpdateIgnoreGravity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_NLAW_Proj_C_UpdateIgnoreGravity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_UpdateIgnoreGravity, CallFunc_Vector_Distance_ReturnValue) == 0x000018, "Member 'BP_NLAW_Proj_C_UpdateIgnoreGravity::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_UpdateIgnoreGravity, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_NLAW_Proj_C_UpdateIgnoreGravity::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_UpdateIgnoreGravity, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_NLAW_Proj_C_UpdateIgnoreGravity::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_UpdateIgnoreGravity, K2Node_DynamicCast_AsSQProjectile_Movement) == 0x000028, "Member 'BP_NLAW_Proj_C_UpdateIgnoreGravity::K2Node_DynamicCast_AsSQProjectile_Movement' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_UpdateIgnoreGravity, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_NLAW_Proj_C_UpdateIgnoreGravity::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_NLAW_Proj.BP_NLAW_Proj_C.AdjustVelocityDirection
// 0x0090 (0x0090 - 0x0000)
struct BP_NLAW_Proj_C_AdjustVelocityDirection final
{
public:
	float                                         TargetVelocityAngleFromStart;                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetTangentialSpeed;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationDirectionModifier;                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB6[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQProjectileMovement*                  K2Node_DynamicCast_AsSQProjectile_Movement;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB7[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB8[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentKinematics_Distance_From_Start_Point; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentKinematics_Angular_Speed_Degrees; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentKinematics_Total_Speed;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentKinematics_Linear_Speed;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentKinematics_Tangential_Speed;    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentKinematics_Velocity_Angle_From_Start_Direction_Degrees; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB9[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FBA[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAsin_ReturnValue;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NLAW_Proj_C_AdjustVelocityDirection) == 0x000008, "Wrong alignment on BP_NLAW_Proj_C_AdjustVelocityDirection");
static_assert(sizeof(BP_NLAW_Proj_C_AdjustVelocityDirection) == 0x000090, "Wrong size on BP_NLAW_Proj_C_AdjustVelocityDirection");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, TargetVelocityAngleFromStart) == 0x000000, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::TargetVelocityAngleFromStart' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, TargetTangentialSpeed) == 0x000004, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::TargetTangentialSpeed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, RotationDirectionModifier) == 0x000008, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::RotationDirectionModifier' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, K2Node_DynamicCast_AsSQProjectile_Movement) == 0x000010, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::K2Node_DynamicCast_AsSQProjectile_Movement' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_SignOfFloat_ReturnValue) == 0x00001C, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000030, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_RotateAngleAxis_ReturnValue) == 0x000040, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_Abs_ReturnValue) == 0x00004C, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_GetCurrentKinematics_Distance_From_Start_Point) == 0x000050, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_GetCurrentKinematics_Distance_From_Start_Point' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_GetCurrentKinematics_Angular_Speed_Degrees) == 0x000054, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_GetCurrentKinematics_Angular_Speed_Degrees' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_GetCurrentKinematics_Total_Speed) == 0x000058, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_GetCurrentKinematics_Total_Speed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_GetCurrentKinematics_Linear_Speed) == 0x00005C, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_GetCurrentKinematics_Linear_Speed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_GetCurrentKinematics_Tangential_Speed) == 0x000060, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_GetCurrentKinematics_Tangential_Speed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_GetCurrentKinematics_Velocity_Angle_From_Start_Direction_Degrees) == 0x000064, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_GetCurrentKinematics_Velocity_Angle_From_Start_Direction_Degrees' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_DegreesToRadians_ReturnValue) == 0x000068, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000074, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000084, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_DegAsin_ReturnValue) == 0x000088, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_DegAsin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_AdjustVelocityDirection, CallFunc_BooleanAND_ReturnValue) == 0x00008C, "Member 'BP_NLAW_Proj_C_AdjustVelocityDirection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NLAW_Proj.BP_NLAW_Proj_C.GetCurrentKinematics
// 0x0094 (0x0094 - 0x0000)
struct BP_NLAW_Proj_C_GetCurrentKinematics final
{
public:
	float                                         Distance_From_Start_Point;                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angular_Speed_Degrees;                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Total_Speed;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Linear_Speed;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tangential_Speed;                                  // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Velocity_Angle_From_Start_Direction_Degrees;       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngularSpeed;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LinearSpeed;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TangentialSpeed;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleBetweenVelocityAndStartDirection;             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalSpeed;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirectionToMissileFromStart;                       // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentVelocity;                                   // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_CosineAngle2D_ReturnValue;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NLAW_Proj_C_GetCurrentKinematics) == 0x000004, "Wrong alignment on BP_NLAW_Proj_C_GetCurrentKinematics");
static_assert(sizeof(BP_NLAW_Proj_C_GetCurrentKinematics) == 0x000094, "Wrong size on BP_NLAW_Proj_C_GetCurrentKinematics");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, Distance_From_Start_Point) == 0x000000, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::Distance_From_Start_Point' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, Angular_Speed_Degrees) == 0x000004, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::Angular_Speed_Degrees' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, Total_Speed) == 0x000008, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::Total_Speed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, Linear_Speed) == 0x00000C, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::Linear_Speed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, Tangential_Speed) == 0x000010, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::Tangential_Speed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, Velocity_Angle_From_Start_Direction_Degrees) == 0x000014, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::Velocity_Angle_From_Start_Direction_Degrees' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, AngularSpeed) == 0x000018, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::AngularSpeed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, LinearSpeed) == 0x00001C, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::LinearSpeed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, TangentialSpeed) == 0x000020, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::TangentialSpeed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, AngleBetweenVelocityAndStartDirection) == 0x000024, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::AngleBetweenVelocityAndStartDirection' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, Radius) == 0x000028, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::Radius' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, TotalSpeed) == 0x00002C, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::TotalSpeed' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, DirectionToMissileFromStart) == 0x000030, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::DirectionToMissileFromStart' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CurrentVelocity) == 0x00003C, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CurrentVelocity' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_RadiansToDegrees_ReturnValue) == 0x00004C, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_DegCos_ReturnValue) == 0x000050, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_DegSin_ReturnValue) == 0x000054, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_Vector_CosineAngle2D_ReturnValue) == 0x000060, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_Vector_CosineAngle2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_VSize_ReturnValue) == 0x000064, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_DegAcos_ReturnValue) == 0x000068, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00006C, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_Vector_Distance2D_ReturnValue) == 0x000078, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00007C, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NLAW_Proj_C_GetCurrentKinematics, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000088, "Member 'BP_NLAW_Proj_C_GetCurrentKinematics::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");

}


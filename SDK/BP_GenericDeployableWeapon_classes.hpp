#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GenericDeployableWeapon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GenericDeployableWeapon.BP_GenericDeployableWeapon_C
// 0x0190 (0x0D30 - 0x0BA0)
class ABP_GenericDeployableWeapon_C : public ASQVehicleWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USQTemperatureComponent*                SQTemperature;                                     // 0x0BA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ShutdownTemp;                                      // 0x0BB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverheatEffectTrigger_1;                           // 0x0BB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverheatEffectTrigger_2;                           // 0x0BB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCD[0x4];                                     // 0x0BBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Overheat_1_Effect;                                 // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Overheat_2_Effect;                                 // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Overheat_3_Effect;                                 // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Overheat_1_Sound;                                  // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Overheat_2_Sound;                                  // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              SoundTest;                                         // 0x0BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Overheat_3_Sound;                                  // 0x0BF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Mesh1PReturnSection;                               // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Mesh3PReturnSection;                               // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SoldierMeshReturnSection;                          // 0x0C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fire_Camera_Shake_Outer_Radius;                    // 0x0C10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fire_Camera_Shake_Falloff;                         // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Fire_Camera_Shake_Epicenter_Socket;                // 0x0C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Camera_Shake_Preset;                               // 0x0C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Fire_Weapon_Animation;                             // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Fire_Soldier_Animation;                            // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Fire_Tripod_Animation;                             // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Reload_Tripod_Animation;                           // 0x0C40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Reload_Weapon_Animation;                           // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Reload_Soldier_Animation;                          // 0x0C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Reload_Dry_Tripod_Animation;                       // 0x0C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Reload_Dry_Weapon_Animation;                       // 0x0C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Reload_Dry_Soldier_Animation;                      // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Equip_Soldier_Animation;                           // 0x0C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Equip_Weapon_Animation;                            // 0x0C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Equip_Tripod_Animation;                            // 0x0C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BackblastSocket;                                   // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             StartTransform;                                    // 0x0C90(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             EndTransform;                                      // 0x0CC0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MeshCurrentMontageTime;                            // 0x0CF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCE[0x4];                                     // 0x0CF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Equip_Transition_Soldier_Animation;                // 0x0CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Equip_Transition_Weapon_Animation;                 // 0x0D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Equip_Transition_Tripod_Animation;                 // 0x0D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ReloadAnimTimer;                                   // 0x0D10(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          BPHasRecoil;                                       // 0x0D18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FCF[0x3];                                     // 0x0D19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BPMinPitchRecoil;                                  // 0x0D1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BPMaxPitchRecoil;                                  // 0x0D20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BPMaxLeftRecoil;                                   // 0x0D24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BPMaxRightRecoil;                                  // 0x0D28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GenericDeployableWeapon(int32 EntryPoint);
	void FinishReloadAnim();
	void BlueprintOnUnequip();
	void CameraOnWeapon();
	void CameraOnSoldier();
	void SoldierLeavesVehicle(class ASQSoldier* Soldier);
	void SoldierEntersVehicle(class ASQSoldier* Soldier);
	void BlueprintOnReload();
	void BlueprintOnFire(const struct FVector& Origin);
	void BndEvt__SQTemperature_K2Node_ComponentBoundEvent_486_TemperatureIncrementDelegate__DelegateSignature(class USQTemperatureComponent* TriggeringComponent, float TriggeringTemp, bool bIsLowerTrigger);
	void PlayAnimations(class UAnimMontage* TripodAnim, class UAnimMontage* WeaponAnim, class UAnimMontage* SoldierAnim, class ASQSoldier* Soldier, float* TripodAnimTime, float* WeaponAnimTime, float* SoldierAnimTime);
	void StopAnimations(class ASQSoldier* Soldier);
	void ResumeAnimations(class UAnimMontage* TripodAnim, class UAnimMontage* WeaponAnim, class UAnimMontage* SoldierAnim, float* AnimDuration);
	void SetReloadAnimTimer(float Time);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GenericDeployableWeapon_C">();
	}
	static class ABP_GenericDeployableWeapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GenericDeployableWeapon_C>();
	}
};
static_assert(alignof(ABP_GenericDeployableWeapon_C) == 0x000010, "Wrong alignment on ABP_GenericDeployableWeapon_C");
static_assert(sizeof(ABP_GenericDeployableWeapon_C) == 0x000D30, "Wrong size on ABP_GenericDeployableWeapon_C");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, UberGraphFrame) == 0x000BA0, "Member 'ABP_GenericDeployableWeapon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, SQTemperature) == 0x000BA8, "Member 'ABP_GenericDeployableWeapon_C::SQTemperature' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, ShutdownTemp) == 0x000BB0, "Member 'ABP_GenericDeployableWeapon_C::ShutdownTemp' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, OverheatEffectTrigger_1) == 0x000BB4, "Member 'ABP_GenericDeployableWeapon_C::OverheatEffectTrigger_1' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, OverheatEffectTrigger_2) == 0x000BB8, "Member 'ABP_GenericDeployableWeapon_C::OverheatEffectTrigger_2' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Overheat_1_Effect) == 0x000BC0, "Member 'ABP_GenericDeployableWeapon_C::Overheat_1_Effect' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Overheat_2_Effect) == 0x000BC8, "Member 'ABP_GenericDeployableWeapon_C::Overheat_2_Effect' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Overheat_3_Effect) == 0x000BD0, "Member 'ABP_GenericDeployableWeapon_C::Overheat_3_Effect' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Overheat_1_Sound) == 0x000BD8, "Member 'ABP_GenericDeployableWeapon_C::Overheat_1_Sound' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Overheat_2_Sound) == 0x000BE0, "Member 'ABP_GenericDeployableWeapon_C::Overheat_2_Sound' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, SoundTest) == 0x000BE8, "Member 'ABP_GenericDeployableWeapon_C::SoundTest' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Overheat_3_Sound) == 0x000BF0, "Member 'ABP_GenericDeployableWeapon_C::Overheat_3_Sound' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Mesh1PReturnSection) == 0x000BF8, "Member 'ABP_GenericDeployableWeapon_C::Mesh1PReturnSection' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Mesh3PReturnSection) == 0x000C00, "Member 'ABP_GenericDeployableWeapon_C::Mesh3PReturnSection' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, SoldierMeshReturnSection) == 0x000C08, "Member 'ABP_GenericDeployableWeapon_C::SoldierMeshReturnSection' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Fire_Camera_Shake_Outer_Radius) == 0x000C10, "Member 'ABP_GenericDeployableWeapon_C::Fire_Camera_Shake_Outer_Radius' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Fire_Camera_Shake_Falloff) == 0x000C14, "Member 'ABP_GenericDeployableWeapon_C::Fire_Camera_Shake_Falloff' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Fire_Camera_Shake_Epicenter_Socket) == 0x000C18, "Member 'ABP_GenericDeployableWeapon_C::Fire_Camera_Shake_Epicenter_Socket' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Camera_Shake_Preset) == 0x000C20, "Member 'ABP_GenericDeployableWeapon_C::Camera_Shake_Preset' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Fire_Weapon_Animation) == 0x000C28, "Member 'ABP_GenericDeployableWeapon_C::Fire_Weapon_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Fire_Soldier_Animation) == 0x000C30, "Member 'ABP_GenericDeployableWeapon_C::Fire_Soldier_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Fire_Tripod_Animation) == 0x000C38, "Member 'ABP_GenericDeployableWeapon_C::Fire_Tripod_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Reload_Tripod_Animation) == 0x000C40, "Member 'ABP_GenericDeployableWeapon_C::Reload_Tripod_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Reload_Weapon_Animation) == 0x000C48, "Member 'ABP_GenericDeployableWeapon_C::Reload_Weapon_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Reload_Soldier_Animation) == 0x000C50, "Member 'ABP_GenericDeployableWeapon_C::Reload_Soldier_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Reload_Dry_Tripod_Animation) == 0x000C58, "Member 'ABP_GenericDeployableWeapon_C::Reload_Dry_Tripod_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Reload_Dry_Weapon_Animation) == 0x000C60, "Member 'ABP_GenericDeployableWeapon_C::Reload_Dry_Weapon_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Reload_Dry_Soldier_Animation) == 0x000C68, "Member 'ABP_GenericDeployableWeapon_C::Reload_Dry_Soldier_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Equip_Soldier_Animation) == 0x000C70, "Member 'ABP_GenericDeployableWeapon_C::Equip_Soldier_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Equip_Weapon_Animation) == 0x000C78, "Member 'ABP_GenericDeployableWeapon_C::Equip_Weapon_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Equip_Tripod_Animation) == 0x000C80, "Member 'ABP_GenericDeployableWeapon_C::Equip_Tripod_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, BackblastSocket) == 0x000C88, "Member 'ABP_GenericDeployableWeapon_C::BackblastSocket' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, StartTransform) == 0x000C90, "Member 'ABP_GenericDeployableWeapon_C::StartTransform' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, EndTransform) == 0x000CC0, "Member 'ABP_GenericDeployableWeapon_C::EndTransform' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, MeshCurrentMontageTime) == 0x000CF0, "Member 'ABP_GenericDeployableWeapon_C::MeshCurrentMontageTime' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Equip_Transition_Soldier_Animation) == 0x000CF8, "Member 'ABP_GenericDeployableWeapon_C::Equip_Transition_Soldier_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Equip_Transition_Weapon_Animation) == 0x000D00, "Member 'ABP_GenericDeployableWeapon_C::Equip_Transition_Weapon_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, Equip_Transition_Tripod_Animation) == 0x000D08, "Member 'ABP_GenericDeployableWeapon_C::Equip_Transition_Tripod_Animation' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, ReloadAnimTimer) == 0x000D10, "Member 'ABP_GenericDeployableWeapon_C::ReloadAnimTimer' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, BPHasRecoil) == 0x000D18, "Member 'ABP_GenericDeployableWeapon_C::BPHasRecoil' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, BPMinPitchRecoil) == 0x000D1C, "Member 'ABP_GenericDeployableWeapon_C::BPMinPitchRecoil' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, BPMaxPitchRecoil) == 0x000D20, "Member 'ABP_GenericDeployableWeapon_C::BPMaxPitchRecoil' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, BPMaxLeftRecoil) == 0x000D24, "Member 'ABP_GenericDeployableWeapon_C::BPMaxLeftRecoil' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableWeapon_C, BPMaxRightRecoil) == 0x000D28, "Member 'ABP_GenericDeployableWeapon_C::BPMaxRightRecoil' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FobBleedRadialTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_FobBleedRadialTimer.W_FobBleedRadialTimer_C
// 0x0020 (0x02A8 - 0x0288)
class UW_FobBleedRadialTimer_C final : public USQProgressWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 RadialBar;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Reversed;                                          // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4359[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Material;                                          // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_FobBleedRadialTimer(int32 EntryPoint);
	void Construct();
	void BPOnTimerCanceled();
	void BPOnTimerProgress(float RemainingPct);
	void BPOnTimerStarted();
	void SetProgress(float ProgressPct);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_FobBleedRadialTimer_C">();
	}
	static class UW_FobBleedRadialTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_FobBleedRadialTimer_C>();
	}
};
static_assert(alignof(UW_FobBleedRadialTimer_C) == 0x000008, "Wrong alignment on UW_FobBleedRadialTimer_C");
static_assert(sizeof(UW_FobBleedRadialTimer_C) == 0x0002A8, "Wrong size on UW_FobBleedRadialTimer_C");
static_assert(offsetof(UW_FobBleedRadialTimer_C, UberGraphFrame) == 0x000288, "Member 'UW_FobBleedRadialTimer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_FobBleedRadialTimer_C, RadialBar) == 0x000290, "Member 'UW_FobBleedRadialTimer_C::RadialBar' has a wrong offset!");
static_assert(offsetof(UW_FobBleedRadialTimer_C, Reversed) == 0x000298, "Member 'UW_FobBleedRadialTimer_C::Reversed' has a wrong offset!");
static_assert(offsetof(UW_FobBleedRadialTimer_C, Material) == 0x0002A0, "Member 'UW_FobBleedRadialTimer_C::Material' has a wrong offset!");

}


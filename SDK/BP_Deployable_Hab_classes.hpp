#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Deployable_Hab

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"
#include "BP_SmartDeployable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Deployable_Hab.BP_Deployable_Hab_C
// 0x0088 (0x04D8 - 0x0450)
class ABP_Deployable_Hab_C : public ABP_SmartDeployable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Deployable_Hab_C;                // 0x0450(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDecalComponent*                        Decal;                                             // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal3;                                            // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal2;                                            // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal1;                                            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Exits;                                             // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQDeployableChildActorComponent*       CommanderTrigger;                                  // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQMapIconComponent*                    SQMapIcon;                                         // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayersCanSpawn;                                   // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5F[0x3];                                     // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RespawnIncrease;                                   // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpawnPointClass;                                   // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameSpawn*                           MySpawnPoint;                                      // 0x04A8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle;                                       // 0x04B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawnable;                                         // 0x04B8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          Destroyed;                                         // 0x04B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasEverBeenConstructed;                            // 0x04BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F60[0x1];                                     // 0x04BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ConstructionCompleteActivateDelay;                 // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RepairedActivateDelay;                             // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UnSiegedActivateDelay;                             // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ExitTraceExtent;                                   // 0x04CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Deployable_Hab(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Placed();
	void BPOnGhostMade();
	void OnActivatingTimeStampChanged(class ASQGameSpawn* SpawnPoint);
	void OnPreSpawnPointEnabledChanged(class ASQGameSpawn* SpawnPoint);
	void OnPreSpawnPointSiegeStateChanged(class ASQGameSpawn* SpawnPoint);
	void ReceiveDestroyed();
	void WaitConstruction();
	void BP_OnStateChange(ESQBuildState OldBuildState);
	void ReceiveBeginPlay();
	void OnRep_Spawnable();
	void Update_TC_Protection(bool Gain_Protection);
	void Update_Commander_Actions();
	void SetActivateDelay(float DelaySeconds);
	void DebugMessage();
	void UpdateDoorwayMarkers();
	void Additional_Can_Capture(bool* Can_Capture);
	class ASQGameSpawn* GetGameSpawn();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Deployable_Hab_C">();
	}
	static class ABP_Deployable_Hab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Deployable_Hab_C>();
	}
};
static_assert(alignof(ABP_Deployable_Hab_C) == 0x000008, "Wrong alignment on ABP_Deployable_Hab_C");
static_assert(sizeof(ABP_Deployable_Hab_C) == 0x0004D8, "Wrong size on ABP_Deployable_Hab_C");
static_assert(offsetof(ABP_Deployable_Hab_C, UberGraphFrame_BP_Deployable_Hab_C) == 0x000450, "Member 'ABP_Deployable_Hab_C::UberGraphFrame_BP_Deployable_Hab_C' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, Decal) == 0x000458, "Member 'ABP_Deployable_Hab_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, Decal3) == 0x000460, "Member 'ABP_Deployable_Hab_C::Decal3' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, Decal2) == 0x000468, "Member 'ABP_Deployable_Hab_C::Decal2' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, Decal1) == 0x000470, "Member 'ABP_Deployable_Hab_C::Decal1' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, Exits) == 0x000478, "Member 'ABP_Deployable_Hab_C::Exits' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, CommanderTrigger) == 0x000480, "Member 'ABP_Deployable_Hab_C::CommanderTrigger' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, SQMapIcon) == 0x000488, "Member 'ABP_Deployable_Hab_C::SQMapIcon' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, Box) == 0x000490, "Member 'ABP_Deployable_Hab_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, PlayersCanSpawn) == 0x000498, "Member 'ABP_Deployable_Hab_C::PlayersCanSpawn' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, RespawnIncrease) == 0x00049C, "Member 'ABP_Deployable_Hab_C::RespawnIncrease' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, SpawnPointClass) == 0x0004A0, "Member 'ABP_Deployable_Hab_C::SpawnPointClass' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, MySpawnPoint) == 0x0004A8, "Member 'ABP_Deployable_Hab_C::MySpawnPoint' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, TimerHandle) == 0x0004B0, "Member 'ABP_Deployable_Hab_C::TimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, Spawnable) == 0x0004B8, "Member 'ABP_Deployable_Hab_C::Spawnable' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, Destroyed) == 0x0004B9, "Member 'ABP_Deployable_Hab_C::Destroyed' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, HasEverBeenConstructed) == 0x0004BA, "Member 'ABP_Deployable_Hab_C::HasEverBeenConstructed' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, ConstructionCompleteActivateDelay) == 0x0004BC, "Member 'ABP_Deployable_Hab_C::ConstructionCompleteActivateDelay' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, RepairedActivateDelay) == 0x0004C0, "Member 'ABP_Deployable_Hab_C::RepairedActivateDelay' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, UnSiegedActivateDelay) == 0x0004C4, "Member 'ABP_Deployable_Hab_C::UnSiegedActivateDelay' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, Height) == 0x0004C8, "Member 'ABP_Deployable_Hab_C::Height' has a wrong offset!");
static_assert(offsetof(ABP_Deployable_Hab_C, ExitTraceExtent) == 0x0004CC, "Member 'ABP_Deployable_Hab_C::ExitTraceExtent' has a wrong offset!");

}


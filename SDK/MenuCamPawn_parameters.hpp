#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuCamPawn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MenuCameraScreen_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MenuCamPawn.MenuCamPawn_C.ExecuteUbergraph_MenuCamPawn
// 0x000C (0x000C - 0x0000)
struct MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PreviousTeam;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn) == 0x000004, "Wrong alignment on MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn");
static_assert(sizeof(MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn) == 0x00000C, "Wrong size on MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn");
static_assert(offsetof(MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn, EntryPoint) == 0x000000, "Member 'MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn, K2Node_Event_PreviousTeam) == 0x000004, "Member 'MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn::K2Node_Event_PreviousTeam' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'MenuCamPawn_C_ExecuteUbergraph_MenuCamPawn::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function MenuCamPawn.MenuCamPawn_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct MenuCamPawn_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCamPawn_C_ReceiveTick) == 0x000004, "Wrong alignment on MenuCamPawn_C_ReceiveTick");
static_assert(sizeof(MenuCamPawn_C_ReceiveTick) == 0x000004, "Wrong size on MenuCamPawn_C_ReceiveTick");
static_assert(offsetof(MenuCamPawn_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'MenuCamPawn_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function MenuCamPawn.MenuCamPawn_C.OnTeamChange
// 0x0004 (0x0004 - 0x0000)
struct MenuCamPawn_C_OnTeamChange final
{
public:
	int32                                         PreviousTeam;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCamPawn_C_OnTeamChange) == 0x000004, "Wrong alignment on MenuCamPawn_C_OnTeamChange");
static_assert(sizeof(MenuCamPawn_C_OnTeamChange) == 0x000004, "Wrong size on MenuCamPawn_C_OnTeamChange");
static_assert(offsetof(MenuCamPawn_C_OnTeamChange, PreviousTeam) == 0x000000, "Member 'MenuCamPawn_C_OnTeamChange::PreviousTeam' has a wrong offset!");

// Function MenuCamPawn.MenuCamPawn_C.Animate Move
// 0x0110 (0x0110 - 0x0000)
struct MenuCamPawn_C_Animate_Move final
{
public:
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AF[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TEase_ReturnValue;                        // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MenuCamPawn_C_Animate_Move) == 0x000010, "Wrong alignment on MenuCamPawn_C_Animate_Move");
static_assert(sizeof(MenuCamPawn_C_Animate_Move) == 0x000110, "Wrong size on MenuCamPawn_C_Animate_Move");
static_assert(offsetof(MenuCamPawn_C_Animate_Move, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'MenuCamPawn_C_Animate_Move::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Animate_Move, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'MenuCamPawn_C_Animate_Move::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Animate_Move, CallFunc_Ease_ReturnValue) == 0x000008, "Member 'MenuCamPawn_C_Animate_Move::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Animate_Move, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'MenuCamPawn_C_Animate_Move::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Animate_Move, CallFunc_FInterpTo_ReturnValue) == 0x000010, "Member 'MenuCamPawn_C_Animate_Move::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Animate_Move, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'MenuCamPawn_C_Animate_Move::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Animate_Move, CallFunc_TEase_ReturnValue) == 0x000050, "Member 'MenuCamPawn_C_Animate_Move::CallFunc_TEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Animate_Move, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000080, "Member 'MenuCamPawn_C_Animate_Move::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Animate_Move, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000108, "Member 'MenuCamPawn_C_Animate_Move::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function MenuCamPawn.MenuCamPawn_C.Find Menu Cameras
// 0x0038 (0x0038 - 0x0000)
struct MenuCamPawn_C_Find_Menu_Cameras final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B0[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMenuCamera_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMenuCamera_C*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B2[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCamPawn_C_Find_Menu_Cameras) == 0x000008, "Wrong alignment on MenuCamPawn_C_Find_Menu_Cameras");
static_assert(sizeof(MenuCamPawn_C_Find_Menu_Cameras) == 0x000038, "Wrong size on MenuCamPawn_C_Find_Menu_Cameras");
static_assert(offsetof(MenuCamPawn_C_Find_Menu_Cameras, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MenuCamPawn_C_Find_Menu_Cameras::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Find_Menu_Cameras, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MenuCamPawn_C_Find_Menu_Cameras::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Find_Menu_Cameras, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'MenuCamPawn_C_Find_Menu_Cameras::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Find_Menu_Cameras, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MenuCamPawn_C_Find_Menu_Cameras::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Find_Menu_Cameras, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'MenuCamPawn_C_Find_Menu_Cameras::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Find_Menu_Cameras, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'MenuCamPawn_C_Find_Menu_Cameras::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Find_Menu_Cameras, CallFunc_Array_Get_Item) == 0x000028, "Member 'MenuCamPawn_C_Find_Menu_Cameras::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Find_Menu_Cameras, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'MenuCamPawn_C_Find_Menu_Cameras::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Find_Menu_Cameras, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000034, "Member 'MenuCamPawn_C_Find_Menu_Cameras::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function MenuCamPawn.MenuCamPawn_C.Move Camera
// 0x0060 (0x0060 - 0x0000)
struct MenuCamPawn_C_Move_Camera final
{
public:
	EMenuCameraScreen                             New_Camera;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B3[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B4[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B5[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AMenuCamera_C*                          CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MenuCamPawn_C_Move_Camera) == 0x000010, "Wrong alignment on MenuCamPawn_C_Move_Camera");
static_assert(sizeof(MenuCamPawn_C_Move_Camera) == 0x000060, "Wrong size on MenuCamPawn_C_Move_Camera");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, New_Camera) == 0x000000, "Member 'MenuCamPawn_C_Move_Camera::New_Camera' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, Force) == 0x000001, "Member 'MenuCamPawn_C_Move_Camera::Force' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'MenuCamPawn_C_Move_Camera::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'MenuCamPawn_C_Move_Camera::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'MenuCamPawn_C_Move_Camera::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'MenuCamPawn_C_Move_Camera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MenuCamPawn_C_Move_Camera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'MenuCamPawn_C_Move_Camera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, CallFunc_Array_Get_Item) == 0x000050, "Member 'MenuCamPawn_C_Move_Camera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MenuCamPawn_C_Move_Camera, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'MenuCamPawn_C_Move_Camera::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function MenuCamPawn.MenuCamPawn_C.GetTeamId
// 0x0004 (0x0004 - 0x0000)
struct MenuCamPawn_C_GetTeamId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCamPawn_C_GetTeamId) == 0x000004, "Wrong alignment on MenuCamPawn_C_GetTeamId");
static_assert(sizeof(MenuCamPawn_C_GetTeamId) == 0x000004, "Wrong size on MenuCamPawn_C_GetTeamId");
static_assert(offsetof(MenuCamPawn_C_GetTeamId, ReturnValue) == 0x000000, "Member 'MenuCamPawn_C_GetTeamId::ReturnValue' has a wrong offset!");

}


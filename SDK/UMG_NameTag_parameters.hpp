#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_NameTag

#include "Basic.hpp"

#include "FSQRoleEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "NametagTargetInfo_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UMG_NameTag.UMG_NameTag_C.ExecuteUbergraph_UMG_NameTag
// 0x0128 (0x0128 - 0x0000)
struct UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3911[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQPipScopeCaptureComponent*            CallFunc_Get_PIP_PipComponent;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3912[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USQGameUserSettings*              K2Node_CustomEvent_UserSettings;                   // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3913[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3914[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x008C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue;  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3915[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3916[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USQGameUserSettings* UserSettings)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3917[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag) == 0x000008, "Wrong alignment on UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag");
static_assert(sizeof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag) == 0x000128, "Wrong size on UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, EntryPoint) == 0x000000, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_Get_PIP_PipComponent) == 0x000008, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_Get_PIP_PipComponent' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000028, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000038, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_CustomEvent_UserSettings) == 0x000040, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_CustomEvent_UserSettings' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000058, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_FMin_ReturnValue) == 0x000060, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000068, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_GetOwningPlayer_ReturnValue) == 0x000070, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000078, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_DynamicCast_AsSQPlayer_State) == 0x000080, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_Event_MyGeometry) == 0x00008C, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_Event_InDeltaTime) == 0x0000C4, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_GetPosition_ReturnValue) == 0x0000C8, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue) == 0x0000D0, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D4, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0000E8, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F0, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_IsValid_ReturnValue_1) == 0x000101, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_IsValid_ReturnValue_2) == 0x000102, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_FMin_ReturnValue_1) == 0x000104, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_MakeVector2D_ReturnValue) == 0x000108, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, K2Node_CreateDelegate_OutputDelegate_4) == 0x000110, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000120, "Member 'UMG_NameTag_C_ExecuteUbergraph_UMG_NameTag::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Tick
// 0x003C (0x003C - 0x0000)
struct UMG_NameTag_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_Tick) == 0x000004, "Wrong alignment on UMG_NameTag_C_Tick");
static_assert(sizeof(UMG_NameTag_C_Tick) == 0x00003C, "Wrong size on UMG_NameTag_C_Tick");
static_assert(offsetof(UMG_NameTag_C_Tick, MyGeometry) == 0x000000, "Member 'UMG_NameTag_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Tick, InDeltaTime) == 0x000038, "Member 'UMG_NameTag_C_Tick::InDeltaTime' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Load Saved Settings
// 0x0008 (0x0008 - 0x0000)
struct UMG_NameTag_C_Load_Saved_Settings final
{
public:
	const class USQGameUserSettings*              UserSettings;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_Load_Saved_Settings) == 0x000008, "Wrong alignment on UMG_NameTag_C_Load_Saved_Settings");
static_assert(sizeof(UMG_NameTag_C_Load_Saved_Settings) == 0x000008, "Wrong size on UMG_NameTag_C_Load_Saved_Settings");
static_assert(offsetof(UMG_NameTag_C_Load_Saved_Settings, UserSettings) == 0x000000, "Member 'UMG_NameTag_C_Load_Saved_Settings::UserSettings' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Get_Color
// 0x0058 (0x0058 - 0x0000)
struct UMG_NameTag_C_Get_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCommander_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3918[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3919[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTag_C_Get_Color) == 0x000008, "Wrong alignment on UMG_NameTag_C_Get_Color");
static_assert(sizeof(UMG_NameTag_C_Get_Color) == 0x000058, "Wrong size on UMG_NameTag_C_Get_Color");
static_assert(offsetof(UMG_NameTag_C_Get_Color, ReturnValue) == 0x000000, "Member 'UMG_NameTag_C_Get_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x000010, "Member 'UMG_NameTag_C_Get_Color::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UMG_NameTag_C_Get_Color::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_IsCommander_ReturnValue) == 0x000019, "Member 'UMG_NameTag_C_Get_Color::CallFunc_IsCommander_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_GetFireTeamIndex_ReturnValue) == 0x00001C, "Member 'UMG_NameTag_C_Get_Color::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_GetColor_ReturnValue) == 0x000020, "Member 'UMG_NameTag_C_Get_Color::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'UMG_NameTag_C_Get_Color::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_SelectColor_ReturnValue) == 0x000034, "Member 'UMG_NameTag_C_Get_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_SelectColor_ReturnValue_1) == 0x000044, "Member 'UMG_NameTag_C_Get_Color::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_IsAlive_ReturnValue) == 0x000054, "Member 'UMG_NameTag_C_Get_Color::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Color, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'UMG_NameTag_C_Get_Color::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Update Opacity
// 0x00C4 (0x00C4 - 0x0000)
struct UMG_NameTag_C_Update_Opacity final
{
public:
	float                                         L_Focus_Strength;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Location;                                        // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rank_Opacity_L;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Info_Opacity_L;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Distance;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetTargetDistance_Distance;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Tag_Test_Location_Location;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_ADS_In_ADS;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391A[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetContentColor_BOTTOM_ReturnValue;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetContentColor_TOP_ReturnValue;          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetScreenLocation_NewParam;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProductToCam_Dot;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391B[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391C[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391D[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391E[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_ADS_In_ADS_1;                         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391F[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_4;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_Update_Opacity) == 0x000004, "Wrong alignment on UMG_NameTag_C_Update_Opacity");
static_assert(sizeof(UMG_NameTag_C_Update_Opacity) == 0x0000C4, "Wrong size on UMG_NameTag_C_Update_Opacity");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, L_Focus_Strength) == 0x000000, "Member 'UMG_NameTag_C_Update_Opacity::L_Focus_Strength' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, L_Location) == 0x000004, "Member 'UMG_NameTag_C_Update_Opacity::L_Location' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, Rank_Opacity_L) == 0x000010, "Member 'UMG_NameTag_C_Update_Opacity::Rank_Opacity_L' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, Info_Opacity_L) == 0x000014, "Member 'UMG_NameTag_C_Update_Opacity::Info_Opacity_L' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, L_Distance) == 0x000018, "Member 'UMG_NameTag_C_Update_Opacity::L_Distance' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, Temp_bool_Variable) == 0x00001C, "Member 'UMG_NameTag_C_Update_Opacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, Temp_bool_Variable_1) == 0x00001D, "Member 'UMG_NameTag_C_Update_Opacity::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, Temp_bool_Variable_2) == 0x00001E, "Member 'UMG_NameTag_C_Update_Opacity::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_IsValid_ReturnValue) == 0x00001F, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_GetTargetDistance_Distance) == 0x000020, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_GetTargetDistance_Distance' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_Get_Tag_Test_Location_Location) == 0x000024, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_Get_Tag_Test_Location_Location' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_FMin_ReturnValue) == 0x000030, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_Get_ADS_In_ADS) == 0x000034, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_Get_ADS_In_ADS' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_GetContentColor_BOTTOM_ReturnValue) == 0x000038, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_GetContentColor_BOTTOM_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_GetContentColor_TOP_ReturnValue) == 0x000048, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_GetContentColor_TOP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_GetScreenLocation_NewParam) == 0x000058, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_GetScreenLocation_NewParam' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_DotProductToCam_Dot) == 0x000060, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_DotProductToCam_Dot' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_FClamp_ReturnValue) == 0x000064, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_FMin_ReturnValue_1) == 0x00006C, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_Less_FloatFloat_ReturnValue) == 0x000070, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, K2Node_Select_Default) == 0x000074, "Member 'UMG_NameTag_C_Update_Opacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_MapRangeClamped_ReturnValue) == 0x000078, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000084, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000088, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x00008C, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000090, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_SelectFloat_ReturnValue_1) == 0x000094, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000098, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_Get_ADS_In_ADS_1) == 0x00009C, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_Get_ADS_In_ADS_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0000A0, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x0000A4, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, K2Node_Select_Default_1) == 0x0000A8, "Member 'UMG_NameTag_C_Update_Opacity::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_FClamp_ReturnValue_1) == 0x0000AC, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, K2Node_Select_Default_2) == 0x0000B0, "Member 'UMG_NameTag_C_Update_Opacity::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000B4, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0000B8, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_SelectFloat_ReturnValue_2) == 0x0000BC, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Opacity, CallFunc_FClamp_ReturnValue_2) == 0x0000C0, "Member 'UMG_NameTag_C_Update_Opacity::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Find Target
// 0x00C8 (0x00C8 - 0x0000)
struct UMG_NameTag_C_Find_Target final
{
public:
	float                                         BestTargetDotProduct;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BestTargetLocation;                                // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         My_SL_State;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Test_Target;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APawn*>                          Test_Array;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class APawn*                                  Best_Target;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3920[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3921[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Tag_Test_Location_Location;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProductToCam_Dot;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3922[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3923[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3924[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetScreenLocation_NewParam;               // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3925[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3926[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTargetDistance_Distance;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3927[0x5];                                     // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue_1;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTag_C_Find_Target) == 0x000008, "Wrong alignment on UMG_NameTag_C_Find_Target");
static_assert(sizeof(UMG_NameTag_C_Find_Target) == 0x0000C8, "Wrong size on UMG_NameTag_C_Find_Target");
static_assert(offsetof(UMG_NameTag_C_Find_Target, BestTargetDotProduct) == 0x000000, "Member 'UMG_NameTag_C_Find_Target::BestTargetDotProduct' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, BestTargetLocation) == 0x000004, "Member 'UMG_NameTag_C_Find_Target::BestTargetLocation' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, My_SL_State) == 0x000010, "Member 'UMG_NameTag_C_Find_Target::My_SL_State' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, Test_Target) == 0x000018, "Member 'UMG_NameTag_C_Find_Target::Test_Target' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, Test_Array) == 0x000020, "Member 'UMG_NameTag_C_Find_Target::Test_Array' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, Best_Target) == 0x000030, "Member 'UMG_NameTag_C_Find_Target::Best_Target' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'UMG_NameTag_C_Find_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'UMG_NameTag_C_Find_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, Temp_int_Array_Index_Variable) == 0x000040, "Member 'UMG_NameTag_C_Find_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsValid_ReturnValue_1) == 0x000045, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000046, "Member 'UMG_NameTag_C_Find_Target::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_GetSoldier_ReturnValue) == 0x000048, "Member 'UMG_NameTag_C_Find_Target::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000050, "Member 'UMG_NameTag_C_Find_Target::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsInVehicle_ReturnValue) == 0x000058, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsValid_ReturnValue_2) == 0x000059, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsValid_ReturnValue_3) == 0x00005A, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_Get_Tag_Test_Location_Location) == 0x00005C, "Member 'UMG_NameTag_C_Find_Target::CallFunc_Get_Tag_Test_Location_Location' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_DotProductToCam_Dot) == 0x000068, "Member 'UMG_NameTag_C_Find_Target::CallFunc_DotProductToCam_Dot' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_Array_Get_Item) == 0x000070, "Member 'UMG_NameTag_C_Find_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000078, "Member 'UMG_NameTag_C_Find_Target::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'UMG_NameTag_C_Find_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'UMG_NameTag_C_Find_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsValid_ReturnValue_4) == 0x000081, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_GetScreenLocation_NewParam) == 0x000084, "Member 'UMG_NameTag_C_Find_Target::CallFunc_GetScreenLocation_NewParam' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsValid_ReturnValue_5) == 0x00008C, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00008D, "Member 'UMG_NameTag_C_Find_Target::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsValid_ReturnValue_6) == 0x00008E, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsValid_ReturnValue_7) == 0x00008F, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, K2Node_DynamicCast_AsSQVehicle) == 0x000090, "Member 'UMG_NameTag_C_Find_Target::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'UMG_NameTag_C_Find_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, K2Node_DynamicCast_AsSQSoldier) == 0x0000A0, "Member 'UMG_NameTag_C_Find_Target::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'UMG_NameTag_C_Find_Target::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_GetTargetDistance_Distance) == 0x0000AC, "Member 'UMG_NameTag_C_Find_Target::CallFunc_GetTargetDistance_Distance' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsAlive_ReturnValue) == 0x0000B0, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B1, "Member 'UMG_NameTag_C_Find_Target::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'UMG_NameTag_C_Find_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_GetCurrentVehicle_ReturnValue_1) == 0x0000B8, "Member 'UMG_NameTag_C_Find_Target::CallFunc_GetCurrentVehicle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'UMG_NameTag_C_Find_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_BooleanOR_ReturnValue) == 0x0000C1, "Member 'UMG_NameTag_C_Find_Target::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Find_Target, CallFunc_IsInVehicle_ReturnValue_1) == 0x0000C2, "Member 'UMG_NameTag_C_Find_Target::CallFunc_IsInVehicle_ReturnValue_1' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Get ADS
// 0x0020 (0x0020 - 0x0000)
struct UMG_NameTag_C_Get_ADS final
{
public:
	bool                                          In_ADS;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3928[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTag_C_Get_ADS) == 0x000008, "Wrong alignment on UMG_NameTag_C_Get_ADS");
static_assert(sizeof(UMG_NameTag_C_Get_ADS) == 0x000020, "Wrong size on UMG_NameTag_C_Get_ADS");
static_assert(offsetof(UMG_NameTag_C_Get_ADS, In_ADS) == 0x000000, "Member 'UMG_NameTag_C_Get_ADS::In_ADS' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_ADS, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UMG_NameTag_C_Get_ADS::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_ADS, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'UMG_NameTag_C_Get_ADS::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_ADS, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000008, "Member 'UMG_NameTag_C_Get_ADS::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_ADS, K2Node_DynamicCast_AsSQWeapon) == 0x000010, "Member 'UMG_NameTag_C_Get_ADS::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_ADS, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UMG_NameTag_C_Get_ADS::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_ADS, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'UMG_NameTag_C_Get_ADS::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Get_Kit_Image
// 0x0420 (0x0420 - 0x0000)
struct UMG_NameTag_C_Get_Kit_Image final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x0088(0x0088)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3929[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRoleSettings_C*                   K2Node_DynamicCast_AsBP_SQRole_Settings;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRoleEntry_Success;                     // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392A[0x5];                                     // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_RoleEntry;                   // 0x0128(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392B[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392C[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_1;       // 0x0210(0x0088)()
	class USQRoleSettings*                        CallFunc_GetCurrentRole_ReturnValue;               // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQRoleSettings_C*                   K2Node_DynamicCast_AsBP_SQRole_Settings_1;         // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRoleEntry_Success_1;                   // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392D[0x5];                                     // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_RoleEntry_1;                 // 0x02B0(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392E[0x6];                                     // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392F[0x7];                                     // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_2;       // 0x0398(0x0088)()
};
static_assert(alignof(UMG_NameTag_C_Get_Kit_Image) == 0x000008, "Wrong alignment on UMG_NameTag_C_Get_Kit_Image");
static_assert(sizeof(UMG_NameTag_C_Get_Kit_Image) == 0x000420, "Wrong size on UMG_NameTag_C_Get_Kit_Image");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, ReturnValue) == 0x000000, "Member 'UMG_NameTag_C_Get_Kit_Image::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x000088, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, K2Node_DynamicCast_AsBP_SQRole_Settings) == 0x000118, "Member 'UMG_NameTag_C_Get_Kit_Image::K2Node_DynamicCast_AsBP_SQRole_Settings' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'UMG_NameTag_C_Get_Kit_Image::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_IsValid_ReturnValue_1) == 0x000121, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_GetRoleEntry_Success) == 0x000122, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_GetRoleEntry_Success' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_GetRoleEntry_RoleEntry) == 0x000128, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_GetRoleEntry_RoleEntry' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_BooleanAND_ReturnValue) == 0x0001E8, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E9, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0001F0, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, K2Node_DynamicCast_AsTexture_2D) == 0x0001F8, "Member 'UMG_NameTag_C_Get_Kit_Image::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, K2Node_DynamicCast_bSuccess_1) == 0x000200, "Member 'UMG_NameTag_C_Get_Kit_Image::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000208, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_MakeBrushFromTexture_ReturnValue_1) == 0x000210, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_GetCurrentRole_ReturnValue) == 0x000298, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_GetCurrentRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, K2Node_DynamicCast_AsBP_SQRole_Settings_1) == 0x0002A0, "Member 'UMG_NameTag_C_Get_Kit_Image::K2Node_DynamicCast_AsBP_SQRole_Settings_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, K2Node_DynamicCast_bSuccess_2) == 0x0002A8, "Member 'UMG_NameTag_C_Get_Kit_Image::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_IsValid_ReturnValue_2) == 0x0002A9, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_GetRoleEntry_Success_1) == 0x0002AA, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_GetRoleEntry_Success_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_GetRoleEntry_RoleEntry_1) == 0x0002B0, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_GetRoleEntry_RoleEntry_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_BooleanAND_ReturnValue_2) == 0x000370, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_BooleanAND_ReturnValue_3) == 0x000371, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000378, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, K2Node_DynamicCast_AsTexture_2D_1) == 0x000380, "Member 'UMG_NameTag_C_Get_Kit_Image::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, K2Node_DynamicCast_bSuccess_3) == 0x000388, "Member 'UMG_NameTag_C_Get_Kit_Image::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000390, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Kit_Image, CallFunc_MakeBrushFromTexture_ReturnValue_2) == 0x000398, "Member 'UMG_NameTag_C_Get_Kit_Image::CallFunc_MakeBrushFromTexture_ReturnValue_2' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Get Tag Test Location
// 0x0120 (0x0120 - 0x0000)
struct UMG_NameTag_C_Get_Tag_Test_Location final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3930[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3931[0xF];                                     // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3932[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_ADS_In_ADS;                           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3933[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_TransformWorldPosToPiPScopeWorldPos_OutUVPoint; // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformWorldPosToPiPScopeWorldPos_ReturnValue; // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAbsMax2D_ReturnValue;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_Get_Tag_Test_Location) == 0x000010, "Wrong alignment on UMG_NameTag_C_Get_Tag_Test_Location");
static_assert(sizeof(UMG_NameTag_C_Get_Tag_Test_Location) == 0x000120, "Wrong size on UMG_NameTag_C_Get_Tag_Test_Location");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, Pawn) == 0x000000, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::Pawn' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, Location) == 0x000008, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::Location' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, TargetLocation) == 0x000014, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::TargetLocation' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000020, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, K2Node_DynamicCast_AsSQSoldier) == 0x000028, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_GetSocketTransform_ReturnValue) == 0x000040, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_BreakTransform_Location) == 0x000070, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_BreakVector_X) == 0x000094, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_BreakVector_Y) == 0x000098, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_BreakVector_Z) == 0x00009C, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A4, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_Get_ADS_In_ADS) == 0x0000B0, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_Get_ADS_In_ADS' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_TransformWorldPosToPiPScopeWorldPos_OutUVPoint) == 0x0000B4, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_TransformWorldPosToPiPScopeWorldPos_OutUVPoint' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_TransformWorldPosToPiPScopeWorldPos_ReturnValue) == 0x0000BC, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_TransformWorldPosToPiPScopeWorldPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_Subtract_Vector2DFloat_ReturnValue) == 0x0000C8, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_Subtract_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_GetAbsMax2D_ReturnValue) == 0x0000D0, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_GetAbsMax2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_MapRangeClamped_ReturnValue) == 0x0000D4, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_FCeil_ReturnValue) == 0x0000D8, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000DC, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_SelectFloat_ReturnValue) == 0x0000E0, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_MakeVector_ReturnValue) == 0x0000E4, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_SelectFloat_ReturnValue_1) == 0x0000FC, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_SelectFloat_ReturnValue_2) == 0x000100, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_Add_FloatFloat_ReturnValue) == 0x000104, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_Tag_Test_Location, CallFunc_MakeVector_ReturnValue_1) == 0x000108, "Member 'UMG_NameTag_C_Get_Tag_Test_Location::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Calc Target Info
// 0x0190 (0x0190 - 0x0000)
struct UMG_NameTag_C_Calc_Target_Info final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3934[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSquadState*                          SquadState;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         SQ_Player_State;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PlayerName;                                        // 0x0018(0x0018)(Parm, OutParm)
	bool                                          SL;                                                // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Same_Squad;                                        // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3935[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Vehicle_Occupants;                                 // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SameFTL;                                           // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3936[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Occupants;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             Vehicle;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         L_Player_State;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumOccupants_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3937[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         CallFunc_Get_SL_In_Vehicle_SL;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3938[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3939[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_393A[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USQVehicleSeatComponent*>        CallFunc_GetSeats_ReturnValue;                     // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_393B[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_393C[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393D[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFullPlayerName_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASQSquadState*                          CallFunc_GetSquadState_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_393E[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_393F[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3940[0x6];                                     // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3941[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue_1;           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTag_C_Calc_Target_Info) == 0x000008, "Wrong alignment on UMG_NameTag_C_Calc_Target_Info");
static_assert(sizeof(UMG_NameTag_C_Calc_Target_Info) == 0x000190, "Wrong size on UMG_NameTag_C_Calc_Target_Info");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, Success) == 0x000000, "Member 'UMG_NameTag_C_Calc_Target_Info::Success' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, SquadState) == 0x000008, "Member 'UMG_NameTag_C_Calc_Target_Info::SquadState' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, SQ_Player_State) == 0x000010, "Member 'UMG_NameTag_C_Calc_Target_Info::SQ_Player_State' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, PlayerName) == 0x000018, "Member 'UMG_NameTag_C_Calc_Target_Info::PlayerName' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, SL) == 0x000030, "Member 'UMG_NameTag_C_Calc_Target_Info::SL' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, Same_Squad) == 0x000031, "Member 'UMG_NameTag_C_Calc_Target_Info::Same_Squad' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, Vehicle_Occupants) == 0x000034, "Member 'UMG_NameTag_C_Calc_Target_Info::Vehicle_Occupants' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, SameFTL) == 0x000038, "Member 'UMG_NameTag_C_Calc_Target_Info::SameFTL' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, L_Occupants) == 0x00003C, "Member 'UMG_NameTag_C_Calc_Target_Info::L_Occupants' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, Vehicle) == 0x000040, "Member 'UMG_NameTag_C_Calc_Target_Info::Vehicle' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, L_Player_State) == 0x000048, "Member 'UMG_NameTag_C_Calc_Target_Info::L_Player_State' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, Temp_int_Array_Index_Variable) == 0x000050, "Member 'UMG_NameTag_C_Calc_Target_Info::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_GetNumOccupants_ReturnValue) == 0x000054, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_GetNumOccupants_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_Get_SL_In_Vehicle_SL) == 0x000060, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_Get_SL_In_Vehicle_SL' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, K2Node_DynamicCast_AsSQVehicle) == 0x000070, "Member 'UMG_NameTag_C_Calc_Target_Info::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'UMG_NameTag_C_Calc_Target_Info::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsValid_ReturnValue_2) == 0x000079, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, K2Node_DynamicCast_AsSQPlayer_State) == 0x000080, "Member 'UMG_NameTag_C_Calc_Target_Info::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'UMG_NameTag_C_Calc_Target_Info::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'UMG_NameTag_C_Calc_Target_Info::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_GetSeats_ReturnValue) == 0x000090, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_GetSeats_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsValid_ReturnValue_3) == 0x0000AC, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_Less_IntInt_ReturnValue) == 0x0000AD, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsValid_ReturnValue_4) == 0x0000B4, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_GetFireTeamIndex_ReturnValue) == 0x0000B8, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_GetFullPlayerName_ReturnValue) == 0x0000C0, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_GetFullPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_GetSquadState_ReturnValue) == 0x0000D0, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_GetSquadState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D8, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsValid_ReturnValue_5) == 0x0000F0, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, K2Node_MakeStruct_FormatArgumentData) == 0x0000F8, "Member 'UMG_NameTag_C_Calc_Target_Info::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, K2Node_MakeArray_Array) == 0x000138, "Member 'UMG_NameTag_C_Calc_Target_Info::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsSquadLeader_ReturnValue) == 0x000148, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_Format_ReturnValue) == 0x000150, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsValid_ReturnValue_6) == 0x000168, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsValid_ReturnValue_7) == 0x000169, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, K2Node_DynamicCast_AsSQSoldier) == 0x000170, "Member 'UMG_NameTag_C_Calc_Target_Info::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, K2Node_DynamicCast_bSuccess_2) == 0x000178, "Member 'UMG_NameTag_C_Calc_Target_Info::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_GetFireTeamIndex_ReturnValue_1) == 0x00017C, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_GetFireTeamIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000180, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000188, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsInVehicle_ReturnValue) == 0x000189, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_IsValid_ReturnValue_8) == 0x00018A, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Calc_Target_Info, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00018B, "Member 'UMG_NameTag_C_Calc_Target_Info::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.GetContentColor_TOP
// 0x0064 (0x0064 - 0x0000)
struct UMG_NameTag_C_GetContentColor_TOP final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_ADS_In_ADS;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3942[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Color_ReturnValue;                    // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3943[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_GetContentColor_TOP) == 0x000004, "Wrong alignment on UMG_NameTag_C_GetContentColor_TOP");
static_assert(sizeof(UMG_NameTag_C_GetContentColor_TOP) == 0x000064, "Wrong size on UMG_NameTag_C_GetContentColor_TOP");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, ReturnValue) == 0x000000, "Member 'UMG_NameTag_C_GetContentColor_TOP::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'UMG_NameTag_C_GetContentColor_TOP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000020, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_Get_ADS_In_ADS) == 0x000021, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_Get_ADS_In_ADS' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_FMin_ReturnValue) == 0x000024, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_Get_Color_ReturnValue) == 0x00002C, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_Get_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_IsValid_ReturnValue) == 0x00003D, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_BooleanOR_ReturnValue) == 0x00003F, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, Temp_bool_Variable) == 0x000040, "Member 'UMG_NameTag_C_GetContentColor_TOP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_SelectFloat_ReturnValue) == 0x000044, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, K2Node_Select_Default) == 0x000048, "Member 'UMG_NameTag_C_GetContentColor_TOP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_SelectFloat_ReturnValue_1) == 0x00004C, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000050, "Member 'UMG_NameTag_C_GetContentColor_TOP::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_TOP, K2Node_MakeStruct_LinearColor_1) == 0x000054, "Member 'UMG_NameTag_C_GetContentColor_TOP::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.GetContentColor_BOTTOM
// 0x0050 (0x0050 - 0x0000)
struct UMG_NameTag_C_GetContentColor_BOTTOM final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3944[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Color_ReturnValue;                    // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3945[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_GetContentColor_BOTTOM) == 0x000004, "Wrong alignment on UMG_NameTag_C_GetContentColor_BOTTOM");
static_assert(sizeof(UMG_NameTag_C_GetContentColor_BOTTOM) == 0x000050, "Wrong size on UMG_NameTag_C_GetContentColor_BOTTOM");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_BOTTOM, ReturnValue) == 0x000000, "Member 'UMG_NameTag_C_GetContentColor_BOTTOM::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_BOTTOM, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'UMG_NameTag_C_GetContentColor_BOTTOM::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_BOTTOM, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000020, "Member 'UMG_NameTag_C_GetContentColor_BOTTOM::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_BOTTOM, CallFunc_Get_Color_ReturnValue) == 0x000024, "Member 'UMG_NameTag_C_GetContentColor_BOTTOM::CallFunc_Get_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_BOTTOM, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'UMG_NameTag_C_GetContentColor_BOTTOM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_BOTTOM, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'UMG_NameTag_C_GetContentColor_BOTTOM::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_BOTTOM, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'UMG_NameTag_C_GetContentColor_BOTTOM::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetContentColor_BOTTOM, K2Node_MakeStruct_LinearColor_1) == 0x000040, "Member 'UMG_NameTag_C_GetContentColor_BOTTOM::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Get SL In Vehicle
// 0x0048 (0x0048 - 0x0000)
struct UMG_NameTag_C_Get_SL_In_Vehicle final
{
public:
	class ASQVehicle*                             V;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         SL;                                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3946[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSquadState*                          CallFunc_GetSquadState_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3947[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3948[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTag_C_Get_SL_In_Vehicle) == 0x000008, "Wrong alignment on UMG_NameTag_C_Get_SL_In_Vehicle");
static_assert(sizeof(UMG_NameTag_C_Get_SL_In_Vehicle) == 0x000048, "Wrong size on UMG_NameTag_C_Get_SL_In_Vehicle");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, V) == 0x000000, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::V' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, SL) == 0x000008, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::SL' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, Temp_int_Array_Index_Variable) == 0x000010, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_Array_Get_Item) == 0x000018, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_GetSquadState_ReturnValue) == 0x000028, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_GetSquadState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_IsSquadLeader_ReturnValue) == 0x000030, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_SL_In_Vehicle, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'UMG_NameTag_C_Get_SL_In_Vehicle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Refresh Tag
// 0x0380 (0x0380 - 0x0000)
struct UMG_NameTag_C_Refresh_Tag final
{
public:
	bool                                          InTheSameFTL;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3949[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   L_SQ;                                              // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   L_FT;                                              // 0x0020(0x0018)(Edit, BlueprintVisible)
	float                                         Current_Distance;                                  // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394A[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        Role;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_394B[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_394C[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_394D[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_394E[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_394F[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3950[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0108(0x0018)()
	class UBP_SQRoleSettings_C*                   K2Node_DynamicCast_AsBP_SQRole_Settings;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRoleEntry_Success;                     // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3951[0x5];                                     // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_RoleEntry;                   // 0x0130(0x00C0)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x01F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0208(0x0040)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCommander_ReturnValue;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCommander_ReturnValue_1;                // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3952[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3953[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_5;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3954[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetDistance_Distance;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3955[0x2];                                     // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_7;                           // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3956[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0290(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3957[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02D8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetAlphabetLetterString_ReturnValue;      // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02F8(0x0018)()
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3958[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0328(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0340(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x035E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3959[0x1];                                     // 0x035F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_8;                           // 0x0360(0x0018)()
	bool                                          Temp_bool_Variable_11;                             // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_9;                           // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMedic_ReturnValue;                      // 0x037A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x037B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_10;                          // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_11;                          // 0x037D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_Refresh_Tag) == 0x000008, "Wrong alignment on UMG_NameTag_C_Refresh_Tag");
static_assert(sizeof(UMG_NameTag_C_Refresh_Tag) == 0x000380, "Wrong size on UMG_NameTag_C_Refresh_Tag");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, InTheSameFTL) == 0x000000, "Member 'UMG_NameTag_C_Refresh_Tag::InTheSameFTL' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, L_SQ) == 0x000008, "Member 'UMG_NameTag_C_Refresh_Tag::L_SQ' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, L_FT) == 0x000020, "Member 'UMG_NameTag_C_Refresh_Tag::L_FT' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Current_Distance) == 0x000038, "Member 'UMG_NameTag_C_Refresh_Tag::Current_Distance' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Role) == 0x000040, "Member 'UMG_NameTag_C_Refresh_Tag::Role' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable) == 0x000048, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_object_Variable) == 0x000050, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_1) == 0x000058, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_byte_Variable) == 0x000059, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_byte_Variable_1) == 0x00005A, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_2) == 0x00005B, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_byte_Variable_2) == 0x00005C, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_byte_Variable_3) == 0x00005D, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_3) == 0x00005E, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_object_Variable_1) == 0x000060, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_4) == 0x000068, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_object_Variable_2) == 0x000070, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_object_Variable_3) == 0x000078, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_5) == 0x000080, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_6) == 0x000081, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_byte_Variable_4) == 0x000082, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_byte_Variable_5) == 0x000083, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_7) == 0x000084, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_byte_Variable_6) == 0x000085, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_byte_Variable_7) == 0x000086, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Not_PreBool_ReturnValue) == 0x000087, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_MakeArray_Array) == 0x0000D8, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Less_FloatFloat_ReturnValue) == 0x000100, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_text_Variable) == 0x000108, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_DynamicCast_AsBP_SQRole_Settings) == 0x000120, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_DynamicCast_AsBP_SQRole_Settings' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_8) == 0x000129, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_GetRoleEntry_Success) == 0x00012A, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_GetRoleEntry_Success' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_GetRoleEntry_RoleEntry) == 0x000130, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_GetRoleEntry_RoleEntry' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default) == 0x0001F0, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_MakeStruct_FormatArgumentData_1) == 0x000208, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_1) == 0x000248, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_BooleanAND_ReturnValue) == 0x000249, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_BooleanOR_ReturnValue) == 0x00024A, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_BooleanOR_ReturnValue_1) == 0x00024B, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Conv_BoolToInt_ReturnValue) == 0x00024C, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_IsCommander_ReturnValue) == 0x000250, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_IsCommander_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_IsCommander_ReturnValue_1) == 0x000251, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_IsCommander_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_IsFireTeamLeader_ReturnValue) == 0x000252, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_BooleanOR_ReturnValue_2) == 0x000253, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_2) == 0x000258, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_3) == 0x000260, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_4) == 0x000268, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_5) == 0x000270, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_6) == 0x000278, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_int_Variable) == 0x00027C, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_GetTargetDistance_Distance) == 0x000280, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_GetTargetDistance_Distance' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_IsValid_ReturnValue) == 0x000284, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_9) == 0x000285, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_7) == 0x000288, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_MakeStruct_FormatArgumentData_2) == 0x000290, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_GetFireTeamIndex_ReturnValue) == 0x0002D0, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_MakeArray_Array_1) == 0x0002D8, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_GetAlphabetLetterString_ReturnValue) == 0x0002E8, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_GetAlphabetLetterString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Format_ReturnValue_1) == 0x0002F8, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_ToUpper_ReturnValue) == 0x000310, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_IsValid_ReturnValue_1) == 0x000320, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Conv_StringToText_ReturnValue) == 0x000328, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Conv_IntToText_ReturnValue) == 0x000340, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_IsValid_ReturnValue_2) == 0x000358, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_IsValid_ReturnValue_3) == 0x000359, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_BooleanAND_ReturnValue_1) == 0x00035A, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_Not_PreBool_ReturnValue_1) == 0x00035B, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_BooleanAND_ReturnValue_2) == 0x00035C, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_10) == 0x00035D, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_IsValid_ReturnValue_4) == 0x00035E, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_8) == 0x000360, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, Temp_bool_Variable_11) == 0x000378, "Member 'UMG_NameTag_C_Refresh_Tag::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_9) == 0x000379, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_IsMedic_ReturnValue) == 0x00037A, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_IsMedic_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, CallFunc_BooleanOR_ReturnValue_3) == 0x00037B, "Member 'UMG_NameTag_C_Refresh_Tag::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_10) == 0x00037C, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Refresh_Tag, K2Node_Select_Default_11) == 0x00037D, "Member 'UMG_NameTag_C_Refresh_Tag::K2Node_Select_Default_11' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Cache Data
// 0x00C0 (0x00C0 - 0x0000)
struct UMG_NameTag_C_Cache_Data final
{
public:
	bool                                          CallFunc_Calc_Target_Info_Success;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_395A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSquadState*                          CallFunc_Calc_Target_Info_SquadState;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         CallFunc_Calc_Target_Info_SQ_Player_State;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Calc_Target_Info_PlayerName;              // 0x0018(0x0018)()
	bool                                          CallFunc_Calc_Target_Info_SL;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Calc_Target_Info_Same_Squad;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_395B[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Calc_Target_Info_Vehicle_Occupants;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Calc_Target_Info_SameFTL;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_395C[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNametagTargetInfo                     K2Node_MakeStruct_NametagTargetInfo;               // 0x0040(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_395D[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNametagTargetInfo                     K2Node_SetFieldsInStruct_StructOut;                // 0x0080(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTag_C_Cache_Data) == 0x000008, "Wrong alignment on UMG_NameTag_C_Cache_Data");
static_assert(sizeof(UMG_NameTag_C_Cache_Data) == 0x0000C0, "Wrong size on UMG_NameTag_C_Cache_Data");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_Calc_Target_Info_Success) == 0x000000, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_Calc_Target_Info_Success' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_Calc_Target_Info_SquadState) == 0x000008, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_Calc_Target_Info_SquadState' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_Calc_Target_Info_SQ_Player_State) == 0x000010, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_Calc_Target_Info_SQ_Player_State' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_Calc_Target_Info_PlayerName) == 0x000018, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_Calc_Target_Info_PlayerName' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_Calc_Target_Info_SL) == 0x000030, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_Calc_Target_Info_SL' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_Calc_Target_Info_Same_Squad) == 0x000031, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_Calc_Target_Info_Same_Squad' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_Calc_Target_Info_Vehicle_Occupants) == 0x000034, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_Calc_Target_Info_Vehicle_Occupants' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_Calc_Target_Info_SameFTL) == 0x000038, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_Calc_Target_Info_SameFTL' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_IsFireTeamLeader_ReturnValue) == 0x000039, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, K2Node_MakeStruct_NametagTargetInfo) == 0x000040, "Member 'UMG_NameTag_C_Cache_Data::K2Node_MakeStruct_NametagTargetInfo' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, K2Node_SetFieldsInStruct_StructOut) == 0x000080, "Member 'UMG_NameTag_C_Cache_Data::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B8, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Cache_Data, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'UMG_NameTag_C_Cache_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Update SL Save Data
// 0x0008 (0x0008 - 0x0000)
struct UMG_NameTag_C_Update_SL_Save_Data final
{
public:
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_Update_SL_Save_Data) == 0x000008, "Wrong alignment on UMG_NameTag_C_Update_SL_Save_Data");
static_assert(sizeof(UMG_NameTag_C_Update_SL_Save_Data) == 0x000008, "Wrong size on UMG_NameTag_C_Update_SL_Save_Data");
static_assert(offsetof(UMG_NameTag_C_Update_SL_Save_Data, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000000, "Member 'UMG_NameTag_C_Update_SL_Save_Data::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Update FT Save Data
// 0x0010 (0x0010 - 0x0000)
struct UMG_NameTag_C_Update_FT_Save_Data final
{
public:
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_Update_FT_Save_Data) == 0x000008, "Wrong alignment on UMG_NameTag_C_Update_FT_Save_Data");
static_assert(sizeof(UMG_NameTag_C_Update_FT_Save_Data) == 0x000010, "Wrong size on UMG_NameTag_C_Update_FT_Save_Data");
static_assert(offsetof(UMG_NameTag_C_Update_FT_Save_Data, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000000, "Member 'UMG_NameTag_C_Update_FT_Save_Data::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_FT_Save_Data, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000008, "Member 'UMG_NameTag_C_Update_FT_Save_Data::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.FindBestTarget
// 0x0020 (0x0020 - 0x0000)
struct UMG_NameTag_C_FindBestTarget final
{
public:
	struct FVector                                BestTargetLocation;                                // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BestTargetDotProduct;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Best_Target;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Test_Target;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_FindBestTarget) == 0x000008, "Wrong alignment on UMG_NameTag_C_FindBestTarget");
static_assert(sizeof(UMG_NameTag_C_FindBestTarget) == 0x000020, "Wrong size on UMG_NameTag_C_FindBestTarget");
static_assert(offsetof(UMG_NameTag_C_FindBestTarget, BestTargetLocation) == 0x000000, "Member 'UMG_NameTag_C_FindBestTarget::BestTargetLocation' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_FindBestTarget, BestTargetDotProduct) == 0x00000C, "Member 'UMG_NameTag_C_FindBestTarget::BestTargetDotProduct' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_FindBestTarget, Best_Target) == 0x000010, "Member 'UMG_NameTag_C_FindBestTarget::Best_Target' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_FindBestTarget, Test_Target) == 0x000018, "Member 'UMG_NameTag_C_FindBestTarget::Test_Target' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.GetScreenLocation
// 0x0068 (0x0068 - 0x0000)
struct UMG_NameTag_C_GetScreenLocation final
{
public:
	struct FVector                                Loc;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewParam;                                          // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395E[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_395F[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_GetScreenLocation) == 0x000008, "Wrong alignment on UMG_NameTag_C_GetScreenLocation");
static_assert(sizeof(UMG_NameTag_C_GetScreenLocation) == 0x000068, "Wrong size on UMG_NameTag_C_GetScreenLocation");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, Loc) == 0x000000, "Member 'UMG_NameTag_C_GetScreenLocation::Loc' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, NewParam) == 0x00000C, "Member 'UMG_NameTag_C_GetScreenLocation::NewParam' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_GetViewportScale_ReturnValue) == 0x000020, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x000024, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x00002C, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_GetViewportSize_ReturnValue) == 0x000030, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_BreakVector2D_X) == 0x000038, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_BreakVector2D_Y) == 0x00003C, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_BreakVector2D_Y_1) == 0x000044, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_FClamp_ReturnValue_1) == 0x000054, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_MakeVector2D_ReturnValue) == 0x000058, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetScreenLocation, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000060, "Member 'UMG_NameTag_C_GetScreenLocation::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.DotProductToCam
// 0x0044 (0x0044 - 0x0000)
struct UMG_NameTag_C_DotProductToCam final
{
public:
	struct FVector                                VecIn;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dot;                                               // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_DotProductToCam) == 0x000004, "Wrong alignment on UMG_NameTag_C_DotProductToCam");
static_assert(sizeof(UMG_NameTag_C_DotProductToCam) == 0x000044, "Wrong size on UMG_NameTag_C_DotProductToCam");
static_assert(offsetof(UMG_NameTag_C_DotProductToCam, VecIn) == 0x000000, "Member 'UMG_NameTag_C_DotProductToCam::VecIn' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_DotProductToCam, Dot) == 0x00000C, "Member 'UMG_NameTag_C_DotProductToCam::Dot' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_DotProductToCam, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'UMG_NameTag_C_DotProductToCam::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_DotProductToCam, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'UMG_NameTag_C_DotProductToCam::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_DotProductToCam, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'UMG_NameTag_C_DotProductToCam::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_DotProductToCam, CallFunc_Normal_ReturnValue) == 0x000034, "Member 'UMG_NameTag_C_DotProductToCam::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_DotProductToCam, CallFunc_Dot_VectorVector_ReturnValue) == 0x000040, "Member 'UMG_NameTag_C_DotProductToCam::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Get PIP
// 0x0028 (0x0028 - 0x0000)
struct UMG_NameTag_C_Get_PIP final
{
public:
	class USQPipScopeCaptureComponent*            PiPComponent;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3960[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTag_C_Get_PIP) == 0x000008, "Wrong alignment on UMG_NameTag_C_Get_PIP");
static_assert(sizeof(UMG_NameTag_C_Get_PIP) == 0x000028, "Wrong size on UMG_NameTag_C_Get_PIP");
static_assert(offsetof(UMG_NameTag_C_Get_PIP, PiPComponent) == 0x000000, "Member 'UMG_NameTag_C_Get_PIP::PiPComponent' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_PIP, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UMG_NameTag_C_Get_PIP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_PIP, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'UMG_NameTag_C_Get_PIP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_PIP, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000010, "Member 'UMG_NameTag_C_Get_PIP::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_PIP, K2Node_DynamicCast_AsSQWeapon) == 0x000018, "Member 'UMG_NameTag_C_Get_PIP::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Get_PIP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UMG_NameTag_C_Get_PIP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.Update Line of Sight
// 0x0058 (0x0058 - 0x0000)
struct UMG_NameTag_C_Update_Line_of_Sight final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3961[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Tag_Test_Location_Location;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoS_Trace_Check_Has_LoS;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3962[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoS_Trace_Check_Has_LoS_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3963[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3964[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTag_C_Update_Line_of_Sight) == 0x000004, "Wrong alignment on UMG_NameTag_C_Update_Line_of_Sight");
static_assert(sizeof(UMG_NameTag_C_Update_Line_of_Sight) == 0x000058, "Wrong size on UMG_NameTag_C_Update_Line_of_Sight");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_Get_Tag_Test_Location_Location) == 0x000010, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_Get_Tag_Test_Location_Location' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_Add_VectorVector_ReturnValue) == 0x00001C, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_LoS_Trace_Check_Has_LoS) == 0x000028, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_LoS_Trace_Check_Has_LoS' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00002C, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_LoS_Trace_Check_Has_LoS_1) == 0x000038, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_LoS_Trace_Check_Has_LoS_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000044, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_Vector_Distance_ReturnValue) == 0x000050, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_Update_Line_of_Sight, CallFunc_Less_FloatFloat_ReturnValue) == 0x000054, "Member 'UMG_NameTag_C_Update_Line_of_Sight::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.LoS Trace Check
// 0x0148 (0x0148 - 0x0000)
struct UMG_NameTag_C_LoS_Trace_Check final
{
public:
	struct FVector                                From;                                              // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_LoS;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3965[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3966[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3967[0x1];                                     // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3968[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTag_C_LoS_Trace_Check) == 0x000008, "Wrong alignment on UMG_NameTag_C_LoS_Trace_Check");
static_assert(sizeof(UMG_NameTag_C_LoS_Trace_Check) == 0x000148, "Wrong size on UMG_NameTag_C_LoS_Trace_Check");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, From) == 0x000000, "Member 'UMG_NameTag_C_LoS_Trace_Check::From' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, Has_LoS) == 0x00000C, "Member 'UMG_NameTag_C_LoS_Trace_Check::Has_LoS' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, Temp_object_Variable) == 0x000010, "Member 'UMG_NameTag_C_LoS_Trace_Check::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, K2Node_DynamicCast_AsSQSoldier) == 0x000020, "Member 'UMG_NameTag_C_LoS_Trace_Check::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UMG_NameTag_C_LoS_Trace_Check::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_LineTraceSingle_OutHit) == 0x000038, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_LineTraceSingle_ReturnValue) == 0x0000C0, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C1, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C2, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_Time) == 0x0000C4, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_Distance) == 0x0000C8, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_Location) == 0x0000CC, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D8, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_Normal) == 0x0000E4, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F0, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_HitItem) == 0x000120, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_ElementIndex) == 0x000124, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_FaceIndex) == 0x000128, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_TraceStart) == 0x00012C, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_BreakHitResult_TraceEnd) == 0x000138, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_LoS_Trace_Check, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000144, "Member 'UMG_NameTag_C_LoS_Trace_Check::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function UMG_NameTag.UMG_NameTag_C.GetTargetDistance
// 0x0028 (0x0028 - 0x0000)
struct UMG_NameTag_C_GetTargetDistance final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTag_C_GetTargetDistance) == 0x000008, "Wrong alignment on UMG_NameTag_C_GetTargetDistance");
static_assert(sizeof(UMG_NameTag_C_GetTargetDistance) == 0x000028, "Wrong size on UMG_NameTag_C_GetTargetDistance");
static_assert(offsetof(UMG_NameTag_C_GetTargetDistance, Pawn) == 0x000000, "Member 'UMG_NameTag_C_GetTargetDistance::Pawn' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetTargetDistance, Distance) == 0x000008, "Member 'UMG_NameTag_C_GetTargetDistance::Distance' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetTargetDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'UMG_NameTag_C_GetTargetDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetTargetDistance, CallFunc_GetCameraLocation_ReturnValue) == 0x000018, "Member 'UMG_NameTag_C_GetTargetDistance::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTag_C_GetTargetDistance, CallFunc_Vector_Distance_ReturnValue) == 0x000024, "Member 'UMG_NameTag_C_GetTargetDistance::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");

}


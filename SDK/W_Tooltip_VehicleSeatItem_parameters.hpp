#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Tooltip_VehicleSeatItem

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FSQRoleEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function W_Tooltip_VehicleSeatItem.W_Tooltip_VehicleSeatItem_C.ExecuteUbergraph_W_Tooltip_VehicleSeatItem
// 0x0088 (0x0088 - 0x0000)
struct W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQVehicleOccupantInfo                 K2Node_CustomEvent_Occupant_Info;                  // 0x0008(0x0038)()
	class USQMapWidgetVehicle*                    K2Node_CustomEvent_Vehicle_Widget;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Is_Self_Team;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364F[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_My_Seat_ID;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Seat_Index;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3650[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem) == 0x000008, "Wrong alignment on W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem");
static_assert(sizeof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem) == 0x000088, "Wrong size on W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, EntryPoint) == 0x000000, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, K2Node_CustomEvent_Occupant_Info) == 0x000008, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::K2Node_CustomEvent_Occupant_Info' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, K2Node_CustomEvent_Vehicle_Widget) == 0x000040, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::K2Node_CustomEvent_Vehicle_Widget' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, K2Node_CustomEvent_Is_Self_Team) == 0x000048, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::K2Node_CustomEvent_Is_Self_Team' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, K2Node_CustomEvent_My_Seat_ID) == 0x00004C, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::K2Node_CustomEvent_My_Seat_ID' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, K2Node_CustomEvent_Seat_Index) == 0x000050, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::K2Node_CustomEvent_Seat_Index' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, CallFunc_GetOwningPlayer_ReturnValue) == 0x000070, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000078, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'W_Tooltip_VehicleSeatItem_C_ExecuteUbergraph_W_Tooltip_VehicleSeatItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_Tooltip_VehicleSeatItem.W_Tooltip_VehicleSeatItem_C.Update Occupant
// 0x0050 (0x0050 - 0x0000)
struct W_Tooltip_VehicleSeatItem_C_Update_Occupant final
{
public:
	struct FSQVehicleOccupantInfo                 Param_Occupant_Info;                               // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	class USQMapWidgetVehicle*                    Param_Vehicle_Widget;                              // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Is_Self_Team;                                // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3651[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_My_Seat_ID;                                  // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Seat_Index;                                  // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_VehicleSeatItem_C_Update_Occupant) == 0x000008, "Wrong alignment on W_Tooltip_VehicleSeatItem_C_Update_Occupant");
static_assert(sizeof(W_Tooltip_VehicleSeatItem_C_Update_Occupant) == 0x000050, "Wrong size on W_Tooltip_VehicleSeatItem_C_Update_Occupant");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Occupant, Param_Occupant_Info) == 0x000000, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Occupant::Param_Occupant_Info' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Occupant, Param_Vehicle_Widget) == 0x000038, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Occupant::Param_Vehicle_Widget' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Occupant, Param_Is_Self_Team) == 0x000040, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Occupant::Param_Is_Self_Team' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Occupant, Param_My_Seat_ID) == 0x000044, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Occupant::Param_My_Seat_ID' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Occupant, Param_Seat_Index) == 0x000048, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Occupant::Param_Seat_Index' has a wrong offset!");

// Function W_Tooltip_VehicleSeatItem.W_Tooltip_VehicleSeatItem_C.Get Tint
// 0x0030 (0x0030 - 0x0000)
struct W_Tooltip_VehicleSeatItem_C_Get_Tint final
{
public:
	struct FLinearColor                           Out_Color;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              Temp_byte_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_3;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_4;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Self_Squad_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_1;                           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_2;                           // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_3;                           // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_VehicleSeatItem_C_Get_Tint) == 0x000004, "Wrong alignment on W_Tooltip_VehicleSeatItem_C_Get_Tint");
static_assert(sizeof(W_Tooltip_VehicleSeatItem_C_Get_Tint) == 0x000030, "Wrong size on W_Tooltip_VehicleSeatItem_C_Get_Tint");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Out_Color) == 0x000000, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Out_Color' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Temp_bool_Variable) == 0x000010, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Temp_byte_Variable) == 0x000011, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Temp_bool_Variable_1) == 0x000012, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Temp_byte_Variable_1) == 0x000013, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Temp_byte_Variable_2) == 0x000014, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Temp_bool_Variable_2) == 0x000015, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Temp_byte_Variable_3) == 0x000016, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Temp_bool_Variable_3) == 0x000017, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, Temp_byte_Variable_4) == 0x000018, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, CallFunc_Self_Squad_ReturnValue) == 0x00001B, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::CallFunc_Self_Squad_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, K2Node_Select_Default) == 0x00001C, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, K2Node_Select_Default_1) == 0x00001D, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, K2Node_Select_Default_2) == 0x00001E, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, K2Node_Select_Default_3) == 0x00001F, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Get_Tint, CallFunc_GetColor_ReturnValue) == 0x000020, "Member 'W_Tooltip_VehicleSeatItem_C_Get_Tint::CallFunc_GetColor_ReturnValue' has a wrong offset!");

// Function W_Tooltip_VehicleSeatItem.W_Tooltip_VehicleSeatItem_C.UpdateKitVisuals
// 0x0138 (0x0138 - 0x0000)
struct W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals final
{
public:
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0000(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3652[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRoleSettings_C*                   K2Node_DynamicCast_AsBP_SQRole_Settings;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRoleEntry_Success;                     // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3653[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_RoleEntry;                   // 0x0040(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3654[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0108(0x0028)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals) == 0x000008, "Wrong alignment on W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals");
static_assert(sizeof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals) == 0x000138, "Wrong size on W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, Temp_softobject_Variable) == 0x000000, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, Temp_bool_Variable) == 0x000028, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, Temp_byte_Variable) == 0x000029, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, Temp_byte_Variable_1) == 0x00002A, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, Temp_bool_Variable_1) == 0x00002B, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, K2Node_DynamicCast_AsBP_SQRole_Settings) == 0x000030, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::K2Node_DynamicCast_AsBP_SQRole_Settings' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, CallFunc_GetRoleEntry_Success) == 0x00003A, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::CallFunc_GetRoleEntry_Success' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, CallFunc_GetRoleEntry_RoleEntry) == 0x000040, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::CallFunc_GetRoleEntry_RoleEntry' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, CallFunc_BooleanAND_ReturnValue) == 0x000100, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, CallFunc_BooleanAND_ReturnValue_1) == 0x000101, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, K2Node_Select_Default) == 0x000108, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals, K2Node_Select_Default_1) == 0x000130, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateKitVisuals::K2Node_Select_Default_1' has a wrong offset!");

// Function W_Tooltip_VehicleSeatItem.W_Tooltip_VehicleSeatItem_C.UpdateSquadVisuals
// 0x0098 (0x0098 - 0x0000)
struct W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3655[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue_1;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3656[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0058(0x0028)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3657[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Tint_Out_Color;                       // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals) == 0x000008, "Wrong alignment on W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals");
static_assert(sizeof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals) == 0x000098, "Wrong size on W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, Temp_bool_Variable) == 0x000001, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, Temp_struct_Variable) == 0x000004, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, Temp_struct_Variable_1) == 0x000014, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, Temp_bool_Variable_1) == 0x000024, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, Temp_byte_Variable) == 0x000025, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, Temp_byte_Variable_1) == 0x000026, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, Temp_bool_Variable_2) == 0x000027, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, Temp_byte_Variable_2) == 0x000028, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, Temp_byte_Variable_3) == 0x000029, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00002A, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x00002B, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, CallFunc_GreaterEqual_ByteByte_ReturnValue_1) == 0x00002C, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::CallFunc_GreaterEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, K2Node_Select_Default) == 0x00002D, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, K2Node_Select_Default_1) == 0x000048, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, K2Node_MakeStruct_SlateColor) == 0x000058, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000080, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, K2Node_Select_Default_2) == 0x000081, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals, CallFunc_Get_Tint_Out_Color) == 0x000084, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateSquadVisuals::CallFunc_Get_Tint_Out_Color' has a wrong offset!");

// Function W_Tooltip_VehicleSeatItem.W_Tooltip_VehicleSeatItem_C.UpdateRank
// 0x0048 (0x0048 - 0x0000)
struct W_Tooltip_VehicleSeatItem_C_UpdateRank final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3658[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3659[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365A[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_VehicleSeatItem_C_UpdateRank) == 0x000008, "Wrong alignment on W_Tooltip_VehicleSeatItem_C_UpdateRank");
static_assert(sizeof(W_Tooltip_VehicleSeatItem_C_UpdateRank) == 0x000048, "Wrong size on W_Tooltip_VehicleSeatItem_C_UpdateRank");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, Temp_bool_Variable) == 0x000001, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, Temp_byte_Variable) == 0x000002, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, Temp_byte_Variable_1) == 0x000003, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, Temp_bool_Variable_1) == 0x000004, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, Temp_object_Variable) == 0x000008, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, Temp_object_Variable_1) == 0x000010, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, Temp_bool_Variable_2) == 0x000018, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, Temp_object_Variable_2) == 0x000020, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000029, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, K2Node_Select_Default) == 0x000030, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, K2Node_Select_Default_1) == 0x000038, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_UpdateRank, K2Node_Select_Default_2) == 0x000040, "Member 'W_Tooltip_VehicleSeatItem_C_UpdateRank::K2Node_Select_Default_2' has a wrong offset!");

// Function W_Tooltip_VehicleSeatItem.W_Tooltip_VehicleSeatItem_C.Update Fireteam
// 0x0048 (0x0048 - 0x0000)
struct W_Tooltip_VehicleSeatItem_C_Update_Fireteam final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetAlphabetLetterString_ReturnValue;      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam) == 0x000008, "Wrong alignment on W_Tooltip_VehicleSeatItem_C_Update_Fireteam");
static_assert(sizeof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam) == 0x000048, "Wrong size on W_Tooltip_VehicleSeatItem_C_Update_Fireteam");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam, Temp_bool_Variable) == 0x000000, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Fireteam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam, Temp_byte_Variable) == 0x000001, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Fireteam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam, Temp_byte_Variable_1) == 0x000002, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Fireteam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam, CallFunc_Less_IntInt_ReturnValue) == 0x000003, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Fireteam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam, CallFunc_GetAlphabetLetterString_ReturnValue) == 0x000008, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Fireteam::CallFunc_GetAlphabetLetterString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam, CallFunc_ToUpper_ReturnValue) == 0x000018, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Fireteam::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam, K2Node_Select_Default) == 0x000028, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Fireteam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Update_Fireteam, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'W_Tooltip_VehicleSeatItem_C_Update_Fireteam::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_Tooltip_VehicleSeatItem.W_Tooltip_VehicleSeatItem_C.Self Squad
// 0x0006 (0x0006 - 0x0000)
struct W_Tooltip_VehicleSeatItem_C_Self_Squad final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Tooltip_VehicleSeatItem_C_Self_Squad) == 0x000001, "Wrong alignment on W_Tooltip_VehicleSeatItem_C_Self_Squad");
static_assert(sizeof(W_Tooltip_VehicleSeatItem_C_Self_Squad) == 0x000006, "Wrong size on W_Tooltip_VehicleSeatItem_C_Self_Squad");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Self_Squad, ReturnValue) == 0x000000, "Member 'W_Tooltip_VehicleSeatItem_C_Self_Squad::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Self_Squad, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'W_Tooltip_VehicleSeatItem_C_Self_Squad::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Self_Squad, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000002, "Member 'W_Tooltip_VehicleSeatItem_C_Self_Squad::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Self_Squad, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'W_Tooltip_VehicleSeatItem_C_Self_Squad::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Self_Squad, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'W_Tooltip_VehicleSeatItem_C_Self_Squad::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_Self_Squad, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'W_Tooltip_VehicleSeatItem_C_Self_Squad::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_Tooltip_VehicleSeatItem.W_Tooltip_VehicleSeatItem_C.ShowHideCommanderStar
// 0x0009 (0x0009 - 0x0000)
struct W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar) == 0x000001, "Wrong alignment on W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar");
static_assert(sizeof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar) == 0x000009, "Wrong size on W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar, Temp_byte_Variable) == 0x000000, "Member 'W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar, Temp_byte_Variable_1) == 0x000001, "Member 'W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar, Temp_bool_Variable) == 0x000002, "Member 'W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar, Temp_byte_Variable_2) == 0x000003, "Member 'W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar, Temp_byte_Variable_3) == 0x000004, "Member 'W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar, Temp_bool_Variable_1) == 0x000005, "Member 'W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar, K2Node_Select_Default) == 0x000007, "Member 'W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar, K2Node_Select_Default_1) == 0x000008, "Member 'W_Tooltip_VehicleSeatItem_C_ShowHideCommanderStar::K2Node_Select_Default_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_SA330

#include "Basic.hpp"

#include "AnimBP_SA330_classes.hpp"
#include "AnimBP_SA330_parameters.hpp"


namespace SDK
{

// Function AnimBP_SA330.AnimBP_SA330_C.ExecuteUbergraph_AnimBP_SA330
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAnimBP_SA330_C::ExecuteUbergraph_AnimBP_SA330(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimBP_SA330_C", "ExecuteUbergraph_AnimBP_SA330");

	Params::AnimBP_SA330_C_ExecuteUbergraph_AnimBP_SA330 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnimBP_SA330.AnimBP_SA330_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAnimBP_SA330_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimBP_SA330_C", "BlueprintUpdateAnimation");

	Params::AnimBP_SA330_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AnimBP_SA330.AnimBP_SA330_C.GetBladesScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_SA330_C*                      Helicopter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Main                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Blades                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BlurBlades                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAnimBP_SA330_C::GetBladesScale(class ABP_SA330_C* Helicopter, bool Main, struct FVector* Blades, struct FVector* BlurBlades)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimBP_SA330_C", "GetBladesScale");

	Params::AnimBP_SA330_C_GetBladesScale Parms{};

	Parms.Helicopter = Helicopter;
	Parms.Main = Main;

	UObject::ProcessEvent(Func, &Parms);

	if (Blades != nullptr)
		*Blades = std::move(Parms.Blades);

	if (BlurBlades != nullptr)
		*BlurBlades = std::move(Parms.BlurBlades);
}


// Function AnimBP_SA330.AnimBP_SA330_C.GerCurrentRotorRPM
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_SA330_C*                      Helicopter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Main                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   RPM                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAnimBP_SA330_C::GerCurrentRotorRPM(class ABP_SA330_C* Helicopter, bool Main, float* RPM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimBP_SA330_C", "GerCurrentRotorRPM");

	Params::AnimBP_SA330_C_GerCurrentRotorRPM Parms{};

	Parms.Helicopter = Helicopter;
	Parms.Main = Main;

	UObject::ProcessEvent(Func, &Parms);

	if (RPM != nullptr)
		*RPM = Parms.RPM;
}


// Function AnimBP_SA330.AnimBP_SA330_C.RPMtoDegPerSec
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   RPM                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_SA330_C*                      Helicopter                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Main                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DegPerSec                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAnimBP_SA330_C::RPMtoDegPerSec(float RPM, class ABP_SA330_C* Helicopter, bool Main, float* DegPerSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimBP_SA330_C", "RPMtoDegPerSec");

	Params::AnimBP_SA330_C_RPMtoDegPerSec Parms{};

	Parms.RPM = RPM;
	Parms.Helicopter = Helicopter;
	Parms.Main = Main;

	UObject::ProcessEvent(Func, &Parms);

	if (DegPerSec != nullptr)
		*DegPerSec = Parms.DegPerSec;
}


// Function AnimBP_SA330.AnimBP_SA330_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UAnimBP_SA330_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnimBP_SA330_C", "AnimGraph");

	Params::AnimBP_SA330_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}

}


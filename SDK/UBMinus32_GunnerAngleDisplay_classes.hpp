#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UBMinus32_GunnerAngleDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UB-32_GunnerAngleDisplay.UB-32_GunnerAngleDisplay_C
// 0x0030 (0x02D0 - 0x02A0)
class UUBMinus32_GunnerAngleDisplay_C final : public USQVehicleViewWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       blink_ammo;                                        // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             Angle;                                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_Technical_Turret_UB32_C*            UB32_TurretRef;                                    // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleReading;                                      // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC8[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSeat*                         TurretRef;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UBMinus32_GunnerAngleDisplay(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void AngleRotationDisplay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UB-32_GunnerAngleDisplay_C">();
	}
	static class UUBMinus32_GunnerAngleDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUBMinus32_GunnerAngleDisplay_C>();
	}
};
static_assert(alignof(UUBMinus32_GunnerAngleDisplay_C) == 0x000008, "Wrong alignment on UUBMinus32_GunnerAngleDisplay_C");
static_assert(sizeof(UUBMinus32_GunnerAngleDisplay_C) == 0x0002D0, "Wrong size on UUBMinus32_GunnerAngleDisplay_C");
static_assert(offsetof(UUBMinus32_GunnerAngleDisplay_C, UberGraphFrame) == 0x0002A0, "Member 'UUBMinus32_GunnerAngleDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUBMinus32_GunnerAngleDisplay_C, blink_ammo) == 0x0002A8, "Member 'UUBMinus32_GunnerAngleDisplay_C::blink_ammo' has a wrong offset!");
static_assert(offsetof(UUBMinus32_GunnerAngleDisplay_C, Angle) == 0x0002B0, "Member 'UUBMinus32_GunnerAngleDisplay_C::Angle' has a wrong offset!");
static_assert(offsetof(UUBMinus32_GunnerAngleDisplay_C, UB32_TurretRef) == 0x0002B8, "Member 'UUBMinus32_GunnerAngleDisplay_C::UB32_TurretRef' has a wrong offset!");
static_assert(offsetof(UUBMinus32_GunnerAngleDisplay_C, AngleReading) == 0x0002C0, "Member 'UUBMinus32_GunnerAngleDisplay_C::AngleReading' has a wrong offset!");
static_assert(offsetof(UUBMinus32_GunnerAngleDisplay_C, TurretRef) == 0x0002C8, "Member 'UUBMinus32_GunnerAngleDisplay_C::TurretRef' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TC_HexGraph

#include "Basic.hpp"

#include "TC_HexGraph_classes.hpp"
#include "TC_HexGraph_parameters.hpp"


namespace SDK
{

// Function TC_HexGraph.TC_HexGraph_C.ExecuteUbergraph_TC_HexGraph
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATC_HexGraph_C::ExecuteUbergraph_TC_HexGraph(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "ExecuteUbergraph_TC_HexGraph");

	Params::TC_HexGraph_C_ExecuteUbergraph_TC_HexGraph Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TC_HexGraph.TC_HexGraph_C.Cache Team Hex Ownership
// (BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::Cache_Team_Hex_Ownership()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Cache Team Hex Ownership");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.State Changed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQCaptureZoneComponent*          CaptureZone                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATC_HexGraph_C::State_Changed(class USQCaptureZoneComponent* CaptureZone, uint8 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "State Changed");

	Params::TC_HexGraph_C_State_Changed Parms{};

	Parms.CaptureZone = CaptureZone;
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TC_HexGraph.TC_HexGraph_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATC_HexGraph_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.Can Spawn Hex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          WorldLocation                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Can_Spawn                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATC_HexGraph_C::Can_Spawn_Hex(const struct FVector& WorldLocation, bool* Can_Spawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Can Spawn Hex");

	Params::TC_HexGraph_C_Can_Spawn_Hex Parms{};

	Parms.WorldLocation = std::move(WorldLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Can_Spawn != nullptr)
		*Can_Spawn = Parms.Can_Spawn;
}


// Function TC_HexGraph.TC_HexGraph_C.Create Hex Zones
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::Create_Hex_Zones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Create Hex Zones");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.Destroy Hex Zones
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::Destroy_Hex_Zones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Destroy Hex Zones");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.Init Play Hex Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::Init_Play_Hex_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Init Play Hex Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.Clamp Ownership
// (Public, BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::Clamp_Ownership()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Clamp Ownership");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.Get Team Zone Capture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num_Zones_Owned                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Percentage_Owned                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATC_HexGraph_C::Get_Team_Zone_Capture(int32 Team, int32* Num_Zones_Owned, float* Percentage_Owned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Get Team Zone Capture");

	Params::TC_HexGraph_C_Get_Team_Zone_Capture Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (Num_Zones_Owned != nullptr)
		*Num_Zones_Owned = Parms.Num_Zones_Owned;

	if (Percentage_Owned != nullptr)
		*Percentage_Owned = Parms.Percentage_Owned;
}


// Function TC_HexGraph.TC_HexGraph_C.Get Start Zones
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATC_HexZone_C*                    Start_Team_1                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATC_HexZone_C*                    Start_Team_2                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATC_HexGraph_C::Get_Start_Zones(class ATC_HexZone_C** Start_Team_1, class ATC_HexZone_C** Start_Team_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Get Start Zones");

	Params::TC_HexGraph_C_Get_Start_Zones Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Start_Team_1 != nullptr)
		*Start_Team_1 = Parms.Start_Team_1;

	if (Start_Team_2 != nullptr)
		*Start_Team_2 = Parms.Start_Team_2;
}


// Function TC_HexGraph.TC_HexGraph_C.Init Start Zones
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::Init_Start_Zones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Init Start Zones");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.Refresh Zones
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::Refresh_Zones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Refresh Zones");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.Construct Hex Data
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ATC_HexZone_C*>            In_Zones                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ATC_HexGraph_C::Construct_Hex_Data(TArray<class ATC_HexZone_C*>& In_Zones)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Construct Hex Data");

	Params::TC_HexGraph_C_Construct_Hex_Data Parms{};

	Parms.In_Zones = std::move(In_Zones);

	UObject::ProcessEvent(Func, &Parms);

	In_Zones = std::move(Parms.In_Zones);
}


// Function TC_HexGraph.TC_HexGraph_C.Check Win Condition
// (Public, BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::Check_Win_Condition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Check Win Condition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.Update Anchor Flags
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATC_HexGraph_C::Update_Anchor_Flags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Update Anchor Flags");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TC_HexGraph.TC_HexGraph_C.Get Neighbour Chain
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ATC_HexZone_C*>            Chain                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATC_HexZone_C*                    Zone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ATC_HexZone_C*>            Out_Chain                                              (Parm, OutParm)

void ATC_HexGraph_C::Get_Neighbour_Chain(TArray<class ATC_HexZone_C*>& Chain, int32 Team, class ATC_HexZone_C* Zone, TArray<class ATC_HexZone_C*>* Out_Chain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Get Neighbour Chain");

	Params::TC_HexGraph_C_Get_Neighbour_Chain Parms{};

	Parms.Chain = std::move(Chain);
	Parms.Team = Team;
	Parms.Zone = Zone;

	UObject::ProcessEvent(Func, &Parms);

	Chain = std::move(Parms.Chain);

	if (Out_Chain != nullptr)
		*Out_Chain = std::move(Parms.Out_Chain);
}


// Function TC_HexGraph.TC_HexGraph_C.Get Valid Anchor Hexes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ATC_HexZone_C*>            Out_Team_1_Hexes                                       (Parm, OutParm)
// TArray<class ATC_HexZone_C*>            Out_Team_2_Hexes                                       (Parm, OutParm)

void ATC_HexGraph_C::Get_Valid_Anchor_Hexes(TArray<class ATC_HexZone_C*>* Out_Team_1_Hexes, TArray<class ATC_HexZone_C*>* Out_Team_2_Hexes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TC_HexGraph_C", "Get Valid Anchor Hexes");

	Params::TC_HexGraph_C_Get_Valid_Anchor_Hexes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Team_1_Hexes != nullptr)
		*Out_Team_1_Hexes = std::move(Parms.Out_Team_1_Hexes);

	if (Out_Team_2_Hexes != nullptr)
		*Out_Team_2_Hexes = std::move(Parms.Out_Team_2_Hexes);
}

}


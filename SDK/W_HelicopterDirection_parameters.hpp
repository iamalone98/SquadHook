#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HelicopterDirection

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_HelicopterDirection.W_HelicopterDirection_C.ExecuteUbergraph_W_HelicopterDirection
// 0x0090 (0x0090 - 0x0000)
struct W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA7[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISQHelicopterInstruments> K2Node_CustomEvent_Vehicle;                        // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPitchInput_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA8[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRollInput_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection) == 0x000008, "Wrong alignment on W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection");
static_assert(sizeof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection) == 0x000090, "Wrong size on W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, EntryPoint) == 0x000000, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, K2Node_CustomEvent_Vehicle) == 0x000048, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::K2Node_CustomEvent_Vehicle' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000058, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_GetPitchInput_ReturnValue) == 0x000060, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_GetPitchInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_GetRollInput_ReturnValue) == 0x00006C, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_GetRollInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_BreakVector2D_X) == 0x000074, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_BreakVector2D_Y) == 0x000078, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_FInterpTo_ReturnValue) == 0x00007C, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_FInterpTo_ReturnValue_1) == 0x000080, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection, CallFunc_MakeVector2D_ReturnValue) == 0x000084, "Member 'W_HelicopterDirection_C_ExecuteUbergraph_W_HelicopterDirection::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_HelicopterDirection.W_HelicopterDirection_C.InitializeScreen
// 0x0010 (0x0010 - 0x0000)
struct W_HelicopterDirection_C_InitializeScreen final
{
public:
	TScriptInterface<class ISQHelicopterInstruments> Vehicle;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_HelicopterDirection_C_InitializeScreen) == 0x000008, "Wrong alignment on W_HelicopterDirection_C_InitializeScreen");
static_assert(sizeof(W_HelicopterDirection_C_InitializeScreen) == 0x000010, "Wrong size on W_HelicopterDirection_C_InitializeScreen");
static_assert(offsetof(W_HelicopterDirection_C_InitializeScreen, Vehicle) == 0x000000, "Member 'W_HelicopterDirection_C_InitializeScreen::Vehicle' has a wrong offset!");

// Function W_HelicopterDirection.W_HelicopterDirection_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_HelicopterDirection_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HelicopterDirection_C_Tick) == 0x000004, "Wrong alignment on W_HelicopterDirection_C_Tick");
static_assert(sizeof(W_HelicopterDirection_C_Tick) == 0x00003C, "Wrong size on W_HelicopterDirection_C_Tick");
static_assert(offsetof(W_HelicopterDirection_C_Tick, MyGeometry) == 0x000000, "Member 'W_HelicopterDirection_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_HelicopterDirection_C_Tick, InDeltaTime) == 0x000038, "Member 'W_HelicopterDirection_C_Tick::InDeltaTime' has a wrong offset!");

}


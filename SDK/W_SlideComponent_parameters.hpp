#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SlideComponent

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_SlideComponent.W_SlideComponent_C.ExecuteUbergraph_W_SlideComponent
// 0x0068 (0x0068 - 0x0000)
struct W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_444C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_444E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_444F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorderSlot*                            K2Node_DynamicCast_AsBorder_Slot;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4450[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent) == 0x000008, "Wrong alignment on W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent");
static_assert(sizeof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent) == 0x000068, "Wrong size on W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, EntryPoint) == 0x000000, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, Temp_bool_Variable) == 0x000004, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, Temp_float_Variable) == 0x000008, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, Temp_float_Variable_1) == 0x00000C, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, Temp_bool_Variable_1) == 0x000010, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, Temp_byte_Variable) == 0x000011, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, Temp_byte_Variable_1) == 0x000012, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, K2Node_Select_Default) == 0x000013, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000020, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, CallFunc_Create_ReturnValue) == 0x000038, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, K2Node_Event_IsDesignTime) == 0x000048, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, K2Node_DynamicCast_AsBorder_Slot) == 0x000050, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::K2Node_DynamicCast_AsBorder_Slot' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, K2Node_Select_Default_1) == 0x00005C, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000060, "Member 'W_SlideComponent_C_ExecuteUbergraph_W_SlideComponent::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");

// Function W_SlideComponent.W_SlideComponent_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SlideComponent_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SlideComponent_C_PreConstruct) == 0x000001, "Wrong alignment on W_SlideComponent_C_PreConstruct");
static_assert(sizeof(W_SlideComponent_C_PreConstruct) == 0x000001, "Wrong size on W_SlideComponent_C_PreConstruct");
static_assert(offsetof(W_SlideComponent_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SlideComponent_C_PreConstruct::IsDesignTime' has a wrong offset!");

}


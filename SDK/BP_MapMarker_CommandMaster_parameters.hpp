#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapMarker_CommandMaster

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_MapMarker_CommandMaster.BP_MapMarker_CommandMaster_C.ExecuteUbergraph_BP_MapMarker_CommandMaster
// 0x0038 (0x0038 - 0x0000)
struct BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Command_Actor_Artillery_Base; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_469E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Bind_To;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster) == 0x000008, "Wrong alignment on BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster");
static_assert(sizeof(BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster) == 0x000038, "Wrong size on BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster");
static_assert(offsetof(BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster, EntryPoint) == 0x000000, "Member 'BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster, CallFunc_IsValidClass_ReturnValue) == 0x000004, "Member 'BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster, K2Node_ClassDynamicCast_AsBP_Command_Actor_Artillery_Base) == 0x000008, "Member 'BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster::K2Node_ClassDynamicCast_AsBP_Command_Actor_Artillery_Base' has a wrong offset!");
static_assert(offsetof(BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster, K2Node_ClassDynamicCast_bSuccess) == 0x000010, "Member 'BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster, K2Node_CustomEvent_Bind_To) == 0x000028, "Member 'BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster::K2Node_CustomEvent_Bind_To' has a wrong offset!");
static_assert(offsetof(BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster, K2Node_CustomEvent_DestroyedActor) == 0x000030, "Member 'BP_MapMarker_CommandMaster_C_ExecuteUbergraph_BP_MapMarker_CommandMaster::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");

// Function BP_MapMarker_CommandMaster.BP_MapMarker_CommandMaster_C.OnDestroyed_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_MapMarker_CommandMaster_C_OnDestroyed_Event_0 final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMarker_CommandMaster_C_OnDestroyed_Event_0) == 0x000008, "Wrong alignment on BP_MapMarker_CommandMaster_C_OnDestroyed_Event_0");
static_assert(sizeof(BP_MapMarker_CommandMaster_C_OnDestroyed_Event_0) == 0x000008, "Wrong size on BP_MapMarker_CommandMaster_C_OnDestroyed_Event_0");
static_assert(offsetof(BP_MapMarker_CommandMaster_C_OnDestroyed_Event_0, DestroyedActor) == 0x000000, "Member 'BP_MapMarker_CommandMaster_C_OnDestroyed_Event_0::DestroyedActor' has a wrong offset!");

// Function BP_MapMarker_CommandMaster.BP_MapMarker_CommandMaster_C.Bind To Destroy
// 0x0008 (0x0008 - 0x0000)
struct BP_MapMarker_CommandMaster_C_Bind_To_Destroy final
{
public:
	class AActor*                                 Bind_To;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMarker_CommandMaster_C_Bind_To_Destroy) == 0x000008, "Wrong alignment on BP_MapMarker_CommandMaster_C_Bind_To_Destroy");
static_assert(sizeof(BP_MapMarker_CommandMaster_C_Bind_To_Destroy) == 0x000008, "Wrong size on BP_MapMarker_CommandMaster_C_Bind_To_Destroy");
static_assert(offsetof(BP_MapMarker_CommandMaster_C_Bind_To_Destroy, Bind_To) == 0x000000, "Member 'BP_MapMarker_CommandMaster_C_Bind_To_Destroy::Bind_To' has a wrong offset!");

}


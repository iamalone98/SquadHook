#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_IED_Dialling

#include "Basic.hpp"

#include "IED_NameEntry_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_IED_Dialling.W_IED_Dialling_C.ExecuteUbergraph_W_IED_Dialling
// 0x02C0 (0x02C0 - 0x0000)
struct W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BB4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BB5[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x003C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BB6[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0160(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BB7[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01E0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BB8[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0200(0x0018)()
	class ABP_Phone_Detonator_C*                  K2Node_CustomEvent_Detonator;                      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0220(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0270(0x0018)()
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0288(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIED_NameEntry                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x02A0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling) == 0x000008, "Wrong alignment on W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling");
static_assert(sizeof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling) == 0x0002C0, "Wrong size on W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, EntryPoint) == 0x000000, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, Temp_bool_Variable) == 0x000004, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, Temp_text_Variable) == 0x000018, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_Event_IsDesignTime) == 0x000038, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_Event_MyGeometry) == 0x00003C, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_Event_InDeltaTime) == 0x000074, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Now_ReturnValue) == 0x000078, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_BreakDateTime_Year) == 0x000080, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_BreakDateTime_Month) == 0x000084, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_BreakDateTime_Day) == 0x000088, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_BreakDateTime_Hour) == 0x00008C, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_BreakDateTime_Minute) == 0x000090, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_BreakDateTime_Second) == 0x000094, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_BreakDateTime_Millisecond) == 0x000098, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A0, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000B8, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_MakeArray_Array) == 0x000150, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_MakeStruct_FormatArgumentData_2) == 0x000160, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Format_ReturnValue) == 0x0001A0, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Conv_TextToString_ReturnValue) == 0x0001B8, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Concat_StrStr_ReturnValue) == 0x0001C8, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Len_ReturnValue) == 0x0001D8, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Conv_StringToText_ReturnValue) == 0x0001E0, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F8, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_Select_Default) == 0x000200, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_CustomEvent_Detonator) == 0x000218, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_CustomEvent_Detonator' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_MakeStruct_FormatArgumentData_3) == 0x000220, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, K2Node_MakeArray_Array_1) == 0x000260, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Format_ReturnValue_1) == 0x000270, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000288, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_Array_Length_ReturnValue) == 0x000298, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_RandomInteger_ReturnValue) == 0x00029C, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002A0, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002B8, "Member 'W_IED_Dialling_C_ExecuteUbergraph_W_IED_Dialling::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function W_IED_Dialling.W_IED_Dialling_C.Set Detonator
// 0x0008 (0x0008 - 0x0000)
struct W_IED_Dialling_C_Set_Detonator final
{
public:
	class ABP_Phone_Detonator_C*                  Param_Detonator;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IED_Dialling_C_Set_Detonator) == 0x000008, "Wrong alignment on W_IED_Dialling_C_Set_Detonator");
static_assert(sizeof(W_IED_Dialling_C_Set_Detonator) == 0x000008, "Wrong size on W_IED_Dialling_C_Set_Detonator");
static_assert(offsetof(W_IED_Dialling_C_Set_Detonator, Param_Detonator) == 0x000000, "Member 'W_IED_Dialling_C_Set_Detonator::Param_Detonator' has a wrong offset!");

// Function W_IED_Dialling.W_IED_Dialling_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_IED_Dialling_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_IED_Dialling_C_Tick) == 0x000004, "Wrong alignment on W_IED_Dialling_C_Tick");
static_assert(sizeof(W_IED_Dialling_C_Tick) == 0x00003C, "Wrong size on W_IED_Dialling_C_Tick");
static_assert(offsetof(W_IED_Dialling_C_Tick, MyGeometry) == 0x000000, "Member 'W_IED_Dialling_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Tick, InDeltaTime) == 0x000038, "Member 'W_IED_Dialling_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_IED_Dialling.W_IED_Dialling_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_IED_Dialling_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_IED_Dialling_C_PreConstruct) == 0x000001, "Wrong alignment on W_IED_Dialling_C_PreConstruct");
static_assert(sizeof(W_IED_Dialling_C_PreConstruct) == 0x000001, "Wrong size on W_IED_Dialling_C_PreConstruct");
static_assert(offsetof(W_IED_Dialling_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_IED_Dialling_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_IED_Dialling.W_IED_Dialling_C.Set State Text
// 0x0060 (0x0060 - 0x0000)
struct W_IED_Dialling_C_Set_State_Text final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BB9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlacedDeployableItemsCount_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BBA[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BBB[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BBC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BBD[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BBE[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployable*                          CallFunc_GetPlacedDeployableAt_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BBF[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Deployable_IED_C*                   K2Node_DynamicCast_AsBP_Deployable_IED;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_IED_Dialling_C_Set_State_Text) == 0x000008, "Wrong alignment on W_IED_Dialling_C_Set_State_Text");
static_assert(sizeof(W_IED_Dialling_C_Set_State_Text) == 0x000060, "Wrong size on W_IED_Dialling_C_Set_State_Text");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, Temp_int_Variable) == 0x000000, "Member 'W_IED_Dialling_C_Set_State_Text::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_GetPlacedDeployableItemsCount_ReturnValue) == 0x000008, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_GetPlacedDeployableItemsCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, K2Node_DynamicCast_AsSQPlayer_State) == 0x000030, "Member 'W_IED_Dialling_C_Set_State_Text::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_IED_Dialling_C_Set_State_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_GetPlacedDeployableAt_ReturnValue) == 0x000040, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_GetPlacedDeployableAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'W_IED_Dialling_C_Set_State_Text::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, K2Node_DynamicCast_AsBP_Deployable_IED) == 0x000050, "Member 'W_IED_Dialling_C_Set_State_Text::K2Node_DynamicCast_AsBP_Deployable_IED' has a wrong offset!");
static_assert(offsetof(W_IED_Dialling_C_Set_State_Text, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'W_IED_Dialling_C_Set_State_Text::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}


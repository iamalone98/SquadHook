#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cratestack_v3

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Cratestack_v3.Cratestack_v3_C
// 0x0030 (0x0258 - 0x0228)
class ACratestack_v3_C final : public AActor
{
public:
	class UStaticMeshComponent*                   StaticMeshComponent04;                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent03;                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent02;                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent01;                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent0;                              // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SharedRoot;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cratestack_v3_C">();
	}
	static class ACratestack_v3_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACratestack_v3_C>();
	}
};
static_assert(alignof(ACratestack_v3_C) == 0x000008, "Wrong alignment on ACratestack_v3_C");
static_assert(sizeof(ACratestack_v3_C) == 0x000258, "Wrong size on ACratestack_v3_C");
static_assert(offsetof(ACratestack_v3_C, StaticMeshComponent04) == 0x000228, "Member 'ACratestack_v3_C::StaticMeshComponent04' has a wrong offset!");
static_assert(offsetof(ACratestack_v3_C, StaticMeshComponent03) == 0x000230, "Member 'ACratestack_v3_C::StaticMeshComponent03' has a wrong offset!");
static_assert(offsetof(ACratestack_v3_C, StaticMeshComponent02) == 0x000238, "Member 'ACratestack_v3_C::StaticMeshComponent02' has a wrong offset!");
static_assert(offsetof(ACratestack_v3_C, StaticMeshComponent01) == 0x000240, "Member 'ACratestack_v3_C::StaticMeshComponent01' has a wrong offset!");
static_assert(offsetof(ACratestack_v3_C, StaticMeshComponent0) == 0x000248, "Member 'ACratestack_v3_C::StaticMeshComponent0' has a wrong offset!");
static_assert(offsetof(ACratestack_v3_C, SharedRoot) == 0x000250, "Member 'ACratestack_v3_C::SharedRoot' has a wrong offset!");

}


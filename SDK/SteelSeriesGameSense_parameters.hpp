#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SteelSeriesGameSense

#include "Basic.hpp"

#include "SteelSeriesGameSense_structs.hpp"


namespace SDK::Params
{

// Function SteelSeriesGameSense.SSGS_ClientBPLibrary.BindEvent
// 0x0040 (0x0040 - 0x0000)
struct SSGS_ClientBPLibrary_BindEvent final
{
public:
	class FString                                 GameName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinValue;                                          // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxValue;                                          // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESSGS_EventIconId                             IconId;                                            // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17EC[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSGS_HandlerCollection*                Handlers;                                          // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ValueOptional;                                     // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17ED[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SSGS_ClientBPLibrary_BindEvent) == 0x000008, "Wrong alignment on SSGS_ClientBPLibrary_BindEvent");
static_assert(sizeof(SSGS_ClientBPLibrary_BindEvent) == 0x000040, "Wrong size on SSGS_ClientBPLibrary_BindEvent");
static_assert(offsetof(SSGS_ClientBPLibrary_BindEvent, GameName) == 0x000000, "Member 'SSGS_ClientBPLibrary_BindEvent::GameName' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_BindEvent, EventName) == 0x000010, "Member 'SSGS_ClientBPLibrary_BindEvent::EventName' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_BindEvent, MinValue) == 0x000020, "Member 'SSGS_ClientBPLibrary_BindEvent::MinValue' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_BindEvent, MaxValue) == 0x000024, "Member 'SSGS_ClientBPLibrary_BindEvent::MaxValue' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_BindEvent, IconId) == 0x000028, "Member 'SSGS_ClientBPLibrary_BindEvent::IconId' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_BindEvent, Handlers) == 0x000030, "Member 'SSGS_ClientBPLibrary_BindEvent::Handlers' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_BindEvent, ValueOptional) == 0x000038, "Member 'SSGS_ClientBPLibrary_BindEvent::ValueOptional' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ClientBPLibrary.RegisterEvent
// 0x0030 (0x0030 - 0x0000)
struct SSGS_ClientBPLibrary_RegisterEvent final
{
public:
	class FString                                 GameName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinValue;                                          // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxValue;                                          // 0x0024(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESSGS_EventIconId                             IconId;                                            // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ValueOptional;                                     // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17EE[0x6];                                     // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SSGS_ClientBPLibrary_RegisterEvent) == 0x000008, "Wrong alignment on SSGS_ClientBPLibrary_RegisterEvent");
static_assert(sizeof(SSGS_ClientBPLibrary_RegisterEvent) == 0x000030, "Wrong size on SSGS_ClientBPLibrary_RegisterEvent");
static_assert(offsetof(SSGS_ClientBPLibrary_RegisterEvent, GameName) == 0x000000, "Member 'SSGS_ClientBPLibrary_RegisterEvent::GameName' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_RegisterEvent, EventName) == 0x000010, "Member 'SSGS_ClientBPLibrary_RegisterEvent::EventName' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_RegisterEvent, MinValue) == 0x000020, "Member 'SSGS_ClientBPLibrary_RegisterEvent::MinValue' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_RegisterEvent, MaxValue) == 0x000024, "Member 'SSGS_ClientBPLibrary_RegisterEvent::MaxValue' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_RegisterEvent, IconId) == 0x000028, "Member 'SSGS_ClientBPLibrary_RegisterEvent::IconId' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_RegisterEvent, ValueOptional) == 0x000029, "Member 'SSGS_ClientBPLibrary_RegisterEvent::ValueOptional' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ClientBPLibrary.RegisterGame
// 0x0030 (0x0030 - 0x0000)
struct SSGS_ClientBPLibrary_RegisterGame final
{
public:
	class FString                                 GameName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GameDisplayName;                                   // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Developer;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ClientBPLibrary_RegisterGame) == 0x000008, "Wrong alignment on SSGS_ClientBPLibrary_RegisterGame");
static_assert(sizeof(SSGS_ClientBPLibrary_RegisterGame) == 0x000030, "Wrong size on SSGS_ClientBPLibrary_RegisterGame");
static_assert(offsetof(SSGS_ClientBPLibrary_RegisterGame, GameName) == 0x000000, "Member 'SSGS_ClientBPLibrary_RegisterGame::GameName' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_RegisterGame, GameDisplayName) == 0x000010, "Member 'SSGS_ClientBPLibrary_RegisterGame::GameDisplayName' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_RegisterGame, Developer) == 0x000020, "Member 'SSGS_ClientBPLibrary_RegisterGame::Developer' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ClientBPLibrary.RemoveEvent
// 0x0020 (0x0020 - 0x0000)
struct SSGS_ClientBPLibrary_RemoveEvent final
{
public:
	class FString                                 GameName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ClientBPLibrary_RemoveEvent) == 0x000008, "Wrong alignment on SSGS_ClientBPLibrary_RemoveEvent");
static_assert(sizeof(SSGS_ClientBPLibrary_RemoveEvent) == 0x000020, "Wrong size on SSGS_ClientBPLibrary_RemoveEvent");
static_assert(offsetof(SSGS_ClientBPLibrary_RemoveEvent, GameName) == 0x000000, "Member 'SSGS_ClientBPLibrary_RemoveEvent::GameName' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_RemoveEvent, EventName) == 0x000010, "Member 'SSGS_ClientBPLibrary_RemoveEvent::EventName' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ClientBPLibrary.RemoveGame
// 0x0010 (0x0010 - 0x0000)
struct SSGS_ClientBPLibrary_RemoveGame final
{
public:
	class FString                                 GameName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ClientBPLibrary_RemoveGame) == 0x000008, "Wrong alignment on SSGS_ClientBPLibrary_RemoveGame");
static_assert(sizeof(SSGS_ClientBPLibrary_RemoveGame) == 0x000010, "Wrong size on SSGS_ClientBPLibrary_RemoveGame");
static_assert(offsetof(SSGS_ClientBPLibrary_RemoveGame, GameName) == 0x000000, "Member 'SSGS_ClientBPLibrary_RemoveGame::GameName' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ClientBPLibrary.SendEvent
// 0x0038 (0x0038 - 0x0000)
struct SSGS_ClientBPLibrary_SendEvent final
{
public:
	class FString                                 GameName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventName;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSSGS_EventData                        Data;                                              // 0x0020(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ClientBPLibrary_SendEvent) == 0x000008, "Wrong alignment on SSGS_ClientBPLibrary_SendEvent");
static_assert(sizeof(SSGS_ClientBPLibrary_SendEvent) == 0x000038, "Wrong size on SSGS_ClientBPLibrary_SendEvent");
static_assert(offsetof(SSGS_ClientBPLibrary_SendEvent, GameName) == 0x000000, "Member 'SSGS_ClientBPLibrary_SendEvent::GameName' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_SendEvent, EventName) == 0x000010, "Member 'SSGS_ClientBPLibrary_SendEvent::EventName' has a wrong offset!");
static_assert(offsetof(SSGS_ClientBPLibrary_SendEvent, Data) == 0x000020, "Member 'SSGS_ClientBPLibrary_SendEvent::Data' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ClientBPLibrary.Start
// 0x0001 (0x0001 - 0x0000)
struct SSGS_ClientBPLibrary_Start final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ClientBPLibrary_Start) == 0x000001, "Wrong alignment on SSGS_ClientBPLibrary_Start");
static_assert(sizeof(SSGS_ClientBPLibrary_Start) == 0x000001, "Wrong size on SSGS_ClientBPLibrary_Start");
static_assert(offsetof(SSGS_ClientBPLibrary_Start, ReturnValue) == 0x000000, "Member 'SSGS_ClientBPLibrary_Start::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ColorEffectSpecificationGradient.MakeGradientColorEffect
// 0x0010 (0x0010 - 0x0000)
struct SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect final
{
public:
	struct FSSGS_RGB                              Zero;                                              // 0x0000(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FSSGS_RGB                              Hundred;                                           // 0x0003(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_17F1[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USSGS_ColorEffectSpecificationGradient* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect) == 0x000008, "Wrong alignment on SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect");
static_assert(sizeof(SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect) == 0x000010, "Wrong size on SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect");
static_assert(offsetof(SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect, Zero) == 0x000000, "Member 'SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect::Zero' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect, Hundred) == 0x000003, "Member 'SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect::Hundred' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect, ReturnValue) == 0x000008, "Member 'SSGS_ColorEffectSpecificationGradient_MakeGradientColorEffect::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ColorEffectSpecificationRanges.MakeGradientColorRange
// 0x0030 (0x0030 - 0x0000)
struct SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange final
{
public:
	int32                                         Low;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         High;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSSGS_RGB                              Zero;                                              // 0x0008(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FSSGS_RGB                              Hundred;                                           // 0x000B(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_17F2[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_ColorRange                       ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange) == 0x000008, "Wrong alignment on SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange");
static_assert(sizeof(SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange) == 0x000030, "Wrong size on SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange, Low) == 0x000000, "Member 'SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange::Low' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange, High) == 0x000004, "Member 'SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange::High' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange, Zero) == 0x000008, "Member 'SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange::Zero' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange, Hundred) == 0x00000B, "Member 'SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange::Hundred' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange, ReturnValue) == 0x000010, "Member 'SSGS_ColorEffectSpecificationRanges_MakeGradientColorRange::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ColorEffectSpecificationRanges.MakeRangeColorEffect
// 0x0018 (0x0018 - 0x0000)
struct SSGS_ColorEffectSpecificationRanges_MakeRangeColorEffect final
{
public:
	TArray<struct FSSGS_ColorRange>               V;                                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_ColorEffectSpecificationRanges*   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ColorEffectSpecificationRanges_MakeRangeColorEffect) == 0x000008, "Wrong alignment on SSGS_ColorEffectSpecificationRanges_MakeRangeColorEffect");
static_assert(sizeof(SSGS_ColorEffectSpecificationRanges_MakeRangeColorEffect) == 0x000018, "Wrong size on SSGS_ColorEffectSpecificationRanges_MakeRangeColorEffect");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeRangeColorEffect, V) == 0x000000, "Member 'SSGS_ColorEffectSpecificationRanges_MakeRangeColorEffect::V' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeRangeColorEffect, ReturnValue) == 0x000010, "Member 'SSGS_ColorEffectSpecificationRanges_MakeRangeColorEffect::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ColorEffectSpecificationRanges.MakeStaticColorRange
// 0x0030 (0x0030 - 0x0000)
struct SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange final
{
public:
	int32                                         Low;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         High;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSSGS_RGB                              Color;                                             // 0x0008(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_17F3[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_ColorRange                       ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange) == 0x000008, "Wrong alignment on SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange");
static_assert(sizeof(SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange) == 0x000030, "Wrong size on SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange, Low) == 0x000000, "Member 'SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange::Low' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange, High) == 0x000004, "Member 'SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange::High' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange, Color) == 0x000008, "Member 'SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange::Color' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange, ReturnValue) == 0x000010, "Member 'SSGS_ColorEffectSpecificationRanges_MakeStaticColorRange::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ColorEffectSpecificationStatic.MakeStaticColorEffect
// 0x0010 (0x0010 - 0x0000)
struct SSGS_ColorEffectSpecificationStatic_MakeStaticColorEffect final
{
public:
	struct FSSGS_RGB                              Param_Color;                                       // 0x0000(0x0003)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_17F5[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USSGS_ColorEffectSpecificationStatic*   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ColorEffectSpecificationStatic_MakeStaticColorEffect) == 0x000008, "Wrong alignment on SSGS_ColorEffectSpecificationStatic_MakeStaticColorEffect");
static_assert(sizeof(SSGS_ColorEffectSpecificationStatic_MakeStaticColorEffect) == 0x000010, "Wrong size on SSGS_ColorEffectSpecificationStatic_MakeStaticColorEffect");
static_assert(offsetof(SSGS_ColorEffectSpecificationStatic_MakeStaticColorEffect, Param_Color) == 0x000000, "Member 'SSGS_ColorEffectSpecificationStatic_MakeStaticColorEffect::Param_Color' has a wrong offset!");
static_assert(offsetof(SSGS_ColorEffectSpecificationStatic_MakeStaticColorEffect, ReturnValue) == 0x000008, "Member 'SSGS_ColorEffectSpecificationStatic_MakeStaticColorEffect::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_headset_earcups
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_headset_earcups final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_headset_earcups) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_headset_earcups");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_headset_earcups) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_headset_earcups");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_headset_earcups, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_headset_earcups::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_indicator_one
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_indicator_one final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_indicator_one) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_indicator_one");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_indicator_one) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_indicator_one");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_indicator_one, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_indicator_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_keyboad_function_keys
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_keyboad_function_keys final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_function_keys) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_function_keys");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_function_keys) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_function_keys");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_function_keys, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_keyboad_function_keys::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_keyboad_keypad
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_keyboad_keypad final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_keypad) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_keypad");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_keypad) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_keypad");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_keypad, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_keyboad_keypad::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_keyboad_macro_keys
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_keyboad_macro_keys final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_macro_keys) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_macro_keys");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_macro_keys) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_macro_keys");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_macro_keys, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_keyboad_macro_keys::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_keyboad_main_keyboard
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_keyboad_main_keyboard final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_main_keyboard) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_main_keyboard");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_main_keyboard) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_main_keyboard");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_main_keyboard, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_keyboad_main_keyboard::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_keyboad_number_keys
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_keyboad_number_keys final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_number_keys) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_number_keys");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_number_keys) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_keyboad_number_keys");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_keyboad_number_keys, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_keyboad_number_keys::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_mouse_logo
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_mouse_logo final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_mouse_logo) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_mouse_logo");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_mouse_logo) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_mouse_logo");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_mouse_logo, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_mouse_logo::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_mouse_wheel
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_mouse_wheel final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_mouse_wheel) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_mouse_wheel");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_mouse_wheel) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_mouse_wheel");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_mouse_wheel, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_mouse_wheel::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb1zone_one
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb1zone_one final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb1zone_one) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb1zone_one");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb1zone_one) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb1zone_one");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb1zone_one, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb1zone_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb2zone_one
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_one final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_one) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_one");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_one) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_one");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_one, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb2zone_two
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_two final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_two) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_two");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_two) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_two");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_two, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb2zone_two::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb3zone_one
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_one final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_one) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_one");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_one) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_one");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_one, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb3zone_three
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_three final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_three) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_three");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_three) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_three");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_three, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_three::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb3zone_two
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_two final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_two) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_two");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_two) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_two");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_two, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb3zone_two::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb4zone_four
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_four final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_four) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_four");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_four) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_four");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_four, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_four::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb4zone_one
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_one final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_one) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_one");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_one) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_one");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_one, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb4zone_three
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_three final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_three) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_three");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_three) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_three");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_three, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_three::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb4zone_two
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_two final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_two) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_two");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_two) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_two");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_two, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb4zone_two::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb5zone_five
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_five final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_five) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_five");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_five) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_five");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_five, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_five::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb5zone_four
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_four final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_four) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_four");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_four) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_four");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_four, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_four::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb5zone_one
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_one final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_one) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_one");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_one) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_one");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_one, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb5zone_three
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_three final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_three) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_three");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_three) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_three");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_three, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_three::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgb5zone_two
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_two final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_two) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_two");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_two) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_two");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_two, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgb5zone_two::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_a_row
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_a_row final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_a_row) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_a_row");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_a_row) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_a_row");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_a_row, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_a_row::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_all
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_all final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_all) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_all");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_all) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_all");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_all, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_all::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_arrows
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_arrows final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_arrows) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_arrows");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_arrows) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_arrows");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_arrows, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_arrows::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_custom
// 0x0048 (0x0048 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_custom final
{
public:
	TArray<uint8>                                 V;                                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0010(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_custom) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_custom");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_custom) == 0x000048, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_custom");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_custom, V) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_custom::V' has a wrong offset!");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_custom, ReturnValue) == 0x000010, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_custom::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_function_keys
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_function_keys final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_function_keys) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_function_keys");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_function_keys) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_function_keys");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_function_keys, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_function_keys::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_keypad
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_keypad_nums
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad_nums final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad_nums) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad_nums");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad_nums) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad_nums");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad_nums, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_keypad_nums::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_macro_keys
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_macro_keys final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_macro_keys) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_macro_keys");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_macro_keys) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_macro_keys");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_macro_keys, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_macro_keys::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_main_keyboard
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_main_keyboard final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_main_keyboard) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_main_keyboard");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_main_keyboard) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_main_keyboard");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_main_keyboard, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_main_keyboard::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_nav_cluster
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_nav_cluster final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_nav_cluster) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_nav_cluster");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_nav_cluster) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_nav_cluster");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_nav_cluster, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_nav_cluster::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_number_keys
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_number_keys final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_number_keys) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_number_keys");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_number_keys) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_number_keys");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_number_keys, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_number_keys::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_q_row
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_q_row final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_q_row) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_q_row");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_q_row) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_q_row");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_q_row, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_q_row::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory.make_rgbperkeyzones_z_row
// 0x0038 (0x0038 - 0x0000)
struct SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_z_row final
{
public:
	struct FSSGS_IlluminationDeviceZone           ReturnValue;                                       // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_z_row) == 0x000008, "Wrong alignment on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_z_row");
static_assert(sizeof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_z_row) == 0x000038, "Wrong size on SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_z_row");
static_assert(offsetof(SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_z_row, ReturnValue) == 0x000000, "Member 'SSGS_IlluminationDeviceZoneFactory_Make_rgbperkeyzones_z_row::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_TactileDeviceZoneFactory.make_tactile_one
// 0x0020 (0x0020 - 0x0000)
struct SSGS_TactileDeviceZoneFactory_Make_tactile_one final
{
public:
	struct FSSGS_TactileDeviceZone                ReturnValue;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_TactileDeviceZoneFactory_Make_tactile_one) == 0x000008, "Wrong alignment on SSGS_TactileDeviceZoneFactory_Make_tactile_one");
static_assert(sizeof(SSGS_TactileDeviceZoneFactory_Make_tactile_one) == 0x000020, "Wrong size on SSGS_TactileDeviceZoneFactory_Make_tactile_one");
static_assert(offsetof(SSGS_TactileDeviceZoneFactory_Make_tactile_one, ReturnValue) == 0x000000, "Member 'SSGS_TactileDeviceZoneFactory_Make_tactile_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDeviceZoneFactory.make_screened_128x36_one
// 0x0028 (0x0028 - 0x0000)
struct SSGS_ScreenDeviceZoneFactory_Make_screened_128x36_one final
{
public:
	struct FSSGS_ScreenDeviceZone                 ReturnValue;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x36_one) == 0x000008, "Wrong alignment on SSGS_ScreenDeviceZoneFactory_Make_screened_128x36_one");
static_assert(sizeof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x36_one) == 0x000028, "Wrong size on SSGS_ScreenDeviceZoneFactory_Make_screened_128x36_one");
static_assert(offsetof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x36_one, ReturnValue) == 0x000000, "Member 'SSGS_ScreenDeviceZoneFactory_Make_screened_128x36_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDeviceZoneFactory.make_screened_128x40_one
// 0x0028 (0x0028 - 0x0000)
struct SSGS_ScreenDeviceZoneFactory_Make_screened_128x40_one final
{
public:
	struct FSSGS_ScreenDeviceZone                 ReturnValue;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x40_one) == 0x000008, "Wrong alignment on SSGS_ScreenDeviceZoneFactory_Make_screened_128x40_one");
static_assert(sizeof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x40_one) == 0x000028, "Wrong size on SSGS_ScreenDeviceZoneFactory_Make_screened_128x40_one");
static_assert(offsetof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x40_one, ReturnValue) == 0x000000, "Member 'SSGS_ScreenDeviceZoneFactory_Make_screened_128x40_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDeviceZoneFactory.make_screened_128x48_one
// 0x0028 (0x0028 - 0x0000)
struct SSGS_ScreenDeviceZoneFactory_Make_screened_128x48_one final
{
public:
	struct FSSGS_ScreenDeviceZone                 ReturnValue;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x48_one) == 0x000008, "Wrong alignment on SSGS_ScreenDeviceZoneFactory_Make_screened_128x48_one");
static_assert(sizeof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x48_one) == 0x000028, "Wrong size on SSGS_ScreenDeviceZoneFactory_Make_screened_128x48_one");
static_assert(offsetof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x48_one, ReturnValue) == 0x000000, "Member 'SSGS_ScreenDeviceZoneFactory_Make_screened_128x48_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDeviceZoneFactory.make_screened_128x52_one
// 0x0028 (0x0028 - 0x0000)
struct SSGS_ScreenDeviceZoneFactory_Make_screened_128x52_one final
{
public:
	struct FSSGS_ScreenDeviceZone                 ReturnValue;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x52_one) == 0x000008, "Wrong alignment on SSGS_ScreenDeviceZoneFactory_Make_screened_128x52_one");
static_assert(sizeof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x52_one) == 0x000028, "Wrong size on SSGS_ScreenDeviceZoneFactory_Make_screened_128x52_one");
static_assert(offsetof(SSGS_ScreenDeviceZoneFactory_Make_screened_128x52_one, ReturnValue) == 0x000000, "Member 'SSGS_ScreenDeviceZoneFactory_Make_screened_128x52_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDeviceZoneFactory.make_screened_one
// 0x0028 (0x0028 - 0x0000)
struct SSGS_ScreenDeviceZoneFactory_Make_screened_one final
{
public:
	struct FSSGS_ScreenDeviceZone                 ReturnValue;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDeviceZoneFactory_Make_screened_one) == 0x000008, "Wrong alignment on SSGS_ScreenDeviceZoneFactory_Make_screened_one");
static_assert(sizeof(SSGS_ScreenDeviceZoneFactory_Make_screened_one) == 0x000028, "Wrong size on SSGS_ScreenDeviceZoneFactory_Make_screened_one");
static_assert(offsetof(SSGS_ScreenDeviceZoneFactory_Make_screened_one, ReturnValue) == 0x000000, "Member 'SSGS_ScreenDeviceZoneFactory_Make_screened_one::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ImageDataTexture2D.MakeImageDataFromTexture
// 0x0010 (0x0010 - 0x0000)
struct SSGS_ImageDataTexture2D_MakeImageDataFromTexture final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USSGS_ImageDataTexture2D*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ImageDataTexture2D_MakeImageDataFromTexture) == 0x000008, "Wrong alignment on SSGS_ImageDataTexture2D_MakeImageDataFromTexture");
static_assert(sizeof(SSGS_ImageDataTexture2D_MakeImageDataFromTexture) == 0x000010, "Wrong size on SSGS_ImageDataTexture2D_MakeImageDataFromTexture");
static_assert(offsetof(SSGS_ImageDataTexture2D_MakeImageDataFromTexture, Texture) == 0x000000, "Member 'SSGS_ImageDataTexture2D_MakeImageDataFromTexture::Texture' has a wrong offset!");
static_assert(offsetof(SSGS_ImageDataTexture2D_MakeImageDataFromTexture, ReturnValue) == 0x000008, "Member 'SSGS_ImageDataTexture2D_MakeImageDataFromTexture::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ImageDataArray.MakeImageDataFromArray
// 0x0018 (0x0018 - 0x0000)
struct SSGS_ImageDataArray_MakeImageDataFromArray final
{
public:
	TArray<uint8>                                 PackedBinaryImage;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_ImageDataArray*                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ImageDataArray_MakeImageDataFromArray) == 0x000008, "Wrong alignment on SSGS_ImageDataArray_MakeImageDataFromArray");
static_assert(sizeof(SSGS_ImageDataArray_MakeImageDataFromArray) == 0x000018, "Wrong size on SSGS_ImageDataArray_MakeImageDataFromArray");
static_assert(offsetof(SSGS_ImageDataArray_MakeImageDataFromArray, PackedBinaryImage) == 0x000000, "Member 'SSGS_ImageDataArray_MakeImageDataFromArray::PackedBinaryImage' has a wrong offset!");
static_assert(offsetof(SSGS_ImageDataArray_MakeImageDataFromArray, ReturnValue) == 0x000010, "Member 'SSGS_ImageDataArray_MakeImageDataFromArray::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakeFrameObject
// 0x0018 (0x0018 - 0x0000)
struct SSGS_FrameObject_MakeFrameObject final
{
public:
	TArray<struct FSSGS_KeyValuePair>             Param_Properties;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_FrameObject*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakeFrameObject) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakeFrameObject");
static_assert(sizeof(SSGS_FrameObject_MakeFrameObject) == 0x000018, "Wrong size on SSGS_FrameObject_MakeFrameObject");
static_assert(offsetof(SSGS_FrameObject_MakeFrameObject, Param_Properties) == 0x000000, "Member 'SSGS_FrameObject_MakeFrameObject::Param_Properties' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakeFrameObject, ReturnValue) == 0x000010, "Member 'SSGS_FrameObject_MakeFrameObject::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyBool
// 0x0058 (0x0058 - 0x0000)
struct SSGS_FrameObject_MakePropertyBool final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17F9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0018(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyBool) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyBool");
static_assert(sizeof(SSGS_FrameObject_MakePropertyBool) == 0x000058, "Wrong size on SSGS_FrameObject_MakePropertyBool");
static_assert(offsetof(SSGS_FrameObject_MakePropertyBool, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyBool::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyBool, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyBool::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyBool, ReturnValue) == 0x000018, "Member 'SSGS_FrameObject_MakePropertyBool::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyBoolArray
// 0x0060 (0x0060 - 0x0000)
struct SSGS_FrameObject_MakePropertyBoolArray final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyBoolArray) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyBoolArray");
static_assert(sizeof(SSGS_FrameObject_MakePropertyBoolArray) == 0x000060, "Wrong size on SSGS_FrameObject_MakePropertyBoolArray");
static_assert(offsetof(SSGS_FrameObject_MakePropertyBoolArray, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyBoolArray::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyBoolArray, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyBoolArray::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyBoolArray, ReturnValue) == 0x000020, "Member 'SSGS_FrameObject_MakePropertyBoolArray::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyByte
// 0x0058 (0x0058 - 0x0000)
struct SSGS_FrameObject_MakePropertyByte final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17FA[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0018(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyByte) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyByte");
static_assert(sizeof(SSGS_FrameObject_MakePropertyByte) == 0x000058, "Wrong size on SSGS_FrameObject_MakePropertyByte");
static_assert(offsetof(SSGS_FrameObject_MakePropertyByte, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyByte::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyByte, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyByte::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyByte, ReturnValue) == 0x000018, "Member 'SSGS_FrameObject_MakePropertyByte::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyByteArray
// 0x0060 (0x0060 - 0x0000)
struct SSGS_FrameObject_MakePropertyByteArray final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyByteArray) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyByteArray");
static_assert(sizeof(SSGS_FrameObject_MakePropertyByteArray) == 0x000060, "Wrong size on SSGS_FrameObject_MakePropertyByteArray");
static_assert(offsetof(SSGS_FrameObject_MakePropertyByteArray, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyByteArray::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyByteArray, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyByteArray::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyByteArray, ReturnValue) == 0x000020, "Member 'SSGS_FrameObject_MakePropertyByteArray::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyFloat
// 0x0058 (0x0058 - 0x0000)
struct SSGS_FrameObject_MakePropertyFloat final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17FB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0018(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyFloat) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyFloat");
static_assert(sizeof(SSGS_FrameObject_MakePropertyFloat) == 0x000058, "Wrong size on SSGS_FrameObject_MakePropertyFloat");
static_assert(offsetof(SSGS_FrameObject_MakePropertyFloat, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyFloat::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyFloat, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyFloat::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyFloat, ReturnValue) == 0x000018, "Member 'SSGS_FrameObject_MakePropertyFloat::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyFloatArray
// 0x0060 (0x0060 - 0x0000)
struct SSGS_FrameObject_MakePropertyFloatArray final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyFloatArray) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyFloatArray");
static_assert(sizeof(SSGS_FrameObject_MakePropertyFloatArray) == 0x000060, "Wrong size on SSGS_FrameObject_MakePropertyFloatArray");
static_assert(offsetof(SSGS_FrameObject_MakePropertyFloatArray, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyFloatArray::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyFloatArray, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyFloatArray::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyFloatArray, ReturnValue) == 0x000020, "Member 'SSGS_FrameObject_MakePropertyFloatArray::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyInt
// 0x0058 (0x0058 - 0x0000)
struct SSGS_FrameObject_MakePropertyInt final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17FC[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0018(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyInt) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyInt");
static_assert(sizeof(SSGS_FrameObject_MakePropertyInt) == 0x000058, "Wrong size on SSGS_FrameObject_MakePropertyInt");
static_assert(offsetof(SSGS_FrameObject_MakePropertyInt, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyInt::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyInt, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyInt::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyInt, ReturnValue) == 0x000018, "Member 'SSGS_FrameObject_MakePropertyInt::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyIntArray
// 0x0060 (0x0060 - 0x0000)
struct SSGS_FrameObject_MakePropertyIntArray final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyIntArray) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyIntArray");
static_assert(sizeof(SSGS_FrameObject_MakePropertyIntArray) == 0x000060, "Wrong size on SSGS_FrameObject_MakePropertyIntArray");
static_assert(offsetof(SSGS_FrameObject_MakePropertyIntArray, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyIntArray::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyIntArray, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyIntArray::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyIntArray, ReturnValue) == 0x000020, "Member 'SSGS_FrameObject_MakePropertyIntArray::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyObject
// 0x0060 (0x0060 - 0x0000)
struct SSGS_FrameObject_MakePropertyObject final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSSGS_KeyValuePair>             ObjectProperties;                                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyObject) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyObject");
static_assert(sizeof(SSGS_FrameObject_MakePropertyObject) == 0x000060, "Wrong size on SSGS_FrameObject_MakePropertyObject");
static_assert(offsetof(SSGS_FrameObject_MakePropertyObject, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyObject::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyObject, ObjectProperties) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyObject::ObjectProperties' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyObject, ReturnValue) == 0x000020, "Member 'SSGS_FrameObject_MakePropertyObject::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyObjectArray
// 0x0060 (0x0060 - 0x0000)
struct SSGS_FrameObject_MakePropertyObjectArray final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSSGS_PropertyContainer>        Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyObjectArray) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyObjectArray");
static_assert(sizeof(SSGS_FrameObject_MakePropertyObjectArray) == 0x000060, "Wrong size on SSGS_FrameObject_MakePropertyObjectArray");
static_assert(offsetof(SSGS_FrameObject_MakePropertyObjectArray, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyObjectArray::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyObjectArray, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyObjectArray::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyObjectArray, ReturnValue) == 0x000020, "Member 'SSGS_FrameObject_MakePropertyObjectArray::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyString
// 0x0060 (0x0060 - 0x0000)
struct SSGS_FrameObject_MakePropertyString final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyString) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyString");
static_assert(sizeof(SSGS_FrameObject_MakePropertyString) == 0x000060, "Wrong size on SSGS_FrameObject_MakePropertyString");
static_assert(offsetof(SSGS_FrameObject_MakePropertyString, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyString::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyString, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyString::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyString, ReturnValue) == 0x000020, "Member 'SSGS_FrameObject_MakePropertyString::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_FrameObject.MakePropertyStringArray
// 0x0060 (0x0060 - 0x0000)
struct SSGS_FrameObject_MakePropertyStringArray final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_KeyValuePair                     ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_FrameObject_MakePropertyStringArray) == 0x000008, "Wrong alignment on SSGS_FrameObject_MakePropertyStringArray");
static_assert(sizeof(SSGS_FrameObject_MakePropertyStringArray) == 0x000060, "Wrong size on SSGS_FrameObject_MakePropertyStringArray");
static_assert(offsetof(SSGS_FrameObject_MakePropertyStringArray, Param_Name) == 0x000000, "Member 'SSGS_FrameObject_MakePropertyStringArray::Param_Name' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyStringArray, Value) == 0x000010, "Member 'SSGS_FrameObject_MakePropertyStringArray::Value' has a wrong offset!");
static_assert(offsetof(SSGS_FrameObject_MakePropertyStringArray, ReturnValue) == 0x000020, "Member 'SSGS_FrameObject_MakePropertyStringArray::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_HandlerCollection.MakeHandlerCollection
// 0x0008 (0x0008 - 0x0000)
struct SSGS_HandlerCollection_MakeHandlerCollection final
{
public:
	class USSGS_HandlerCollection*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_HandlerCollection_MakeHandlerCollection) == 0x000008, "Wrong alignment on SSGS_HandlerCollection_MakeHandlerCollection");
static_assert(sizeof(SSGS_HandlerCollection_MakeHandlerCollection) == 0x000008, "Wrong size on SSGS_HandlerCollection_MakeHandlerCollection");
static_assert(offsetof(SSGS_HandlerCollection_MakeHandlerCollection, ReturnValue) == 0x000000, "Member 'SSGS_HandlerCollection_MakeHandlerCollection::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_HandlerCollection.AddColorHandler
// 0x0050 (0x0050 - 0x0000)
struct SSGS_HandlerCollection_AddColorHandler final
{
public:
	struct FSSGS_IlluminationDeviceZone           DeviceZone;                                        // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ESSGS_IlluminationMode                        Mode;                                              // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17FE[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USSGS_ColorEffectSpecification*         ColorSpec;                                         // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USSGS_RateSpecification*                RateSpec;                                          // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_HandlerCollection_AddColorHandler) == 0x000008, "Wrong alignment on SSGS_HandlerCollection_AddColorHandler");
static_assert(sizeof(SSGS_HandlerCollection_AddColorHandler) == 0x000050, "Wrong size on SSGS_HandlerCollection_AddColorHandler");
static_assert(offsetof(SSGS_HandlerCollection_AddColorHandler, DeviceZone) == 0x000000, "Member 'SSGS_HandlerCollection_AddColorHandler::DeviceZone' has a wrong offset!");
static_assert(offsetof(SSGS_HandlerCollection_AddColorHandler, Mode) == 0x000038, "Member 'SSGS_HandlerCollection_AddColorHandler::Mode' has a wrong offset!");
static_assert(offsetof(SSGS_HandlerCollection_AddColorHandler, ColorSpec) == 0x000040, "Member 'SSGS_HandlerCollection_AddColorHandler::ColorSpec' has a wrong offset!");
static_assert(offsetof(SSGS_HandlerCollection_AddColorHandler, RateSpec) == 0x000048, "Member 'SSGS_HandlerCollection_AddColorHandler::RateSpec' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_HandlerCollection.AddScreenHandler
// 0x0030 (0x0030 - 0x0000)
struct SSGS_HandlerCollection_AddScreenHandler final
{
public:
	struct FSSGS_ScreenDeviceZone                 DeviceZone;                                        // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_ScreenDataSpecification*          Pattern;                                           // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_HandlerCollection_AddScreenHandler) == 0x000008, "Wrong alignment on SSGS_HandlerCollection_AddScreenHandler");
static_assert(sizeof(SSGS_HandlerCollection_AddScreenHandler) == 0x000030, "Wrong size on SSGS_HandlerCollection_AddScreenHandler");
static_assert(offsetof(SSGS_HandlerCollection_AddScreenHandler, DeviceZone) == 0x000000, "Member 'SSGS_HandlerCollection_AddScreenHandler::DeviceZone' has a wrong offset!");
static_assert(offsetof(SSGS_HandlerCollection_AddScreenHandler, Pattern) == 0x000028, "Member 'SSGS_HandlerCollection_AddScreenHandler::Pattern' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_HandlerCollection.AddTactileHandler
// 0x0030 (0x0030 - 0x0000)
struct SSGS_HandlerCollection_AddTactileHandler final
{
public:
	struct FSSGS_TactileDeviceZone                DeviceZone;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_TactilePatternSpecification*      Pattern;                                           // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USSGS_RateSpecification*                Rate;                                              // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_HandlerCollection_AddTactileHandler) == 0x000008, "Wrong alignment on SSGS_HandlerCollection_AddTactileHandler");
static_assert(sizeof(SSGS_HandlerCollection_AddTactileHandler) == 0x000030, "Wrong size on SSGS_HandlerCollection_AddTactileHandler");
static_assert(offsetof(SSGS_HandlerCollection_AddTactileHandler, DeviceZone) == 0x000000, "Member 'SSGS_HandlerCollection_AddTactileHandler::DeviceZone' has a wrong offset!");
static_assert(offsetof(SSGS_HandlerCollection_AddTactileHandler, Pattern) == 0x000020, "Member 'SSGS_HandlerCollection_AddTactileHandler::Pattern' has a wrong offset!");
static_assert(offsetof(SSGS_HandlerCollection_AddTactileHandler, Rate) == 0x000028, "Member 'SSGS_HandlerCollection_AddTactileHandler::Rate' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_buzz1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_buzz1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_buzz1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_buzz1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_buzz1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_buzz2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_buzz2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_buzz2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_buzz2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_buzz2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_buzz3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_buzz3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_buzz3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_buzz3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_buzz3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_buzz4_40
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_buzz4_40 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz4_40) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_buzz4_40");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz4_40) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_buzz4_40");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz4_40, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_buzz4_40::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_buzz5_20
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_buzz5_20 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz5_20) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_buzz5_20");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz5_20) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_buzz5_20");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_buzz5_20, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_buzz5_20::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_buzzalert1000ms
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert1000ms final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert1000ms) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert1000ms");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert1000ms) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert1000ms");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert1000ms, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert1000ms::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_buzzalert750ms
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert750ms final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert750ms) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert750ms");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert750ms) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert750ms");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert750ms, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_buzzalert750ms::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_doubleclick_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_doubleclick_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_doubleclick_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longbuzzforprogrammaticstopping_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longbuzzforprogrammaticstopping_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longbuzzforprogrammaticstopping_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longbuzzforprogrammaticstopping_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longbuzzforprogrammaticstopping_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longbuzzforprogrammaticstopping_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longbuzzforprogrammaticstopping_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longbuzzforprogrammaticstopping_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharpclickmedium1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharpclickmedium2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharpclickmedium3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickmedium3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharpclickstrong1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharpclickstrong2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharpclickstrong3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharpclickstrong4_30
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong4_30 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong4_30) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong4_30");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong4_30) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong4_30");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong4_30, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharpclickstrong4_30::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharptick1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharptick2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_longdoublesharptick3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_longdoublesharptick3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_mediumclick1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_mediumclick2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_mediumclick3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_mediumclick3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_pulsingmedium1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_pulsingmedium2_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium2_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium2_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium2_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium2_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium2_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium2_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_pulsingmedium2_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_pulsingsharp1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_pulsingsharp2_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp2_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp2_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp2_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp2_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp2_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp2_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_pulsingsharp2_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_pulsingstrong1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_pulsingstrong2_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong2_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong2_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong2_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong2_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong2_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong2_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_pulsingstrong2_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_sharpclick_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_sharpclick_30
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_30 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_30) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_30");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_30) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_30");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_30, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_30::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_sharpclick_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_sharpclick_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_sharptick1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_sharptick1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_sharptick1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_sharptick1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_sharptick1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_sharptick1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_sharptick1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_sharptick1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_sharptick2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_sharptick2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_sharptick2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_sharptick2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_sharptick2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_sharptick2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_sharptick2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_sharptick2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_sharptick3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_sharptick3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_sharptick3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_sharptick3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_sharptick3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_sharptick3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_sharptick3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_sharptick3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoubleclickmedium1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoubleclickmedium2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoubleclickmedium3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickmedium3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoubleclickstrong1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoubleclickstrong2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoubleclickstrong3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoubleclickstrong4_30
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong4_30 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong4_30) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong4_30");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong4_30) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong4_30");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong4_30, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoubleclickstrong4_30::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoublesharptick1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoublesharptick2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_shortdoublesharptick3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_shortdoublesharptick3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_smoothhum1nokickorbrakepulse_50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum1nokickorbrakepulse_50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum1nokickorbrakepulse_50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum1nokickorbrakepulse_50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum1nokickorbrakepulse_50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum1nokickorbrakepulse_50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum1nokickorbrakepulse_50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum1nokickorbrakepulse_50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_smoothhum2nokickorbrakepulse_40
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum2nokickorbrakepulse_40 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum2nokickorbrakepulse_40) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum2nokickorbrakepulse_40");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum2nokickorbrakepulse_40) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum2nokickorbrakepulse_40");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum2nokickorbrakepulse_40, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum2nokickorbrakepulse_40::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_smoothhum3nokickorbrakepulse_30
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum3nokickorbrakepulse_30 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum3nokickorbrakepulse_30) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum3nokickorbrakepulse_30");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum3nokickorbrakepulse_30) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum3nokickorbrakepulse_30");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum3nokickorbrakepulse_30, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum3nokickorbrakepulse_30::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_smoothhum4nokickorbrakepulse_20
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum4nokickorbrakepulse_20 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum4nokickorbrakepulse_20) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum4nokickorbrakepulse_20");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum4nokickorbrakepulse_20) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum4nokickorbrakepulse_20");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum4nokickorbrakepulse_20, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum4nokickorbrakepulse_20::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_smoothhum5nokickorbrakepulse_10
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum5nokickorbrakepulse_10 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum5nokickorbrakepulse_10) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum5nokickorbrakepulse_10");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum5nokickorbrakepulse_10) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum5nokickorbrakepulse_10");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum5nokickorbrakepulse_10, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_smoothhum5nokickorbrakepulse_10::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_softbump_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_softbump_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_softbump_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_softbump_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_softbump_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_softbump_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_softbump_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_softbump_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_softbump_30
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_softbump_30 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_softbump_30) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_softbump_30");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_softbump_30) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_softbump_30");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_softbump_30, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_softbump_30::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_softbump_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_softbump_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_softbump_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_softbump_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_softbump_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_softbump_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_softbump_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_softbump_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_softfuzz_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_softfuzz_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_softfuzz_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_softfuzz_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_softfuzz_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_softfuzz_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_softfuzz_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_softfuzz_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_strongbuzz_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_strongbuzz_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_strongbuzz_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_strongbuzz_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_strongbuzz_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_strongbuzz_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_strongbuzz_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_strongbuzz_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_strongclick1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_strongclick1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_strongclick1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_strongclick2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_strongclick2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_strongclick2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_strongclick3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_strongclick3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_strongclick3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_strongclick4_30
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_strongclick4_30 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick4_30) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick4_30");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick4_30) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick4_30");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick4_30, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_strongclick4_30::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_strongclick_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_strongclick_30
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_30 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_30) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_30");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_30) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_30");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_30, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_30::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_strongclick_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_strongclick_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionclick1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionclick2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionclick3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionclick4_40
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick4_40 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick4_40) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick4_40");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick4_40) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick4_40");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick4_40, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick4_40::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionclick5_20
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick5_20 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick5_20) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick5_20");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick5_20) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick5_20");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick5_20, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick5_20::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionclick6_10
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick6_10 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick6_10) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick6_10");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick6_10) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick6_10");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick6_10, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionclick6_10::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionhum1_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum1_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum1_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum1_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum1_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum1_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum1_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum1_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionhum2_80
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum2_80 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum2_80) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum2_80");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum2_80) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum2_80");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum2_80, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum2_80::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionhum3_60
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum3_60 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum3_60) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum3_60");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum3_60) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum3_60");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum3_60, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum3_60::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionhum4_40
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum4_40 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum4_40) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum4_40");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum4_40) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum4_40");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum4_40, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum4_40::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionhum5_20
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum5_20 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum5_20) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum5_20");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum5_20) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum5_20");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum5_20, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum5_20::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionhum6_10
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum6_10 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum6_10) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum6_10");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum6_10) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum6_10");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum6_10, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionhum6_10::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownlongsharp1_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownlongsharp1_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp1_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownlongsharp2_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownlongsharp2_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsharp2_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownlongsmooth1_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownlongsmooth1_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth1_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownlongsmooth2_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownlongsmooth2_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownlongsmooth2_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownmediumsharp1_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownmediumsharp1_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp1_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownmediumsharp2_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownmediumsharp2_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsharp2_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownmediumsmooth1_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownmediumsmooth1_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth1_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownmediumsmooth2_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownmediumsmooth2_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownmediumsmooth2_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownshortsharp1_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownshortsharp1_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp1_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownshortsharp2_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownshortsharp2_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsharp2_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownshortsmooth1_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownshortsmooth1_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth1_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownshortsmooth2_100to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_100to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_100to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_100to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_100to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_100to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_100to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_100to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampdownshortsmooth2_50to0
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_50to0 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_50to0) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_50to0");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_50to0) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_50to0");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_50to0, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampdownshortsmooth2_50to0::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampuplongsharp1_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampuplongsharp1_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp1_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampuplongsharp2_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampuplongsharp2_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsharp2_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampuplongsmooth1_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampuplongsmooth1_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth1_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampuplongsmooth2_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampuplongsmooth2_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampuplongsmooth2_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupmediumsharp1_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupmediumsharp1_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp1_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupmediumsharp2_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupmediumsharp2_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsharp2_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupmediumsmooth1_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupmediumsmooth1_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth1_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupmediumsmooth2_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupmediumsmooth2_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupmediumsmooth2_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupshortsharp1_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupshortsharp1_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp1_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupshortsharp2_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupshortsharp2_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsharp2_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupshortsmooth1_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupshortsmooth1_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth1_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupshortsmooth2_0to100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_transitionrampupshortsmooth2_0to50
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to50 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to50) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to50");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to50) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to50");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to50, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_transitionrampupshortsmooth2_0to50::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory.pattern_tripleclick_100
// 0x0010 (0x0010 - 0x0000)
struct SSGS_PredefinedTactilePatternFactory_Pattern_tripleclick_100 final
{
public:
	struct FSSGS_PredefinedTactilePattern         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_PredefinedTactilePatternFactory_Pattern_tripleclick_100) == 0x000008, "Wrong alignment on SSGS_PredefinedTactilePatternFactory_Pattern_tripleclick_100");
static_assert(sizeof(SSGS_PredefinedTactilePatternFactory_Pattern_tripleclick_100) == 0x000010, "Wrong size on SSGS_PredefinedTactilePatternFactory_Pattern_tripleclick_100");
static_assert(offsetof(SSGS_PredefinedTactilePatternFactory_Pattern_tripleclick_100, ReturnValue) == 0x000000, "Member 'SSGS_PredefinedTactilePatternFactory_Pattern_tripleclick_100::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_RateSpecification.MakeRangedRate
// 0x0018 (0x0018 - 0x0000)
struct SSGS_RateSpecification_MakeRangedRate final
{
public:
	TArray<struct FSSGS_FrequencyRepeatLimitPair> V;                                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_RateSpecification*                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_RateSpecification_MakeRangedRate) == 0x000008, "Wrong alignment on SSGS_RateSpecification_MakeRangedRate");
static_assert(sizeof(SSGS_RateSpecification_MakeRangedRate) == 0x000018, "Wrong size on SSGS_RateSpecification_MakeRangedRate");
static_assert(offsetof(SSGS_RateSpecification_MakeRangedRate, V) == 0x000000, "Member 'SSGS_RateSpecification_MakeRangedRate::V' has a wrong offset!");
static_assert(offsetof(SSGS_RateSpecification_MakeRangedRate, ReturnValue) == 0x000010, "Member 'SSGS_RateSpecification_MakeRangedRate::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_RateSpecification.MakeStaticRate
// 0x0010 (0x0010 - 0x0000)
struct SSGS_RateSpecification_MakeStaticRate final
{
public:
	int32                                         Frequency;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Repeat_limit;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USSGS_RateSpecification*                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_RateSpecification_MakeStaticRate) == 0x000008, "Wrong alignment on SSGS_RateSpecification_MakeStaticRate");
static_assert(sizeof(SSGS_RateSpecification_MakeStaticRate) == 0x000010, "Wrong size on SSGS_RateSpecification_MakeStaticRate");
static_assert(offsetof(SSGS_RateSpecification_MakeStaticRate, Frequency) == 0x000000, "Member 'SSGS_RateSpecification_MakeStaticRate::Frequency' has a wrong offset!");
static_assert(offsetof(SSGS_RateSpecification_MakeStaticRate, Repeat_limit) == 0x000004, "Member 'SSGS_RateSpecification_MakeStaticRate::Repeat_limit' has a wrong offset!");
static_assert(offsetof(SSGS_RateSpecification_MakeStaticRate, ReturnValue) == 0x000008, "Member 'SSGS_RateSpecification_MakeStaticRate::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeContextFrameKeyAccessor
// 0x0030 (0x0030 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeContextFrameKeyAccessor final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSSGS_LineDataAccessor                 ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeContextFrameKeyAccessor) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeContextFrameKeyAccessor");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeContextFrameKeyAccessor) == 0x000030, "Wrong size on SSGS_ScreenDataSpecification_MakeContextFrameKeyAccessor");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeContextFrameKeyAccessor, Key) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeContextFrameKeyAccessor::Key' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeContextFrameKeyAccessor, ReturnValue) == 0x000010, "Member 'SSGS_ScreenDataSpecification_MakeContextFrameKeyAccessor::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeFrameModifiers
// 0x0020 (0x0020 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeFrameModifiers final
{
public:
	int32                                         Length_millis;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Repeats;                                           // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1801[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_FrameModifiers                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeFrameModifiers) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeFrameModifiers");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeFrameModifiers) == 0x000020, "Wrong size on SSGS_ScreenDataSpecification_MakeFrameModifiers");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeFrameModifiers, Length_millis) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeFrameModifiers::Length_millis' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeFrameModifiers, Repeats) == 0x000004, "Member 'SSGS_ScreenDataSpecification_MakeFrameModifiers::Repeats' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeFrameModifiers, ReturnValue) == 0x000008, "Member 'SSGS_ScreenDataSpecification_MakeFrameModifiers::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeFrameModifiersWithNoRepeat
// 0x0020 (0x0020 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeFrameModifiersWithNoRepeat final
{
public:
	int32                                         Length_millis;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1802[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_FrameModifiers                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeFrameModifiersWithNoRepeat) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeFrameModifiersWithNoRepeat");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeFrameModifiersWithNoRepeat) == 0x000020, "Wrong size on SSGS_ScreenDataSpecification_MakeFrameModifiersWithNoRepeat");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeFrameModifiersWithNoRepeat, Length_millis) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeFrameModifiersWithNoRepeat::Length_millis' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeFrameModifiersWithNoRepeat, ReturnValue) == 0x000008, "Member 'SSGS_ScreenDataSpecification_MakeFrameModifiersWithNoRepeat::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeFrameModifiersWithRepeatCount
// 0x0020 (0x0020 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount final
{
public:
	int32                                         Length_millis;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Repeat_count;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSSGS_FrameModifiers                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount) == 0x000020, "Wrong size on SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount, Length_millis) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount::Length_millis' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount, Repeat_count) == 0x000004, "Member 'SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount::Repeat_count' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount, ReturnValue) == 0x000008, "Member 'SSGS_ScreenDataSpecification_MakeFrameModifiersWithRepeatCount::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeGoLispExpressionAccessor
// 0x0030 (0x0030 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeGoLispExpressionAccessor final
{
public:
	class FString                                 Expression;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSSGS_LineDataAccessor                 ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeGoLispExpressionAccessor) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeGoLispExpressionAccessor");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeGoLispExpressionAccessor) == 0x000030, "Wrong size on SSGS_ScreenDataSpecification_MakeGoLispExpressionAccessor");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeGoLispExpressionAccessor, Expression) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeGoLispExpressionAccessor::Expression' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeGoLispExpressionAccessor, ReturnValue) == 0x000010, "Member 'SSGS_ScreenDataSpecification_MakeGoLispExpressionAccessor::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeImageFrameData
// 0x00F0 (0x00F0 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeImageFrameData final
{
public:
	class USSGS_ImageDataSource*                  Source;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSSGS_ScreenDeviceZone                 Dz;                                                // 0x0008(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_FrameModifiers                   FrameModifiers;                                    // 0x0030(0x0018)(Parm, NativeAccessSpecifierPublic)
	struct FSSGS_FrameData                        ReturnValue;                                       // 0x0048(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeImageFrameData) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeImageFrameData");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeImageFrameData) == 0x0000F0, "Wrong size on SSGS_ScreenDataSpecification_MakeImageFrameData");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeImageFrameData, Source) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeImageFrameData::Source' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeImageFrameData, Dz) == 0x000008, "Member 'SSGS_ScreenDataSpecification_MakeImageFrameData::Dz' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeImageFrameData, FrameModifiers) == 0x000030, "Member 'SSGS_ScreenDataSpecification_MakeImageFrameData::FrameModifiers' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeImageFrameData, ReturnValue) == 0x000048, "Member 'SSGS_ScreenDataSpecification_MakeImageFrameData::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeMultiLineFrameData
// 0x00D8 (0x00D8 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeMultiLineFrameData final
{
public:
	TArray<struct FSSGS_LineData>                 Lines;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_FrameModifiers                   FrameModifiers;                                    // 0x0010(0x0018)(Parm, NativeAccessSpecifierPublic)
	ESSGS_EventIconId                             Icon_id;                                           // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1803[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_FrameData                        ReturnValue;                                       // 0x0030(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeMultiLineFrameData) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeMultiLineFrameData");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeMultiLineFrameData) == 0x0000D8, "Wrong size on SSGS_ScreenDataSpecification_MakeMultiLineFrameData");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeMultiLineFrameData, Lines) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeMultiLineFrameData::Lines' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeMultiLineFrameData, FrameModifiers) == 0x000010, "Member 'SSGS_ScreenDataSpecification_MakeMultiLineFrameData::FrameModifiers' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeMultiLineFrameData, Icon_id) == 0x000028, "Member 'SSGS_ScreenDataSpecification_MakeMultiLineFrameData::Icon_id' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeMultiLineFrameData, ReturnValue) == 0x000030, "Member 'SSGS_ScreenDataSpecification_MakeMultiLineFrameData::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeProgressBarLineData
// 0x0088 (0x0088 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeProgressBarLineData final
{
public:
	struct FSSGS_LineDataAccessor                 Accessor;                                          // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_LineData                         ReturnValue;                                       // 0x0020(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeProgressBarLineData) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeProgressBarLineData");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeProgressBarLineData) == 0x000088, "Wrong size on SSGS_ScreenDataSpecification_MakeProgressBarLineData");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeProgressBarLineData, Accessor) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeProgressBarLineData::Accessor' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeProgressBarLineData, ReturnValue) == 0x000020, "Member 'SSGS_ScreenDataSpecification_MakeProgressBarLineData::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeSingleLineFrameData
// 0x0130 (0x0130 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeSingleLineFrameData final
{
public:
	struct FSSGS_LineData                         LineData;                                          // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_FrameModifiers                   FrameModifiers;                                    // 0x0068(0x0018)(Parm, NativeAccessSpecifierPublic)
	ESSGS_EventIconId                             Icon_id;                                           // 0x0080(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1804[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_FrameData                        ReturnValue;                                       // 0x0088(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeSingleLineFrameData) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeSingleLineFrameData");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeSingleLineFrameData) == 0x000130, "Wrong size on SSGS_ScreenDataSpecification_MakeSingleLineFrameData");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeSingleLineFrameData, LineData) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeSingleLineFrameData::LineData' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeSingleLineFrameData, FrameModifiers) == 0x000068, "Member 'SSGS_ScreenDataSpecification_MakeSingleLineFrameData::FrameModifiers' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeSingleLineFrameData, Icon_id) == 0x000080, "Member 'SSGS_ScreenDataSpecification_MakeSingleLineFrameData::Icon_id' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeSingleLineFrameData, ReturnValue) == 0x000088, "Member 'SSGS_ScreenDataSpecification_MakeSingleLineFrameData::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecification.MakeTextLineData
// 0x00B8 (0x00B8 - 0x0000)
struct SSGS_ScreenDataSpecification_MakeTextLineData final
{
public:
	struct FSSGS_LineDataText                     TextModifiers;                                     // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_LineDataAccessor                 Accessor;                                          // 0x0030(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSSGS_LineData                         ReturnValue;                                       // 0x0050(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecification_MakeTextLineData) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecification_MakeTextLineData");
static_assert(sizeof(SSGS_ScreenDataSpecification_MakeTextLineData) == 0x0000B8, "Wrong size on SSGS_ScreenDataSpecification_MakeTextLineData");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeTextLineData, TextModifiers) == 0x000000, "Member 'SSGS_ScreenDataSpecification_MakeTextLineData::TextModifiers' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeTextLineData, Accessor) == 0x000030, "Member 'SSGS_ScreenDataSpecification_MakeTextLineData::Accessor' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecification_MakeTextLineData, ReturnValue) == 0x000050, "Member 'SSGS_ScreenDataSpecification_MakeTextLineData::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecificationRanges.MakeScreenDataRanges
// 0x0018 (0x0018 - 0x0000)
struct SSGS_ScreenDataSpecificationRanges_MakeScreenDataRanges final
{
public:
	TArray<struct FSSGS_FrameDataRange>           Param_Datas;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_ScreenDataSpecificationRanges*    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecificationRanges_MakeScreenDataRanges) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecificationRanges_MakeScreenDataRanges");
static_assert(sizeof(SSGS_ScreenDataSpecificationRanges_MakeScreenDataRanges) == 0x000018, "Wrong size on SSGS_ScreenDataSpecificationRanges_MakeScreenDataRanges");
static_assert(offsetof(SSGS_ScreenDataSpecificationRanges_MakeScreenDataRanges, Param_Datas) == 0x000000, "Member 'SSGS_ScreenDataSpecificationRanges_MakeScreenDataRanges::Param_Datas' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecificationRanges_MakeScreenDataRanges, ReturnValue) == 0x000010, "Member 'SSGS_ScreenDataSpecificationRanges_MakeScreenDataRanges::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_ScreenDataSpecificationStatic.MakeStaticScreenData
// 0x0018 (0x0018 - 0x0000)
struct SSGS_ScreenDataSpecificationStatic_MakeStaticScreenData final
{
public:
	TArray<struct FSSGS_FrameData>                Param_Datas;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_ScreenDataSpecificationStatic*    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_ScreenDataSpecificationStatic_MakeStaticScreenData) == 0x000008, "Wrong alignment on SSGS_ScreenDataSpecificationStatic_MakeStaticScreenData");
static_assert(sizeof(SSGS_ScreenDataSpecificationStatic_MakeStaticScreenData) == 0x000018, "Wrong size on SSGS_ScreenDataSpecificationStatic_MakeStaticScreenData");
static_assert(offsetof(SSGS_ScreenDataSpecificationStatic_MakeStaticScreenData, Param_Datas) == 0x000000, "Member 'SSGS_ScreenDataSpecificationStatic_MakeStaticScreenData::Param_Datas' has a wrong offset!");
static_assert(offsetof(SSGS_ScreenDataSpecificationStatic_MakeStaticScreenData, ReturnValue) == 0x000010, "Member 'SSGS_ScreenDataSpecificationStatic_MakeStaticScreenData::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_TactilePatternSpecificationRanges.MakeRangedTactilePattern
// 0x0018 (0x0018 - 0x0000)
struct SSGS_TactilePatternSpecificationRanges_MakeRangedTactilePattern final
{
public:
	TArray<struct FSSGS_TactilePatternRange>      Ranges;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_TactilePatternSpecificationRanges* ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_TactilePatternSpecificationRanges_MakeRangedTactilePattern) == 0x000008, "Wrong alignment on SSGS_TactilePatternSpecificationRanges_MakeRangedTactilePattern");
static_assert(sizeof(SSGS_TactilePatternSpecificationRanges_MakeRangedTactilePattern) == 0x000018, "Wrong size on SSGS_TactilePatternSpecificationRanges_MakeRangedTactilePattern");
static_assert(offsetof(SSGS_TactilePatternSpecificationRanges_MakeRangedTactilePattern, Ranges) == 0x000000, "Member 'SSGS_TactilePatternSpecificationRanges_MakeRangedTactilePattern::Ranges' has a wrong offset!");
static_assert(offsetof(SSGS_TactilePatternSpecificationRanges_MakeRangedTactilePattern, ReturnValue) == 0x000010, "Member 'SSGS_TactilePatternSpecificationRanges_MakeRangedTactilePattern::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_TactilePatternSpecificationStatic.MakeStaticEmptyPattern
// 0x0010 (0x0010 - 0x0000)
struct SSGS_TactilePatternSpecificationStatic_MakeStaticEmptyPattern final
{
public:
	TArray<struct FSSGS_TactilePatternStatic>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_TactilePatternSpecificationStatic_MakeStaticEmptyPattern) == 0x000008, "Wrong alignment on SSGS_TactilePatternSpecificationStatic_MakeStaticEmptyPattern");
static_assert(sizeof(SSGS_TactilePatternSpecificationStatic_MakeStaticEmptyPattern) == 0x000010, "Wrong size on SSGS_TactilePatternSpecificationStatic_MakeStaticEmptyPattern");
static_assert(offsetof(SSGS_TactilePatternSpecificationStatic_MakeStaticEmptyPattern, ReturnValue) == 0x000000, "Member 'SSGS_TactilePatternSpecificationStatic_MakeStaticEmptyPattern::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_TactilePatternSpecificationStatic.MakeStaticTactilePattern
// 0x0018 (0x0018 - 0x0000)
struct SSGS_TactilePatternSpecificationStatic_MakeStaticTactilePattern final
{
public:
	TArray<struct FSSGS_TactilePatternStatic>     Pattern;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class USSGS_TactilePatternSpecificationStatic* ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_TactilePatternSpecificationStatic_MakeStaticTactilePattern) == 0x000008, "Wrong alignment on SSGS_TactilePatternSpecificationStatic_MakeStaticTactilePattern");
static_assert(sizeof(SSGS_TactilePatternSpecificationStatic_MakeStaticTactilePattern) == 0x000018, "Wrong size on SSGS_TactilePatternSpecificationStatic_MakeStaticTactilePattern");
static_assert(offsetof(SSGS_TactilePatternSpecificationStatic_MakeStaticTactilePattern, Pattern) == 0x000000, "Member 'SSGS_TactilePatternSpecificationStatic_MakeStaticTactilePattern::Pattern' has a wrong offset!");
static_assert(offsetof(SSGS_TactilePatternSpecificationStatic_MakeStaticTactilePattern, ReturnValue) == 0x000010, "Member 'SSGS_TactilePatternSpecificationStatic_MakeStaticTactilePattern::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_TactilePatternSpecificationStatic.MakeStaticWithCustomEffect
// 0x0040 (0x0040 - 0x0000)
struct SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect final
{
public:
	int32                                         Length_ms;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Delay_ms;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSSGS_TactilePatternStatic             ReturnValue;                                       // 0x0008(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect) == 0x000008, "Wrong alignment on SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect");
static_assert(sizeof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect) == 0x000040, "Wrong size on SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect");
static_assert(offsetof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect, Length_ms) == 0x000000, "Member 'SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect::Length_ms' has a wrong offset!");
static_assert(offsetof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect, Delay_ms) == 0x000004, "Member 'SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect::Delay_ms' has a wrong offset!");
static_assert(offsetof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect, ReturnValue) == 0x000008, "Member 'SSGS_TactilePatternSpecificationStatic_MakeStaticWithCustomEffect::ReturnValue' has a wrong offset!");

// Function SteelSeriesGameSense.SSGS_TactilePatternSpecificationStatic.MakeStaticWithPredefinedEffect
// 0x0050 (0x0050 - 0x0000)
struct SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect final
{
public:
	struct FSSGS_PredefinedTactilePattern         Type;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Delay_ms;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1808[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSGS_TactilePatternStatic             ReturnValue;                                       // 0x0018(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect) == 0x000008, "Wrong alignment on SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect");
static_assert(sizeof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect) == 0x000050, "Wrong size on SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect");
static_assert(offsetof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect, Type) == 0x000000, "Member 'SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect::Type' has a wrong offset!");
static_assert(offsetof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect, Delay_ms) == 0x000010, "Member 'SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect::Delay_ms' has a wrong offset!");
static_assert(offsetof(SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect, ReturnValue) == 0x000018, "Member 'SSGS_TactilePatternSpecificationStatic_MakeStaticWithPredefinedEffect::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Tooltip_Vehicle

#include "Basic.hpp"

#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function W_Tooltip_Vehicle.W_Tooltip_Vehicle_C.ExecuteUbergraph_W_Tooltip_Vehicle
// 0x0004 (0x0004 - 0x0000)
struct W_Tooltip_Vehicle_C_ExecuteUbergraph_W_Tooltip_Vehicle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_Vehicle_C_ExecuteUbergraph_W_Tooltip_Vehicle) == 0x000004, "Wrong alignment on W_Tooltip_Vehicle_C_ExecuteUbergraph_W_Tooltip_Vehicle");
static_assert(sizeof(W_Tooltip_Vehicle_C_ExecuteUbergraph_W_Tooltip_Vehicle) == 0x000004, "Wrong size on W_Tooltip_Vehicle_C_ExecuteUbergraph_W_Tooltip_Vehicle");
static_assert(offsetof(W_Tooltip_Vehicle_C_ExecuteUbergraph_W_Tooltip_Vehicle, EntryPoint) == 0x000000, "Member 'W_Tooltip_Vehicle_C_ExecuteUbergraph_W_Tooltip_Vehicle::EntryPoint' has a wrong offset!");

// Function W_Tooltip_Vehicle.W_Tooltip_Vehicle_C.Update All Seats
// 0x0060 (0x0060 - 0x0000)
struct W_Tooltip_Vehicle_C_Update_All_Seats final
{
public:
	bool                                          Param_Is_Self_Team;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_My_Seat_ID;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQVehicleOccupantInfo                 CallFunc_Array_Get_Item;                           // 0x0010(0x0038)()
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365F[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Tooltip_Vehicle_C_Update_All_Seats) == 0x000008, "Wrong alignment on W_Tooltip_Vehicle_C_Update_All_Seats");
static_assert(sizeof(W_Tooltip_Vehicle_C_Update_All_Seats) == 0x000060, "Wrong size on W_Tooltip_Vehicle_C_Update_All_Seats");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, Param_Is_Self_Team) == 0x000000, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::Param_Is_Self_Team' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, Param_My_Seat_ID) == 0x000004, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::Param_My_Seat_ID' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, Temp_int_Variable) == 0x000008, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, CallFunc_GetChildAt_ReturnValue) == 0x000048, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, CallFunc_GetChildrenCount_ReturnValue) == 0x000054, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_All_Seats, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'W_Tooltip_Vehicle_C_Update_All_Seats::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_Tooltip_Vehicle.W_Tooltip_Vehicle_C.Update Seat ID
// 0x0060 (0x0060 - 0x0000)
struct W_Tooltip_Vehicle_C_Update_Seat_ID final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3660[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQVehicleOccupantInfo                 CallFunc_Array_Get_Item;                           // 0x0010(0x0038)()
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Tooltip_VehicleSeatItem_C*           K2Node_DynamicCast_AsW_Tooltip_Vehicle_Seat_Item;  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Tooltip_Vehicle_C_Update_Seat_ID) == 0x000008, "Wrong alignment on W_Tooltip_Vehicle_C_Update_Seat_ID");
static_assert(sizeof(W_Tooltip_Vehicle_C_Update_Seat_ID) == 0x000060, "Wrong size on W_Tooltip_Vehicle_C_Update_Seat_ID");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_Seat_ID, Param_Index) == 0x000000, "Member 'W_Tooltip_Vehicle_C_Update_Seat_ID::Param_Index' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_Seat_ID, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'W_Tooltip_Vehicle_C_Update_Seat_ID::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_Seat_ID, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_Tooltip_Vehicle_C_Update_Seat_ID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_Seat_ID, CallFunc_GetChildAt_ReturnValue) == 0x000048, "Member 'W_Tooltip_Vehicle_C_Update_Seat_ID::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_Seat_ID, K2Node_DynamicCast_AsW_Tooltip_Vehicle_Seat_Item) == 0x000050, "Member 'W_Tooltip_Vehicle_C_Update_Seat_ID::K2Node_DynamicCast_AsW_Tooltip_Vehicle_Seat_Item' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Vehicle_C_Update_Seat_ID, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_Tooltip_Vehicle_C_Update_Seat_ID::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


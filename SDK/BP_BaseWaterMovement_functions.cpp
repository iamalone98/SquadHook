#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseWaterMovement

#include "Basic.hpp"

#include "BP_BaseWaterMovement_classes.hpp"
#include "BP_BaseWaterMovement_parameters.hpp"


namespace SDK
{

// Function BP_BaseWaterMovement.BP_BaseWaterMovement_C.ExecuteUbergraph_BP_BaseWaterMovement
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BaseWaterMovement_C::ExecuteUbergraph_BP_BaseWaterMovement(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseWaterMovement_C", "ExecuteUbergraph_BP_BaseWaterMovement");

	Params::BP_BaseWaterMovement_C_ExecuteUbergraph_BP_BaseWaterMovement Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseWaterMovement.BP_BaseWaterMovement_C.OnMechanismAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class UODKWaterMechanismComponent*      InMechanismComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BaseWaterMovement_C::OnMechanismAdded(class UODKWaterMechanismComponent* InMechanismComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseWaterMovement_C", "OnMechanismAdded");

	Params::BP_BaseWaterMovement_C_OnMechanismAdded Parms{};

	Parms.InMechanismComponent = InMechanismComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BaseWaterMovement.BP_BaseWaterMovement_C.ApplyMovement
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_BaseWaterMovement_C::ApplyMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BaseWaterMovement_C", "ApplyMovement");

	UObject::ProcessEvent(Func, nullptr);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapMarker_DirectorMaster

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_MapMarker_DirectorMaster.BP_MapMarker_DirectorMaster_C.ExecuteUbergraph_BP_MapMarker_DirectorMaster
// 0x0028 (0x0028 - 0x0000)
struct BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_46B2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Bind_To;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster) == 0x000008, "Wrong alignment on BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster");
static_assert(sizeof(BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster) == 0x000028, "Wrong size on BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster");
static_assert(offsetof(BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster, EntryPoint) == 0x000000, "Member 'BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster, K2Node_CustomEvent_Bind_To) == 0x000018, "Member 'BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster::K2Node_CustomEvent_Bind_To' has a wrong offset!");
static_assert(offsetof(BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster, K2Node_CustomEvent_DestroyedActor) == 0x000020, "Member 'BP_MapMarker_DirectorMaster_C_ExecuteUbergraph_BP_MapMarker_DirectorMaster::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");

// Function BP_MapMarker_DirectorMaster.BP_MapMarker_DirectorMaster_C.OnDestroyed_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BP_MapMarker_DirectorMaster_C_OnDestroyed_Event_0 final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMarker_DirectorMaster_C_OnDestroyed_Event_0) == 0x000008, "Wrong alignment on BP_MapMarker_DirectorMaster_C_OnDestroyed_Event_0");
static_assert(sizeof(BP_MapMarker_DirectorMaster_C_OnDestroyed_Event_0) == 0x000008, "Wrong size on BP_MapMarker_DirectorMaster_C_OnDestroyed_Event_0");
static_assert(offsetof(BP_MapMarker_DirectorMaster_C_OnDestroyed_Event_0, DestroyedActor) == 0x000000, "Member 'BP_MapMarker_DirectorMaster_C_OnDestroyed_Event_0::DestroyedActor' has a wrong offset!");

// Function BP_MapMarker_DirectorMaster.BP_MapMarker_DirectorMaster_C.Bind To Destroy
// 0x0008 (0x0008 - 0x0000)
struct BP_MapMarker_DirectorMaster_C_Bind_To_Destroy final
{
public:
	class AActor*                                 Bind_To;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapMarker_DirectorMaster_C_Bind_To_Destroy) == 0x000008, "Wrong alignment on BP_MapMarker_DirectorMaster_C_Bind_To_Destroy");
static_assert(sizeof(BP_MapMarker_DirectorMaster_C_Bind_To_Destroy) == 0x000008, "Wrong size on BP_MapMarker_DirectorMaster_C_Bind_To_Destroy");
static_assert(offsetof(BP_MapMarker_DirectorMaster_C_Bind_To_Destroy, Bind_To) == 0x000000, "Member 'BP_MapMarker_DirectorMaster_C_Bind_To_Destroy::Bind_To' has a wrong offset!");

}


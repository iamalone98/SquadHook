#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GenericEquippableAmmobag

#include "Basic.hpp"

#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.ExecuteUbergraph_BP_GenericEquippableAmmobag
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployableItem*                      K2Node_Event_Deployable;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQDeployableAmmoBag*                   K2Node_DynamicCast_AsSQDeployable_Ammo_Bag;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311E[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQInventoryData                       K2Node_Event_ItemClass;                            // 0x0028(0x0038)(ConstParm)
	bool                                          K2Node_Event_bSpawnMaxAmmo;                        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQPersistedAmmoCount                  K2Node_Event_PersistedAmmo;                        // 0x0064(0x0008)(ConstParm, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3120[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3121[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3122[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3123[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag) == 0x000008, "Wrong alignment on BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag) == 0x0000B0, "Wrong size on BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, EntryPoint) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, K2Node_Event_Deployable) == 0x000008, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::K2Node_Event_Deployable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, K2Node_DynamicCast_AsSQDeployable_Ammo_Bag) == 0x000010, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::K2Node_DynamicCast_AsSQDeployable_Ammo_Bag' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Array_Add_ReturnValue_1) == 0x000024, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, K2Node_Event_ItemClass) == 0x000028, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::K2Node_Event_ItemClass' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, K2Node_Event_bSpawnMaxAmmo) == 0x000060, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::K2Node_Event_bSpawnMaxAmmo' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, K2Node_Event_PersistedAmmo) == 0x000064, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::K2Node_Event_PersistedAmmo' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00006C, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, Temp_int_Variable) == 0x000078, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_FMin_ReturnValue) == 0x00007C, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Array_Add_ReturnValue_2) == 0x000084, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000094, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000099, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, Temp_int_Variable_1) == 0x00009C, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_GenericEquippableAmmobag_C_ExecuteUbergraph_BP_GenericEquippableAmmobag::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.OnServerValidatedItemPlacement
// 0x0008 (0x0008 - 0x0000)
struct BP_GenericEquippableAmmobag_C_OnServerValidatedItemPlacement final
{
public:
	class ASQDeployableItem*                      Deployable;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_OnServerValidatedItemPlacement) == 0x000008, "Wrong alignment on BP_GenericEquippableAmmobag_C_OnServerValidatedItemPlacement");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_OnServerValidatedItemPlacement) == 0x000008, "Wrong size on BP_GenericEquippableAmmobag_C_OnServerValidatedItemPlacement");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_OnServerValidatedItemPlacement, Deployable) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_OnServerValidatedItemPlacement::Deployable' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.InitializeAmmoValues
// 0x0048 (0x0048 - 0x0000)
struct BP_GenericEquippableAmmobag_C_InitializeAmmoValues final
{
public:
	struct FSQInventoryData                       ItemClass;                                         // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bSpawnMaxAmmo;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3124[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQPersistedAmmoCount                  PersistedAmmo;                                     // 0x003C(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_InitializeAmmoValues) == 0x000008, "Wrong alignment on BP_GenericEquippableAmmobag_C_InitializeAmmoValues");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_InitializeAmmoValues) == 0x000048, "Wrong size on BP_GenericEquippableAmmobag_C_InitializeAmmoValues");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_InitializeAmmoValues, ItemClass) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_InitializeAmmoValues::ItemClass' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_InitializeAmmoValues, bSpawnMaxAmmo) == 0x000038, "Member 'BP_GenericEquippableAmmobag_C_InitializeAmmoValues::bSpawnMaxAmmo' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_InitializeAmmoValues, PersistedAmmo) == 0x00003C, "Member 'BP_GenericEquippableAmmobag_C_InitializeAmmoValues::PersistedAmmo' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.Rearm
// 0x0074 (0x0074 - 0x0000)
struct BP_GenericEquippableAmmobag_C_Rearm final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MissingAmmo;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentAmmoCount;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingRequestQuantity;                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalAmmoUsed;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3125[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3126[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3127[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3128[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3129[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0060(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanRearm_ReturnValue;                     // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_Rearm) == 0x000004, "Wrong alignment on BP_GenericEquippableAmmobag_C_Rearm");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_Rearm) == 0x000074, "Wrong size on BP_GenericEquippableAmmobag_C_Rearm");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, Quantity) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_Rearm::Quantity' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, ReturnValue) == 0x000004, "Member 'BP_GenericEquippableAmmobag_C_Rearm::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, LocalIndex) == 0x000008, "Member 'BP_GenericEquippableAmmobag_C_Rearm::LocalIndex' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, MissingAmmo) == 0x00000C, "Member 'BP_GenericEquippableAmmobag_C_Rearm::MissingAmmo' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CurrentAmmoCount) == 0x000010, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CurrentAmmoCount' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, RemainingRequestQuantity) == 0x000014, "Member 'BP_GenericEquippableAmmobag_C_Rearm::RemainingRequestQuantity' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, TotalAmmoUsed) == 0x000018, "Member 'BP_GenericEquippableAmmobag_C_Rearm::TotalAmmoUsed' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, Temp_bool_Variable) == 0x00001C, "Member 'BP_GenericEquippableAmmobag_C_Rearm::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00002D, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00003C, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000040, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_FTrunc_ReturnValue) == 0x000044, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_FTrunc_ReturnValue_1) == 0x000048, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000050, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, Temp_float_Variable) == 0x000060, "Member 'BP_GenericEquippableAmmobag_C_Rearm::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, Temp_int_Variable) == 0x000064, "Member 'BP_GenericEquippableAmmobag_C_Rearm::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_Rearm, CallFunc_CanRearm_ReturnValue) == 0x000072, "Member 'BP_GenericEquippableAmmobag_C_Rearm::CallFunc_CanRearm_ReturnValue' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.SortAmmoCounts
// 0x0050 (0x0050 - 0x0000)
struct BP_GenericEquippableAmmobag_C_SortAmmoCounts final
{
public:
	int32                                         IndexToInsert;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmmoCountIterator;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 TempAmmoCount;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312B[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312C[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312D[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_SortAmmoCounts) == 0x000008, "Wrong alignment on BP_GenericEquippableAmmobag_C_SortAmmoCounts");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_SortAmmoCounts) == 0x000050, "Wrong size on BP_GenericEquippableAmmobag_C_SortAmmoCounts");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, IndexToInsert) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::IndexToInsert' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, AmmoCountIterator) == 0x000004, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::AmmoCountIterator' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, TempAmmoCount) == 0x000008, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::TempAmmoCount' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, Temp_int_Variable) == 0x000024, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_Array_Get_Item_1) == 0x000044, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_SortAmmoCounts, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GenericEquippableAmmobag_C_SortAmmoCounts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.IsAmmoFull
// 0x001C (0x001C - 0x0000)
struct BP_GenericEquippableAmmobag_C_IsAmmoFull final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAmmoFull_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_IsAmmoFull) == 0x000004, "Wrong alignment on BP_GenericEquippableAmmobag_C_IsAmmoFull");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_IsAmmoFull) == 0x00001C, "Wrong size on BP_GenericEquippableAmmobag_C_IsAmmoFull");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_IsAmmoFull, ReturnValue) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_IsAmmoFull::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_IsAmmoFull, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GenericEquippableAmmobag_C_IsAmmoFull::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_IsAmmoFull, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GenericEquippableAmmobag_C_IsAmmoFull::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_IsAmmoFull, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GenericEquippableAmmobag_C_IsAmmoFull::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_IsAmmoFull, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GenericEquippableAmmobag_C_IsAmmoFull::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_IsAmmoFull, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_GenericEquippableAmmobag_C_IsAmmoFull::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_IsAmmoFull, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_GenericEquippableAmmobag_C_IsAmmoFull::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_IsAmmoFull, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'BP_GenericEquippableAmmobag_C_IsAmmoFull::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_IsAmmoFull, CallFunc_IsAmmoFull_ReturnValue) == 0x00001A, "Member 'BP_GenericEquippableAmmobag_C_IsAmmoFull::CallFunc_IsAmmoFull_ReturnValue' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.CreatePersistingAmmoCount
// 0x003C (0x003C - 0x0000)
struct BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount final
{
public:
	struct FSQPersistedAmmoCount                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor)
	float                                         PersistingAmmoCount;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312F[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQPersistedAmmoCount                  CallFunc_CreatePersistingAmmoCount_ReturnValue;    // 0x002C(0x0008)(NoDestructor)
	struct FSQPersistedAmmoCount                  K2Node_MakeStruct_SQPersistedAmmoCount;            // 0x0034(0x0008)(NoDestructor)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount) == 0x000004, "Wrong alignment on BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount) == 0x00003C, "Wrong size on BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, ReturnValue) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, PersistingAmmoCount) == 0x000008, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::PersistingAmmoCount' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, CallFunc_CreatePersistingAmmoCount_ReturnValue) == 0x00002C, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::CallFunc_CreatePersistingAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount, K2Node_MakeStruct_SQPersistedAmmoCount) == 0x000034, "Member 'BP_GenericEquippableAmmobag_C_CreatePersistingAmmoCount::K2Node_MakeStruct_SQPersistedAmmoCount' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.CalculateMaxAmmoCost
// 0x000C (0x000C - 0x0000)
struct BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost final
{
public:
	int32                                         MaxCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost) == 0x000004, "Wrong alignment on BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost) == 0x00000C, "Wrong size on BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost, MaxCount) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost::MaxCount' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost, ReturnValue) == 0x000004, "Member 'BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'BP_GenericEquippableAmmobag_C_CalculateMaxAmmoCost::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.CalculateRearmAmmoCost
// 0x0044 (0x0044 - 0x0000)
struct BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost final
{
public:
	int32                                         QuantityToRearm;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountToRefill;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountToAdd;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalAmmoMissing;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3130[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3131[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost) == 0x000004, "Wrong alignment on BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost) == 0x000044, "Wrong size on BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, QuantityToRearm) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::QuantityToRearm' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, ReturnValue) == 0x000004, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, AmountToRefill) == 0x000008, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::AmountToRefill' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, AmountToAdd) == 0x00000C, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::AmountToAdd' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, TotalAmmoMissing) == 0x000010, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::TotalAmmoMissing' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_FMin_ReturnValue) == 0x000018, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, Temp_int_Variable) == 0x000020, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_GenericEquippableAmmobag_C_CalculateRearmAmmoCost::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.CalculateMissingRearmItems
// 0x0010 (0x0010 - 0x0000)
struct BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalMissingAmmo;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateRearmAmmoCost_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems) == 0x000004, "Wrong alignment on BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems) == 0x000010, "Wrong size on BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems, ReturnValue) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems, TotalMissingAmmo) == 0x000004, "Member 'BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems::TotalMissingAmmo' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems, CallFunc_CalculateRearmAmmoCost_ReturnValue) == 0x000008, "Member 'BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems::CallFunc_CalculateRearmAmmoCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'BP_GenericEquippableAmmobag_C_CalculateMissingRearmItems::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_GenericEquippableAmmobag.BP_GenericEquippableAmmobag_C.GetRearmMaxItemCount
// 0x000C (0x000C - 0x0000)
struct BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount) == 0x000004, "Wrong alignment on BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount");
static_assert(sizeof(BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount) == 0x00000C, "Wrong size on BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount, ReturnValue) == 0x000000, "Member 'BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000004, "Member 'BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'BP_GenericEquippableAmmobag_C_GetRearmMaxItemCount::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

}


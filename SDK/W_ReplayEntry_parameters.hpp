#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ReplayEntry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_ReplayEntry.W_ReplayEntry_C.ExecuteUbergraph_W_ReplayEntry
// 0x00A0 (0x00A0 - 0x0000)
struct W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDD[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ReplayObject_C*                     K2Node_DynamicCast_AsBP_Replay_Object;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDE[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSize_Result;                           // 0x0040(0x0018)()
	class FText                                   CallFunc_AsDateTime_DateTime_ReturnValue;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDF[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry) == 0x000008, "Wrong alignment on W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry");
static_assert(sizeof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry) == 0x0000A0, "Wrong size on W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, EntryPoint) == 0x000000, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, Temp_struct_Variable) == 0x000004, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, Temp_struct_Variable_1) == 0x000014, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, K2Node_Event_bIsSelected) == 0x000024, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, K2Node_Event_ListItemObject) == 0x000028, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, K2Node_DynamicCast_AsBP_Replay_Object) == 0x000030, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::K2Node_DynamicCast_AsBP_Replay_Object' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, CallFunc_GetSize_Result) == 0x000040, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::CallFunc_GetSize_Result' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, CallFunc_AsDateTime_DateTime_ReturnValue) == 0x000058, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::CallFunc_AsDateTime_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, Temp_bool_Variable) == 0x000088, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, K2Node_Event_bIsExpanded) == 0x000089, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, K2Node_Select_Default) == 0x00008C, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::K2Node_Select_Default' has a wrong offset!");

// Function W_ReplayEntry.W_ReplayEntry_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct W_ReplayEntry_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ReplayEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on W_ReplayEntry_C_BP_OnItemExpansionChanged");
static_assert(sizeof(W_ReplayEntry_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on W_ReplayEntry_C_BP_OnItemExpansionChanged");
static_assert(offsetof(W_ReplayEntry_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'W_ReplayEntry_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function W_ReplayEntry.W_ReplayEntry_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct W_ReplayEntry_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ReplayEntry_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on W_ReplayEntry_C_OnListItemObjectSet");
static_assert(sizeof(W_ReplayEntry_C_OnListItemObjectSet) == 0x000008, "Wrong size on W_ReplayEntry_C_OnListItemObjectSet");
static_assert(offsetof(W_ReplayEntry_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'W_ReplayEntry_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function W_ReplayEntry.W_ReplayEntry_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct W_ReplayEntry_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ReplayEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on W_ReplayEntry_C_BP_OnItemSelectionChanged");
static_assert(sizeof(W_ReplayEntry_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on W_ReplayEntry_C_BP_OnItemSelectionChanged");
static_assert(offsetof(W_ReplayEntry_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'W_ReplayEntry_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

}


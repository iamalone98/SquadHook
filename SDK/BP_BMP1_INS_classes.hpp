#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BMP1_INS

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BMP1_INS.BP_BMP1_INS_C
// 0x00C0 (0x0C20 - 0x0B60)
class ABP_BMP1_INS_C final : public ASQTrackedVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B60(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   DriverViewport;                                    // 0x0B68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleExitPointComponent*           SQVehicleExitPoint_Water4;                         // 0x0B70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleExitPointComponent*           SQVehicleExitPoint_Water3;                         // 0x0B78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleExitPointComponent*           SQVehicleExitPoint_Water2;                         // 0x0B80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleExitPointComponent*           SQVehicleExitPoint_Water1;                         // 0x0B88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQWaterThrusterComponent*              SQWaterThruster;                                   // 0x0B90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQArmorMeshComponent*                  SQArmorMeshWaterShield;                            // 0x0B98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQArmorMeshComponent*                  SQArmorMesh;                                       // 0x0BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CommandZone;                                       // 0x0BA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Decoration;                                        // 0x0BB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleAmmoBox*                      AmmoComponent;                                     // 0x0BB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   NoPenetrationBlock;                                // 0x0BC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPComponent_RadialModel_C*             Vehicle_Radial;                                    // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleTrack*                        TrackLeftComponent;                                // 0x0BD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleTrack*                        TrackRightComponent;                               // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleEngine*                       EngineComponent;                                   // 0x0BE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleResourceWeaponInventoryComponent* SQVehicleResourceWeaponInventory;                  // 0x0BE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQMapIconComponent*                    SQMapIcon;                                         // 0x0BF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleBurningComponent*             SQVehicleBurning;                                  // 0x0BF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleExitPointComponent*           SQVehicleExitPoint;                                // 0x0C00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TrackMaterialRight;                                // 0x0C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TrackMaterialLeft;                                 // 0x0C10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightTrackUVOffset;                                // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftTrackUVOffset;                                 // 0x0C1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BMP1_INS(int32 EntryPoint);
	void DrivetrainComponentDestroyed(class USQDriveTrainComponent* DriveTrainComponent);
	void DrivetrainComponentRepaired(class USQDriveTrainComponent* DriveTrainComponent);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void UpdateTrackMaterial(float DeltaTime, float MovementSpeed, class UMaterialInstanceDynamic* TrackMaterial, float TrackOffset, float* NewUVOffset);
	void UpdateDamagedTrackVisual(class UObject* VehicleTrack, bool bIsTrackDestroyed, bool ShowOriginalTrack);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BMP1_INS_C">();
	}
	static class ABP_BMP1_INS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BMP1_INS_C>();
	}
};
static_assert(alignof(ABP_BMP1_INS_C) == 0x000010, "Wrong alignment on ABP_BMP1_INS_C");
static_assert(sizeof(ABP_BMP1_INS_C) == 0x000C20, "Wrong size on ABP_BMP1_INS_C");
static_assert(offsetof(ABP_BMP1_INS_C, UberGraphFrame) == 0x000B60, "Member 'ABP_BMP1_INS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, DriverViewport) == 0x000B68, "Member 'ABP_BMP1_INS_C::DriverViewport' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQVehicleExitPoint_Water4) == 0x000B70, "Member 'ABP_BMP1_INS_C::SQVehicleExitPoint_Water4' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQVehicleExitPoint_Water3) == 0x000B78, "Member 'ABP_BMP1_INS_C::SQVehicleExitPoint_Water3' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQVehicleExitPoint_Water2) == 0x000B80, "Member 'ABP_BMP1_INS_C::SQVehicleExitPoint_Water2' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQVehicleExitPoint_Water1) == 0x000B88, "Member 'ABP_BMP1_INS_C::SQVehicleExitPoint_Water1' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQWaterThruster) == 0x000B90, "Member 'ABP_BMP1_INS_C::SQWaterThruster' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQArmorMeshWaterShield) == 0x000B98, "Member 'ABP_BMP1_INS_C::SQArmorMeshWaterShield' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQArmorMesh) == 0x000BA0, "Member 'ABP_BMP1_INS_C::SQArmorMesh' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, CommandZone) == 0x000BA8, "Member 'ABP_BMP1_INS_C::CommandZone' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, Decoration) == 0x000BB0, "Member 'ABP_BMP1_INS_C::Decoration' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, AmmoComponent) == 0x000BB8, "Member 'ABP_BMP1_INS_C::AmmoComponent' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, NoPenetrationBlock) == 0x000BC0, "Member 'ABP_BMP1_INS_C::NoPenetrationBlock' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, Vehicle_Radial) == 0x000BC8, "Member 'ABP_BMP1_INS_C::Vehicle_Radial' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, TrackLeftComponent) == 0x000BD0, "Member 'ABP_BMP1_INS_C::TrackLeftComponent' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, TrackRightComponent) == 0x000BD8, "Member 'ABP_BMP1_INS_C::TrackRightComponent' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, EngineComponent) == 0x000BE0, "Member 'ABP_BMP1_INS_C::EngineComponent' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQVehicleResourceWeaponInventory) == 0x000BE8, "Member 'ABP_BMP1_INS_C::SQVehicleResourceWeaponInventory' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQMapIcon) == 0x000BF0, "Member 'ABP_BMP1_INS_C::SQMapIcon' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQVehicleBurning) == 0x000BF8, "Member 'ABP_BMP1_INS_C::SQVehicleBurning' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, SQVehicleExitPoint) == 0x000C00, "Member 'ABP_BMP1_INS_C::SQVehicleExitPoint' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, TrackMaterialRight) == 0x000C08, "Member 'ABP_BMP1_INS_C::TrackMaterialRight' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, TrackMaterialLeft) == 0x000C10, "Member 'ABP_BMP1_INS_C::TrackMaterialLeft' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, RightTrackUVOffset) == 0x000C18, "Member 'ABP_BMP1_INS_C::RightTrackUVOffset' has a wrong offset!");
static_assert(offsetof(ABP_BMP1_INS_C, LeftTrackUVOffset) == 0x000C1C, "Member 'ABP_BMP1_INS_C::LeftTrackUVOffset' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ControlledCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_ControlledCamera.BP_ControlledCamera_C.Created Button__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_ControlledCamera_C_Created_Button__DelegateSignature final
{
public:
	class UW_CamControlButton_C*                  Cam_Button;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_Created_Button__DelegateSignature) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_Created_Button__DelegateSignature");
static_assert(sizeof(BP_ControlledCamera_C_Created_Button__DelegateSignature) == 0x000008, "Wrong size on BP_ControlledCamera_C_Created_Button__DelegateSignature");
static_assert(offsetof(BP_ControlledCamera_C_Created_Button__DelegateSignature, Cam_Button) == 0x000000, "Member 'BP_ControlledCamera_C_Created_Button__DelegateSignature::Cam_Button' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.ExecuteUbergraph_BP_ControlledCamera
// 0x0218 (0x0218 - 0x0000)
struct BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43C9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0008(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43CA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0020(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43CB[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43CC[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43CD[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0060(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0078(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43CE[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC_1;                                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_PC;                                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Become_View_Target_Can_View;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43CF[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x00B0(0x0018)(HasGetValueTypeHash)
	class UW_CameraWidget_C*                      CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x00D0(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D0[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D1[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D2[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D3[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D4[0x6];                                     // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAdminCamera_ReturnValue;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D5[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_2;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D6[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D7[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD_1;                      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D8[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D9[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier_1;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43DA[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerCameraManager*                 K2Node_DynamicCast_AsSQPlayer_Camera_Manager;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43DB[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerCameraManager*                 K2Node_DynamicCast_AsSQPlayer_Camera_Manager_1;    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43DC[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLastNearClipPlane_ReturnValue;         // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43DD[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera");
static_assert(sizeof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera) == 0x000218, "Wrong size on BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, EntryPoint) == 0x000000, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_MakeStruct_Anchors) == 0x000008, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_InputActionEvent_Key) == 0x000020, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_IsLocalController_ReturnValue) == 0x000039, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_InputAxisEvent_AxisValue_1) == 0x00003C, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_InputAxisEvent_AxisValue) == 0x000040, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_MapRangeClamped_ReturnValue) == 0x000044, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, Temp_bool_Variable) == 0x000054, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_Event_DeltaSeconds) == 0x000058, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, Temp_bool_Has_Been_Initd_Variable) == 0x00005C, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, Temp_struct_Variable) == 0x000060, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_InputActionEvent_Key_2) == 0x000078, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_CustomEvent_Active) == 0x000090, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_Event_PC_1) == 0x000098, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_Event_PC_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_Event_PC) == 0x0000A0, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_Can_Become_View_Target_Can_View) == 0x0000A8, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_Can_Become_View_Target_Can_View' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_InputActionEvent_Key_3) == 0x0000B0, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_InputActionEvent_Key_4) == 0x0000D0, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, Temp_bool_Variable_1) == 0x0000E8, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_GetOwner_ReturnValue) == 0x0000F0, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_IsValid_ReturnValue_2) == 0x0000F8, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_IsValid_ReturnValue_3) == 0x0000F9, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000100, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_GetHUD_ReturnValue) == 0x000110, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsSQPlayer_State) == 0x000118, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsBPI_HUD) == 0x000128, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess_2) == 0x000138, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_IsInVehicle_ReturnValue) == 0x000139, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_Select_Default) == 0x000140, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_IsAdminCamera_ReturnValue) == 0x000148, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_IsAdminCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_Not_PreBool_ReturnValue) == 0x000149, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_GetHUD_ReturnValue_1) == 0x000150, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_GetHUD_ReturnValue_2) == 0x000158, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_GetHUD_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000160, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess_3) == 0x000170, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsSQHUD) == 0x000178, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess_4) == 0x000180, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsSQHUD_1) == 0x000188, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsSQHUD_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess_5) == 0x000190, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_K2_GetPawn_ReturnValue) == 0x000198, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0001A0, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsSQSoldier) == 0x0001A8, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess_6) == 0x0001B0, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsSQSoldier_1) == 0x0001B8, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsSQSoldier_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess_7) == 0x0001C0, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsSQPlayer_Camera_Manager) == 0x0001C8, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsSQPlayer_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess_8) == 0x0001D0, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_AsSQPlayer_Camera_Manager_1) == 0x0001D8, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_AsSQPlayer_Camera_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_DynamicCast_bSuccess_9) == 0x0001E0, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_GetLastNearClipPlane_ReturnValue) == 0x0001E4, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_GetLastNearClipPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_InputActionEvent_Key_1) == 0x0001E8, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000200, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, Temp_float_Variable) == 0x000204, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, Temp_float_Variable_1) == 0x000208, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, K2Node_Select_Default_1) == 0x00020C, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000210, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000214, "Member 'BP_ControlledCamera_C_ExecuteUbergraph_BP_ControlledCamera::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.K2_OnEndViewTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_ControlledCamera_C_K2_OnEndViewTarget final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_K2_OnEndViewTarget) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_K2_OnEndViewTarget");
static_assert(sizeof(BP_ControlledCamera_C_K2_OnEndViewTarget) == 0x000008, "Wrong size on BP_ControlledCamera_C_K2_OnEndViewTarget");
static_assert(offsetof(BP_ControlledCamera_C_K2_OnEndViewTarget, PC) == 0x000000, "Member 'BP_ControlledCamera_C_K2_OnEndViewTarget::PC' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.K2_OnBecomeViewTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_ControlledCamera_C_K2_OnBecomeViewTarget final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_K2_OnBecomeViewTarget) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_K2_OnBecomeViewTarget");
static_assert(sizeof(BP_ControlledCamera_C_K2_OnBecomeViewTarget) == 0x000008, "Wrong size on BP_ControlledCamera_C_K2_OnBecomeViewTarget");
static_assert(offsetof(BP_ControlledCamera_C_K2_OnBecomeViewTarget, PC) == 0x000000, "Member 'BP_ControlledCamera_C_K2_OnBecomeViewTarget::PC' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Toggle View
// 0x0001 (0x0001 - 0x0000)
struct BP_ControlledCamera_C_Toggle_View final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ControlledCamera_C_Toggle_View) == 0x000001, "Wrong alignment on BP_ControlledCamera_C_Toggle_View");
static_assert(sizeof(BP_ControlledCamera_C_Toggle_View) == 0x000001, "Wrong size on BP_ControlledCamera_C_Toggle_View");
static_assert(offsetof(BP_ControlledCamera_C_Toggle_View, Active) == 0x000000, "Member 'BP_ControlledCamera_C_Toggle_View::Active' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ControlledCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ControlledCamera_C_ReceiveTick");
static_assert(sizeof(BP_ControlledCamera_C_ReceiveTick) == 0x000004, "Wrong size on BP_ControlledCamera_C_ReceiveTick");
static_assert(offsetof(BP_ControlledCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ControlledCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BP_ControlledCamera_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on BP_ControlledCamera_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1");
static_assert(sizeof(BP_ControlledCamera_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on BP_ControlledCamera_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1");
static_assert(offsetof(BP_ControlledCamera_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'BP_ControlledCamera_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_ControlledCamera_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_ControlledCamera_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_ControlledCamera_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_ControlledCamera_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_ControlledCamera_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_ControlledCamera_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.InpActEvt_Interact_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_ControlledCamera_C_InpActEvt_Interact_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_InpActEvt_Interact_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_InpActEvt_Interact_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_ControlledCamera_C_InpActEvt_Interact_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_ControlledCamera_C_InpActEvt_Interact_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_ControlledCamera_C_InpActEvt_Interact_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_ControlledCamera_C_InpActEvt_Interact_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.InpActEvt_ToggleStabilization_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_ControlledCamera_C_InpActEvt_ToggleStabilization_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_InpActEvt_ToggleStabilization_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_InpActEvt_ToggleStabilization_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_ControlledCamera_C_InpActEvt_ToggleStabilization_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_ControlledCamera_C_InpActEvt_ToggleStabilization_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_ControlledCamera_C_InpActEvt_ToggleStabilization_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_ControlledCamera_C_InpActEvt_ToggleStabilization_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.InpActEvt_Sprint_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.InpActEvt_Sprint_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_ControlledCamera_C_InpActEvt_Sprint_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.InpActEvt_LeanLeft_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_ControlledCamera_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_ControlledCamera_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_ControlledCamera_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_ControlledCamera_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_ControlledCamera_C_InpActEvt_LeanLeft_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Add Zoom Delta
// 0x001C (0x001C - 0x0000)
struct BP_ControlledCamera_C_Add_Zoom_Delta final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43DE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43DF[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_Add_Zoom_Delta) == 0x000004, "Wrong alignment on BP_ControlledCamera_C_Add_Zoom_Delta");
static_assert(sizeof(BP_ControlledCamera_C_Add_Zoom_Delta) == 0x00001C, "Wrong size on BP_ControlledCamera_C_Add_Zoom_Delta");
static_assert(offsetof(BP_ControlledCamera_C_Add_Zoom_Delta, Temp_bool_Variable) == 0x000000, "Member 'BP_ControlledCamera_C_Add_Zoom_Delta::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Zoom_Delta, Temp_int_Variable) == 0x000004, "Member 'BP_ControlledCamera_C_Add_Zoom_Delta::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Zoom_Delta, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_ControlledCamera_C_Add_Zoom_Delta::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Zoom_Delta, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ControlledCamera_C_Add_Zoom_Delta::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Zoom_Delta, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_ControlledCamera_C_Add_Zoom_Delta::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Zoom_Delta, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_ControlledCamera_C_Add_Zoom_Delta::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Zoom_Delta, K2Node_Select_Default) == 0x000018, "Member 'BP_ControlledCamera_C_Add_Zoom_Delta::K2Node_Select_Default' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Add Camera Movement
// 0x0174 (0x0174 - 0x0000)
struct BP_ControlledCamera_C_Add_Camera_Movement final
{
public:
	float                                         X_Delta;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Delta;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E0[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ControlledCamera_C_Add_Camera_Movement) == 0x000004, "Wrong alignment on BP_ControlledCamera_C_Add_Camera_Movement");
static_assert(sizeof(BP_ControlledCamera_C_Add_Camera_Movement) == 0x000174, "Wrong size on BP_ControlledCamera_C_Add_Camera_Movement");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, X_Delta) == 0x000000, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::X_Delta' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, Y_Delta) == 0x000004, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::Y_Delta' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000009, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_BreakRotator_Roll) == 0x00000C, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_BreakRotator_Pitch) == 0x000010, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_BreakRotator_Yaw) == 0x000014, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_BreakRotator_Roll_1) == 0x000018, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_BreakRotator_Pitch_1) == 0x00001C, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_BreakRotator_Yaw_1) == 0x000020, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000024, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000028, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000034, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00003C, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_FClamp_ReturnValue_1) == 0x000054, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000058, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_MakeRotator_ReturnValue_1) == 0x0000E0, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Add_Camera_Movement, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000EC, "Member 'BP_ControlledCamera_C_Add_Camera_Movement::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Clamp Camera Rotation
// 0x000C (0x000C - 0x0000)
struct BP_ControlledCamera_C_Clamp_Camera_Rotation final
{
public:
	struct FVector                                L_Look_at_Vector;                                  // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_Clamp_Camera_Rotation) == 0x000004, "Wrong alignment on BP_ControlledCamera_C_Clamp_Camera_Rotation");
static_assert(sizeof(BP_ControlledCamera_C_Clamp_Camera_Rotation) == 0x00000C, "Wrong size on BP_ControlledCamera_C_Clamp_Camera_Rotation");
static_assert(offsetof(BP_ControlledCamera_C_Clamp_Camera_Rotation, L_Look_at_Vector) == 0x000000, "Member 'BP_ControlledCamera_C_Clamp_Camera_Rotation::L_Look_at_Vector' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Update Zoom
// 0x0008 (0x0008 - 0x0000)
struct BP_ControlledCamera_C_Update_Zoom final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_Update_Zoom) == 0x000004, "Wrong alignment on BP_ControlledCamera_C_Update_Zoom");
static_assert(sizeof(BP_ControlledCamera_C_Update_Zoom) == 0x000008, "Wrong size on BP_ControlledCamera_C_Update_Zoom");
static_assert(offsetof(BP_ControlledCamera_C_Update_Zoom, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'BP_ControlledCamera_C_Update_Zoom::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Zoom, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000004, "Member 'BP_ControlledCamera_C_Update_Zoom::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Find Vehicle
// 0x01C0 (0x01C0 - 0x0000)
struct BP_ControlledCamera_C_Find_Vehicle final
{
public:
	bool                                          Found_Vehicle;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E2[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E3[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E4[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0078(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E5[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E6[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E7[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E8[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ControlledCamera_C_Find_Vehicle) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_Find_Vehicle");
static_assert(sizeof(BP_ControlledCamera_C_Find_Vehicle) == 0x0001C0, "Wrong size on BP_ControlledCamera_C_Find_Vehicle");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, Found_Vehicle) == 0x000000, "Member 'BP_ControlledCamera_C_Find_Vehicle::Found_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_ControlledCamera_C_Find_Vehicle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ControlledCamera_C_Find_Vehicle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000020, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, K2Node_DynamicCast_AsTarget_Point) == 0x000038, "Member 'BP_ControlledCamera_C_Find_Vehicle::K2Node_DynamicCast_AsTarget_Point' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ControlledCamera_C_Find_Vehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000044, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_GetAttachParentActor_ReturnValue) == 0x000060, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_ControlledCamera_C_Find_Vehicle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, K2Node_MakeArray_Array_1) == 0x000078, "Member 'BP_ControlledCamera_C_Find_Vehicle::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000088, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000098, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_Array_Get_Item) == 0x0000A4, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_bBlockingHit) == 0x00012C, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_bInitialOverlap) == 0x00012D, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_Time) == 0x000130, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_Distance) == 0x000134, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_Location) == 0x000138, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_ImpactPoint) == 0x000144, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_Normal) == 0x000150, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_ImpactNormal) == 0x00015C, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_TraceStart) == 0x000194, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, CallFunc_BreakHitResult_TraceEnd) == 0x0001A0, "Member 'BP_ControlledCamera_C_Find_Vehicle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, K2Node_DynamicCast_AsSQVehicle) == 0x0001B0, "Member 'BP_ControlledCamera_C_Find_Vehicle::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Find_Vehicle, K2Node_DynamicCast_bSuccess_1) == 0x0001B8, "Member 'BP_ControlledCamera_C_Find_Vehicle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Update Follow
// 0x0270 (0x0270 - 0x0000)
struct BP_ControlledCamera_C_Update_Follow final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E9[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43EA[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43EB[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43EC[0x8];                                     // 0x0168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0170(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue_1;  // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x01E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ControlledCamera_C_Update_Follow) == 0x000010, "Wrong alignment on BP_ControlledCamera_C_Update_Follow");
static_assert(sizeof(BP_ControlledCamera_C_Update_Follow) == 0x000270, "Wrong size on BP_ControlledCamera_C_Update_Follow");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, K2Node_DynamicCast_AsSQVehicle) == 0x000008, "Member 'BP_ControlledCamera_C_Update_Follow::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_ControlledCamera_C_Update_Follow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_IsValid_ReturnValue_2) == 0x000011, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000020, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00002C, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x00008C, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_InverseTransformDirection_ReturnValue) == 0x000090, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_MakeRotFromX_ReturnValue) == 0x00009C, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Roll_1) == 0x0000A8, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Pitch_1) == 0x0000AC, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Yaw_1) == 0x0000B0, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Roll_2) == 0x0000B4, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Pitch_2) == 0x0000B8, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Yaw_2) == 0x0000BC, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_FClamp_ReturnValue) == 0x0000C0, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_FInterpTo_ReturnValue) == 0x0000C4, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_MakeRotator_ReturnValue) == 0x0000C8, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000D4, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00015C, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_GetTransform_ReturnValue_1) == 0x000170, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001A0, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_InverseTransformDirection_ReturnValue_1) == 0x0001AC, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_InverseTransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_MakeRotFromX_ReturnValue_1) == 0x0001B8, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Roll_3) == 0x0001C4, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Pitch_3) == 0x0001C8, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_BreakRotator_Yaw_3) == 0x0001CC, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_FClamp_ReturnValue_1) == 0x0001D0, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_FInterpTo_ReturnValue_1) == 0x0001D4, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_MakeRotator_ReturnValue_1) == 0x0001D8, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Update_Follow, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0001E4, "Member 'BP_ControlledCamera_C_Update_Follow::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Create Stabilisation Point
// 0x0240 (0x0240 - 0x0000)
struct BP_ControlledCamera_C_Create_Stabilisation_Point final
{
public:
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43ED[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Find_Vehicle_Found_Vehicle;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43EE[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x005C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43EF[0x1];                                     // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43F0[0xC];                                     // 0x0164(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x01A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F1[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlledCamera_C_Create_Stabilisation_Point) == 0x000010, "Wrong alignment on BP_ControlledCamera_C_Create_Stabilisation_Point");
static_assert(sizeof(BP_ControlledCamera_C_Create_Stabilisation_Point) == 0x000240, "Wrong size on BP_ControlledCamera_C_Create_Stabilisation_Point");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_GetAttachParentActor_ReturnValue) == 0x000000, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, K2Node_DynamicCast_AsTarget_Point) == 0x000020, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::K2Node_DynamicCast_AsTarget_Point' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_Find_Vehicle_Found_Vehicle) == 0x000029, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_Find_Vehicle_Found_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_GetForwardVector_ReturnValue) == 0x00002C, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000044, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_LineTraceSingle_OutHit) == 0x00005C, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_LineTraceSingle_ReturnValue) == 0x0000E4, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E5, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E6, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_Time) == 0x0000E8, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_Distance) == 0x0000EC, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_Location) == 0x0000F0, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_ImpactPoint) == 0x0000FC, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_Normal) == 0x000108, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_ImpactNormal) == 0x000114, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_PhysMat) == 0x000120, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_HitActor) == 0x000128, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_HitComponent) == 0x000130, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_HitBoneName) == 0x000138, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_HitItem) == 0x000140, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_ElementIndex) == 0x000144, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_FaceIndex) == 0x000148, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_TraceStart) == 0x00014C, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BreakHitResult_TraceEnd) == 0x000158, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0001A0, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000228, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000230, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Create_Stabilisation_Point, CallFunc_FinishSpawningActor_ReturnValue) == 0x000238, "Member 'BP_ControlledCamera_C_Create_Stabilisation_Point::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Check Soldier Wound
// 0x0020 (0x0020 - 0x0000)
struct BP_ControlledCamera_C_Check_Soldier_Wound final
{
public:
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F2[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ControlledCamera_C_Check_Soldier_Wound) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_Check_Soldier_Wound");
static_assert(sizeof(BP_ControlledCamera_C_Check_Soldier_Wound) == 0x000020, "Wrong size on BP_ControlledCamera_C_Check_Soldier_Wound");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, CallFunc_K2_GetPawn_ReturnValue) == 0x000000, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, K2Node_DynamicCast_AsSQPlayer_State) == 0x000010, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, CallFunc_IsValid_ReturnValue_2) == 0x000019, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, CallFunc_IsValid_ReturnValue_3) == 0x00001A, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, CallFunc_IsValid_ReturnValue_4) == 0x00001B, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, CallFunc_IsAlive_ReturnValue) == 0x00001C, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Check_Soldier_Wound, CallFunc_BooleanOR_ReturnValue) == 0x00001E, "Member 'BP_ControlledCamera_C_Check_Soldier_Wound::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Init Camera
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ControlledCamera_C_Init_Camera final
{
public:
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue_1;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F4[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F5[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_43F6[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F7[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F8[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CamControlButton_C*                  CallFunc_Create_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Deployment;                // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Command;                   // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Roaming;                   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_CommandUI_C*                         K2Node_DynamicCast_AsW_Command_UI;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43F9[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGridData_CommandOption*              K2Node_DynamicCast_AsSQGrid_Data_Command_Option;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ControlledCamera_C_Init_Camera) == 0x000008, "Wrong alignment on BP_ControlledCamera_C_Init_Camera");
static_assert(sizeof(BP_ControlledCamera_C_Init_Camera) == 0x0000C8, "Wrong size on BP_ControlledCamera_C_Init_Camera");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_GetAttachParentActor_ReturnValue) == 0x000000, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_GetAttachParentActor_ReturnValue_1) == 0x000008, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_GetAttachParentActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000020, "Member 'BP_ControlledCamera_C_Init_Camera::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ControlledCamera_C_Init_Camera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_GetOwner_ReturnValue_1) == 0x000030, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'BP_ControlledCamera_C_Init_Camera::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_IsValidClass_ReturnValue) == 0x000059, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_IsValid_ReturnValue_3) == 0x00005A, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_IsValid_ReturnValue_4) == 0x00005B, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_IsLocalController_ReturnValue) == 0x00005C, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_GetHUD_ReturnValue) == 0x000060, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, K2Node_DynamicCast_AsBPI_HUD) == 0x000068, "Member 'BP_ControlledCamera_C_Init_Camera::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_ControlledCamera_C_Init_Camera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_Create_ReturnValue) == 0x000080, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_Get_Main_Menus_Deployment) == 0x000088, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_Get_Main_Menus_Deployment' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_Get_Main_Menus_Command) == 0x000090, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_Get_Main_Menus_Command' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_Get_Main_Menus_Roaming) == 0x000098, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_Get_Main_Menus_Roaming' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, K2Node_DynamicCast_AsW_Command_UI) == 0x0000A0, "Member 'BP_ControlledCamera_C_Init_Camera::K2Node_DynamicCast_AsW_Command_UI' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_ControlledCamera_C_Init_Camera::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x0000B0, "Member 'BP_ControlledCamera_C_Init_Camera::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, K2Node_DynamicCast_AsSQGrid_Data_Command_Option) == 0x0000B8, "Member 'BP_ControlledCamera_C_Init_Camera::K2Node_DynamicCast_AsSQGrid_Data_Command_Option' has a wrong offset!");
static_assert(offsetof(BP_ControlledCamera_C_Init_Camera, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'BP_ControlledCamera_C_Init_Camera::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_ControlledCamera.BP_ControlledCamera_C.Can Become View Target
// 0x0001 (0x0001 - 0x0000)
struct BP_ControlledCamera_C_Can_Become_View_Target final
{
public:
	bool                                          Can_View;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ControlledCamera_C_Can_Become_View_Target) == 0x000001, "Wrong alignment on BP_ControlledCamera_C_Can_Become_View_Target");
static_assert(sizeof(BP_ControlledCamera_C_Can_Become_View_Target) == 0x000001, "Wrong size on BP_ControlledCamera_C_Can_Become_View_Target");
static_assert(offsetof(BP_ControlledCamera_C_Can_Become_View_Target, Can_View) == 0x000000, "Member 'BP_ControlledCamera_C_Can_Become_View_Target::Can_View' has a wrong offset!");

}


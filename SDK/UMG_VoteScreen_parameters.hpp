#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteScreen

#include "Basic.hpp"

#include "Squad_structs.hpp"
#include "SlateCore_structs.hpp"
#include "SQFactionSetupEntry_structs.hpp"
#include "SQLevelEntry_structs.hpp"
#include "Engine_structs.hpp"
#include "SQFactionEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ESQVoteType_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UMG_VoteScreen.UMG_VoteScreen_C.ExecuteUbergraph_UMG_VoteScreen
// 0x0268 (0x0268 - 0x0000)
struct UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EB[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EC[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQScoreboard*                          CallFunc_Get_Scoreboard_Scoreboard;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Scoreboard_C*                      K2Node_DynamicCast_AsUMG_Scoreboard;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTimedOut_ReturnValue;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33ED[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ChoiceID;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EE[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x008C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVoteSessionClient*                   K2Node_Event_VoteSession_2;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_VotePossible;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EF[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVoteSessionClient*                   K2Node_Event_VoteSession_1;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerCurrentVoteCount;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQVoteType                                   CallFunc_GetVoteType_OutVoteType;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRegenerationChoicePossible_ReturnValue; // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F0[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_VoteScreen_C>     CallFunc_UpdateActivations_ActivatedScreen;        // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQVoteType                                   CallFunc_GetVoteType_OutVoteType_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F1[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVoteSessionClient*                   K2Node_Event_VoteSession;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQChoice                              K2Node_Event_Winner;                               // 0x0108(0x0018)(NoDestructor)
	ESQVoteType                                   CallFunc_GetVoteType_OutVoteType_2;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F2[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_VoteScreen_C>     CallFunc_UpdateActivations_ActivatedScreen_1;      // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Activated;                            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F3[0x6];                                     // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F4[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F5[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_VoteScreen_C>     CallFunc_UpdateActivations_ActivatedScreen_2;      // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0177(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_ComponentBoundEvent_VoteID;                 // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F6[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bSelected_1;            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F7[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MainMenuButton_C*                    K2Node_ComponentBoundEvent_Button_1;               // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F8[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQScoreboard*                          CallFunc_Get_Scoreboard_Scoreboard_1;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName LayerID)>          K2Node_CreateDelegate_OutputDelegate;              // 0x01D0(0x0010)(ZeroConstructor, NoDestructor)
	class UUMG_Scoreboard_C*                      K2Node_DynamicCast_AsUMG_Scoreboard_1;             // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F9[0x2];                                     // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName Faction)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x01EC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_33FA[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FB[0x1];                                     // 0x020B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_ChoiceId;               // 0x020C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FC[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value_1;         // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bSelected;              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FD[0x6];                                     // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     K2Node_ComponentBoundEvent_Button;                 // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FE[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FF[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3400[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_Scoreboard_C*                      CallFunc_GetScoreboardRef_Scoreboard;              // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3401[0x2];                                     // 0x0262(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen");
static_assert(sizeof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen) == 0x000268, "Wrong size on UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, EntryPoint) == 0x000000, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000018, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_PlayAnimationForward_ReturnValue) == 0x000020, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetHUD_ReturnValue) == 0x000030, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, Temp_bool_Variable) == 0x000038, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_AsBPI_HUD) == 0x000040, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_CustomEvent_Index) == 0x000054, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_Get_Scoreboard_Scoreboard) == 0x000058, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_Get_Scoreboard_Scoreboard' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_AsUMG_Scoreboard) == 0x000060, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_AsUMG_Scoreboard' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_HasTimedOut_ReturnValue) == 0x00006A, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_HasTimedOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000070, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000078, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_ChoiceID) == 0x000080, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_ChoiceID' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_Array_Contains_ReturnValue) == 0x000088, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_MyGeometry) == 0x00008C, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_InDeltaTime) == 0x0000C4, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_VoteSession_2) == 0x0000C8, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_VoteSession_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_VotePossible) == 0x0000D0, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_VotePossible' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_VoteSession_1) == 0x0000D8, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_VoteSession_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_PlayerCurrentVoteCount) == 0x0000E0, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_PlayerCurrentVoteCount' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetVoteType_OutVoteType) == 0x0000E4, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetVoteType_OutVoteType' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_IsRegenerationChoicePossible_ReturnValue) == 0x0000E5, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_IsRegenerationChoicePossible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_UpdateActivations_ActivatedScreen) == 0x0000E8, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_UpdateActivations_ActivatedScreen' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetVoteType_OutVoteType_1) == 0x0000F8, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetVoteType_OutVoteType_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_VoteSession) == 0x000100, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_Winner) == 0x000108, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_Winner' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetVoteType_OutVoteType_2) == 0x000120, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetVoteType_OutVoteType_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_UpdateActivations_ActivatedScreen_1) == 0x000128, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_UpdateActivations_ActivatedScreen_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Event_Activated) == 0x000138, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Event_Activated' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000139, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x000140, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetEndTime_ReturnValue_1) == 0x000148, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x000150, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, Temp_byte_Variable) == 0x000158, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_UpdateActivations_ActivatedScreen_2) == 0x000160, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_UpdateActivations_ActivatedScreen_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, Temp_byte_Variable_1) == 0x000170, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_IsVisible_ReturnValue) == 0x000171, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_IsVisible_ReturnValue_1) == 0x000172, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_IsVisible_ReturnValue_2) == 0x000173, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_BooleanOR_ReturnValue) == 0x000174, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_BooleanOR_ReturnValue_1) == 0x000175, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000176, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, Temp_bool_Variable_1) == 0x000177, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_ComponentBoundEvent_VoteID) == 0x000178, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_ComponentBoundEvent_VoteID' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, Temp_byte_Variable_2) == 0x000180, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_K2_SetTimer_ReturnValue) == 0x000188, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_ComponentBoundEvent_bSelected_1) == 0x000190, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_ComponentBoundEvent_bSelected_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_ComponentBoundEvent_Button_1) == 0x000198, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetPlayerController_ReturnValue_1) == 0x0001A0, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetHUD_ReturnValue_1) == 0x0001A8, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_AsBPI_HUD_1) == 0x0001B0, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_bSuccess_2) == 0x0001C0, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_Get_Scoreboard_Scoreboard_1) == 0x0001C8, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_Get_Scoreboard_Scoreboard_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_CreateDelegate_OutputDelegate) == 0x0001D0, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_AsUMG_Scoreboard_1) == 0x0001E0, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_AsUMG_Scoreboard_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_bSuccess_3) == 0x0001E8, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_IsValid_ReturnValue_2) == 0x0001E9, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001EC, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetSquadGameState_Return_Value) == 0x000200, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_BooleanAND_ReturnValue) == 0x000208, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, Temp_byte_Variable_3) == 0x000209, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Select_Default) == 0x00020A, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_ComponentBoundEvent_ChoiceId) == 0x00020C, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_ComponentBoundEvent_ChoiceId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetSquadGameState_Return_Value_1) == 0x000218, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetSquadGameState_Return_Value_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, Temp_bool_Variable_2) == 0x000220, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_ComponentBoundEvent_bSelected) == 0x000221, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_ComponentBoundEvent_bSelected' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_ComponentBoundEvent_Button) == 0x000228, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Select_Default_1) == 0x000230, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x000238, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, Temp_byte_Variable_4) == 0x000240, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000248, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_DynamicCast_bSuccess_4) == 0x000250, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_GetScoreboardRef_Scoreboard) == 0x000258, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_GetScoreboardRef_Scoreboard' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, Temp_byte_Variable_5) == 0x000260, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, K2Node_Select_Default_2) == 0x000261, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen, CallFunc_SelectInt_ReturnValue) == 0x000264, "Member 'UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3402[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000010, "Wrong size on UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature final
{
public:
	class FName                                   ChoiceId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature) == 0x000004, "Wrong alignment on UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature");
static_assert(sizeof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature) == 0x000008, "Wrong size on UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature");
static_assert(offsetof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature, ChoiceId) == 0x000000, "Member 'UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature::ChoiceId' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3403[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MainMenuButton_C*                    Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(sizeof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000010, "Wrong size on UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(offsetof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature final
{
public:
	class FName                                   VoteId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature) == 0x000004, "Wrong alignment on UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature");
static_assert(sizeof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature) == 0x000008, "Wrong size on UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature");
static_assert(offsetof(UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature, VoteId) == 0x000000, "Member 'UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature::VoteId' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.SetVoteScreenActive
// 0x0001 (0x0001 - 0x0000)
struct UMG_VoteScreen_C_SetVoteScreenActive final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_SetVoteScreenActive) == 0x000001, "Wrong alignment on UMG_VoteScreen_C_SetVoteScreenActive");
static_assert(sizeof(UMG_VoteScreen_C_SetVoteScreenActive) == 0x000001, "Wrong size on UMG_VoteScreen_C_SetVoteScreenActive");
static_assert(offsetof(UMG_VoteScreen_C_SetVoteScreenActive, Activated) == 0x000000, "Member 'UMG_VoteScreen_C_SetVoteScreenActive::Activated' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.OnVoteEnded
// 0x0020 (0x0020 - 0x0000)
struct UMG_VoteScreen_C_OnVoteEnded final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQChoice                              Winner;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_OnVoteEnded) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_OnVoteEnded");
static_assert(sizeof(UMG_VoteScreen_C_OnVoteEnded) == 0x000020, "Wrong size on UMG_VoteScreen_C_OnVoteEnded");
static_assert(offsetof(UMG_VoteScreen_C_OnVoteEnded, VoteSession) == 0x000000, "Member 'UMG_VoteScreen_C_OnVoteEnded::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_OnVoteEnded, Winner) == 0x000008, "Member 'UMG_VoteScreen_C_OnVoteEnded::Winner' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.OnVoteUpdated
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteScreen_C_OnVoteUpdated final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerCurrentVoteCount;                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_OnVoteUpdated) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_OnVoteUpdated");
static_assert(sizeof(UMG_VoteScreen_C_OnVoteUpdated) == 0x000010, "Wrong size on UMG_VoteScreen_C_OnVoteUpdated");
static_assert(offsetof(UMG_VoteScreen_C_OnVoteUpdated, VoteSession) == 0x000000, "Member 'UMG_VoteScreen_C_OnVoteUpdated::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_OnVoteUpdated, PlayerCurrentVoteCount) == 0x000008, "Member 'UMG_VoteScreen_C_OnVoteUpdated::PlayerCurrentVoteCount' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.OnVoteStarted
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteScreen_C_OnVoteStarted final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VotePossible;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_OnVoteStarted) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_OnVoteStarted");
static_assert(sizeof(UMG_VoteScreen_C_OnVoteStarted) == 0x000010, "Wrong size on UMG_VoteScreen_C_OnVoteStarted");
static_assert(offsetof(UMG_VoteScreen_C_OnVoteStarted, VoteSession) == 0x000000, "Member 'UMG_VoteScreen_C_OnVoteStarted::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_OnVoteStarted, VotePossible) == 0x000008, "Member 'UMG_VoteScreen_C_OnVoteStarted::VotePossible' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.Tick
// 0x003C (0x003C - 0x0000)
struct UMG_VoteScreen_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_Tick) == 0x000004, "Wrong alignment on UMG_VoteScreen_C_Tick");
static_assert(sizeof(UMG_VoteScreen_C_Tick) == 0x00003C, "Wrong size on UMG_VoteScreen_C_Tick");
static_assert(offsetof(UMG_VoteScreen_C_Tick, MyGeometry) == 0x000000, "Member 'UMG_VoteScreen_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_Tick, InDeltaTime) == 0x000038, "Member 'UMG_VoteScreen_C_Tick::InDeltaTime' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.OnVoteUpdatedByID
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteScreen_C_OnVoteUpdatedByID final
{
public:
	class FName                                   ChoiceId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_OnVoteUpdatedByID) == 0x000004, "Wrong alignment on UMG_VoteScreen_C_OnVoteUpdatedByID");
static_assert(sizeof(UMG_VoteScreen_C_OnVoteUpdatedByID) == 0x000008, "Wrong size on UMG_VoteScreen_C_OnVoteUpdatedByID");
static_assert(offsetof(UMG_VoteScreen_C_OnVoteUpdatedByID, ChoiceId) == 0x000000, "Member 'UMG_VoteScreen_C_OnVoteUpdatedByID::ChoiceId' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.SwitchToScreen
// 0x0004 (0x0004 - 0x0000)
struct UMG_VoteScreen_C_SwitchToScreen final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_SwitchToScreen) == 0x000004, "Wrong alignment on UMG_VoteScreen_C_SwitchToScreen");
static_assert(sizeof(UMG_VoteScreen_C_SwitchToScreen) == 0x000004, "Wrong size on UMG_VoteScreen_C_SwitchToScreen");
static_assert(offsetof(UMG_VoteScreen_C_SwitchToScreen, Param_Index) == 0x000000, "Member 'UMG_VoteScreen_C_SwitchToScreen::Param_Index' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateActivations
// 0x0060 (0x0060 - 0x0000)
struct UMG_VoteScreen_C_UpdateActivations final
{
public:
	ESQVoteType                                   VoteType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3404[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_VoteScreen_C>     ActivatedScreen;                                   // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_VoteScreen_C>     Result;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3405[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetVoteWidget_Success;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3406[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_VoteScreen_C>     CallFunc_GetVoteWidget_Widget;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_UpdateActivations) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateActivations");
static_assert(sizeof(UMG_VoteScreen_C_UpdateActivations) == 0x000060, "Wrong size on UMG_VoteScreen_C_UpdateActivations");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, VoteType) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateActivations::VoteType' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, ActivatedScreen) == 0x000008, "Member 'UMG_VoteScreen_C_UpdateActivations::ActivatedScreen' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, Result) == 0x000018, "Member 'UMG_VoteScreen_C_UpdateActivations::Result' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, Temp_int_Variable) == 0x000028, "Member 'UMG_VoteScreen_C_UpdateActivations::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, Temp_int_Variable_1) == 0x00002C, "Member 'UMG_VoteScreen_C_UpdateActivations::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_Conv_IntToByte_ReturnValue) == 0x000030, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_GetValidValue_ReturnValue) == 0x000038, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000039, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00003B, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00003C, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_GetVoteWidget_Success) == 0x000040, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_GetVoteWidget_Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_GetVoteWidget_Widget) == 0x000048, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_GetVoteWidget_Widget' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_MakeLiteralInt_ReturnValue) == 0x000058, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateActivations, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'UMG_VoteScreen_C_UpdateActivations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.GetVoteType
// 0x0020 (0x0020 - 0x0000)
struct UMG_VoteScreen_C_GetVoteType final
{
public:
	class USQVoteSession*                         InVoteSession;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQVoteType                                   OutVoteType;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3407[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetId_ReturnValue;                        // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLayerVoteId_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3408[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsFactionVoteId_OutTeamId;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFactionVoteId_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLevelVoteId_ReturnValue;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_GetVoteType) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_GetVoteType");
static_assert(sizeof(UMG_VoteScreen_C_GetVoteType) == 0x000020, "Wrong size on UMG_VoteScreen_C_GetVoteType");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteType, InVoteSession) == 0x000000, "Member 'UMG_VoteScreen_C_GetVoteType::InVoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteType, OutVoteType) == 0x000008, "Member 'UMG_VoteScreen_C_GetVoteType::OutVoteType' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteType, CallFunc_GetId_ReturnValue) == 0x00000C, "Member 'UMG_VoteScreen_C_GetVoteType::CallFunc_GetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteType, CallFunc_IsLayerVoteId_ReturnValue) == 0x000014, "Member 'UMG_VoteScreen_C_GetVoteType::CallFunc_IsLayerVoteId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteType, CallFunc_IsFactionVoteId_OutTeamId) == 0x000018, "Member 'UMG_VoteScreen_C_GetVoteType::CallFunc_IsFactionVoteId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteType, CallFunc_IsFactionVoteId_ReturnValue) == 0x00001C, "Member 'UMG_VoteScreen_C_GetVoteType::CallFunc_IsFactionVoteId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteType, CallFunc_IsLevelVoteId_ReturnValue) == 0x00001D, "Member 'UMG_VoteScreen_C_GetVoteType::CallFunc_IsLevelVoteId_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.GetVoteWidget
// 0x0038 (0x0038 - 0x0000)
struct UMG_VoteScreen_C_GetVoteWidget final
{
public:
	ESQVoteType                                   VoteType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Create;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3409[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_VoteScreen_C>     Widget;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CreateVotePopup_Success;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_VoteScreen_C>     CallFunc_CreateVotePopup_VoteScreen;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_GetVoteWidget) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_GetVoteWidget");
static_assert(sizeof(UMG_VoteScreen_C_GetVoteWidget) == 0x000038, "Wrong size on UMG_VoteScreen_C_GetVoteWidget");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidget, VoteType) == 0x000000, "Member 'UMG_VoteScreen_C_GetVoteWidget::VoteType' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidget, Create) == 0x000001, "Member 'UMG_VoteScreen_C_GetVoteWidget::Create' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidget, Success) == 0x000002, "Member 'UMG_VoteScreen_C_GetVoteWidget::Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidget, Widget) == 0x000008, "Member 'UMG_VoteScreen_C_GetVoteWidget::Widget' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidget, CallFunc_CreateVotePopup_Success) == 0x000018, "Member 'UMG_VoteScreen_C_GetVoteWidget::CallFunc_CreateVotePopup_Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidget, CallFunc_CreateVotePopup_VoteScreen) == 0x000020, "Member 'UMG_VoteScreen_C_GetVoteWidget::CallFunc_CreateVotePopup_VoteScreen' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'UMG_VoteScreen_C_GetVoteWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.GetVoteWidgetIndex
// 0x0020 (0x0020 - 0x0000)
struct UMG_VoteScreen_C_GetVoteWidgetIndex final
{
public:
	ESQVoteType                                   VoteType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Out_Widget_Index;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQVoteType                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_GetVoteWidgetIndex) == 0x000004, "Wrong alignment on UMG_VoteScreen_C_GetVoteWidgetIndex");
static_assert(sizeof(UMG_VoteScreen_C_GetVoteWidgetIndex) == 0x000020, "Wrong size on UMG_VoteScreen_C_GetVoteWidgetIndex");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidgetIndex, VoteType) == 0x000000, "Member 'UMG_VoteScreen_C_GetVoteWidgetIndex::VoteType' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidgetIndex, Out_Widget_Index) == 0x000004, "Member 'UMG_VoteScreen_C_GetVoteWidgetIndex::Out_Widget_Index' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidgetIndex, Temp_byte_Variable) == 0x000008, "Member 'UMG_VoteScreen_C_GetVoteWidgetIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidgetIndex, Temp_int_Variable) == 0x00000C, "Member 'UMG_VoteScreen_C_GetVoteWidgetIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidgetIndex, Temp_int_Variable_1) == 0x000010, "Member 'UMG_VoteScreen_C_GetVoteWidgetIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidgetIndex, Temp_int_Variable_2) == 0x000014, "Member 'UMG_VoteScreen_C_GetVoteWidgetIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidgetIndex, Temp_int_Variable_3) == 0x000018, "Member 'UMG_VoteScreen_C_GetVoteWidgetIndex::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetVoteWidgetIndex, K2Node_Select_Default) == 0x00001C, "Member 'UMG_VoteScreen_C_GetVoteWidgetIndex::K2Node_Select_Default' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateTimer
// 0x0040 (0x0040 - 0x0000)
struct UMG_VoteScreen_C_UpdateTimer final
{
public:
	class FText                                   NewTimerText;                                      // 0x0000(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340D[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRemainingTime_Minutes;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRemainingTime_Seconds;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_340E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_To_Human_Readable_Time_Result;            // 0x0028(0x0018)()
};
static_assert(alignof(UMG_VoteScreen_C_UpdateTimer) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateTimer");
static_assert(sizeof(UMG_VoteScreen_C_UpdateTimer) == 0x000040, "Wrong size on UMG_VoteScreen_C_UpdateTimer");
static_assert(offsetof(UMG_VoteScreen_C_UpdateTimer, NewTimerText) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateTimer::NewTimerText' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateTimer, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UMG_VoteScreen_C_UpdateTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateTimer, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'UMG_VoteScreen_C_UpdateTimer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateTimer, CallFunc_GetRemainingTime_Minutes) == 0x00001C, "Member 'UMG_VoteScreen_C_UpdateTimer::CallFunc_GetRemainingTime_Minutes' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateTimer, CallFunc_GetRemainingTime_Seconds) == 0x000020, "Member 'UMG_VoteScreen_C_UpdateTimer::CallFunc_GetRemainingTime_Seconds' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateTimer, CallFunc_To_Human_Readable_Time_Result) == 0x000028, "Member 'UMG_VoteScreen_C_UpdateTimer::CallFunc_To_Human_Readable_Time_Result' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.GetRemainingTime
// 0x0040 (0x0040 - 0x0000)
struct UMG_VoteScreen_C_GetRemainingTime final
{
public:
	class USQVoteSession*                         In_Vote_Session;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minutes;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seconds;                                           // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_340F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DateTimeDateTime_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3410[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_GetRemainingTime) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_GetRemainingTime");
static_assert(sizeof(UMG_VoteScreen_C_GetRemainingTime) == 0x000040, "Wrong size on UMG_VoteScreen_C_GetRemainingTime");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, In_Vote_Session) == 0x000000, "Member 'UMG_VoteScreen_C_GetRemainingTime::In_Vote_Session' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, Minutes) == 0x000008, "Member 'UMG_VoteScreen_C_GetRemainingTime::Minutes' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, Seconds) == 0x00000C, "Member 'UMG_VoteScreen_C_GetRemainingTime::Seconds' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UMG_VoteScreen_C_GetRemainingTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, CallFunc_UtcNow_ReturnValue) == 0x000018, "Member 'UMG_VoteScreen_C_GetRemainingTime::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000020, "Member 'UMG_VoteScreen_C_GetRemainingTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, CallFunc_Less_DateTimeDateTime_ReturnValue) == 0x000028, "Member 'UMG_VoteScreen_C_GetRemainingTime::CallFunc_Less_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, CallFunc_BreakTimespan_Days) == 0x00002C, "Member 'UMG_VoteScreen_C_GetRemainingTime::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, CallFunc_BreakTimespan_Hours) == 0x000030, "Member 'UMG_VoteScreen_C_GetRemainingTime::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, CallFunc_BreakTimespan_Minutes) == 0x000034, "Member 'UMG_VoteScreen_C_GetRemainingTime::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, CallFunc_BreakTimespan_Seconds) == 0x000038, "Member 'UMG_VoteScreen_C_GetRemainingTime::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetRemainingTime, CallFunc_BreakTimespan_Milliseconds) == 0x00003C, "Member 'UMG_VoteScreen_C_GetRemainingTime::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateTexts
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteScreen_C_UpdateTexts final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_UpdateTexts) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateTexts");
static_assert(sizeof(UMG_VoteScreen_C_UpdateTexts) == 0x000008, "Wrong size on UMG_VoteScreen_C_UpdateTexts");
static_assert(offsetof(UMG_VoteScreen_C_UpdateTexts, VoteSession) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateTexts::VoteSession' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.DeActivateAll
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteScreen_C_DeActivateAll final
{
public:
	TScriptInterface<class IBPI_VoteScreen_C>     CallFunc_SetVoteScreenActive_self_CastInput;       // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_DeActivateAll) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_DeActivateAll");
static_assert(sizeof(UMG_VoteScreen_C_DeActivateAll) == 0x000010, "Wrong size on UMG_VoteScreen_C_DeActivateAll");
static_assert(offsetof(UMG_VoteScreen_C_DeActivateAll, CallFunc_SetVoteScreenActive_self_CastInput) == 0x000000, "Member 'UMG_VoteScreen_C_DeActivateAll::CallFunc_SetVoteScreenActive_self_CastInput' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.To Human Readable Time
// 0x00F8 (0x00F8 - 0x0000)
struct UMG_VoteScreen_C_To_Human_Readable_Time final
{
public:
	int32                                         In_Minutes;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Seconds;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
};
static_assert(alignof(UMG_VoteScreen_C_To_Human_Readable_Time) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_To_Human_Readable_Time");
static_assert(sizeof(UMG_VoteScreen_C_To_Human_Readable_Time) == 0x0000F8, "Wrong size on UMG_VoteScreen_C_To_Human_Readable_Time");
static_assert(offsetof(UMG_VoteScreen_C_To_Human_Readable_Time, In_Minutes) == 0x000000, "Member 'UMG_VoteScreen_C_To_Human_Readable_Time::In_Minutes' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_To_Human_Readable_Time, In_Seconds) == 0x000004, "Member 'UMG_VoteScreen_C_To_Human_Readable_Time::In_Seconds' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_To_Human_Readable_Time, Result) == 0x000008, "Member 'UMG_VoteScreen_C_To_Human_Readable_Time::Result' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_To_Human_Readable_Time, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'UMG_VoteScreen_C_To_Human_Readable_Time::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_To_Human_Readable_Time, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000038, "Member 'UMG_VoteScreen_C_To_Human_Readable_Time::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_To_Human_Readable_Time, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'UMG_VoteScreen_C_To_Human_Readable_Time::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_To_Human_Readable_Time, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'UMG_VoteScreen_C_To_Human_Readable_Time::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_To_Human_Readable_Time, K2Node_MakeArray_Array) == 0x0000D0, "Member 'UMG_VoteScreen_C_To_Human_Readable_Time::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_To_Human_Readable_Time, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'UMG_VoteScreen_C_To_Human_Readable_Time::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.CreateVotePopup
// 0x0078 (0x0078 - 0x0000)
struct UMG_VoteScreen_C_CreateVotePopup final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3411[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_VoteScreen_C>     VoteScreen;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_GenericPopupVote_C*                CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3412[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3413[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3414[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_GenericPopupVote_C*                K2Node_DynamicCast_AsUMG_Generic_Popup_Vote;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_CreateVotePopup) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_CreateVotePopup");
static_assert(sizeof(UMG_VoteScreen_C_CreateVotePopup) == 0x000078, "Wrong size on UMG_VoteScreen_C_CreateVotePopup");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, Success) == 0x000000, "Member 'UMG_VoteScreen_C_CreateVotePopup::Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, VoteScreen) == 0x000008, "Member 'UMG_VoteScreen_C_CreateVotePopup::VoteScreen' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'UMG_VoteScreen_C_CreateVotePopup::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'UMG_VoteScreen_C_CreateVotePopup::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, CallFunc_Create_ReturnValue) == 0x000028, "Member 'UMG_VoteScreen_C_CreateVotePopup::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, K2Node_DynamicCast_AsBP_HUD) == 0x000030, "Member 'UMG_VoteScreen_C_CreateVotePopup::K2Node_DynamicCast_AsBP_HUD' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UMG_VoteScreen_C_CreateVotePopup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'UMG_VoteScreen_C_CreateVotePopup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, K2Node_DynamicCast_AsUMG_Base_HUD) == 0x000040, "Member 'UMG_VoteScreen_C_CreateVotePopup::K2Node_DynamicCast_AsUMG_Base_HUD' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'UMG_VoteScreen_C_CreateVotePopup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'UMG_VoteScreen_C_CreateVotePopup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, CallFunc_AddChild_ReturnValue) == 0x000050, "Member 'UMG_VoteScreen_C_CreateVotePopup::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, CallFunc_GetChildAt_ReturnValue) == 0x000058, "Member 'UMG_VoteScreen_C_CreateVotePopup::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, CallFunc_HasAnyChildren_ReturnValue) == 0x000060, "Member 'UMG_VoteScreen_C_CreateVotePopup::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, K2Node_DynamicCast_AsUMG_Generic_Popup_Vote) == 0x000068, "Member 'UMG_VoteScreen_C_CreateVotePopup::K2Node_DynamicCast_AsUMG_Generic_Popup_Vote' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'UMG_VoteScreen_C_CreateVotePopup::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_CreateVotePopup, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'UMG_VoteScreen_C_CreateVotePopup::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateVoteCount
// 0x00B0 (0x00B0 - 0x0000)
struct UMG_VoteScreen_C_UpdateVoteCount final
{
public:
	int32                                         VoteCount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3415[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
};
static_assert(alignof(UMG_VoteScreen_C_UpdateVoteCount) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateVoteCount");
static_assert(sizeof(UMG_VoteScreen_C_UpdateVoteCount) == 0x0000B0, "Wrong size on UMG_VoteScreen_C_UpdateVoteCount");
static_assert(offsetof(UMG_VoteScreen_C_UpdateVoteCount, VoteCount) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateVoteCount::VoteCount' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateVoteCount, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'UMG_VoteScreen_C_UpdateVoteCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateVoteCount, K2Node_MakeStruct_FormatArgumentData_1) == 0x000048, "Member 'UMG_VoteScreen_C_UpdateVoteCount::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateVoteCount, K2Node_MakeArray_Array) == 0x000088, "Member 'UMG_VoteScreen_C_UpdateVoteCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateVoteCount, CallFunc_Format_ReturnValue) == 0x000098, "Member 'UMG_VoteScreen_C_UpdateVoteCount::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpgradeVoteProgressBar
// 0x0088 (0x0088 - 0x0000)
struct UMG_VoteScreen_C_UpgradeVoteProgressBar final
{
public:
	TArray<class FText>                           Team2Texts;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class FText>                           Team1Texts;                                        // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3416[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId_1;      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue_1;    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3417[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3418[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_Select_Default;                             // 0x0058(0x0010)(ReferenceParm)
	class FName                                   CallFunc_GetId_ReturnValue;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLayerVoteId_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3419[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsFactionVoteId_OutTeamId;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFactionVoteId_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341A[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_UpgradeVoteProgressBar) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpgradeVoteProgressBar");
static_assert(sizeof(UMG_VoteScreen_C_UpgradeVoteProgressBar) == 0x000088, "Wrong size on UMG_VoteScreen_C_UpgradeVoteProgressBar");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, Team2Texts) == 0x000000, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::Team2Texts' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, Team1Texts) == 0x000010, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::Team1Texts' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, K2Node_MakeArray_Array) == 0x000020, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_TryGetLocalPlayerTeamId_OutTeamId) == 0x000030, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_TryGetLocalPlayerTeamId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_TryGetLocalPlayerTeamId_ReturnValue) == 0x000034, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_TryGetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_TryGetLocalPlayerTeamId_OutTeamId_1) == 0x000038, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_TryGetLocalPlayerTeamId_OutTeamId_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_TryGetLocalPlayerTeamId_ReturnValue_1) == 0x00003C, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_TryGetLocalPlayerTeamId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, K2Node_MakeArray_Array_1) == 0x000040, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, Temp_bool_Variable) == 0x000051, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, K2Node_Select_Default) == 0x000058, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_GetId_ReturnValue) == 0x000068, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_GetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_IsLayerVoteId_ReturnValue) == 0x000070, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_IsLayerVoteId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_IsFactionVoteId_OutTeamId) == 0x000074, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_IsFactionVoteId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_IsFactionVoteId_ReturnValue) == 0x000078, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_IsFactionVoteId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpgradeVoteProgressBar, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000080, "Member 'UMG_VoteScreen_C_UpgradeVoteProgressBar::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.BindToVoteState
// 0x0018 (0x0018 - 0x0000)
struct UMG_VoteScreen_C_BindToVoteState final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_BindToVoteState) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_BindToVoteState");
static_assert(sizeof(UMG_VoteScreen_C_BindToVoteState) == 0x000018, "Wrong size on UMG_VoteScreen_C_BindToVoteState");
static_assert(offsetof(UMG_VoteScreen_C_BindToVoteState, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UMG_VoteScreen_C_BindToVoteState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_BindToVoteState, CallFunc_GetSquadGameState_Return_Value) == 0x000010, "Member 'UMG_VoteScreen_C_BindToVoteState::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateResultsState
// 0x01B0 (0x01B0 - 0x0000)
struct UMG_VoteScreen_C_UpdateResultsState final
{
public:
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameInstance*                        CallFunc_GetSquadGameInstance_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value_1;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQLayer*                               CallFunc_DetermineLayerFromName_OutLayer;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DetermineLayerFromName_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341C[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQLayer_C*                          K2Node_DynamicCast_AsBP_SQLayer;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetLevelEntry_Success;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341D[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQLevelEntry                          CallFunc_TryGetLevelEntry_LevelEntry;              // 0x0040(0x0138)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341E[0x6];                                     // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQLayer_C*                          K2Node_DynamicCast_AsBP_SQLayer_1;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341F[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetGameModeVersion_GMVer;                 // 0x0190(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_UpdateResultsState) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateResultsState");
static_assert(sizeof(UMG_VoteScreen_C_UpdateResultsState) == 0x0001B0, "Wrong size on UMG_VoteScreen_C_UpdateResultsState");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_GetSquadGameState_Return_Value) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_TryGetLocalPlayerTeamId_OutTeamId) == 0x000008, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_TryGetLocalPlayerTeamId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_TryGetLocalPlayerTeamId_ReturnValue) == 0x00000C, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_TryGetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_GetSquadGameInstance_ReturnValue) == 0x000010, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_GetSquadGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_GetSquadGameState_Return_Value_1) == 0x000018, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_GetSquadGameState_Return_Value_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_DetermineLayerFromName_OutLayer) == 0x000020, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_DetermineLayerFromName_OutLayer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_DetermineLayerFromName_ReturnValue) == 0x000028, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_DetermineLayerFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000029, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_SelectInt_ReturnValue) == 0x00002C, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, K2Node_DynamicCast_AsBP_SQLayer) == 0x000030, "Member 'UMG_VoteScreen_C_UpdateResultsState::K2Node_DynamicCast_AsBP_SQLayer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UMG_VoteScreen_C_UpdateResultsState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_TryGetLevelEntry_Success) == 0x000039, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_TryGetLevelEntry_Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_TryGetLevelEntry_LevelEntry) == 0x000040, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_TryGetLevelEntry_LevelEntry' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000178, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_BooleanOR_ReturnValue) == 0x000179, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, K2Node_DynamicCast_AsBP_SQLayer_1) == 0x000180, "Member 'UMG_VoteScreen_C_UpdateResultsState::K2Node_DynamicCast_AsBP_SQLayer_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'UMG_VoteScreen_C_UpdateResultsState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_GetGameModeVersion_GMVer) == 0x000190, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_GetGameModeVersion_GMVer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateResultsState, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0001A8, "Member 'UMG_VoteScreen_C_UpdateResultsState::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.VotePhaseChanged
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteScreen_C_VotePhaseChanged final
{
public:
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_VotePhaseChanged) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_VotePhaseChanged");
static_assert(sizeof(UMG_VoteScreen_C_VotePhaseChanged) == 0x000010, "Wrong size on UMG_VoteScreen_C_VotePhaseChanged");
static_assert(offsetof(UMG_VoteScreen_C_VotePhaseChanged, CallFunc_GetSquadGameState_Return_Value) == 0x000000, "Member 'UMG_VoteScreen_C_VotePhaseChanged::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_VotePhaseChanged, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'UMG_VoteScreen_C_VotePhaseChanged::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.ShowResultScreen
// 0x0030 (0x0030 - 0x0000)
struct UMG_VoteScreen_C_ShowResultScreen final
{
public:
	class FText                                   CallFunc_GetSubtext_OutSubtext;                    // 0x0000(0x0018)()
	class FText                                   CallFunc_GetSubtext_OutSubtext_1;                  // 0x0018(0x0018)()
};
static_assert(alignof(UMG_VoteScreen_C_ShowResultScreen) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_ShowResultScreen");
static_assert(sizeof(UMG_VoteScreen_C_ShowResultScreen) == 0x000030, "Wrong size on UMG_VoteScreen_C_ShowResultScreen");
static_assert(offsetof(UMG_VoteScreen_C_ShowResultScreen, CallFunc_GetSubtext_OutSubtext) == 0x000000, "Member 'UMG_VoteScreen_C_ShowResultScreen::CallFunc_GetSubtext_OutSubtext' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowResultScreen, CallFunc_GetSubtext_OutSubtext_1) == 0x000018, "Member 'UMG_VoteScreen_C_ShowResultScreen::CallFunc_GetSubtext_OutSubtext_1' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.PresentFactionResult
// 0x00C8 (0x00C8 - 0x0000)
struct UMG_VoteScreen_C_PresentFactionResult final
{
public:
	class USQLayer*                               Layer;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQLayerSettings                       LayerInfo;                                         // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         TeamId;                                            // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3420[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Local_TeamTexture;                                 // 0x0030(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class USQFactionSetup*                        UsedSetup;                                         // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3421[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3422[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUMG_VoteItem_C*>                K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UUMG_VoteItem_C*>                K2Node_MakeArray_Array_1;                          // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UUMG_VoteItem_C*>                K2Node_MakeArray_Array_2;                          // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UUMG_VoteItem_C*>                K2Node_Select_Default;                             // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3423[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        CallFunc_GetFactionSetup_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQFactionSetup*                        CallFunc_GetFactionSetup_ReturnValue_1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_PresentFactionResult) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_PresentFactionResult");
static_assert(sizeof(UMG_VoteScreen_C_PresentFactionResult) == 0x0000C8, "Wrong size on UMG_VoteScreen_C_PresentFactionResult");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, Layer) == 0x000000, "Member 'UMG_VoteScreen_C_PresentFactionResult::Layer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, LayerInfo) == 0x000008, "Member 'UMG_VoteScreen_C_PresentFactionResult::LayerInfo' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, TeamId) == 0x000028, "Member 'UMG_VoteScreen_C_PresentFactionResult::TeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, Local_TeamTexture) == 0x000030, "Member 'UMG_VoteScreen_C_PresentFactionResult::Local_TeamTexture' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, UsedSetup) == 0x000058, "Member 'UMG_VoteScreen_C_PresentFactionResult::UsedSetup' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, Temp_bool_Variable) == 0x000060, "Member 'UMG_VoteScreen_C_PresentFactionResult::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, CallFunc_TryGetLocalPlayerTeamId_OutTeamId) == 0x000064, "Member 'UMG_VoteScreen_C_PresentFactionResult::CallFunc_TryGetLocalPlayerTeamId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, CallFunc_TryGetLocalPlayerTeamId_ReturnValue) == 0x000068, "Member 'UMG_VoteScreen_C_PresentFactionResult::CallFunc_TryGetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000069, "Member 'UMG_VoteScreen_C_PresentFactionResult::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, K2Node_MakeArray_Array) == 0x000070, "Member 'UMG_VoteScreen_C_PresentFactionResult::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, K2Node_MakeArray_Array_1) == 0x000080, "Member 'UMG_VoteScreen_C_PresentFactionResult::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, K2Node_MakeArray_Array_2) == 0x000090, "Member 'UMG_VoteScreen_C_PresentFactionResult::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, K2Node_Select_Default) == 0x0000A0, "Member 'UMG_VoteScreen_C_PresentFactionResult::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, K2Node_SwitchInteger_CmpSuccess) == 0x0000B0, "Member 'UMG_VoteScreen_C_PresentFactionResult::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, CallFunc_GetFactionSetup_ReturnValue) == 0x0000B8, "Member 'UMG_VoteScreen_C_PresentFactionResult::CallFunc_GetFactionSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionResult, CallFunc_GetFactionSetup_ReturnValue_1) == 0x0000C0, "Member 'UMG_VoteScreen_C_PresentFactionResult::CallFunc_GetFactionSetup_ReturnValue_1' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.TickCheck
// 0x0100 (0x0100 - 0x0000)
struct UMG_VoteScreen_C_TickCheck final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3424[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRemainingTime_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3425[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3426[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0080(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
};
static_assert(alignof(UMG_VoteScreen_C_TickCheck) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_TickCheck");
static_assert(sizeof(UMG_VoteScreen_C_TickCheck) == 0x000100, "Wrong size on UMG_VoteScreen_C_TickCheck");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'UMG_VoteScreen_C_TickCheck::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, CallFunc_GetSquadGameState_Return_Value) == 0x000008, "Member 'UMG_VoteScreen_C_TickCheck::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, CallFunc_GetRemainingTime_ReturnValue) == 0x000010, "Member 'UMG_VoteScreen_C_TickCheck::CallFunc_GetRemainingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, CallFunc_Divide_IntInt_ReturnValue) == 0x000014, "Member 'UMG_VoteScreen_C_TickCheck::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'UMG_VoteScreen_C_TickCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'UMG_VoteScreen_C_TickCheck::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'UMG_VoteScreen_C_TickCheck::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, CallFunc_Percent_IntInt_ReturnValue) == 0x000078, "Member 'UMG_VoteScreen_C_TickCheck::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000080, "Member 'UMG_VoteScreen_C_TickCheck::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'UMG_VoteScreen_C_TickCheck::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, K2Node_MakeArray_Array) == 0x0000D8, "Member 'UMG_VoteScreen_C_TickCheck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TickCheck, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'UMG_VoteScreen_C_TickCheck::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateScoreboardTimer
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteScreen_C_UpdateScoreboardTimer final
{
public:
	class UTextBlock*                             TextObject;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_UpdateScoreboardTimer) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateScoreboardTimer");
static_assert(sizeof(UMG_VoteScreen_C_UpdateScoreboardTimer) == 0x000008, "Wrong size on UMG_VoteScreen_C_UpdateScoreboardTimer");
static_assert(offsetof(UMG_VoteScreen_C_UpdateScoreboardTimer, TextObject) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateScoreboardTimer::TextObject' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.PresentLayerInfo
// 0x0040 (0x0040 - 0x0000)
struct UMG_VoteScreen_C_PresentLayerInfo final
{
public:
	class FName                                   LayerID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        K2Node_DynamicCast_AsSQGame_Instance;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3427[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQLayer*                               CallFunc_DetermineLayerFromName_OutLayer;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DetermineLayerFromName_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3428[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQLayer_C*                          K2Node_DynamicCast_AsBP_SQLayer;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_PresentLayerInfo) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_PresentLayerInfo");
static_assert(sizeof(UMG_VoteScreen_C_PresentLayerInfo) == 0x000040, "Wrong size on UMG_VoteScreen_C_PresentLayerInfo");
static_assert(offsetof(UMG_VoteScreen_C_PresentLayerInfo, LayerID) == 0x000000, "Member 'UMG_VoteScreen_C_PresentLayerInfo::LayerID' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentLayerInfo, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'UMG_VoteScreen_C_PresentLayerInfo::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentLayerInfo, K2Node_DynamicCast_AsSQGame_Instance) == 0x000010, "Member 'UMG_VoteScreen_C_PresentLayerInfo::K2Node_DynamicCast_AsSQGame_Instance' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentLayerInfo, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UMG_VoteScreen_C_PresentLayerInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentLayerInfo, CallFunc_DetermineLayerFromName_OutLayer) == 0x000020, "Member 'UMG_VoteScreen_C_PresentLayerInfo::CallFunc_DetermineLayerFromName_OutLayer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentLayerInfo, CallFunc_DetermineLayerFromName_ReturnValue) == 0x000028, "Member 'UMG_VoteScreen_C_PresentLayerInfo::CallFunc_DetermineLayerFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentLayerInfo, K2Node_DynamicCast_AsBP_SQLayer) == 0x000030, "Member 'UMG_VoteScreen_C_PresentLayerInfo::K2Node_DynamicCast_AsBP_SQLayer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentLayerInfo, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'UMG_VoteScreen_C_PresentLayerInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.PresentFactionInfo
// 0x0030 (0x0030 - 0x0000)
struct UMG_VoteScreen_C_PresentFactionInfo final
{
public:
	class FName                                   Faction;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTeam;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3429[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        CallFunc_GetFactionSetupByID_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetId_ReturnValue;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IsFactionVoteId_OutTeamId;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFactionVoteId_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342A[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_PresentFactionInfo) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_PresentFactionInfo");
static_assert(sizeof(UMG_VoteScreen_C_PresentFactionInfo) == 0x000030, "Wrong size on UMG_VoteScreen_C_PresentFactionInfo");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionInfo, Faction) == 0x000000, "Member 'UMG_VoteScreen_C_PresentFactionInfo::Faction' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionInfo, CurrentTeam) == 0x000008, "Member 'UMG_VoteScreen_C_PresentFactionInfo::CurrentTeam' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionInfo, CallFunc_GetFactionSetupByID_ReturnValue) == 0x000010, "Member 'UMG_VoteScreen_C_PresentFactionInfo::CallFunc_GetFactionSetupByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionInfo, CallFunc_GetId_ReturnValue) == 0x000018, "Member 'UMG_VoteScreen_C_PresentFactionInfo::CallFunc_GetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionInfo, CallFunc_IsFactionVoteId_OutTeamId) == 0x000020, "Member 'UMG_VoteScreen_C_PresentFactionInfo::CallFunc_IsFactionVoteId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionInfo, CallFunc_IsFactionVoteId_ReturnValue) == 0x000024, "Member 'UMG_VoteScreen_C_PresentFactionInfo::CallFunc_IsFactionVoteId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_PresentFactionInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'UMG_VoteScreen_C_PresentFactionInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateFactionItem
// 0x0798 (0x0798 - 0x0000)
struct UMG_VoteScreen_C_UpdateFactionItem final
{
public:
	class USQFactionSetup*                        UsedSetup;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUMG_VoteItem_C*>                UpdateItems;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TSoftObjectPtr<class UTexture2D>              Local_TeamTexture;                                 // 0x0018(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342B[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342C[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetUnitTypeIcon_Icon;                     // 0x0068(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetUnitTypeIcon_TypeName;                 // 0x0090(0x0018)()
	bool                                          CallFunc_TryGetFactionEntry_Success;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342D[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry;          // 0x00B0(0x0580)(HasGetValueTypeHash)
	bool                                          CallFunc_TryGetFactionSetupEntry_Success;          // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342E[0x7];                                     // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionSetupEntry                   CallFunc_TryGetFactionSetupEntry_FactionSetupEntry; // 0x0638(0x00A8)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UTexture2D>>      CallFunc_Map_Values_Values;                        // 0x06E0(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Array_Get_Item;                           // 0x06F0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342F[0x7];                                     // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameInstance*                        CallFunc_GetSquadGameInstance_ReturnValue;         // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3430[0x4];                                     // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQLayer*                               CallFunc_DetermineLayerFromName_OutLayer;          // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DetermineLayerFromName_ReturnValue;       // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3431[0x7];                                     // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_VoteItem_C*                        CallFunc_Array_Get_Item_1;                         // 0x0740(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQLayer_C*                          K2Node_DynamicCast_AsBP_SQLayer;                   // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetOuterLevel_Out_Success;                // 0x0751(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3432[0x6];                                     // 0x0752(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQLevel_C*                          CallFunc_GetOuterLevel_OuterLevel;                 // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3433[0x7];                                     // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value;                           // 0x0768(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_UpdateFactionItem) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateFactionItem");
static_assert(sizeof(UMG_VoteScreen_C_UpdateFactionItem) == 0x000798, "Wrong size on UMG_VoteScreen_C_UpdateFactionItem");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, UsedSetup) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateFactionItem::UsedSetup' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, UpdateItems) == 0x000008, "Member 'UMG_VoteScreen_C_UpdateFactionItem::UpdateItems' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, Local_TeamTexture) == 0x000018, "Member 'UMG_VoteScreen_C_UpdateFactionItem::Local_TeamTexture' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'UMG_VoteScreen_C_UpdateFactionItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_GetSquadGameState_Return_Value) == 0x000050, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, K2Node_DynamicCast_AsBP_SQFaction_Setup) == 0x000058, "Member 'UMG_VoteScreen_C_UpdateFactionItem::K2Node_DynamicCast_AsBP_SQFaction_Setup' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'UMG_VoteScreen_C_UpdateFactionItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_GetUnitTypeIcon_Icon) == 0x000068, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_GetUnitTypeIcon_Icon' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_GetUnitTypeIcon_TypeName) == 0x000090, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_GetUnitTypeIcon_TypeName' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_TryGetFactionEntry_Success) == 0x0000A8, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_TryGetFactionEntry_Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_TryGetFactionEntry_FactionEntry) == 0x0000B0, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_TryGetFactionEntry_FactionEntry' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_TryGetFactionSetupEntry_Success) == 0x000630, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_TryGetFactionSetupEntry_Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_TryGetFactionSetupEntry_FactionSetupEntry) == 0x000638, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_TryGetFactionSetupEntry_FactionSetupEntry' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_Map_Values_Values) == 0x0006E0, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_Array_Get_Item) == 0x0006F0, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_BooleanAND_ReturnValue) == 0x000718, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_GetSquadGameInstance_ReturnValue) == 0x000720, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_GetSquadGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, Temp_int_Array_Index_Variable) == 0x000728, "Member 'UMG_VoteScreen_C_UpdateFactionItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_DetermineLayerFromName_OutLayer) == 0x000730, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_DetermineLayerFromName_OutLayer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_DetermineLayerFromName_ReturnValue) == 0x000738, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_DetermineLayerFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_Array_Get_Item_1) == 0x000740, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, K2Node_DynamicCast_AsBP_SQLayer) == 0x000748, "Member 'UMG_VoteScreen_C_UpdateFactionItem::K2Node_DynamicCast_AsBP_SQLayer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, K2Node_DynamicCast_bSuccess_1) == 0x000750, "Member 'UMG_VoteScreen_C_UpdateFactionItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_GetOuterLevel_Out_Success) == 0x000751, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_GetOuterLevel_Out_Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_GetOuterLevel_OuterLevel) == 0x000758, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_GetOuterLevel_OuterLevel' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_IsValid_ReturnValue) == 0x000760, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_Map_Find_Value) == 0x000768, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFactionItem, CallFunc_Map_Find_ReturnValue) == 0x000790, "Member 'UMG_VoteScreen_C_UpdateFactionItem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateFinalResult
// 0x01D8 (0x01D8 - 0x0000)
struct UMG_VoteScreen_C_UpdateFinalResult final
{
public:
	class USQLayer*                               Layer;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUMG_VoteItem_C*>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3434[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUMG_VoteItem_C*>                K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USQFactionSetup*                        CallFunc_GetFactionSetup_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3435[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        CallFunc_GetFactionSetup_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        CallFunc_GetSquadGameInstance_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQLayer*                               CallFunc_DetermineLayerFromName_OutLayer;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DetermineLayerFromName_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3436[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQLayer_C*                          K2Node_DynamicCast_AsBP_SQLayer;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3437[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetGameModeVersion_GMVer;                 // 0x0080(0x0018)()
	bool                                          CallFunc_TryGetLevelEntry_Success;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3438[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQLevelEntry                          CallFunc_TryGetLevelEntry_LevelEntry;              // 0x00A0(0x0138)(HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_UpdateFinalResult) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateFinalResult");
static_assert(sizeof(UMG_VoteScreen_C_UpdateFinalResult) == 0x0001D8, "Wrong size on UMG_VoteScreen_C_UpdateFinalResult");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, Layer) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateFinalResult::Layer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_GetSquadGameState_Return_Value) == 0x000008, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, K2Node_MakeArray_Array) == 0x000010, "Member 'UMG_VoteScreen_C_UpdateFinalResult::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_MakeLiteralInt_ReturnValue) == 0x000020, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, K2Node_MakeArray_Array_1) == 0x000028, "Member 'UMG_VoteScreen_C_UpdateFinalResult::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_GetFactionSetup_ReturnValue) == 0x000038, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_GetFactionSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000040, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_GetFactionSetup_ReturnValue_1) == 0x000048, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_GetFactionSetup_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_GetSquadGameInstance_ReturnValue) == 0x000050, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_GetSquadGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_GetSquadGameState_Return_Value_1) == 0x000058, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_GetSquadGameState_Return_Value_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_DetermineLayerFromName_OutLayer) == 0x000060, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_DetermineLayerFromName_OutLayer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_DetermineLayerFromName_ReturnValue) == 0x000068, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_DetermineLayerFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, K2Node_DynamicCast_AsBP_SQLayer) == 0x000070, "Member 'UMG_VoteScreen_C_UpdateFinalResult::K2Node_DynamicCast_AsBP_SQLayer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'UMG_VoteScreen_C_UpdateFinalResult::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_GetGameModeVersion_GMVer) == 0x000080, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_GetGameModeVersion_GMVer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_TryGetLevelEntry_Success) == 0x000098, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_TryGetLevelEntry_Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateFinalResult, CallFunc_TryGetLevelEntry_LevelEntry) == 0x0000A0, "Member 'UMG_VoteScreen_C_UpdateFinalResult::CallFunc_TryGetLevelEntry_LevelEntry' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.ShowChoosenFactionInfo
// 0x00B0 (0x00B0 - 0x0000)
struct UMG_VoteScreen_C_ShowChoosenFactionInfo final
{
public:
	int32                                         TeamId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FactionID;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQLayerSettings                       FactionsCopy;                                      // 0x000C(0x0020)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USQFactionSetup*                        CallFunc_GetFactionSetupByID_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3439[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343A[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343B[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_ShowChoosenFactionInfo) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_ShowChoosenFactionInfo");
static_assert(sizeof(UMG_VoteScreen_C_ShowChoosenFactionInfo) == 0x0000B0, "Wrong size on UMG_VoteScreen_C_ShowChoosenFactionInfo");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, TeamId) == 0x000000, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::TeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, FactionID) == 0x000004, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::FactionID' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, FactionsCopy) == 0x00000C, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::FactionsCopy' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_MakeLiteralInt_ReturnValue) == 0x00002C, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_TryGetLocalPlayerTeamId_OutTeamId) == 0x000030, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_TryGetLocalPlayerTeamId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_TryGetLocalPlayerTeamId_ReturnValue) == 0x000034, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_TryGetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000035, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000036, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, Temp_bool_Variable) == 0x000037, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_GetFactionSetupByID_ReturnValue) == 0x000038, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_GetFactionSetupByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, Temp_bool_Variable_1) == 0x000040, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, K2Node_Select_Default) == 0x000044, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, K2Node_Select_Default_1) == 0x00004C, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_Conv_NameToString_ReturnValue) == 0x000058, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000068, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_NotEqual_NameName_ReturnValue) == 0x000078, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_GetSquadGameState_Return_Value) == 0x0000A0, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenFactionInfo, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A8, "Member 'UMG_VoteScreen_C_ShowChoosenFactionInfo::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.ShowChoosenLayerInfo
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteScreen_C_ShowChoosenLayerInfo final
{
public:
	class UBP_SQLayer_C*                          K2Node_DynamicCast_AsBP_SQLayer;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_ShowChoosenLayerInfo) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_ShowChoosenLayerInfo");
static_assert(sizeof(UMG_VoteScreen_C_ShowChoosenLayerInfo) == 0x000010, "Wrong size on UMG_VoteScreen_C_ShowChoosenLayerInfo");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenLayerInfo, K2Node_DynamicCast_AsBP_SQLayer) == 0x000000, "Member 'UMG_VoteScreen_C_ShowChoosenLayerInfo::K2Node_DynamicCast_AsBP_SQLayer' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ShowChoosenLayerInfo, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'UMG_VoteScreen_C_ShowChoosenLayerInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.ShowInfoFromSingleResult
// 0x0001 (0x0001 - 0x0000)
struct UMG_VoteScreen_C_ShowInfoFromSingleResult final
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_ShowInfoFromSingleResult) == 0x000001, "Wrong alignment on UMG_VoteScreen_C_ShowInfoFromSingleResult");
static_assert(sizeof(UMG_VoteScreen_C_ShowInfoFromSingleResult) == 0x000001, "Wrong size on UMG_VoteScreen_C_ShowInfoFromSingleResult");
static_assert(offsetof(UMG_VoteScreen_C_ShowInfoFromSingleResult, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'UMG_VoteScreen_C_ShowInfoFromSingleResult::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateSquadChatButton
// 0x0028 (0x0028 - 0x0000)
struct UMG_VoteScreen_C_UpdateSquadChatButton final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteScreen_C_UpdateSquadChatButton) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateSquadChatButton");
static_assert(sizeof(UMG_VoteScreen_C_UpdateSquadChatButton) == 0x000028, "Wrong size on UMG_VoteScreen_C_UpdateSquadChatButton");
static_assert(offsetof(UMG_VoteScreen_C_UpdateSquadChatButton, Selected) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateSquadChatButton::Selected' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateSquadChatButton, Temp_object_Variable) == 0x000008, "Member 'UMG_VoteScreen_C_UpdateSquadChatButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateSquadChatButton, Temp_object_Variable_1) == 0x000010, "Member 'UMG_VoteScreen_C_UpdateSquadChatButton::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateSquadChatButton, Temp_bool_Variable) == 0x000018, "Member 'UMG_VoteScreen_C_UpdateSquadChatButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateSquadChatButton, K2Node_Select_Default) == 0x000020, "Member 'UMG_VoteScreen_C_UpdateSquadChatButton::K2Node_Select_Default' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.GetScoreboardRef
// 0x0050 (0x0050 - 0x0000)
struct UMG_VoteScreen_C_GetScoreboardRef final
{
public:
	class UUMG_Scoreboard_C*                      ScoreBoard;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQScoreboard*                          CallFunc_Get_Scoreboard_Scoreboard;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Scoreboard_C*                      K2Node_DynamicCast_AsUMG_Scoreboard;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_GetScoreboardRef) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_GetScoreboardRef");
static_assert(sizeof(UMG_VoteScreen_C_GetScoreboardRef) == 0x000050, "Wrong size on UMG_VoteScreen_C_GetScoreboardRef");
static_assert(offsetof(UMG_VoteScreen_C_GetScoreboardRef, ScoreBoard) == 0x000000, "Member 'UMG_VoteScreen_C_GetScoreboardRef::ScoreBoard' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetScoreboardRef, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UMG_VoteScreen_C_GetScoreboardRef::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetScoreboardRef, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'UMG_VoteScreen_C_GetScoreboardRef::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetScoreboardRef, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'UMG_VoteScreen_C_GetScoreboardRef::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetScoreboardRef, K2Node_DynamicCast_AsBPI_HUD) == 0x000020, "Member 'UMG_VoteScreen_C_GetScoreboardRef::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetScoreboardRef, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UMG_VoteScreen_C_GetScoreboardRef::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetScoreboardRef, CallFunc_Get_Scoreboard_Scoreboard) == 0x000038, "Member 'UMG_VoteScreen_C_GetScoreboardRef::CallFunc_Get_Scoreboard_Scoreboard' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetScoreboardRef, K2Node_DynamicCast_AsUMG_Scoreboard) == 0x000040, "Member 'UMG_VoteScreen_C_GetScoreboardRef::K2Node_DynamicCast_AsUMG_Scoreboard' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetScoreboardRef, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'UMG_VoteScreen_C_GetScoreboardRef::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateGameMode
// 0x0040 (0x0040 - 0x0000)
struct UMG_VoteScreen_C_UpdateGameMode final
{
public:
	TArray<class FName>                           AsyncGamemodes;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3440[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetGameModeID_ReturnValue;                // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_UpdateGameMode) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateGameMode");
static_assert(sizeof(UMG_VoteScreen_C_UpdateGameMode) == 0x000040, "Wrong size on UMG_VoteScreen_C_UpdateGameMode");
static_assert(offsetof(UMG_VoteScreen_C_UpdateGameMode, AsyncGamemodes) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateGameMode::AsyncGamemodes' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateGameMode, K2Node_MakeArray_Array) == 0x000010, "Member 'UMG_VoteScreen_C_UpdateGameMode::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateGameMode, K2Node_MakeArray_Array_1) == 0x000020, "Member 'UMG_VoteScreen_C_UpdateGameMode::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateGameMode, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'UMG_VoteScreen_C_UpdateGameMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateGameMode, CallFunc_GetGameModeID_ReturnValue) == 0x000034, "Member 'UMG_VoteScreen_C_UpdateGameMode::CallFunc_GetGameModeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateGameMode, CallFunc_Array_Contains_ReturnValue) == 0x00003C, "Member 'UMG_VoteScreen_C_UpdateGameMode::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.SetRefreshVoip
// 0x0038 (0x0038 - 0x0000)
struct UMG_VoteScreen_C_SetRefreshVoip final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3441[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3442[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_SetRefreshVoip) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_SetRefreshVoip");
static_assert(sizeof(UMG_VoteScreen_C_SetRefreshVoip) == 0x000038, "Wrong size on UMG_VoteScreen_C_SetRefreshVoip");
static_assert(offsetof(UMG_VoteScreen_C_SetRefreshVoip, Active) == 0x000000, "Member 'UMG_VoteScreen_C_SetRefreshVoip::Active' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_SetRefreshVoip, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UMG_VoteScreen_C_SetRefreshVoip::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_SetRefreshVoip, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'UMG_VoteScreen_C_SetRefreshVoip::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_SetRefreshVoip, K2Node_DynamicCast_AsSQHUD) == 0x000018, "Member 'UMG_VoteScreen_C_SetRefreshVoip::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_SetRefreshVoip, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UMG_VoteScreen_C_SetRefreshVoip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_SetRefreshVoip, K2Node_DynamicCast_AsUMG_Base_HUD) == 0x000028, "Member 'UMG_VoteScreen_C_SetRefreshVoip::K2Node_DynamicCast_AsUMG_Base_HUD' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_SetRefreshVoip, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'UMG_VoteScreen_C_SetRefreshVoip::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.ActivateWindow
// 0x0010 (0x0010 - 0x0000)
struct UMG_VoteScreen_C_ActivateWindow final
{
public:
	class UUMG_Scoreboard_C*                      CallFunc_GetScoreboardRef_Scoreboard;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_ActivateWindow) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_ActivateWindow");
static_assert(sizeof(UMG_VoteScreen_C_ActivateWindow) == 0x000010, "Wrong size on UMG_VoteScreen_C_ActivateWindow");
static_assert(offsetof(UMG_VoteScreen_C_ActivateWindow, CallFunc_GetScoreboardRef_Scoreboard) == 0x000000, "Member 'UMG_VoteScreen_C_ActivateWindow::CallFunc_GetScoreboardRef_Scoreboard' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_ActivateWindow, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000008, "Member 'UMG_VoteScreen_C_ActivateWindow::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateCantVoteScreen
// 0x0058 (0x0058 - 0x0000)
struct UMG_VoteScreen_C_UpdateCantVoteScreen final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3443[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3444[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0040(0x0018)()
};
static_assert(alignof(UMG_VoteScreen_C_UpdateCantVoteScreen) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_UpdateCantVoteScreen");
static_assert(sizeof(UMG_VoteScreen_C_UpdateCantVoteScreen) == 0x000058, "Wrong size on UMG_VoteScreen_C_UpdateCantVoteScreen");
static_assert(offsetof(UMG_VoteScreen_C_UpdateCantVoteScreen, Temp_bool_Variable) == 0x000000, "Member 'UMG_VoteScreen_C_UpdateCantVoteScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateCantVoteScreen, Temp_text_Variable) == 0x000008, "Member 'UMG_VoteScreen_C_UpdateCantVoteScreen::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateCantVoteScreen, Temp_text_Variable_1) == 0x000020, "Member 'UMG_VoteScreen_C_UpdateCantVoteScreen::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateCantVoteScreen, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'UMG_VoteScreen_C_UpdateCantVoteScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateCantVoteScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'UMG_VoteScreen_C_UpdateCantVoteScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdateCantVoteScreen, K2Node_Select_Default) == 0x000040, "Member 'UMG_VoteScreen_C_UpdateCantVoteScreen::K2Node_Select_Default' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.GetFactionSetup
// 0x0040 (0x0040 - 0x0000)
struct UMG_VoteScreen_C_GetFactionSetup final
{
public:
	class FName                                   FactionID;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FactionType;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamId;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3445[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3446[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        CallFunc_GetDefaultFactionSetup_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQFactionSetup*                        CallFunc_GetFactionSetupByIDType_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_GetFactionSetup) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_GetFactionSetup");
static_assert(sizeof(UMG_VoteScreen_C_GetFactionSetup) == 0x000040, "Wrong size on UMG_VoteScreen_C_GetFactionSetup");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetup, FactionID) == 0x000000, "Member 'UMG_VoteScreen_C_GetFactionSetup::FactionID' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetup, FactionType) == 0x000008, "Member 'UMG_VoteScreen_C_GetFactionSetup::FactionType' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetup, TeamId) == 0x000010, "Member 'UMG_VoteScreen_C_GetFactionSetup::TeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetup, ReturnValue) == 0x000018, "Member 'UMG_VoteScreen_C_GetFactionSetup::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetup, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'UMG_VoteScreen_C_GetFactionSetup::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetup, CallFunc_GetDefaultFactionSetup_ReturnValue) == 0x000028, "Member 'UMG_VoteScreen_C_GetFactionSetup::CallFunc_GetDefaultFactionSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetup, CallFunc_GetFactionSetupByIDType_ReturnValue) == 0x000030, "Member 'UMG_VoteScreen_C_GetFactionSetup::CallFunc_GetFactionSetupByIDType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetup, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'UMG_VoteScreen_C_GetFactionSetup::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.GetFactionSetupByID
// 0x0038 (0x0038 - 0x0000)
struct UMG_VoteScreen_C_GetFactionSetupByID final
{
public:
	class FName                                   FactionID;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3447[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3448[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        CallFunc_GetDefaultFactionSetup_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQFactionSetup*                        CallFunc_GetFactionSetupByID_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_GetFactionSetupByID) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_GetFactionSetupByID");
static_assert(sizeof(UMG_VoteScreen_C_GetFactionSetupByID) == 0x000038, "Wrong size on UMG_VoteScreen_C_GetFactionSetupByID");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetupByID, FactionID) == 0x000000, "Member 'UMG_VoteScreen_C_GetFactionSetupByID::FactionID' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetupByID, TeamId) == 0x000008, "Member 'UMG_VoteScreen_C_GetFactionSetupByID::TeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetupByID, ReturnValue) == 0x000010, "Member 'UMG_VoteScreen_C_GetFactionSetupByID::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetupByID, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'UMG_VoteScreen_C_GetFactionSetupByID::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetupByID, CallFunc_GetDefaultFactionSetup_ReturnValue) == 0x000020, "Member 'UMG_VoteScreen_C_GetFactionSetupByID::CallFunc_GetDefaultFactionSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetupByID, CallFunc_GetFactionSetupByID_ReturnValue) == 0x000028, "Member 'UMG_VoteScreen_C_GetFactionSetupByID::CallFunc_GetFactionSetupByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_GetFactionSetupByID, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'UMG_VoteScreen_C_GetFactionSetupByID::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.TryToResetup
// 0x0020 (0x0020 - 0x0000)
struct UMG_VoteScreen_C_TryToResetup final
{
public:
	class USQVoteSessionClient*                   Session;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanVoteInCurrentPhase_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_TryToResetup) == 0x000008, "Wrong alignment on UMG_VoteScreen_C_TryToResetup");
static_assert(sizeof(UMG_VoteScreen_C_TryToResetup) == 0x000020, "Wrong size on UMG_VoteScreen_C_TryToResetup");
static_assert(offsetof(UMG_VoteScreen_C_TryToResetup, Session) == 0x000000, "Member 'UMG_VoteScreen_C_TryToResetup::Session' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TryToResetup, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'UMG_VoteScreen_C_TryToResetup::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TryToResetup, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000010, "Member 'UMG_VoteScreen_C_TryToResetup::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TryToResetup, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UMG_VoteScreen_C_TryToResetup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_TryToResetup, CallFunc_CanVoteInCurrentPhase_ReturnValue) == 0x000019, "Member 'UMG_VoteScreen_C_TryToResetup::CallFunc_CanVoteInCurrentPhase_ReturnValue' has a wrong offset!");

// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdatePlayersCountText
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteScreen_C_UpdatePlayersCountText final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteScreen_C_UpdatePlayersCountText) == 0x000004, "Wrong alignment on UMG_VoteScreen_C_UpdatePlayersCountText");
static_assert(sizeof(UMG_VoteScreen_C_UpdatePlayersCountText) == 0x000008, "Wrong size on UMG_VoteScreen_C_UpdatePlayersCountText");
static_assert(offsetof(UMG_VoteScreen_C_UpdatePlayersCountText, Param_Index) == 0x000000, "Member 'UMG_VoteScreen_C_UpdatePlayersCountText::Param_Index' has a wrong offset!");
static_assert(offsetof(UMG_VoteScreen_C_UpdatePlayersCountText, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'UMG_VoteScreen_C_UpdatePlayersCountText::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}


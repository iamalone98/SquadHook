#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ServerBrowserWindow

#include "Basic.hpp"

#include "UIZOrderStruct_structs.hpp"
#include "E_SortType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ModdingRuntime_structs.hpp"
#include "PlayFab_structs.hpp"
#include "UMG_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ServerBrowserWindow.ServerBrowserWindow_C.ExecuteUbergraph_ServerBrowserWindow
// 0x0380 (0x0380 - 0x0000)
struct ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38CE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Password;                       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_ServerPassword_C*                   K2Node_CustomEvent_Sender;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        K2Node_DynamicCast_AsSQGame_Instance;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38CF[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0040(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D0[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsAscending, E_SortType Sort_Type)> K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_38D1[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D2[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        K2Node_Event_Results_1;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item;                           // 0x0090(0x0108)()
	class UServerListItem_C*                      CallFunc_AddNewServerWidget_Item;                  // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D3[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        K2Node_Event_Results;                              // 0x01A8(0x0010)(ConstParm, ReferenceParm)
	class USQSessionInfo*                         K2Node_CustomEvent_SessionInfo;                    // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x01C0(0x0018)()
	class USQGameInstance*                        CallFunc_GetSquadGameInstance_ReturnValue;         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_VerifyPassword_ReturnValue;               // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSameServer_ReturnValue;                 // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D4[0x5];                                     // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USQSessionInfo*                         K2Node_CustomEvent_Session;                        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Mods_In_Sync;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bSelected;              // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D5[0x6];                                     // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MainMenuButton_C*                    K2Node_ComponentBoundEvent_Button;                 // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMainMenuScreen_C*                      CallFunc_GetMainMenuRef_REF_MainMenu;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D6[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenuScreen_C*                      CallFunc_GetMainMenuRef_REF_MainMenu_1;            // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMainMenuScreen_C*                      CallFunc_GetMainMenuRef_REF_MainMenu_2;            // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Type;                           // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EventName;                      // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPlayFabJsonObject*                     CallFunc_ConstructJsonObject_ReturnValue;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayFabJsonObject*                     CallFunc_ConstructJsonObject_ReturnValue_1;        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetSelectedTagsString_Out;                // 0x0250(0x0010)(ReferenceParm)
	TDelegate<void(class USQSessionInfo* Session)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D7[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameInstance*                        K2Node_DynamicCast_AsSQGame_Instance_1;            // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D8[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQJoinBeaconClient* NewJoinBeaconClient)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0294(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_38D9[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQJoinBeaconClient*                    K2Node_CustomEvent_NewJoinBeaconClient;            // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	class UMainMenuScreen_C*                      CallFunc_GetMainMenuRef_REF_MainMenu_3;            // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldApplyFilters_Apply;                 // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DA[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ServerPassword_C*                   CallFunc_Create_ReturnValue;                       // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DB[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ModdedServerWarning_C*              CallFunc_Create_ReturnValue_1;                     // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DC[0x2];                                     // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DD[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& Password, class UBP_ServerPassword_C* Sender)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x02FC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x030C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DE[0x3];                                     // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0328(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldSkipPassword_ReturnValue;           // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x034B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38DF[0x3];                                     // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E0[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameInstance*                        K2Node_DynamicCast_AsSQGame_Instance_2;            // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E1[0x1];                                     // 0x036B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x036C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow");
static_assert(sizeof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow) == 0x000380, "Wrong size on ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, EntryPoint) == 0x000000, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetSquadPlayerController_Return_Value) == 0x000008, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetSquadPlayerController_Return_Value' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CustomEvent_Password) == 0x000010, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CustomEvent_Password' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CustomEvent_Sender) == 0x000020, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CustomEvent_Sender' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_DynamicCast_AsSQGame_Instance) == 0x000030, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_DynamicCast_AsSQGame_Instance' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_ComponentBoundEvent_Text) == 0x000040, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_ComponentBoundEvent_CommitMethod) == 0x000058, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000070, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, Temp_int_Array_Index_Variable) == 0x000078, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_Event_Results_1) == 0x000080, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_Event_Results_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Array_Get_Item) == 0x000090, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_AddNewServerWidget_Item) == 0x000198, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_AddNewServerWidget_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_Event_Results) == 0x0001A8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_Event_Results' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CustomEvent_SessionInfo) == 0x0001B8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CustomEvent_SessionInfo' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_MakeLiteralText_ReturnValue) == 0x0001C0, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetSquadGameInstance_ReturnValue) == 0x0001D8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetSquadGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_IsValid_ReturnValue_1) == 0x0001E0, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_VerifyPassword_ReturnValue) == 0x0001E1, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_VerifyPassword_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_IsSameServer_ReturnValue) == 0x0001E2, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_IsSameServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CustomEvent_Session) == 0x0001E8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CustomEvent_Session' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Check_Mods_In_Sync) == 0x0001F0, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Check_Mods_In_Sync' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_ComponentBoundEvent_bSelected) == 0x0001F1, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_ComponentBoundEvent_bSelected' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_ComponentBoundEvent_Button) == 0x0001F8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetMainMenuRef_REF_MainMenu) == 0x000200, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetMainMenuRef_REF_MainMenu' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetDataTableRowFromName_OutRow) == 0x000208, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00020C, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetMainMenuRef_REF_MainMenu_1) == 0x000210, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetMainMenuRef_REF_MainMenu_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetMainMenuRef_REF_MainMenu_2) == 0x000218, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetMainMenuRef_REF_MainMenu_2' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CustomEvent_Type) == 0x000220, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CustomEvent_EventName) == 0x000230, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_ConstructJsonObject_ReturnValue) == 0x000240, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_ConstructJsonObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_ConstructJsonObject_ReturnValue_1) == 0x000248, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_ConstructJsonObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetSelectedTagsString_Out) == 0x000250, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetSelectedTagsString_Out' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CreateDelegate_OutputDelegate_1) == 0x000260, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000270, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetGameInstance_ReturnValue_1) == 0x000278, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000280, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_DynamicCast_AsSQGame_Instance_1) == 0x000288, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_DynamicCast_AsSQGame_Instance_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_DynamicCast_bSuccess_1) == 0x000290, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CreateDelegate_OutputDelegate_2) == 0x000294, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CustomEvent_NewJoinBeaconClient) == 0x0002A8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CustomEvent_NewJoinBeaconClient' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002B0, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetMainMenuRef_REF_MainMenu_3) == 0x0002C0, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetMainMenuRef_REF_MainMenu_3' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_ShouldApplyFilters_Apply) == 0x0002C8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_ShouldApplyFilters_Apply' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetOwningPlayer_ReturnValue) == 0x0002D0, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Create_ReturnValue) == 0x0002D8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_IsValid_ReturnValue_2) == 0x0002E0, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Create_ReturnValue_1) == 0x0002E8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, Temp_bool_Has_Been_Initd_Variable) == 0x0002F0, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, Temp_bool_IsClosed_Variable) == 0x0002F1, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0002F4, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0002F8, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002FC, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CreateDelegate_OutputDelegate_5) == 0x00030C, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, Temp_int_Loop_Counter_Variable) == 0x00031C, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Less_IntInt_ReturnValue) == 0x000320, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Add_IntInt_ReturnValue) == 0x000324, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CreateDelegate_OutputDelegate_6) == 0x000328, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000338, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000340, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_DynamicCast_bSuccess_2) == 0x000348, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_ShouldSkipPassword_ReturnValue) == 0x000349, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_ShouldSkipPassword_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_IsValid_ReturnValue_3) == 0x00034A, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_Not_PreBool_ReturnValue) == 0x00034B, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_BooleanAND_ReturnValue) == 0x00034C, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_GetGameInstance_ReturnValue_2) == 0x000350, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_IsValid_ReturnValue_4) == 0x000358, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_DynamicCast_AsSQGame_Instance_2) == 0x000360, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_DynamicCast_AsSQGame_Instance_2' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_DynamicCast_bSuccess_3) == 0x000368, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_IsValid_ReturnValue_5) == 0x000369, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, CallFunc_IsValid_ReturnValue_6) == 0x00036A, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow, K2Node_CreateDelegate_OutputDelegate_7) == 0x00036C, "Member 'ServerBrowserWindow_C_ExecuteUbergraph_ServerBrowserWindow::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.OnQueueForServer
// 0x0008 (0x0008 - 0x0000)
struct ServerBrowserWindow_C_OnQueueForServer final
{
public:
	class ASQJoinBeaconClient*                    NewJoinBeaconClient;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_OnQueueForServer) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_OnQueueForServer");
static_assert(sizeof(ServerBrowserWindow_C_OnQueueForServer) == 0x000008, "Wrong size on ServerBrowserWindow_C_OnQueueForServer");
static_assert(offsetof(ServerBrowserWindow_C_OnQueueForServer, NewJoinBeaconClient) == 0x000000, "Member 'ServerBrowserWindow_C_OnQueueForServer::NewJoinBeaconClient' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.SentAnaliticsInfo
// 0x0020 (0x0020 - 0x0000)
struct ServerBrowserWindow_C_SentAnaliticsInfo final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EventName;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_SentAnaliticsInfo) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_SentAnaliticsInfo");
static_assert(sizeof(ServerBrowserWindow_C_SentAnaliticsInfo) == 0x000020, "Wrong size on ServerBrowserWindow_C_SentAnaliticsInfo");
static_assert(offsetof(ServerBrowserWindow_C_SentAnaliticsInfo, Type) == 0x000000, "Member 'ServerBrowserWindow_C_SentAnaliticsInfo::Type' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_SentAnaliticsInfo, EventName) == 0x000010, "Member 'ServerBrowserWindow_C_SentAnaliticsInfo::EventName' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ServerBrowserWindow_C_BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MainMenuButton_C*                    Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(sizeof(ServerBrowserWindow_C_BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000010, "Wrong size on ServerBrowserWindow_C_BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(offsetof(ServerBrowserWindow_C_BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'ServerBrowserWindow_C_BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'ServerBrowserWindow_C_BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.RequestJoinPress
// 0x0008 (0x0008 - 0x0000)
struct ServerBrowserWindow_C_RequestJoinPress final
{
public:
	class USQSessionInfo*                         Session;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_RequestJoinPress) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_RequestJoinPress");
static_assert(sizeof(ServerBrowserWindow_C_RequestJoinPress) == 0x000008, "Wrong size on ServerBrowserWindow_C_RequestJoinPress");
static_assert(offsetof(ServerBrowserWindow_C_RequestJoinPress, Session) == 0x000000, "Member 'ServerBrowserWindow_C_RequestJoinPress::Session' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.OnUpdateSession
// 0x0010 (0x0010 - 0x0000)
struct ServerBrowserWindow_C_OnUpdateSession final
{
public:
	TArray<struct FBlueprintSessionResult>        Param_Results;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ServerBrowserWindow_C_OnUpdateSession) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_OnUpdateSession");
static_assert(sizeof(ServerBrowserWindow_C_OnUpdateSession) == 0x000010, "Wrong size on ServerBrowserWindow_C_OnUpdateSession");
static_assert(offsetof(ServerBrowserWindow_C_OnUpdateSession, Param_Results) == 0x000000, "Member 'ServerBrowserWindow_C_OnUpdateSession::Param_Results' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.OnSuccess
// 0x0010 (0x0010 - 0x0000)
struct ServerBrowserWindow_C_OnSuccess final
{
public:
	TArray<struct FBlueprintSessionResult>        Param_Results;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ServerBrowserWindow_C_OnSuccess) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_OnSuccess");
static_assert(sizeof(ServerBrowserWindow_C_OnSuccess) == 0x000010, "Wrong size on ServerBrowserWindow_C_OnSuccess");
static_assert(offsetof(ServerBrowserWindow_C_OnSuccess, Param_Results) == 0x000000, "Member 'ServerBrowserWindow_C_OnSuccess::Param_Results' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct ServerBrowserWindow_C_BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(ServerBrowserWindow_C_BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on ServerBrowserWindow_C_BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(ServerBrowserWindow_C_BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'ServerBrowserWindow_C_BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'ServerBrowserWindow_C_BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.passwordEnteredForced
// 0x0018 (0x0018 - 0x0000)
struct ServerBrowserWindow_C_PasswordEnteredForced final
{
public:
	class FString                                 Password;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UBP_ServerPassword_C*                   Sender;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_PasswordEnteredForced) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_PasswordEnteredForced");
static_assert(sizeof(ServerBrowserWindow_C_PasswordEnteredForced) == 0x000018, "Wrong size on ServerBrowserWindow_C_PasswordEnteredForced");
static_assert(offsetof(ServerBrowserWindow_C_PasswordEnteredForced, Password) == 0x000000, "Member 'ServerBrowserWindow_C_PasswordEnteredForced::Password' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_PasswordEnteredForced, Sender) == 0x000010, "Member 'ServerBrowserWindow_C_PasswordEnteredForced::Sender' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.RequestJoinServer
// 0x0008 (0x0008 - 0x0000)
struct ServerBrowserWindow_C_RequestJoinServer final
{
public:
	class USQSessionInfo*                         SessionInfo;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_RequestJoinServer) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_RequestJoinServer");
static_assert(sizeof(ServerBrowserWindow_C_RequestJoinServer) == 0x000008, "Wrong size on ServerBrowserWindow_C_RequestJoinServer");
static_assert(offsetof(ServerBrowserWindow_C_RequestJoinServer, SessionInfo) == 0x000000, "Member 'ServerBrowserWindow_C_RequestJoinServer::SessionInfo' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetLicensingNoticeVisibility
// 0x0007 (0x0007 - 0x0000)
struct ServerBrowserWindow_C_GetLicensingNoticeVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerLicensingNoticeNeeded_ReturnValue;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_GetLicensingNoticeVisibility) == 0x000001, "Wrong alignment on ServerBrowserWindow_C_GetLicensingNoticeVisibility");
static_assert(sizeof(ServerBrowserWindow_C_GetLicensingNoticeVisibility) == 0x000007, "Wrong size on ServerBrowserWindow_C_GetLicensingNoticeVisibility");
static_assert(offsetof(ServerBrowserWindow_C_GetLicensingNoticeVisibility, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_GetLicensingNoticeVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetLicensingNoticeVisibility, Temp_bool_Variable) == 0x000001, "Member 'ServerBrowserWindow_C_GetLicensingNoticeVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetLicensingNoticeVisibility, Temp_byte_Variable) == 0x000002, "Member 'ServerBrowserWindow_C_GetLicensingNoticeVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetLicensingNoticeVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'ServerBrowserWindow_C_GetLicensingNoticeVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetLicensingNoticeVisibility, CallFunc_ServerLicensingNoticeNeeded_ReturnValue) == 0x000004, "Member 'ServerBrowserWindow_C_GetLicensingNoticeVisibility::CallFunc_ServerLicensingNoticeNeeded_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetLicensingNoticeVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'ServerBrowserWindow_C_GetLicensingNoticeVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetLicensingNoticeVisibility, K2Node_Select_Default) == 0x000006, "Member 'ServerBrowserWindow_C_GetLicensingNoticeVisibility::K2Node_Select_Default' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.AddNewServerWidget
// 0x0180 (0x0180 - 0x0000)
struct ServerBrowserWindow_C_AddNewServerWidget final
{
public:
	struct FBlueprintSessionResult                Result;                                            // 0x0000(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UServerListItem_C*                      Item;                                              // 0x0108(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       L_List_Item_Row;                                   // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UServerListItem_C*                      L_List_Item;                                       // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ServerAlreadyOnTheList;                            // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E3[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Should_filter_server_Hide;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E4[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQLicensedServerManager*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServerPromoted_ReturnValue;             // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E5[0x5];                                     // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridPanel*                      K2Node_Select_Default;                             // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E6[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQLicensedServerManager*               CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UServerListItem_C*                      CallFunc_Create_ReturnValue;                       // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServerPromoted_ReturnValue_1;           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_AddNewServerWidget) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_AddNewServerWidget");
static_assert(sizeof(ServerBrowserWindow_C_AddNewServerWidget) == 0x000180, "Wrong size on ServerBrowserWindow_C_AddNewServerWidget");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, Result) == 0x000000, "Member 'ServerBrowserWindow_C_AddNewServerWidget::Result' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, Item) == 0x000108, "Member 'ServerBrowserWindow_C_AddNewServerWidget::Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, L_List_Item_Row) == 0x000110, "Member 'ServerBrowserWindow_C_AddNewServerWidget::L_List_Item_Row' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, L_List_Item) == 0x000118, "Member 'ServerBrowserWindow_C_AddNewServerWidget::L_List_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, ServerAlreadyOnTheList) == 0x000120, "Member 'ServerBrowserWindow_C_AddNewServerWidget::ServerAlreadyOnTheList' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, Temp_int_Variable) == 0x000124, "Member 'ServerBrowserWindow_C_AddNewServerWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_Should_filter_server_Hide) == 0x000128, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_Should_filter_server_Hide' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000130, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, Temp_bool_Variable) == 0x000140, "Member 'ServerBrowserWindow_C_AddNewServerWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_IsServerPromoted_ReturnValue) == 0x000141, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_IsServerPromoted_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000142, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, K2Node_Select_Default) == 0x000148, "Member 'ServerBrowserWindow_C_AddNewServerWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000150, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000160, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000168, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_Create_ReturnValue) == 0x000170, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_IsServerPromoted_ReturnValue_1) == 0x000178, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_IsServerPromoted_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_AddNewServerWidget, CallFunc_BooleanAND_ReturnValue) == 0x000179, "Member 'ServerBrowserWindow_C_AddNewServerWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.UpdateSession
// 0x0138 (0x0138 - 0x0000)
struct ServerBrowserWindow_C_UpdateSession final
{
public:
	struct FBlueprintSessionResult                Result;                                            // 0x0000(0x0108)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class USQServerListItemWidget*>        L_Update_List;                                     // 0x0108(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38E7[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQServerListItemWidget*                CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSameServer_ReturnValue;                 // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_UpdateSession) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_UpdateSession");
static_assert(sizeof(ServerBrowserWindow_C_UpdateSession) == 0x000138, "Wrong size on ServerBrowserWindow_C_UpdateSession");
static_assert(offsetof(ServerBrowserWindow_C_UpdateSession, Result) == 0x000000, "Member 'ServerBrowserWindow_C_UpdateSession::Result' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_UpdateSession, L_Update_List) == 0x000108, "Member 'ServerBrowserWindow_C_UpdateSession::L_Update_List' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_UpdateSession, Temp_int_Array_Index_Variable) == 0x000118, "Member 'ServerBrowserWindow_C_UpdateSession::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_UpdateSession, Temp_int_Loop_Counter_Variable) == 0x00011C, "Member 'ServerBrowserWindow_C_UpdateSession::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_UpdateSession, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'ServerBrowserWindow_C_UpdateSession::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_UpdateSession, CallFunc_Array_Get_Item) == 0x000128, "Member 'ServerBrowserWindow_C_UpdateSession::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_UpdateSession, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'ServerBrowserWindow_C_UpdateSession::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_UpdateSession, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'ServerBrowserWindow_C_UpdateSession::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_UpdateSession, CallFunc_IsSameServer_ReturnValue) == 0x000135, "Member 'ServerBrowserWindow_C_UpdateSession::CallFunc_IsSameServer_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetServerIndex
// 0x0058 (0x0058 - 0x0000)
struct ServerBrowserWindow_C_GetServerIndex final
{
public:
	int32                                         PingMs;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundIndex;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E8[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnIndex;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UServerListItem_C*                      K2Node_DynamicCast_AsServer_List_Item;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E9[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_SlotAsUniformGridSlot_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EA[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_GetServerIndex) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_GetServerIndex");
static_assert(sizeof(ServerBrowserWindow_C_GetServerIndex) == 0x000058, "Wrong size on ServerBrowserWindow_C_GetServerIndex");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, PingMs) == 0x000000, "Member 'ServerBrowserWindow_C_GetServerIndex::PingMs' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, Param_Index) == 0x000004, "Member 'ServerBrowserWindow_C_GetServerIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, FoundIndex) == 0x000008, "Member 'ServerBrowserWindow_C_GetServerIndex::FoundIndex' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, ReturnIndex) == 0x00000C, "Member 'ServerBrowserWindow_C_GetServerIndex::ReturnIndex' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'ServerBrowserWindow_C_GetServerIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'ServerBrowserWindow_C_GetServerIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ServerBrowserWindow_C_GetServerIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'ServerBrowserWindow_C_GetServerIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'ServerBrowserWindow_C_GetServerIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, K2Node_DynamicCast_AsServer_List_Item) == 0x000028, "Member 'ServerBrowserWindow_C_GetServerIndex::K2Node_DynamicCast_AsServer_List_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ServerBrowserWindow_C_GetServerIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, CallFunc_SlotAsUniformGridSlot_ReturnValue) == 0x000038, "Member 'ServerBrowserWindow_C_GetServerIndex::CallFunc_SlotAsUniformGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'ServerBrowserWindow_C_GetServerIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'ServerBrowserWindow_C_GetServerIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'ServerBrowserWindow_C_GetServerIndex::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'ServerBrowserWindow_C_GetServerIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetServerIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'ServerBrowserWindow_C_GetServerIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetCheckedShowDiffServers
// 0x0018 (0x0018 - 0x0000)
struct ServerBrowserWindow_C_GetCheckedShowDiffServers final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38EB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_GetCheckedShowDiffServers) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_GetCheckedShowDiffServers");
static_assert(sizeof(ServerBrowserWindow_C_GetCheckedShowDiffServers) == 0x000018, "Wrong size on ServerBrowserWindow_C_GetCheckedShowDiffServers");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowDiffServers, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_GetCheckedShowDiffServers::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowDiffServers, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000008, "Member 'ServerBrowserWindow_C_GetCheckedShowDiffServers::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowDiffServers, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ServerBrowserWindow_C_GetCheckedShowDiffServers::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetCheckedShowEmptyServers
// 0x0018 (0x0018 - 0x0000)
struct ServerBrowserWindow_C_GetCheckedShowEmptyServers final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38EC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_GetCheckedShowEmptyServers) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_GetCheckedShowEmptyServers");
static_assert(sizeof(ServerBrowserWindow_C_GetCheckedShowEmptyServers) == 0x000018, "Wrong size on ServerBrowserWindow_C_GetCheckedShowEmptyServers");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowEmptyServers, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_GetCheckedShowEmptyServers::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowEmptyServers, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000008, "Member 'ServerBrowserWindow_C_GetCheckedShowEmptyServers::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowEmptyServers, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ServerBrowserWindow_C_GetCheckedShowEmptyServers::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.StartQueue
// 0x0030 (0x0030 - 0x0000)
struct ServerBrowserWindow_C_StartQueue final
{
public:
	TDelegate<void(class ASQJoinBeaconClient* NewJoinBeaconClient)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        K2Node_DynamicCast_AsSQGame_Instance;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanQueueForServer_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38ED[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQJoinBeaconClient*                    CallFunc_QueueForServer_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_StartQueue) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_StartQueue");
static_assert(sizeof(ServerBrowserWindow_C_StartQueue) == 0x000030, "Wrong size on ServerBrowserWindow_C_StartQueue");
static_assert(offsetof(ServerBrowserWindow_C_StartQueue, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ServerBrowserWindow_C_StartQueue::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_StartQueue, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'ServerBrowserWindow_C_StartQueue::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_StartQueue, K2Node_DynamicCast_AsSQGame_Instance) == 0x000018, "Member 'ServerBrowserWindow_C_StartQueue::K2Node_DynamicCast_AsSQGame_Instance' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_StartQueue, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ServerBrowserWindow_C_StartQueue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_StartQueue, CallFunc_CanQueueForServer_ReturnValue) == 0x000021, "Member 'ServerBrowserWindow_C_StartQueue::CallFunc_CanQueueForServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_StartQueue, CallFunc_QueueForServer_ReturnValue) == 0x000028, "Member 'ServerBrowserWindow_C_StartQueue::CallFunc_QueueForServer_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetQueueServerButtonIsEnabled
// 0x0002 (0x0002 - 0x0000)
struct ServerBrowserWindow_C_GetQueueServerButtonIsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsQueueEnabled_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_GetQueueServerButtonIsEnabled) == 0x000001, "Wrong alignment on ServerBrowserWindow_C_GetQueueServerButtonIsEnabled");
static_assert(sizeof(ServerBrowserWindow_C_GetQueueServerButtonIsEnabled) == 0x000002, "Wrong size on ServerBrowserWindow_C_GetQueueServerButtonIsEnabled");
static_assert(offsetof(ServerBrowserWindow_C_GetQueueServerButtonIsEnabled, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_GetQueueServerButtonIsEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetQueueServerButtonIsEnabled, CallFunc_IsQueueEnabled_ReturnValue) == 0x000001, "Member 'ServerBrowserWindow_C_GetQueueServerButtonIsEnabled::CallFunc_IsQueueEnabled_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetQueueServerButtonVisibility
// 0x0002 (0x0002 - 0x0000)
struct ServerBrowserWindow_C_GetQueueServerButtonVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsQueueEnabled_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_GetQueueServerButtonVisibility) == 0x000001, "Wrong alignment on ServerBrowserWindow_C_GetQueueServerButtonVisibility");
static_assert(sizeof(ServerBrowserWindow_C_GetQueueServerButtonVisibility) == 0x000002, "Wrong size on ServerBrowserWindow_C_GetQueueServerButtonVisibility");
static_assert(offsetof(ServerBrowserWindow_C_GetQueueServerButtonVisibility, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_GetQueueServerButtonVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetQueueServerButtonVisibility, CallFunc_IsQueueEnabled_ReturnValue) == 0x000001, "Member 'ServerBrowserWindow_C_GetQueueServerButtonVisibility::CallFunc_IsQueueEnabled_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetCheckedShowQueuesSeparately
// 0x0018 (0x0018 - 0x0000)
struct ServerBrowserWindow_C_GetCheckedShowQueuesSeparately final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38EE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_GetCheckedShowQueuesSeparately) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_GetCheckedShowQueuesSeparately");
static_assert(sizeof(ServerBrowserWindow_C_GetCheckedShowQueuesSeparately) == 0x000018, "Wrong size on ServerBrowserWindow_C_GetCheckedShowQueuesSeparately");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowQueuesSeparately, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_GetCheckedShowQueuesSeparately::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowQueuesSeparately, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000008, "Member 'ServerBrowserWindow_C_GetCheckedShowQueuesSeparately::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowQueuesSeparately, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ServerBrowserWindow_C_GetCheckedShowQueuesSeparately::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetCheckedShowReservedSlots
// 0x0018 (0x0018 - 0x0000)
struct ServerBrowserWindow_C_GetCheckedShowReservedSlots final
{
public:
	ECheckBoxState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38EF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_GetCheckedShowReservedSlots) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_GetCheckedShowReservedSlots");
static_assert(sizeof(ServerBrowserWindow_C_GetCheckedShowReservedSlots) == 0x000018, "Wrong size on ServerBrowserWindow_C_GetCheckedShowReservedSlots");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowReservedSlots, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_GetCheckedShowReservedSlots::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowReservedSlots, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000008, "Member 'ServerBrowserWindow_C_GetCheckedShowReservedSlots::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCheckedShowReservedSlots, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ServerBrowserWindow_C_GetCheckedShowReservedSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.Sort List
// 0x0050 (0x0050 - 0x0000)
struct ServerBrowserWindow_C_Sort_List final
{
public:
	bool                                          Is_Ascending;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SortType                                    Sort_Type;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F0[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SortType                                    Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F1[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USortableColumnButton_C*>        K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F2[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USortableColumnButton_C*                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_Sort_List) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_Sort_List");
static_assert(sizeof(ServerBrowserWindow_C_Sort_List) == 0x000050, "Wrong size on ServerBrowserWindow_C_Sort_List");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, Is_Ascending) == 0x000000, "Member 'ServerBrowserWindow_C_Sort_List::Is_Ascending' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, Sort_Type) == 0x000001, "Member 'ServerBrowserWindow_C_Sort_List::Sort_Type' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, Temp_object_Variable) == 0x000008, "Member 'ServerBrowserWindow_C_Sort_List::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ServerBrowserWindow_C_Sort_List::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ServerBrowserWindow_C_Sort_List::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ServerBrowserWindow_C_Sort_List::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, Temp_byte_Variable) == 0x00001C, "Member 'ServerBrowserWindow_C_Sort_List::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, K2Node_SwitchEnum_CmpSuccess) == 0x00001D, "Member 'ServerBrowserWindow_C_Sort_List::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, K2Node_Select_Default) == 0x000020, "Member 'ServerBrowserWindow_C_Sort_List::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, K2Node_MakeArray_Array) == 0x000028, "Member 'ServerBrowserWindow_C_Sort_List::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'ServerBrowserWindow_C_Sort_List::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, CallFunc_Array_Get_Item) == 0x000040, "Member 'ServerBrowserWindow_C_Sort_List::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'ServerBrowserWindow_C_Sort_List::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000049, "Member 'ServerBrowserWindow_C_Sort_List::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.Sort List by Health Status
// 0x0088 (0x0088 - 0x0000)
struct ServerBrowserWindow_C_Sort_List_by_Health_Status final
{
public:
	bool                                          Ascending;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USQServerListItemWidget*>        No_Health;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class USQServerListItemWidget*>        High_Health_List;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class USQServerListItemWidget*>        Mid_Health_List;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class USQServerListItemWidget*>        Low_Health_List;                                   // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F4[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQServerListItemWidget*                CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USQServerListItemWidget*>        K2Node_Select_Default;                             // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_Sort_List_by_Health_Status) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_Sort_List_by_Health_Status");
static_assert(sizeof(ServerBrowserWindow_C_Sort_List_by_Health_Status) == 0x000088, "Wrong size on ServerBrowserWindow_C_Sort_List_by_Health_Status");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, Ascending) == 0x000000, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::Ascending' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, No_Health) == 0x000008, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::No_Health' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, High_Health_List) == 0x000018, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::High_Health_List' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, Mid_Health_List) == 0x000028, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::Mid_Health_List' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, Low_Health_List) == 0x000038, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::Low_Health_List' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, Temp_int_Variable) == 0x000048, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, CallFunc_Array_Get_Item) == 0x000060, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, K2Node_Select_Default) == 0x000070, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Sort_List_by_Health_Status, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'ServerBrowserWindow_C_Sort_List_by_Health_Status::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.Check Mods
// 0x0050 (0x0050 - 0x0000)
struct ServerBrowserWindow_C_Check_Mods final
{
public:
	class USQSessionInfo*                         SessionInfo;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Sync;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSQModLoadProgress>             CallFunc_CheckMissingMods_ReturnValue;             // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F7[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F8[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_38F9[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ModDownloadWindow_C*                 CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_Check_Mods) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_Check_Mods");
static_assert(sizeof(ServerBrowserWindow_C_Check_Mods) == 0x000050, "Wrong size on ServerBrowserWindow_C_Check_Mods");
static_assert(offsetof(ServerBrowserWindow_C_Check_Mods, SessionInfo) == 0x000000, "Member 'ServerBrowserWindow_C_Check_Mods::SessionInfo' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Check_Mods, In_Sync) == 0x000008, "Member 'ServerBrowserWindow_C_Check_Mods::In_Sync' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Check_Mods, CallFunc_CheckMissingMods_ReturnValue) == 0x000010, "Member 'ServerBrowserWindow_C_Check_Mods::CallFunc_CheckMissingMods_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Check_Mods, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ServerBrowserWindow_C_Check_Mods::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Check_Mods, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'ServerBrowserWindow_C_Check_Mods::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Check_Mods, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'ServerBrowserWindow_C_Check_Mods::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Check_Mods, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'ServerBrowserWindow_C_Check_Mods::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Check_Mods, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'ServerBrowserWindow_C_Check_Mods::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Check_Mods, CallFunc_Create_ReturnValue) == 0x000048, "Member 'ServerBrowserWindow_C_Check_Mods::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.Add unique sessions
// 0x0138 (0x0138 - 0x0000)
struct ServerBrowserWindow_C_Add_unique_sessions final
{
public:
	TArray<struct FBlueprintSessionResult>        Param_Results;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FA[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item;                           // 0x0020(0x0108)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FB[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_Add_unique_sessions) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_Add_unique_sessions");
static_assert(sizeof(ServerBrowserWindow_C_Add_unique_sessions) == 0x000138, "Wrong size on ServerBrowserWindow_C_Add_unique_sessions");
static_assert(offsetof(ServerBrowserWindow_C_Add_unique_sessions, Param_Results) == 0x000000, "Member 'ServerBrowserWindow_C_Add_unique_sessions::Param_Results' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Add_unique_sessions, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'ServerBrowserWindow_C_Add_unique_sessions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Add_unique_sessions, Temp_int_Array_Index_Variable) == 0x000014, "Member 'ServerBrowserWindow_C_Add_unique_sessions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Add_unique_sessions, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'ServerBrowserWindow_C_Add_unique_sessions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Add_unique_sessions, CallFunc_Array_Get_Item) == 0x000020, "Member 'ServerBrowserWindow_C_Add_unique_sessions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Add_unique_sessions, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'ServerBrowserWindow_C_Add_unique_sessions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Add_unique_sessions, CallFunc_Add_IntInt_ReturnValue) == 0x00012C, "Member 'ServerBrowserWindow_C_Add_unique_sessions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Add_unique_sessions, CallFunc_Array_AddUnique_ReturnValue) == 0x000130, "Member 'ServerBrowserWindow_C_Add_unique_sessions::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.Organise List Rows
// 0x0058 (0x0058 - 0x0000)
struct ServerBrowserWindow_C_Organise_List_Rows final
{
public:
	int32                                         L_Promoted_Index;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Normal_Index;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQLicensedServerManager*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FD[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQServerListItemWidget*                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServerPromoted_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FE[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       K2Node_DynamicCast_AsUniform_Grid_Slot;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FF[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_Organise_List_Rows) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_Organise_List_Rows");
static_assert(sizeof(ServerBrowserWindow_C_Organise_List_Rows) == 0x000058, "Wrong size on ServerBrowserWindow_C_Organise_List_Rows");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, L_Promoted_Index) == 0x000000, "Member 'ServerBrowserWindow_C_Organise_List_Rows::L_Promoted_Index' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, L_Normal_Index) == 0x000004, "Member 'ServerBrowserWindow_C_Organise_List_Rows::L_Normal_Index' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, Temp_int_Variable) == 0x000008, "Member 'ServerBrowserWindow_C_Organise_List_Rows::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, Temp_int_Variable_1) == 0x00000C, "Member 'ServerBrowserWindow_C_Organise_List_Rows::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'ServerBrowserWindow_C_Organise_List_Rows::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'ServerBrowserWindow_C_Organise_List_Rows::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ServerBrowserWindow_C_Organise_List_Rows::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'ServerBrowserWindow_C_Organise_List_Rows::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, Temp_bool_Variable) == 0x000028, "Member 'ServerBrowserWindow_C_Organise_List_Rows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'ServerBrowserWindow_C_Organise_List_Rows::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'ServerBrowserWindow_C_Organise_List_Rows::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'ServerBrowserWindow_C_Organise_List_Rows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, CallFunc_Array_Get_Item) == 0x000038, "Member 'ServerBrowserWindow_C_Organise_List_Rows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'ServerBrowserWindow_C_Organise_List_Rows::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, CallFunc_IsServerPromoted_ReturnValue) == 0x000041, "Member 'ServerBrowserWindow_C_Organise_List_Rows::CallFunc_IsServerPromoted_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, K2Node_DynamicCast_AsUniform_Grid_Slot) == 0x000048, "Member 'ServerBrowserWindow_C_Organise_List_Rows::K2Node_DynamicCast_AsUniform_Grid_Slot' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'ServerBrowserWindow_C_Organise_List_Rows::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Organise_List_Rows, K2Node_Select_Default) == 0x000054, "Member 'ServerBrowserWindow_C_Organise_List_Rows::K2Node_Select_Default' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.Save Last Sort Type
// 0x0018 (0x0018 - 0x0000)
struct ServerBrowserWindow_C_Save_Last_Sort_Type final
{
public:
	E_SortType                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastAscendingSortType;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3900[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveData_UI_C*                         Save;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_Save_Last_Sort_Type) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_Save_Last_Sort_Type");
static_assert(sizeof(ServerBrowserWindow_C_Save_Last_Sort_Type) == 0x000018, "Wrong size on ServerBrowserWindow_C_Save_Last_Sort_Type");
static_assert(offsetof(ServerBrowserWindow_C_Save_Last_Sort_Type, Type) == 0x000000, "Member 'ServerBrowserWindow_C_Save_Last_Sort_Type::Type' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Save_Last_Sort_Type, LastAscendingSortType) == 0x000001, "Member 'ServerBrowserWindow_C_Save_Last_Sort_Type::LastAscendingSortType' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Save_Last_Sort_Type, Save) == 0x000008, "Member 'ServerBrowserWindow_C_Save_Last_Sort_Type::Save' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Save_Last_Sort_Type, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000010, "Member 'ServerBrowserWindow_C_Save_Last_Sort_Type::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.Should filter server
// 0x0138 (0x0138 - 0x0000)
struct ServerBrowserWindow_C_Should_filter_server final
{
public:
	struct FBlueprintSessionResult                Session;                                           // 0x0000(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Hide;                                              // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3901[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLicensedServer_ReturnValue;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3902[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3903[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQServerListItemWidget*                CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSameServer_ReturnValue;                 // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_Should_filter_server) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_Should_filter_server");
static_assert(sizeof(ServerBrowserWindow_C_Should_filter_server) == 0x000138, "Wrong size on ServerBrowserWindow_C_Should_filter_server");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, Session) == 0x000000, "Member 'ServerBrowserWindow_C_Should_filter_server::Session' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, Hide) == 0x000108, "Member 'ServerBrowserWindow_C_Should_filter_server::Hide' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, Temp_int_Array_Index_Variable) == 0x00010C, "Member 'ServerBrowserWindow_C_Should_filter_server::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, CallFunc_GetOwningPlayer_ReturnValue) == 0x000110, "Member 'ServerBrowserWindow_C_Should_filter_server::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, CallFunc_GetLicensedServer_ReturnValue) == 0x000118, "Member 'ServerBrowserWindow_C_Should_filter_server::CallFunc_GetLicensedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000119, "Member 'ServerBrowserWindow_C_Should_filter_server::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, Temp_int_Loop_Counter_Variable) == 0x00011C, "Member 'ServerBrowserWindow_C_Should_filter_server::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'ServerBrowserWindow_C_Should_filter_server::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, CallFunc_Array_Get_Item) == 0x000128, "Member 'ServerBrowserWindow_C_Should_filter_server::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'ServerBrowserWindow_C_Should_filter_server::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'ServerBrowserWindow_C_Should_filter_server::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Should_filter_server, CallFunc_IsSameServer_ReturnValue) == 0x000135, "Member 'ServerBrowserWindow_C_Should_filter_server::CallFunc_IsSameServer_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.Set Promoted Box Visibility
// 0x0005 (0x0005 - 0x0000)
struct ServerBrowserWindow_C_Set_Promoted_Box_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_Set_Promoted_Box_Visibility) == 0x000001, "Wrong alignment on ServerBrowserWindow_C_Set_Promoted_Box_Visibility");
static_assert(sizeof(ServerBrowserWindow_C_Set_Promoted_Box_Visibility) == 0x000005, "Wrong size on ServerBrowserWindow_C_Set_Promoted_Box_Visibility");
static_assert(offsetof(ServerBrowserWindow_C_Set_Promoted_Box_Visibility, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_Set_Promoted_Box_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Set_Promoted_Box_Visibility, Temp_bool_Variable) == 0x000001, "Member 'ServerBrowserWindow_C_Set_Promoted_Box_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Set_Promoted_Box_Visibility, Temp_byte_Variable) == 0x000002, "Member 'ServerBrowserWindow_C_Set_Promoted_Box_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Set_Promoted_Box_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'ServerBrowserWindow_C_Set_Promoted_Box_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_Set_Promoted_Box_Visibility, K2Node_Select_Default) == 0x000004, "Member 'ServerBrowserWindow_C_Set_Promoted_Box_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.OnConnectionAccepted
// 0x0020 (0x0020 - 0x0000)
struct ServerBrowserWindow_C_OnConnectionAccepted final
{
public:
	class UMainMenuScreen_C*                      CallFunc_GetMainMenuRef_REF_MainMenu;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASQJoinBeaconClient* NewJoinBeaconClient)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class USQGameInstance*                        CallFunc_GetSquadGameInstance_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_OnConnectionAccepted) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_OnConnectionAccepted");
static_assert(sizeof(ServerBrowserWindow_C_OnConnectionAccepted) == 0x000020, "Wrong size on ServerBrowserWindow_C_OnConnectionAccepted");
static_assert(offsetof(ServerBrowserWindow_C_OnConnectionAccepted, CallFunc_GetMainMenuRef_REF_MainMenu) == 0x000000, "Member 'ServerBrowserWindow_C_OnConnectionAccepted::CallFunc_GetMainMenuRef_REF_MainMenu' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_OnConnectionAccepted, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ServerBrowserWindow_C_OnConnectionAccepted::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_OnConnectionAccepted, CallFunc_GetSquadGameInstance_ReturnValue) == 0x000018, "Member 'ServerBrowserWindow_C_OnConnectionAccepted::CallFunc_GetSquadGameInstance_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.SetSelectedServer
// 0x0010 (0x0010 - 0x0000)
struct ServerBrowserWindow_C_SetSelectedServer final
{
public:
	class UServerListItem_C*                      Param_SelectedServerItem;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_SetSelectedServer) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_SetSelectedServer");
static_assert(sizeof(ServerBrowserWindow_C_SetSelectedServer) == 0x000010, "Wrong size on ServerBrowserWindow_C_SetSelectedServer");
static_assert(offsetof(ServerBrowserWindow_C_SetSelectedServer, Param_SelectedServerItem) == 0x000000, "Member 'ServerBrowserWindow_C_SetSelectedServer::Param_SelectedServerItem' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_SetSelectedServer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ServerBrowserWindow_C_SetSelectedServer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetMainMenuRef
// 0x0028 (0x0028 - 0x0000)
struct ServerBrowserWindow_C_GetMainMenuRef final
{
public:
	class UMainMenuScreen_C*                      Param_REF_MainMenu;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMainMenuScreen_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMainMenuScreen_C*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_GetMainMenuRef) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_GetMainMenuRef");
static_assert(sizeof(ServerBrowserWindow_C_GetMainMenuRef) == 0x000028, "Wrong size on ServerBrowserWindow_C_GetMainMenuRef");
static_assert(offsetof(ServerBrowserWindow_C_GetMainMenuRef, Param_REF_MainMenu) == 0x000000, "Member 'ServerBrowserWindow_C_GetMainMenuRef::Param_REF_MainMenu' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetMainMenuRef, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'ServerBrowserWindow_C_GetMainMenuRef::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetMainMenuRef, CallFunc_Array_Get_Item) == 0x000018, "Member 'ServerBrowserWindow_C_GetMainMenuRef::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetMainMenuRef, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ServerBrowserWindow_C_GetMainMenuRef::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.SentAnaliticsSucc
// 0x0020 (0x0020 - 0x0000)
struct ServerBrowserWindow_C_SentAnaliticsSucc final
{
public:
	struct FClientWriteEventResponse              Result;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                CustomData;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_SentAnaliticsSucc) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_SentAnaliticsSucc");
static_assert(sizeof(ServerBrowserWindow_C_SentAnaliticsSucc) == 0x000020, "Wrong size on ServerBrowserWindow_C_SentAnaliticsSucc");
static_assert(offsetof(ServerBrowserWindow_C_SentAnaliticsSucc, Result) == 0x000000, "Member 'ServerBrowserWindow_C_SentAnaliticsSucc::Result' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_SentAnaliticsSucc, CustomData) == 0x000018, "Member 'ServerBrowserWindow_C_SentAnaliticsSucc::CustomData' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.SentAnaliticsFailed
// 0x0040 (0x0040 - 0x0000)
struct ServerBrowserWindow_C_SentAnaliticsFailed final
{
public:
	struct FPlayFabError                          Error;                                             // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                CustomData;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_SentAnaliticsFailed) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_SentAnaliticsFailed");
static_assert(sizeof(ServerBrowserWindow_C_SentAnaliticsFailed) == 0x000040, "Wrong size on ServerBrowserWindow_C_SentAnaliticsFailed");
static_assert(offsetof(ServerBrowserWindow_C_SentAnaliticsFailed, Error) == 0x000000, "Member 'ServerBrowserWindow_C_SentAnaliticsFailed::Error' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_SentAnaliticsFailed, CustomData) == 0x000038, "Member 'ServerBrowserWindow_C_SentAnaliticsFailed::CustomData' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetColorAndOpacity_0
// 0x0050 (0x0050 - 0x0000)
struct ServerBrowserWindow_C_GetColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3904[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetUIColors_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetUIColors_ReturnValue_1;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_GetColorAndOpacity_0) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_GetColorAndOpacity_0");
static_assert(sizeof(ServerBrowserWindow_C_GetColorAndOpacity_0) == 0x000050, "Wrong size on ServerBrowserWindow_C_GetColorAndOpacity_0");
static_assert(offsetof(ServerBrowserWindow_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetColorAndOpacity_0, Temp_bool_Variable) == 0x000010, "Member 'ServerBrowserWindow_C_GetColorAndOpacity_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetColorAndOpacity_0, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x000018, "Member 'ServerBrowserWindow_C_GetColorAndOpacity_0::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetColorAndOpacity_0, CallFunc_GetUIColors_ReturnValue) == 0x000020, "Member 'ServerBrowserWindow_C_GetColorAndOpacity_0::CallFunc_GetUIColors_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetColorAndOpacity_0, CallFunc_GetUIColors_ReturnValue_1) == 0x000030, "Member 'ServerBrowserWindow_C_GetColorAndOpacity_0::CallFunc_GetUIColors_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetColorAndOpacity_0, K2Node_Select_Default) == 0x000040, "Member 'ServerBrowserWindow_C_GetColorAndOpacity_0::K2Node_Select_Default' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.GetCurrentSearchString
// 0x0038 (0x0038 - 0x0000)
struct ServerBrowserWindow_C_GetCurrentSearchString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerBrowserWindow_C_GetCurrentSearchString) == 0x000008, "Wrong alignment on ServerBrowserWindow_C_GetCurrentSearchString");
static_assert(sizeof(ServerBrowserWindow_C_GetCurrentSearchString) == 0x000038, "Wrong size on ServerBrowserWindow_C_GetCurrentSearchString");
static_assert(offsetof(ServerBrowserWindow_C_GetCurrentSearchString, ReturnValue) == 0x000000, "Member 'ServerBrowserWindow_C_GetCurrentSearchString::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCurrentSearchString, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'ServerBrowserWindow_C_GetCurrentSearchString::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_GetCurrentSearchString, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'ServerBrowserWindow_C_GetCurrentSearchString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function ServerBrowserWindow.ServerBrowserWindow_C.ShouldApplyFilters
// 0x0003 (0x0003 - 0x0000)
struct ServerBrowserWindow_C_ShouldApplyFilters final
{
public:
	bool                                          Apply;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerBrowserWindow_C_ShouldApplyFilters) == 0x000001, "Wrong alignment on ServerBrowserWindow_C_ShouldApplyFilters");
static_assert(sizeof(ServerBrowserWindow_C_ShouldApplyFilters) == 0x000003, "Wrong size on ServerBrowserWindow_C_ShouldApplyFilters");
static_assert(offsetof(ServerBrowserWindow_C_ShouldApplyFilters, Apply) == 0x000000, "Member 'ServerBrowserWindow_C_ShouldApplyFilters::Apply' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ShouldApplyFilters, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'ServerBrowserWindow_C_ShouldApplyFilters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerBrowserWindow_C_ShouldApplyFilters, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ServerBrowserWindow_C_ShouldApplyFilters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}


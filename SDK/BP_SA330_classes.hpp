#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SA330

#include "Basic.hpp"

#include "BP_Generic_Helicopter_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SA330.BP_SA330_C
// 0x0130 (0x0F70 - 0x0E40)
class ABP_SA330_C final : public ABP_Generic_Helicopter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_SA330_C;                         // 0x0E40(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USQVehicleExitPointComponent*           SQVehicleExitRearLeft1;                            // 0x0E48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleExitPointComponent*           SQVehicleExitRearRight1;                           // 0x0E50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Engine_Stats_Plane;                                // 0x0E58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Map_Plane;                                         // 0x0E60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Unused_Plane_1;                                    // 0x0E68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Direction_Plane;                                   // 0x0E70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Camera_Plane;                                      // 0x0E78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Unused_Plane_3;                                    // 0x0E80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Compass_Plane;                                     // 0x0E88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Copilot_Plane;                                     // 0x0E90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Main_Plane;                                        // 0x0E98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleExitPointComponent*           SQVehicleExitRearLeft;                             // 0x0EA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   NoPenetrationCol;                                  // 0x0EA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleResourceWeaponInventoryComponent* SQVehicleResourceWeaponInventory;                  // 0x0EB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SupplyCrate;                                       // 0x0EB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQVehicleExitPointComponent*           SQVehicleExitRearRight;                            // 0x0EC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       DirectionScreen;                                   // 0x0EC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       ForwardCamera;                                     // 0x0ED0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight_0;                                      // 0x0ED8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       DirectionDisplay;                                  // 0x0EE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight3_0;                                     // 0x0EE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight2_0;                                     // 0x0EF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1_0;                                     // 0x0EF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       EngineStats;                                       // 0x0F00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Compass;                                           // 0x0F08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       MapDisplay;                                        // 0x0F10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       CopilotDisplay;                                    // 0x0F18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       MainDisplay;                                       // 0x0F20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_0_LightIntensity_02DC87B348BEE405830D6E99261A37C9; // 0x0F28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1_0__Direction_02DC87B348BEE405830D6E99261A37C9; // 0x0F2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE4[0x3];                                     // 0x0F2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1_0;                                      // 0x0F30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_0_Progress_DB9B57134962039B111CA5A5ECA47F57; // 0x0F38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0_0__Direction_DB9B57134962039B111CA5A5ECA47F57; // 0x0F3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE5[0x3];                                     // 0x0F3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0_0;                                      // 0x0F40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReadyToFly;                                        // 0x0F48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FE6[0x7];                                     // 0x0F49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MI8_Mat;                                           // 0x0F50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActivationProgress;                                // 0x0F58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FE7[0x4];                                     // 0x0F5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              ScreenMat;                                         // 0x0F60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     VehicleMesh_Material;                              // 0x0F68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SA330(int32 EntryPoint);
	void Set_UI_Enabled(bool Enable_UI);
	void DeactivationSequence();
	void ActivationSequence();
	void ReceiveBeginPlay();
	void Timeline_1_0__UpdateFunc();
	void Timeline_1_0__FinishedFunc();
	void Timeline_0_0__UpdateFunc();
	void Timeline_0_0__FinishedFunc();
	void UserConstructionScript();
	void Get_UI_Tint(struct FLinearColor* Color);
	void Manage_Helicopter_Widgets(bool Enabled);
	void Set_Helicopter_Widgets_Visibility(ESlateVisibility InVisibility);
	void Set_Helicopter_Widget_Materials(bool* All_Valid_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SA330_C">();
	}
	static class ABP_SA330_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SA330_C>();
	}
};
static_assert(alignof(ABP_SA330_C) == 0x000010, "Wrong alignment on ABP_SA330_C");
static_assert(sizeof(ABP_SA330_C) == 0x000F70, "Wrong size on ABP_SA330_C");
static_assert(offsetof(ABP_SA330_C, UberGraphFrame_BP_SA330_C) == 0x000E40, "Member 'ABP_SA330_C::UberGraphFrame_BP_SA330_C' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, SQVehicleExitRearLeft1) == 0x000E48, "Member 'ABP_SA330_C::SQVehicleExitRearLeft1' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, SQVehicleExitRearRight1) == 0x000E50, "Member 'ABP_SA330_C::SQVehicleExitRearRight1' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Engine_Stats_Plane) == 0x000E58, "Member 'ABP_SA330_C::Engine_Stats_Plane' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Map_Plane) == 0x000E60, "Member 'ABP_SA330_C::Map_Plane' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Unused_Plane_1) == 0x000E68, "Member 'ABP_SA330_C::Unused_Plane_1' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Direction_Plane) == 0x000E70, "Member 'ABP_SA330_C::Direction_Plane' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Camera_Plane) == 0x000E78, "Member 'ABP_SA330_C::Camera_Plane' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Unused_Plane_3) == 0x000E80, "Member 'ABP_SA330_C::Unused_Plane_3' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Compass_Plane) == 0x000E88, "Member 'ABP_SA330_C::Compass_Plane' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Copilot_Plane) == 0x000E90, "Member 'ABP_SA330_C::Copilot_Plane' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Main_Plane) == 0x000E98, "Member 'ABP_SA330_C::Main_Plane' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, SQVehicleExitRearLeft) == 0x000EA0, "Member 'ABP_SA330_C::SQVehicleExitRearLeft' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, NoPenetrationCol) == 0x000EA8, "Member 'ABP_SA330_C::NoPenetrationCol' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, SQVehicleResourceWeaponInventory) == 0x000EB0, "Member 'ABP_SA330_C::SQVehicleResourceWeaponInventory' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, SupplyCrate) == 0x000EB8, "Member 'ABP_SA330_C::SupplyCrate' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, SQVehicleExitRearRight) == 0x000EC0, "Member 'ABP_SA330_C::SQVehicleExitRearRight' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, DirectionScreen) == 0x000EC8, "Member 'ABP_SA330_C::DirectionScreen' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, ForwardCamera) == 0x000ED0, "Member 'ABP_SA330_C::ForwardCamera' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, PointLight_0) == 0x000ED8, "Member 'ABP_SA330_C::PointLight_0' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, DirectionDisplay) == 0x000EE0, "Member 'ABP_SA330_C::DirectionDisplay' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, PointLight3_0) == 0x000EE8, "Member 'ABP_SA330_C::PointLight3_0' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, PointLight2_0) == 0x000EF0, "Member 'ABP_SA330_C::PointLight2_0' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, PointLight1_0) == 0x000EF8, "Member 'ABP_SA330_C::PointLight1_0' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, EngineStats) == 0x000F00, "Member 'ABP_SA330_C::EngineStats' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Compass) == 0x000F08, "Member 'ABP_SA330_C::Compass' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, MapDisplay) == 0x000F10, "Member 'ABP_SA330_C::MapDisplay' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, CopilotDisplay) == 0x000F18, "Member 'ABP_SA330_C::CopilotDisplay' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, MainDisplay) == 0x000F20, "Member 'ABP_SA330_C::MainDisplay' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Timeline_1_0_LightIntensity_02DC87B348BEE405830D6E99261A37C9) == 0x000F28, "Member 'ABP_SA330_C::Timeline_1_0_LightIntensity_02DC87B348BEE405830D6E99261A37C9' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Timeline_1_0__Direction_02DC87B348BEE405830D6E99261A37C9) == 0x000F2C, "Member 'ABP_SA330_C::Timeline_1_0__Direction_02DC87B348BEE405830D6E99261A37C9' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Timeline_1_0) == 0x000F30, "Member 'ABP_SA330_C::Timeline_1_0' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Timeline_0_0_Progress_DB9B57134962039B111CA5A5ECA47F57) == 0x000F38, "Member 'ABP_SA330_C::Timeline_0_0_Progress_DB9B57134962039B111CA5A5ECA47F57' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Timeline_0_0__Direction_DB9B57134962039B111CA5A5ECA47F57) == 0x000F3C, "Member 'ABP_SA330_C::Timeline_0_0__Direction_DB9B57134962039B111CA5A5ECA47F57' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, Timeline_0_0) == 0x000F40, "Member 'ABP_SA330_C::Timeline_0_0' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, ReadyToFly) == 0x000F48, "Member 'ABP_SA330_C::ReadyToFly' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, MI8_Mat) == 0x000F50, "Member 'ABP_SA330_C::MI8_Mat' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, ActivationProgress) == 0x000F58, "Member 'ABP_SA330_C::ActivationProgress' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, ScreenMat) == 0x000F60, "Member 'ABP_SA330_C::ScreenMat' has a wrong offset!");
static_assert(offsetof(ABP_SA330_C, VehicleMesh_Material) == 0x000F68, "Member 'ABP_SA330_C::VehicleMesh_Material' has a wrong offset!");

}


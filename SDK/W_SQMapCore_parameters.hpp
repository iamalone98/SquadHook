#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SQMapCore

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_SQMapCore.W_SQMapCore_C.Mouse Down__DelegateSignature
// 0x0080 (0x0080 - 0x0000)
struct W_SQMapCore_C_Mouse_Down__DelegateSignature final
{
public:
	struct FPointerEvent                          Mouse_Event;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector                                World_Location;                                    // 0x0070(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_Mouse_Down__DelegateSignature) == 0x000008, "Wrong alignment on W_SQMapCore_C_Mouse_Down__DelegateSignature");
static_assert(sizeof(W_SQMapCore_C_Mouse_Down__DelegateSignature) == 0x000080, "Wrong size on W_SQMapCore_C_Mouse_Down__DelegateSignature");
static_assert(offsetof(W_SQMapCore_C_Mouse_Down__DelegateSignature, Mouse_Event) == 0x000000, "Member 'W_SQMapCore_C_Mouse_Down__DelegateSignature::Mouse_Event' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Mouse_Down__DelegateSignature, World_Location) == 0x000070, "Member 'W_SQMapCore_C_Mouse_Down__DelegateSignature::World_Location' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.ExecuteUbergraph_W_SQMapCore
// 0x0128 (0x0128 - 0x0000)
struct W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0008(0x0070)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0078(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00BC(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48DA[0x1];                                     // 0x011F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore) == 0x000008, "Wrong alignment on W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore");
static_assert(sizeof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore) == 0x000128, "Wrong size on W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, EntryPoint) == 0x000000, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, K2Node_Event_MouseEvent) == 0x000008, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, K2Node_Event_MyGeometry) == 0x000078, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, K2Node_Event_InDeltaTime) == 0x0000B0, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0000B4, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000BC, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_MakeLiteralFloat_ReturnValue) == 0x0000F4, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_GetLocalSize_ReturnValue) == 0x0000F8, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000100, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_BreakVector2D_X) == 0x000108, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_BreakVector2D_Y) == 0x00010C, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_BreakVector2D_X_1) == 0x000110, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_BreakVector2D_Y_1) == 0x000114, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000118, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_Less_FloatFloat_ReturnValue) == 0x00011C, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00011D, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00011E, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000120, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000124, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_BooleanOR_ReturnValue) == 0x000125, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_BooleanOR_ReturnValue_1) == 0x000126, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore, CallFunc_BooleanOR_ReturnValue_2) == 0x000127, "Member 'W_SQMapCore_C_ExecuteUbergraph_W_SQMapCore::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_SQMapCore_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_Tick) == 0x000004, "Wrong alignment on W_SQMapCore_C_Tick");
static_assert(sizeof(W_SQMapCore_C_Tick) == 0x00003C, "Wrong size on W_SQMapCore_C_Tick");
static_assert(offsetof(W_SQMapCore_C_Tick, MyGeometry) == 0x000000, "Member 'W_SQMapCore_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Tick, InDeltaTime) == 0x000038, "Member 'W_SQMapCore_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct W_SQMapCore_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_SQMapCore_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_SQMapCore_C_OnMouseLeave");
static_assert(sizeof(W_SQMapCore_C_OnMouseLeave) == 0x000070, "Wrong size on W_SQMapCore_C_OnMouseLeave");
static_assert(offsetof(W_SQMapCore_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_SQMapCore_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Zoom
// 0x0024 (0x0024 - 0x0000)
struct W_SQMapCore_C_Zoom final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48DB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Amount;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUpdate;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48DC[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ZoomTargetLocation;                                // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindZoomLocation_OutScreenLocation;       // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_Zoom) == 0x000004, "Wrong alignment on W_SQMapCore_C_Zoom");
static_assert(sizeof(W_SQMapCore_C_Zoom) == 0x000024, "Wrong size on W_SQMapCore_C_Zoom");
static_assert(offsetof(W_SQMapCore_C_Zoom, Instant) == 0x000000, "Member 'W_SQMapCore_C_Zoom::Instant' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Zoom, Amount) == 0x000004, "Member 'W_SQMapCore_C_Zoom::Amount' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Zoom, IsUpdate) == 0x000008, "Member 'W_SQMapCore_C_Zoom::IsUpdate' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Zoom, ZoomTargetLocation) == 0x00000C, "Member 'W_SQMapCore_C_Zoom::ZoomTargetLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Zoom, CallFunc_FindZoomLocation_OutScreenLocation) == 0x000014, "Member 'W_SQMapCore_C_Zoom::CallFunc_FindZoomLocation_OutScreenLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Zoom, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'W_SQMapCore_C_Zoom::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Zoom, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'W_SQMapCore_C_Zoom::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Zoom, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'W_SQMapCore_C_Zoom::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.InitialiseMapTexture
// 0x0040 (0x0040 - 0x0000)
struct W_SQMapCore_C_InitialiseMapTexture final
{
public:
	TDelegate<void(class UTexture* Texture)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48DD[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWorldSettings*                         CallFunc_GetWorldSettings_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWorldSettings*                       K2Node_DynamicCast_AsSQWorld_Settings;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_InitialiseMapTexture) == 0x000008, "Wrong alignment on W_SQMapCore_C_InitialiseMapTexture");
static_assert(sizeof(W_SQMapCore_C_InitialiseMapTexture) == 0x000040, "Wrong size on W_SQMapCore_C_InitialiseMapTexture");
static_assert(offsetof(W_SQMapCore_C_InitialiseMapTexture, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_SQMapCore_C_InitialiseMapTexture::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitialiseMapTexture, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_SQMapCore_C_InitialiseMapTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitialiseMapTexture, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'W_SQMapCore_C_InitialiseMapTexture::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitialiseMapTexture, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'W_SQMapCore_C_InitialiseMapTexture::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitialiseMapTexture, CallFunc_GetWorldSettings_ReturnValue) == 0x000028, "Member 'W_SQMapCore_C_InitialiseMapTexture::CallFunc_GetWorldSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitialiseMapTexture, K2Node_DynamicCast_AsSQWorld_Settings) == 0x000030, "Member 'W_SQMapCore_C_InitialiseMapTexture::K2Node_DynamicCast_AsSQWorld_Settings' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitialiseMapTexture, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_SQMapCore_C_InitialiseMapTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.OnMouseButtonDown
// 0x0500 (0x0500 - 0x0000)
struct W_SQMapCore_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            Result;                                            // 0x0160(0x00B8)(Edit, BlueprintVisible)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0218(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48DE[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Mouse_Position_to_World_Location_ReturnValue; // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Place_Map_Menu_Valid;                 // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48DF[0x3];                                     // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E0[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x028E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x028F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E1[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0298(0x00B8)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0358(0x00B8)()
	TScriptInterface<class IBPI_PlayerController_C> K2Node_DynamicCast_AsBPI_Player_Controller;        // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_bCan_Place_Marker_Can_Place;              // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E2[0x6];                                     // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1; // 0x0428(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0440(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on W_SQMapCore_C_OnMouseButtonDown");
static_assert(sizeof(W_SQMapCore_C_OnMouseButtonDown) == 0x000500, "Wrong size on W_SQMapCore_C_OnMouseButtonDown");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'W_SQMapCore_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'W_SQMapCore_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'W_SQMapCore_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, Result) == 0x000160, "Member 'W_SQMapCore_C_OnMouseButtonDown::Result' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000218, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000230, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000234, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Mouse_Position_to_World_Location_ReturnValue) == 0x00023C, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Mouse_Position_to_World_Location_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x000248, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Can_Place_Map_Menu_Valid) == 0x000254, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Can_Place_Map_Menu_Valid' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1) == 0x000258, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000260, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_GetLocalSize_ReturnValue) == 0x000268, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_BreakVector2D_X) == 0x000270, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_BreakVector2D_Y) == 0x000274, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_BreakVector2D_X_1) == 0x000278, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_BreakVector2D_Y_1) == 0x00027C, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Less_FloatFloat_ReturnValue) == 0x000280, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000284, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000288, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00028C, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00028D, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00028E, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_BooleanOR_ReturnValue) == 0x00028F, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_BooleanOR_ReturnValue_1) == 0x000290, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_BooleanOR_ReturnValue_2) == 0x000291, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000298, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_GetOwningPlayer_ReturnValue) == 0x000350, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue_1) == 0x000358, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, K2Node_DynamicCast_AsBPI_Player_Controller) == 0x000410, "Member 'W_SQMapCore_C_OnMouseButtonDown::K2Node_DynamicCast_AsBPI_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, K2Node_DynamicCast_bSuccess) == 0x000420, "Member 'W_SQMapCore_C_OnMouseButtonDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_bCan_Place_Marker_Can_Place) == 0x000421, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_bCan_Place_Marker_Can_Place' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1) == 0x000428, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000440, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0004F8, "Member 'W_SQMapCore_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Hide SL Menu
// 0x00D0 (0x00D0 - 0x0000)
struct W_SQMapCore_C_Hide_SL_Menu final
{
public:
	bool                                          New_Visible;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              Visible_Geometry;                                  // 0x0004(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E4[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          Mouse_Event;                                       // 0x0040(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E5[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_Hide_SL_Menu) == 0x000008, "Wrong alignment on W_SQMapCore_C_Hide_SL_Menu");
static_assert(sizeof(W_SQMapCore_C_Hide_SL_Menu) == 0x0000D0, "Wrong size on W_SQMapCore_C_Hide_SL_Menu");
static_assert(offsetof(W_SQMapCore_C_Hide_SL_Menu, New_Visible) == 0x000000, "Member 'W_SQMapCore_C_Hide_SL_Menu::New_Visible' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Hide_SL_Menu, Visible_Geometry) == 0x000004, "Member 'W_SQMapCore_C_Hide_SL_Menu::Visible_Geometry' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Hide_SL_Menu, Mouse_Event) == 0x000040, "Member 'W_SQMapCore_C_Hide_SL_Menu::Mouse_Event' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Hide_SL_Menu, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'W_SQMapCore_C_Hide_SL_Menu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Hide_SL_Menu, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000B8, "Member 'W_SQMapCore_C_Hide_SL_Menu::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Hide_SL_Menu, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x0000C0, "Member 'W_SQMapCore_C_Hide_SL_Menu::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Hide_SL_Menu, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'W_SQMapCore_C_Hide_SL_Menu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Hide_SL_Menu, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'W_SQMapCore_C_Hide_SL_Menu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Hide_SL_Menu, CallFunc_IsSquadLeader_ReturnValue) == 0x0000CA, "Member 'W_SQMapCore_C_Hide_SL_Menu::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Create Actions Menu
// 0x0010 (0x0010 - 0x0000)
struct W_SQMapCore_C_Create_Actions_Menu final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_GridMenu_C*                          CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_Create_Actions_Menu) == 0x000008, "Wrong alignment on W_SQMapCore_C_Create_Actions_Menu");
static_assert(sizeof(W_SQMapCore_C_Create_Actions_Menu) == 0x000010, "Wrong size on W_SQMapCore_C_Create_Actions_Menu");
static_assert(offsetof(W_SQMapCore_C_Create_Actions_Menu, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_SQMapCore_C_Create_Actions_Menu::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Create_Actions_Menu, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_SQMapCore_C_Create_Actions_Menu::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Remove Floating Widgets
// 0x0030 (0x0030 - 0x0000)
struct W_SQMapCore_C_Remove_Floating_Widgets final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_Remove_Floating_Widgets) == 0x000008, "Wrong alignment on W_SQMapCore_C_Remove_Floating_Widgets");
static_assert(sizeof(W_SQMapCore_C_Remove_Floating_Widgets) == 0x000030, "Wrong size on W_SQMapCore_C_Remove_Floating_Widgets");
static_assert(offsetof(W_SQMapCore_C_Remove_Floating_Widgets, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_SQMapCore_C_Remove_Floating_Widgets::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Remove_Floating_Widgets, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_SQMapCore_C_Remove_Floating_Widgets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Remove_Floating_Widgets, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'W_SQMapCore_C_Remove_Floating_Widgets::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Remove_Floating_Widgets, K2Node_DynamicCast_AsBPI_HUD) == 0x000018, "Member 'W_SQMapCore_C_Remove_Floating_Widgets::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Remove_Floating_Widgets, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_SQMapCore_C_Remove_Floating_Widgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.OnMouseButtonUp
// 0x03C8 (0x03C8 - 0x0000)
struct W_SQMapCore_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            Result;                                            // 0x0160(0x00B8)(Edit, BlueprintVisible)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0218(0x00B8)()
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x02D0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E7[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1; // 0x02F0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E8[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0310(0x00B8)()
};
static_assert(alignof(W_SQMapCore_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on W_SQMapCore_C_OnMouseButtonUp");
static_assert(sizeof(W_SQMapCore_C_OnMouseButtonUp) == 0x0003C8, "Wrong size on W_SQMapCore_C_OnMouseButtonUp");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'W_SQMapCore_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'W_SQMapCore_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'W_SQMapCore_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, Result) == 0x000160, "Member 'W_SQMapCore_C_OnMouseButtonUp::Result' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000218, "Member 'W_SQMapCore_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x0002D0, "Member 'W_SQMapCore_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002E8, "Member 'W_SQMapCore_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1) == 0x0002F0, "Member 'W_SQMapCore_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000308, "Member 'W_SQMapCore_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x000310, "Member 'W_SQMapCore_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.OnMouseMove
// 0x0310 (0x0310 - 0x0000)
struct W_SQMapCore_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            Result;                                            // 0x0160(0x00B8)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E9[0x6];                                     // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MousePosition_C*                     CallFunc_Create_ReturnValue;                       // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetCursorDelta_ReturnValue;  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48EA[0x2];                                     // 0x023E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetLastScreenSpacePosition_ReturnValue; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0258(0x00B8)()
};
static_assert(alignof(W_SQMapCore_C_OnMouseMove) == 0x000008, "Wrong alignment on W_SQMapCore_C_OnMouseMove");
static_assert(sizeof(W_SQMapCore_C_OnMouseMove) == 0x000310, "Wrong size on W_SQMapCore_C_OnMouseMove");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'W_SQMapCore_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'W_SQMapCore_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, ReturnValue) == 0x0000A8, "Member 'W_SQMapCore_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, Result) == 0x000160, "Member 'W_SQMapCore_C_OnMouseMove::Result' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_IsValid_ReturnValue) == 0x000218, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_IsVisible_ReturnValue) == 0x000219, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_GetOwningPlayer_ReturnValue) == 0x000220, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_Create_ReturnValue) == 0x000228, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_PointerEvent_GetCursorDelta_ReturnValue) == 0x000230, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_PointerEvent_GetCursorDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_VSize2D_ReturnValue) == 0x000238, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00023C, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_BooleanAND_ReturnValue) == 0x00023D, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_PointerEvent_GetLastScreenSpacePosition_ReturnValue) == 0x000240, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_PointerEvent_GetLastScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000248, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000250, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseMove, CallFunc_Unhandled_ReturnValue) == 0x000258, "Member 'W_SQMapCore_C_OnMouseMove::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.MovePan
// 0x0010 (0x0010 - 0x0000)
struct W_SQMapCore_C_MovePan final
{
public:
	struct FVector2D                              Delta;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsScreenDelta;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48EB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClampCacheScale;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_MovePan) == 0x000004, "Wrong alignment on W_SQMapCore_C_MovePan");
static_assert(sizeof(W_SQMapCore_C_MovePan) == 0x000010, "Wrong size on W_SQMapCore_C_MovePan");
static_assert(offsetof(W_SQMapCore_C_MovePan, Delta) == 0x000000, "Member 'W_SQMapCore_C_MovePan::Delta' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_MovePan, IsScreenDelta) == 0x000008, "Member 'W_SQMapCore_C_MovePan::IsScreenDelta' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_MovePan, ClampCacheScale) == 0x00000C, "Member 'W_SQMapCore_C_MovePan::ClampCacheScale' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.ScreenToPanVector
// 0x0070 (0x0070 - 0x0000)
struct W_SQMapCore_C_ScreenToPanVector final
{
public:
	struct FVector2D                              ScreenVector;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           PanLayer;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PanVector;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0020(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_ScreenToPanVector) == 0x000008, "Wrong alignment on W_SQMapCore_C_ScreenToPanVector");
static_assert(sizeof(W_SQMapCore_C_ScreenToPanVector) == 0x000070, "Wrong size on W_SQMapCore_C_ScreenToPanVector");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanVector, ScreenVector) == 0x000000, "Member 'W_SQMapCore_C_ScreenToPanVector::ScreenVector' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanVector, PanLayer) == 0x000008, "Member 'W_SQMapCore_C_ScreenToPanVector::PanLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanVector, PanVector) == 0x000010, "Member 'W_SQMapCore_C_ScreenToPanVector::PanVector' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanVector, CallFunc_GetParent_ReturnValue) == 0x000018, "Member 'W_SQMapCore_C_ScreenToPanVector::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanVector, CallFunc_GetCachedGeometry_ReturnValue) == 0x000020, "Member 'W_SQMapCore_C_ScreenToPanVector::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanVector, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000058, "Member 'W_SQMapCore_C_ScreenToPanVector::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanVector, CallFunc_AbsoluteToLocal_ReturnValue_1) == 0x000060, "Member 'W_SQMapCore_C_ScreenToPanVector::CallFunc_AbsoluteToLocal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanVector, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'W_SQMapCore_C_ScreenToPanVector::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.ClampPanPosition
// 0x0118 (0x0118 - 0x0000)
struct W_SQMapCore_C_ClampPanPosition final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CacheScale;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48EC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            RootLayer;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           PanLayer;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Result;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0030(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x0068(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue_1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue_1;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_ClampPanPosition) == 0x000008, "Wrong alignment on W_SQMapCore_C_ClampPanPosition");
static_assert(sizeof(W_SQMapCore_C_ClampPanPosition) == 0x000118, "Wrong size on W_SQMapCore_C_ClampPanPosition");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, Position) == 0x000000, "Member 'W_SQMapCore_C_ClampPanPosition::Position' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CacheScale) == 0x000008, "Member 'W_SQMapCore_C_ClampPanPosition::CacheScale' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, RootLayer) == 0x000010, "Member 'W_SQMapCore_C_ClampPanPosition::RootLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, PanLayer) == 0x000018, "Member 'W_SQMapCore_C_ClampPanPosition::PanLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, Result) == 0x000020, "Member 'W_SQMapCore_C_ClampPanPosition::Result' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_BreakVector2D_X) == 0x000028, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_GetCachedGeometry_ReturnValue) == 0x000030, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x000068, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_GetLocalSize_ReturnValue) == 0x0000A0, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_LocalToAbsolute_ReturnValue) == 0x0000A8, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000B0, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_AbsoluteToLocal_ReturnValue) == 0x0000B8, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_GetLocalSize_ReturnValue_1) == 0x0000C0, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_LocalToAbsolute_ReturnValue_1) == 0x0000C8, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_LocalToAbsolute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_AbsoluteToLocal_ReturnValue_1) == 0x0000D0, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_AbsoluteToLocal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000D8, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000E0, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0000E8, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_BreakVector2D_X_1) == 0x0000F0, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_BreakVector2D_Y_1) == 0x0000F4, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_FMax_ReturnValue) == 0x0000F8, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_FMax_ReturnValue_1) == 0x0000FC, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000100, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000104, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_FClamp_ReturnValue) == 0x000108, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_FClamp_ReturnValue_1) == 0x00010C, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ClampPanPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000110, "Member 'W_SQMapCore_C_ClampPanPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Follow
// 0x0014 (0x0014 - 0x0000)
struct W_SQMapCore_C_Follow final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48ED[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              FocusPosition;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RelativePosition;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48EE[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClampCacheScale;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_Follow) == 0x000004, "Wrong alignment on W_SQMapCore_C_Follow");
static_assert(sizeof(W_SQMapCore_C_Follow) == 0x000014, "Wrong size on W_SQMapCore_C_Follow");
static_assert(offsetof(W_SQMapCore_C_Follow, Instant) == 0x000000, "Member 'W_SQMapCore_C_Follow::Instant' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Follow, FocusPosition) == 0x000004, "Member 'W_SQMapCore_C_Follow::FocusPosition' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Follow, RelativePosition) == 0x00000C, "Member 'W_SQMapCore_C_Follow::RelativePosition' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Follow, ClampCacheScale) == 0x000010, "Member 'W_SQMapCore_C_Follow::ClampCacheScale' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.ScreenToPanPosition
// 0x0050 (0x0050 - 0x0000)
struct W_SQMapCore_C_ScreenToPanPosition final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PanPosition;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_ScreenToPanPosition) == 0x000004, "Wrong alignment on W_SQMapCore_C_ScreenToPanPosition");
static_assert(sizeof(W_SQMapCore_C_ScreenToPanPosition) == 0x000050, "Wrong size on W_SQMapCore_C_ScreenToPanPosition");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanPosition, ScreenPosition) == 0x000000, "Member 'W_SQMapCore_C_ScreenToPanPosition::ScreenPosition' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanPosition, PanPosition) == 0x000008, "Member 'W_SQMapCore_C_ScreenToPanPosition::PanPosition' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanPosition, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'W_SQMapCore_C_ScreenToPanPosition::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenToPanPosition, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000048, "Member 'W_SQMapCore_C_ScreenToPanPosition::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.UpdateZoom
// 0x001C (0x001C - 0x0000)
struct W_SQMapCore_C_UpdateZoom final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevZoomAmount;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48EF[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_UpdateZoom) == 0x000004, "Wrong alignment on W_SQMapCore_C_UpdateZoom");
static_assert(sizeof(W_SQMapCore_C_UpdateZoom) == 0x00001C, "Wrong size on W_SQMapCore_C_UpdateZoom");
static_assert(offsetof(W_SQMapCore_C_UpdateZoom, DeltaTime) == 0x000000, "Member 'W_SQMapCore_C_UpdateZoom::DeltaTime' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateZoom, PrevZoomAmount) == 0x000004, "Member 'W_SQMapCore_C_UpdateZoom::PrevZoomAmount' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateZoom, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'W_SQMapCore_C_UpdateZoom::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateZoom, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'W_SQMapCore_C_UpdateZoom::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateZoom, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'W_SQMapCore_C_UpdateZoom::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateZoom, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000014, "Member 'W_SQMapCore_C_UpdateZoom::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateZoom, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'W_SQMapCore_C_UpdateZoom::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Clear Selections
// 0x0038 (0x0038 - 0x0000)
struct W_SQMapCore_C_Clear_Selections final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerController_C> K2Node_DynamicCast_AsBPI_Player_Controller;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48F0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_Clear_Selections) == 0x000008, "Wrong alignment on W_SQMapCore_C_Clear_Selections");
static_assert(sizeof(W_SQMapCore_C_Clear_Selections) == 0x000038, "Wrong size on W_SQMapCore_C_Clear_Selections");
static_assert(offsetof(W_SQMapCore_C_Clear_Selections, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_SQMapCore_C_Clear_Selections::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Clear_Selections, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'W_SQMapCore_C_Clear_Selections::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Clear_Selections, K2Node_DynamicCast_AsBPI_Player_Controller) == 0x000010, "Member 'W_SQMapCore_C_Clear_Selections::K2Node_DynamicCast_AsBPI_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Clear_Selections, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_SQMapCore_C_Clear_Selections::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Clear_Selections, K2Node_DynamicCast_AsSQHUD) == 0x000028, "Member 'W_SQMapCore_C_Clear_Selections::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Clear_Selections, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'W_SQMapCore_C_Clear_Selections::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.GetElementRoot
// 0x0008 (0x0008 - 0x0000)
struct W_SQMapCore_C_GetElementRoot final
{
public:
	class UPanelWidget*                           Out_Root;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_GetElementRoot) == 0x000008, "Wrong alignment on W_SQMapCore_C_GetElementRoot");
static_assert(sizeof(W_SQMapCore_C_GetElementRoot) == 0x000008, "Wrong size on W_SQMapCore_C_GetElementRoot");
static_assert(offsetof(W_SQMapCore_C_GetElementRoot, Out_Root) == 0x000000, "Member 'W_SQMapCore_C_GetElementRoot::Out_Root' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.PerformZoom
// 0x00F0 (0x00F0 - 0x0000)
struct W_SQMapCore_C_PerformZoom final
{
public:
	float                                         Param_TargetZoom;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ZoomPosition;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            RootLayer;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           ZoomLayer;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           PanLayer;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               Local_SizeBox;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               K2Node_DynamicCast_AsSize_Box;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48F2[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0058(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampPanPosition_Result;                  // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_PerformZoom) == 0x000008, "Wrong alignment on W_SQMapCore_C_PerformZoom");
static_assert(sizeof(W_SQMapCore_C_PerformZoom) == 0x0000F0, "Wrong size on W_SQMapCore_C_PerformZoom");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, Param_TargetZoom) == 0x000000, "Member 'W_SQMapCore_C_PerformZoom::Param_TargetZoom' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, ZoomPosition) == 0x000004, "Member 'W_SQMapCore_C_PerformZoom::ZoomPosition' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, RootLayer) == 0x000010, "Member 'W_SQMapCore_C_PerformZoom::RootLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, ZoomLayer) == 0x000018, "Member 'W_SQMapCore_C_PerformZoom::ZoomLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, PanLayer) == 0x000020, "Member 'W_SQMapCore_C_PerformZoom::PanLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, Local_SizeBox) == 0x000028, "Member 'W_SQMapCore_C_PerformZoom::Local_SizeBox' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, K2Node_DynamicCast_AsSize_Box) == 0x000038, "Member 'W_SQMapCore_C_PerformZoom::K2Node_DynamicCast_AsSize_Box' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'W_SQMapCore_C_PerformZoom::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000048, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_GetPosition_ReturnValue) == 0x000050, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_GetCachedGeometry_ReturnValue) == 0x000058, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_GetLocalSize_ReturnValue) == 0x000090, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000098, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_AbsoluteToLocal_ReturnValue) == 0x0000A0, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A8, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B8, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000C0, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000C4, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0000CC, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000D4, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000DC, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformZoom, CallFunc_ClampPanPosition_Result) == 0x0000E4, "Member 'W_SQMapCore_C_PerformZoom::CallFunc_ClampPanPosition_Result' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.PerformPan
// 0x0058 (0x0058 - 0x0000)
struct W_SQMapCore_C_PerformPan final
{
public:
	struct FVector2D                              Vector;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsScreenDelta;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48F3[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CacheScale;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            RootLayer;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           PanLayer;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48F4[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ScreenToPanVector_PanVector;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampPanPosition_Result;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_PerformPan) == 0x000008, "Wrong alignment on W_SQMapCore_C_PerformPan");
static_assert(sizeof(W_SQMapCore_C_PerformPan) == 0x000058, "Wrong size on W_SQMapCore_C_PerformPan");
static_assert(offsetof(W_SQMapCore_C_PerformPan, Vector) == 0x000000, "Member 'W_SQMapCore_C_PerformPan::Vector' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, IsScreenDelta) == 0x000008, "Member 'W_SQMapCore_C_PerformPan::IsScreenDelta' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, CacheScale) == 0x00000C, "Member 'W_SQMapCore_C_PerformPan::CacheScale' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, RootLayer) == 0x000010, "Member 'W_SQMapCore_C_PerformPan::RootLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, PanLayer) == 0x000018, "Member 'W_SQMapCore_C_PerformPan::PanLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, Temp_bool_Variable) == 0x000020, "Member 'W_SQMapCore_C_PerformPan::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000028, "Member 'W_SQMapCore_C_PerformPan::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, CallFunc_GetPosition_ReturnValue) == 0x000030, "Member 'W_SQMapCore_C_PerformPan::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, CallFunc_ScreenToPanVector_PanVector) == 0x000038, "Member 'W_SQMapCore_C_PerformPan::CallFunc_ScreenToPanVector_PanVector' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, K2Node_Select_Default) == 0x000040, "Member 'W_SQMapCore_C_PerformPan::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000048, "Member 'W_SQMapCore_C_PerformPan::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformPan, CallFunc_ClampPanPosition_Result) == 0x000050, "Member 'W_SQMapCore_C_PerformPan::CallFunc_ClampPanPosition_Result' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.PerformFollow
// 0x0068 (0x0068 - 0x0000)
struct W_SQMapCore_C_PerformFollow final
{
public:
	class UPanelWidget*                           PanLayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              FocusPosition;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RelativePosition;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48F5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CacheScale;                                        // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            RootLayer;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48F6[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ScreenToPanPosition_PanPosition;          // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F7[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampPanPosition_Result;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_PerformFollow) == 0x000008, "Wrong alignment on W_SQMapCore_C_PerformFollow");
static_assert(sizeof(W_SQMapCore_C_PerformFollow) == 0x000068, "Wrong size on W_SQMapCore_C_PerformFollow");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, PanLayer) == 0x000000, "Member 'W_SQMapCore_C_PerformFollow::PanLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, FocusPosition) == 0x000008, "Member 'W_SQMapCore_C_PerformFollow::FocusPosition' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, RelativePosition) == 0x000010, "Member 'W_SQMapCore_C_PerformFollow::RelativePosition' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, CacheScale) == 0x000014, "Member 'W_SQMapCore_C_PerformFollow::CacheScale' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, RootLayer) == 0x000018, "Member 'W_SQMapCore_C_PerformFollow::RootLayer' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, Temp_bool_Variable) == 0x000020, "Member 'W_SQMapCore_C_PerformFollow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, CallFunc_ScreenToPanPosition_PanPosition) == 0x000024, "Member 'W_SQMapCore_C_PerformFollow::CallFunc_ScreenToPanPosition_PanPosition' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'W_SQMapCore_C_PerformFollow::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, CallFunc_GetDesiredSize_ReturnValue) == 0x000038, "Member 'W_SQMapCore_C_PerformFollow::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000040, "Member 'W_SQMapCore_C_PerformFollow::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000048, "Member 'W_SQMapCore_C_PerformFollow::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, K2Node_Select_Default) == 0x000050, "Member 'W_SQMapCore_C_PerformFollow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'W_SQMapCore_C_PerformFollow::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_PerformFollow, CallFunc_ClampPanPosition_Result) == 0x000060, "Member 'W_SQMapCore_C_PerformFollow::CallFunc_ClampPanPosition_Result' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Setup
// 0x0018 (0x0018 - 0x0000)
struct W_SQMapCore_C_Setup final
{
public:
	class USQCoreStateMapComponent*               Param_MapComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetNumGridLines_ReturnValue;              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_Setup) == 0x000008, "Wrong alignment on W_SQMapCore_C_Setup");
static_assert(sizeof(W_SQMapCore_C_Setup) == 0x000018, "Wrong size on W_SQMapCore_C_Setup");
static_assert(offsetof(W_SQMapCore_C_Setup, Param_MapComponent) == 0x000000, "Member 'W_SQMapCore_C_Setup::Param_MapComponent' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Setup, CallFunc_GetNumGridLines_ReturnValue) == 0x000008, "Member 'W_SQMapCore_C_Setup::CallFunc_GetNumGridLines_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Setup, CallFunc_BreakVector2D_X) == 0x000010, "Member 'W_SQMapCore_C_Setup::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Setup, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'W_SQMapCore_C_Setup::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.ScreenLocationToMapLocation
// 0x0078 (0x0078 - 0x0000)
struct W_SQMapCore_C_ScreenLocationToMapLocation final
{
public:
	struct FVector2D                              ScreenLocation;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MapLocation;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_ScreenLocationToMapLocation) == 0x000004, "Wrong alignment on W_SQMapCore_C_ScreenLocationToMapLocation");
static_assert(sizeof(W_SQMapCore_C_ScreenLocationToMapLocation) == 0x000078, "Wrong size on W_SQMapCore_C_ScreenLocationToMapLocation");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, ScreenLocation) == 0x000000, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::ScreenLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, MapLocation) == 0x000008, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::MapLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_GetLocalSize_ReturnValue) == 0x000048, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000050, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_BreakVector2D_X) == 0x000058, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_BreakVector2D_Y) == 0x00005C, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_BreakVector2D_X_1) == 0x000060, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_BreakVector2D_Y_1) == 0x000064, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_ScreenLocationToMapLocation, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'W_SQMapCore_C_ScreenLocationToMapLocation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.UpdateCursorGridLocationString
// 0x00A8 (0x00A8 - 0x0000)
struct W_SQMapCore_C_UpdateCursorGridLocationString final
{
public:
	struct FPointerEvent                          MouseInput;                                        // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetMapBody_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetNumGridLines_ReturnValue;              // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ScreenLocationToMapLocation_OutMapLocation; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ScreenLocationToMapLocation_ReturnValue;  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48F8[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MapLocationToGridCoordinateString_ReturnValue; // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_UpdateCursorGridLocationString) == 0x000008, "Wrong alignment on W_SQMapCore_C_UpdateCursorGridLocationString");
static_assert(sizeof(W_SQMapCore_C_UpdateCursorGridLocationString) == 0x0000A8, "Wrong size on W_SQMapCore_C_UpdateCursorGridLocationString");
static_assert(offsetof(W_SQMapCore_C_UpdateCursorGridLocationString, MouseInput) == 0x000000, "Member 'W_SQMapCore_C_UpdateCursorGridLocationString::MouseInput' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateCursorGridLocationString, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000070, "Member 'W_SQMapCore_C_UpdateCursorGridLocationString::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateCursorGridLocationString, CallFunc_GetMapBody_ReturnValue) == 0x000078, "Member 'W_SQMapCore_C_UpdateCursorGridLocationString::CallFunc_GetMapBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateCursorGridLocationString, CallFunc_GetNumGridLines_ReturnValue) == 0x000080, "Member 'W_SQMapCore_C_UpdateCursorGridLocationString::CallFunc_GetNumGridLines_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateCursorGridLocationString, CallFunc_ScreenLocationToMapLocation_OutMapLocation) == 0x000088, "Member 'W_SQMapCore_C_UpdateCursorGridLocationString::CallFunc_ScreenLocationToMapLocation_OutMapLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateCursorGridLocationString, CallFunc_ScreenLocationToMapLocation_ReturnValue) == 0x000090, "Member 'W_SQMapCore_C_UpdateCursorGridLocationString::CallFunc_ScreenLocationToMapLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdateCursorGridLocationString, CallFunc_MapLocationToGridCoordinateString_ReturnValue) == 0x000098, "Member 'W_SQMapCore_C_UpdateCursorGridLocationString::CallFunc_MapLocationToGridCoordinateString_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.UpdatePlayerCoordinates
// 0x0070 (0x0070 - 0x0000)
struct W_SQMapCore_C_UpdatePlayerCoordinates final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetNumGridLines_ReturnValue;              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMapBoundsScale_ReturnValue;            // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48F9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_GetWorldBounds_ReturnValue;               // 0x003C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FVector2D                              CallFunc_WorldToMapLocation_OutMapLocation;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WorldToMapLocation_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48FA[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MapLocationToGridCoordinateString_ReturnValue; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_UpdatePlayerCoordinates) == 0x000008, "Wrong alignment on W_SQMapCore_C_UpdatePlayerCoordinates");
static_assert(sizeof(W_SQMapCore_C_UpdatePlayerCoordinates) == 0x000070, "Wrong size on W_SQMapCore_C_UpdatePlayerCoordinates");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_GetNumGridLines_ReturnValue) == 0x000008, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_GetNumGridLines_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_GetMapBoundsScale_ReturnValue) == 0x000018, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_GetMapBoundsScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x000030, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_GetWorldBounds_ReturnValue) == 0x00003C, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_GetWorldBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_WorldToMapLocation_OutMapLocation) == 0x000050, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_WorldToMapLocation_OutMapLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_WorldToMapLocation_ReturnValue) == 0x000058, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_WorldToMapLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_UpdatePlayerCoordinates, CallFunc_MapLocationToGridCoordinateString_ReturnValue) == 0x000060, "Member 'W_SQMapCore_C_UpdatePlayerCoordinates::CallFunc_MapLocationToGridCoordinateString_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.OnMouseWheelZoom
// 0x0014 (0x0014 - 0x0000)
struct W_SQMapCore_C_OnMouseWheelZoom final
{
public:
	float                                         MouseAxis;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48FB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_OnMouseWheelZoom) == 0x000004, "Wrong alignment on W_SQMapCore_C_OnMouseWheelZoom");
static_assert(sizeof(W_SQMapCore_C_OnMouseWheelZoom) == 0x000014, "Wrong size on W_SQMapCore_C_OnMouseWheelZoom");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheelZoom, MouseAxis) == 0x000000, "Member 'W_SQMapCore_C_OnMouseWheelZoom::MouseAxis' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheelZoom, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'W_SQMapCore_C_OnMouseWheelZoom::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheelZoom, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'W_SQMapCore_C_OnMouseWheelZoom::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheelZoom, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'W_SQMapCore_C_OnMouseWheelZoom::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheelZoom, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'W_SQMapCore_C_OnMouseWheelZoom::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.OnMouseWheel
// 0x0220 (0x0220 - 0x0000)
struct W_SQMapCore_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_OnMouseWheel) == 0x000008, "Wrong alignment on W_SQMapCore_C_OnMouseWheel");
static_assert(sizeof(W_SQMapCore_C_OnMouseWheel) == 0x000220, "Wrong size on W_SQMapCore_C_OnMouseWheel");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'W_SQMapCore_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'W_SQMapCore_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheel, ReturnValue) == 0x0000A8, "Member 'W_SQMapCore_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheel, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'W_SQMapCore_C_OnMouseWheel::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000218, "Member 'W_SQMapCore_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Remove Mouse Pos
// 0x0001 (0x0001 - 0x0000)
struct W_SQMapCore_C_Remove_Mouse_Pos final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_Remove_Mouse_Pos) == 0x000001, "Wrong alignment on W_SQMapCore_C_Remove_Mouse_Pos");
static_assert(sizeof(W_SQMapCore_C_Remove_Mouse_Pos) == 0x000001, "Wrong size on W_SQMapCore_C_Remove_Mouse_Pos");
static_assert(offsetof(W_SQMapCore_C_Remove_Mouse_Pos, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_SQMapCore_C_Remove_Mouse_Pos::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.AdjustHorizontalBarPadding
// 0x0030 (0x0030 - 0x0000)
struct W_SQMapCore_C_AdjustHorizontalBarPadding final
{
public:
	float                                         Param_TargetZoom;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48FC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           K2Node_DynamicCast_AsSize_Box_Slot;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48FD[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_AdjustHorizontalBarPadding) == 0x000008, "Wrong alignment on W_SQMapCore_C_AdjustHorizontalBarPadding");
static_assert(sizeof(W_SQMapCore_C_AdjustHorizontalBarPadding) == 0x000030, "Wrong size on W_SQMapCore_C_AdjustHorizontalBarPadding");
static_assert(offsetof(W_SQMapCore_C_AdjustHorizontalBarPadding, Param_TargetZoom) == 0x000000, "Member 'W_SQMapCore_C_AdjustHorizontalBarPadding::Param_TargetZoom' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustHorizontalBarPadding, K2Node_DynamicCast_AsSize_Box_Slot) == 0x000008, "Member 'W_SQMapCore_C_AdjustHorizontalBarPadding::K2Node_DynamicCast_AsSize_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustHorizontalBarPadding, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_SQMapCore_C_AdjustHorizontalBarPadding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustHorizontalBarPadding, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'W_SQMapCore_C_AdjustHorizontalBarPadding::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustHorizontalBarPadding, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'W_SQMapCore_C_AdjustHorizontalBarPadding::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustHorizontalBarPadding, K2Node_MakeStruct_Margin) == 0x00001C, "Member 'W_SQMapCore_C_AdjustHorizontalBarPadding::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.AdjustVerticalBarPadding
// 0x0030 (0x0030 - 0x0000)
struct W_SQMapCore_C_AdjustVerticalBarPadding final
{
public:
	float                                         Param_TargetZoom;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           K2Node_DynamicCast_AsSize_Box_Slot;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48FF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_AdjustVerticalBarPadding) == 0x000008, "Wrong alignment on W_SQMapCore_C_AdjustVerticalBarPadding");
static_assert(sizeof(W_SQMapCore_C_AdjustVerticalBarPadding) == 0x000030, "Wrong size on W_SQMapCore_C_AdjustVerticalBarPadding");
static_assert(offsetof(W_SQMapCore_C_AdjustVerticalBarPadding, Param_TargetZoom) == 0x000000, "Member 'W_SQMapCore_C_AdjustVerticalBarPadding::Param_TargetZoom' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustVerticalBarPadding, K2Node_DynamicCast_AsSize_Box_Slot) == 0x000008, "Member 'W_SQMapCore_C_AdjustVerticalBarPadding::K2Node_DynamicCast_AsSize_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustVerticalBarPadding, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_SQMapCore_C_AdjustVerticalBarPadding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustVerticalBarPadding, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'W_SQMapCore_C_AdjustVerticalBarPadding::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustVerticalBarPadding, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'W_SQMapCore_C_AdjustVerticalBarPadding::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_AdjustVerticalBarPadding, K2Node_MakeStruct_Margin) == 0x00001C, "Member 'W_SQMapCore_C_AdjustVerticalBarPadding::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.InitializeZoomLevels
// 0x0090 (0x0090 - 0x0000)
struct W_SQMapCore_C_InitializeZoomLevels final
{
public:
	float                                         HUDMinZoomLevel;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HUDMaxZoomLevel;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_GetWorldBounds_ReturnValue;               // 0x000C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4900[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4901[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4902[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4903[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_InitializeZoomLevels) == 0x000008, "Wrong alignment on W_SQMapCore_C_InitializeZoomLevels");
static_assert(sizeof(W_SQMapCore_C_InitializeZoomLevels) == 0x000090, "Wrong size on W_SQMapCore_C_InitializeZoomLevels");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, HUDMinZoomLevel) == 0x000000, "Member 'W_SQMapCore_C_InitializeZoomLevels::HUDMinZoomLevel' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, HUDMaxZoomLevel) == 0x000004, "Member 'W_SQMapCore_C_InitializeZoomLevels::HUDMaxZoomLevel' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_SQMapCore_C_InitializeZoomLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_GetWorldBounds_ReturnValue) == 0x00000C, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_GetWorldBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_BreakVector2D_X) == 0x000020, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_BreakVector2D_X_1) == 0x000028, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_BreakVector2D_Y_1) == 0x00002C, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Abs_ReturnValue) == 0x000034, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000038, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Abs_ReturnValue_1) == 0x00003C, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'W_SQMapCore_C_InitializeZoomLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_GetHUD_ReturnValue) == 0x000050, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, K2Node_DynamicCast_AsSQHUD) == 0x000060, "Member 'W_SQMapCore_C_InitializeZoomLevels::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_SQMapCore_C_InitializeZoomLevels::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_FMax_ReturnValue) == 0x000070, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Array_Get_Item) == 0x000074, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000078, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_MapRangeClamped_ReturnValue) == 0x00007C, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_InitializeZoomLevels, CallFunc_Array_LastIndex_ReturnValue) == 0x000088, "Member 'W_SQMapCore_C_InitializeZoomLevels::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.SetMapTexture
// 0x0008 (0x0008 - 0x0000)
struct W_SQMapCore_C_SetMapTexture final
{
public:
	class UTexture*                               Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_SetMapTexture) == 0x000008, "Wrong alignment on W_SQMapCore_C_SetMapTexture");
static_assert(sizeof(W_SQMapCore_C_SetMapTexture) == 0x000008, "Wrong size on W_SQMapCore_C_SetMapTexture");
static_assert(offsetof(W_SQMapCore_C_SetMapTexture, Value) == 0x000000, "Member 'W_SQMapCore_C_SetMapTexture::Value' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.FindZoomLocation
// 0x01D0 (0x01D0 - 0x0000)
struct W_SQMapCore_C_FindZoomLocation final
{
public:
	struct FVector2D                              OutScreenLocation;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutSLocation;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x0048(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetMapBody_ReturnValue;                   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMapBoundsScale_ReturnValue;            // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_GetWorldBounds_ReturnValue;               // 0x00B0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_4904[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_2;          // 0x00D8(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4905[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_2;               // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetMouseScreenSpacePosition_OutPosition;  // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMouseScreenSpacePosition_ReturnValue;  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4906[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4907[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_WorldToMapLocation_OutMapLocation;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WorldToMapLocation_ReturnValue;           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4908[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MapLocationToScreenLocation_OutScreenLocation; // 0x0194(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MapLocationToScreenLocation_ReturnValue;  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4909[0x2];                                     // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue_1;            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_490A[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_FindZoomLocation) == 0x000008, "Wrong alignment on W_SQMapCore_C_FindZoomLocation");
static_assert(sizeof(W_SQMapCore_C_FindZoomLocation) == 0x0001D0, "Wrong size on W_SQMapCore_C_FindZoomLocation");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, OutScreenLocation) == 0x000000, "Member 'W_SQMapCore_C_FindZoomLocation::OutScreenLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, OutSLocation) == 0x000008, "Member 'W_SQMapCore_C_FindZoomLocation::OutSLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x000048, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetLocalSize_ReturnValue) == 0x000080, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetLocalSize_ReturnValue_1) == 0x000088, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BreakVector2D_X) == 0x000090, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BreakVector2D_Y) == 0x000094, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BreakVector2D_X_1) == 0x000098, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BreakVector2D_Y_1) == 0x00009C, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetMapBody_ReturnValue) == 0x0000A0, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetMapBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetMapBoundsScale_ReturnValue) == 0x0000A8, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetMapBoundsScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetWorldBounds_ReturnValue) == 0x0000B0, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetWorldBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000C8, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetHUD_ReturnValue) == 0x0000D0, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetCachedGeometry_ReturnValue_2) == 0x0000D8, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetCachedGeometry_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, K2Node_DynamicCast_AsSQHUD) == 0x000110, "Member 'W_SQMapCore_C_FindZoomLocation::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'W_SQMapCore_C_FindZoomLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetLocalSize_ReturnValue_2) == 0x00011C, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetLocalSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetMouseScreenSpacePosition_OutPosition) == 0x000124, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetMouseScreenSpacePosition_OutPosition' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetMouseScreenSpacePosition_ReturnValue) == 0x00012C, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetMouseScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000130, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_LocalToAbsolute_ReturnValue) == 0x000138, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000140, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000144, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000148, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_MakeVector2D_ReturnValue) == 0x000150, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_AbsoluteToLocal_ReturnValue) == 0x00015C, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000164, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BreakVector2D_X_2) == 0x000170, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BreakVector2D_Y_2) == 0x000174, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x000178, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000184, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_WorldToMapLocation_OutMapLocation) == 0x000188, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_WorldToMapLocation_OutMapLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_WorldToMapLocation_ReturnValue) == 0x000190, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_WorldToMapLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000191, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_MapLocationToScreenLocation_OutScreenLocation) == 0x000194, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_MapLocationToScreenLocation_OutScreenLocation' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_MapLocationToScreenLocation_ReturnValue) == 0x00019C, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_MapLocationToScreenLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00019D, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_AbsoluteToLocal_ReturnValue_1) == 0x0001A0, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_AbsoluteToLocal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001A8, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BreakVector2D_X_3) == 0x0001AC, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BreakVector2D_Y_3) == 0x0001B0, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0001B4, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0001B8, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0001BC, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0001C0, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x0001C1, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0001C2, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x0001C3, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue) == 0x0001C4, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x0001C5, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue_1) == 0x0001C6, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue_2) == 0x0001C7, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue_3) == 0x0001C8, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue_4) == 0x0001C9, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue_5) == 0x0001CA, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue_6) == 0x0001CB, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue_7) == 0x0001CC, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue_8) == 0x0001CD, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_FindZoomLocation, CallFunc_BooleanAND_ReturnValue_9) == 0x0001CE, "Member 'W_SQMapCore_C_FindZoomLocation::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Can Place Map Menu
// 0x0038 (0x0038 - 0x0000)
struct W_SQMapCore_C_Can_Place_Map_Menu final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_490B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_FloatingWidget_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_FloatingWidget_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SQMapCore_C_Can_Place_Map_Menu) == 0x000008, "Wrong alignment on W_SQMapCore_C_Can_Place_Map_Menu");
static_assert(sizeof(W_SQMapCore_C_Can_Place_Map_Menu) == 0x000038, "Wrong size on W_SQMapCore_C_Can_Place_Map_Menu");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, Valid) == 0x000000, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::Valid' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, CallFunc_IsVisible_ReturnValue) == 0x000031, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Can_Place_Map_Menu, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'W_SQMapCore_C_Can_Place_Map_Menu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_SQMapCore.W_SQMapCore_C.Create Fireteam Actions Menu
// 0x0010 (0x0010 - 0x0000)
struct W_SQMapCore_C_Create_Fireteam_Actions_Menu final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_GridMenu_C*                          CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SQMapCore_C_Create_Fireteam_Actions_Menu) == 0x000008, "Wrong alignment on W_SQMapCore_C_Create_Fireteam_Actions_Menu");
static_assert(sizeof(W_SQMapCore_C_Create_Fireteam_Actions_Menu) == 0x000010, "Wrong size on W_SQMapCore_C_Create_Fireteam_Actions_Menu");
static_assert(offsetof(W_SQMapCore_C_Create_Fireteam_Actions_Menu, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_SQMapCore_C_Create_Fireteam_Actions_Menu::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SQMapCore_C_Create_Fireteam_Actions_Menu, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_SQMapCore_C_Create_Fireteam_Actions_Menu::CallFunc_Create_ReturnValue' has a wrong offset!");

}


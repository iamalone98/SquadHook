#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CommandActionCategory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CommandActionCategory.W_CommandActionCategory_C
// 0x00A8 (0x0308 - 0x0260)
class UW_CommandActionCategory_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_Category;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CategoryIcon;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CategoryTimerImage;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpacerImage;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Category;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_CategoryTime;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_0;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Vbox;                                              // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_Timer;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCommanderCategory                     Category;                                          // 0x02B0(0x0020)(Edit, BlueprintVisible, ExposeOnSpawn)
	class ASQPlayerController*                    My_PC;                                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         ID;                                                // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Force_Allowed;                                     // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40B9[0x6];                                     // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_CommandActionItem_C*>         Actions;                                           // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          Use_Pre_Placement;                                 // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_40BA[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Command_Action_Item;                               // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Category_Enabled;                                  // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_W_CommandActionCategory(int32 EntryPoint);
	void Init();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void Update_Category();
	void Check_Interaction(bool* Locked);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CommandActionCategory_C">();
	}
	static class UW_CommandActionCategory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CommandActionCategory_C>();
	}
};
static_assert(alignof(UW_CommandActionCategory_C) == 0x000008, "Wrong alignment on UW_CommandActionCategory_C");
static_assert(sizeof(UW_CommandActionCategory_C) == 0x000308, "Wrong size on UW_CommandActionCategory_C");
static_assert(offsetof(UW_CommandActionCategory_C, UberGraphFrame) == 0x000260, "Member 'UW_CommandActionCategory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, Border_Category) == 0x000268, "Member 'UW_CommandActionCategory_C::Border_Category' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, CategoryIcon) == 0x000270, "Member 'UW_CommandActionCategory_C::CategoryIcon' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, CategoryTimerImage) == 0x000278, "Member 'UW_CommandActionCategory_C::CategoryTimerImage' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, SpacerImage) == 0x000280, "Member 'UW_CommandActionCategory_C::SpacerImage' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, TB_Category) == 0x000288, "Member 'UW_CommandActionCategory_C::TB_Category' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, TB_CategoryTime) == 0x000290, "Member 'UW_CommandActionCategory_C::TB_CategoryTime' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, TextBlock_0) == 0x000298, "Member 'UW_CommandActionCategory_C::TextBlock_0' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, Vbox) == 0x0002A0, "Member 'UW_CommandActionCategory_C::Vbox' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, MI_Timer) == 0x0002A8, "Member 'UW_CommandActionCategory_C::MI_Timer' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, Category) == 0x0002B0, "Member 'UW_CommandActionCategory_C::Category' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, My_PC) == 0x0002D0, "Member 'UW_CommandActionCategory_C::My_PC' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, ID) == 0x0002D8, "Member 'UW_CommandActionCategory_C::ID' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, Force_Allowed) == 0x0002D9, "Member 'UW_CommandActionCategory_C::Force_Allowed' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, Actions) == 0x0002E0, "Member 'UW_CommandActionCategory_C::Actions' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, Use_Pre_Placement) == 0x0002F0, "Member 'UW_CommandActionCategory_C::Use_Pre_Placement' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, Command_Action_Item) == 0x0002F8, "Member 'UW_CommandActionCategory_C::Command_Action_Item' has a wrong offset!");
static_assert(offsetof(UW_CommandActionCategory_C, Category_Enabled) == 0x000300, "Member 'UW_CommandActionCategory_C::Category_Enabled' has a wrong offset!");

}


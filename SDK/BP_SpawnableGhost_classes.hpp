#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnableGhost

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SpawnableGhost.BP_SpawnableGhost_C
// 0x0050 (0x0290 - 0x0240)
class ABP_SpawnableGhost_C : public ASQSpawnableGhost
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       LoadingWidget;                                     // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentRotation;                                   // 0x0258(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9E[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           RotateEventHandle;                                 // 0x0268(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RightRotation;                                     // 0x0270(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               LeftRotation;                                      // 0x027C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AsyncLoadDone;                                     // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SpawnableGhost(int32 EntryPoint);
	void ConfirmPlacement();
	void CameraManDestroyed(class AActor* DestroyedActor);
	void ReceiveBeginPlay();
	void RotatePreview();
	void InpActEvt_RotateGhostRight_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_RotateGhostRight_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_RotateGhostLeft_K2Node_InputActionEvent_3(const struct FKey& Key);
	bool IsFullyLoaded();
	bool ConfirmRequirements();
	void SetUpPreviewMaterial(class UMeshComponent* Mesh);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpawnableGhost_C">();
	}
	static class ABP_SpawnableGhost_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SpawnableGhost_C>();
	}
};
static_assert(alignof(ABP_SpawnableGhost_C) == 0x000008, "Wrong alignment on ABP_SpawnableGhost_C");
static_assert(sizeof(ABP_SpawnableGhost_C) == 0x000290, "Wrong size on ABP_SpawnableGhost_C");
static_assert(offsetof(ABP_SpawnableGhost_C, UberGraphFrame) == 0x000240, "Member 'ABP_SpawnableGhost_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SpawnableGhost_C, LoadingWidget) == 0x000248, "Member 'ABP_SpawnableGhost_C::LoadingWidget' has a wrong offset!");
static_assert(offsetof(ABP_SpawnableGhost_C, DefaultSceneRoot) == 0x000250, "Member 'ABP_SpawnableGhost_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SpawnableGhost_C, CurrentRotation) == 0x000258, "Member 'ABP_SpawnableGhost_C::CurrentRotation' has a wrong offset!");
static_assert(offsetof(ABP_SpawnableGhost_C, RotateEventHandle) == 0x000268, "Member 'ABP_SpawnableGhost_C::RotateEventHandle' has a wrong offset!");
static_assert(offsetof(ABP_SpawnableGhost_C, RightRotation) == 0x000270, "Member 'ABP_SpawnableGhost_C::RightRotation' has a wrong offset!");
static_assert(offsetof(ABP_SpawnableGhost_C, LeftRotation) == 0x00027C, "Member 'ABP_SpawnableGhost_C::LeftRotation' has a wrong offset!");
static_assert(offsetof(ABP_SpawnableGhost_C, AsyncLoadDone) == 0x000288, "Member 'ABP_SpawnableGhost_C::AsyncLoadDone' has a wrong offset!");

}


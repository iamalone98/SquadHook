#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameplayFunctionLibrary

#include "Basic.hpp"

#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.GetSquadPlayerController
// 0x0030 (0x0030 - 0x0000)
struct BP_GameplayFunctionLibrary_C_GetSquadPlayerController final
{
public:
	int32                                         Player_Index;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B6C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    Return_Value;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameplayFunctionLibrary_C_GetSquadPlayerController) == 0x000008, "Wrong alignment on BP_GameplayFunctionLibrary_C_GetSquadPlayerController");
static_assert(sizeof(BP_GameplayFunctionLibrary_C_GetSquadPlayerController) == 0x000030, "Wrong size on BP_GameplayFunctionLibrary_C_GetSquadPlayerController");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadPlayerController, Player_Index) == 0x000000, "Member 'BP_GameplayFunctionLibrary_C_GetSquadPlayerController::Player_Index' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadPlayerController, __WorldContext) == 0x000008, "Member 'BP_GameplayFunctionLibrary_C_GetSquadPlayerController::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadPlayerController, Return_Value) == 0x000010, "Member 'BP_GameplayFunctionLibrary_C_GetSquadPlayerController::Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadPlayerController, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_GameplayFunctionLibrary_C_GetSquadPlayerController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadPlayerController, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000020, "Member 'BP_GameplayFunctionLibrary_C_GetSquadPlayerController::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadPlayerController, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameplayFunctionLibrary_C_GetSquadPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.GetSquadGameState
// 0x0028 (0x0028 - 0x0000)
struct BP_GameplayFunctionLibrary_C_GetSquadGameState final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameState*                           Return_Value;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameState*                           K2Node_DynamicCast_AsSQGame_State;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameplayFunctionLibrary_C_GetSquadGameState) == 0x000008, "Wrong alignment on BP_GameplayFunctionLibrary_C_GetSquadGameState");
static_assert(sizeof(BP_GameplayFunctionLibrary_C_GetSquadGameState) == 0x000028, "Wrong size on BP_GameplayFunctionLibrary_C_GetSquadGameState");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameState, __WorldContext) == 0x000000, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameState, Return_Value) == 0x000008, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameState::Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameState, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameState, K2Node_DynamicCast_AsSQGame_State) == 0x000018, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameState::K2Node_DynamicCast_AsSQGame_State' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.GetSquadGameMode
// 0x0028 (0x0028 - 0x0000)
struct BP_GameplayFunctionLibrary_C_GetSquadGameMode final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameMode*                            Return_Value;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameMode*                            K2Node_DynamicCast_AsSQGame_Mode;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameplayFunctionLibrary_C_GetSquadGameMode) == 0x000008, "Wrong alignment on BP_GameplayFunctionLibrary_C_GetSquadGameMode");
static_assert(sizeof(BP_GameplayFunctionLibrary_C_GetSquadGameMode) == 0x000028, "Wrong size on BP_GameplayFunctionLibrary_C_GetSquadGameMode");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameMode, __WorldContext) == 0x000000, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameMode, Return_Value) == 0x000008, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameMode::Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameMode, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameMode::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameMode, K2Node_DynamicCast_AsSQGame_Mode) == 0x000018, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameMode::K2Node_DynamicCast_AsSQGame_Mode' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_GetSquadGameMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameplayFunctionLibrary_C_GetSquadGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.Show Hide Mouse
// 0x00F0 (0x00F0 - 0x0000)
struct BP_GameplayFunctionLibrary_C_Show_Hide_Mouse final
{
public:
	class UUserWidget*                            Focus;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Game_Input;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Display_Input;                                     // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UI_Input;                                          // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          New_Input_State;                                   // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    L_PC;                                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value_1;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6F[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQInputState                          K2Node_MakeStruct_SQInputState;                    // 0x0060(0x0020)(ContainsInstancedReference)
	struct FSQInputState                          CallFunc_RemoveInputStackState_ReturnValue;        // 0x0080(0x0020)(ContainsInstancedReference)
	struct FSQInputState                          CallFunc_AddInputStackState_ReturnValue;           // 0x00A0(0x0020)(ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B70[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQInputState                          K2Node_Select_Default;                             // 0x00C8(0x0020)(ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse) == 0x000008, "Wrong alignment on BP_GameplayFunctionLibrary_C_Show_Hide_Mouse");
static_assert(sizeof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse) == 0x0000F0, "Wrong size on BP_GameplayFunctionLibrary_C_Show_Hide_Mouse");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, Focus) == 0x000000, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::Focus' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, Game_Input) == 0x000008, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::Game_Input' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, Display_Input) == 0x000009, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::Display_Input' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, UI_Input) == 0x00000A, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::UI_Input' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, New_Input_State) == 0x00000B, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::New_Input_State' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, Reason) == 0x000010, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::Reason' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, __WorldContext) == 0x000020, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, L_PC) == 0x000028, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::L_PC' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, CallFunc_GetSquadPlayerController_Return_Value) == 0x000030, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::CallFunc_GetSquadPlayerController_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, CallFunc_GetSquadPlayerController_Return_Value_1) == 0x000038, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::CallFunc_GetSquadPlayerController_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, CallFunc_GetHUD_ReturnValue) == 0x000048, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, K2Node_DynamicCast_AsSQHUD) == 0x000050, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, K2Node_MakeStruct_SQInputState) == 0x000060, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::K2Node_MakeStruct_SQInputState' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, CallFunc_RemoveInputStackState_ReturnValue) == 0x000080, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::CallFunc_RemoveInputStackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, CallFunc_AddInputStackState_ReturnValue) == 0x0000A0, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::CallFunc_AddInputStackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, Temp_bool_Variable) == 0x0000C0, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, K2Node_Select_Default) == 0x0000C8, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Show_Hide_Mouse, CallFunc_BooleanAND_ReturnValue) == 0x0000E8, "Member 'BP_GameplayFunctionLibrary_C_Show_Hide_Mouse::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.Set Virtual Cursor QLOC
// 0x0018 (0x0018 - 0x0000)
struct BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B71[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PC;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC) == 0x000008, "Wrong alignment on BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC");
static_assert(sizeof(BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC) == 0x000018, "Wrong size on BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC, Enable) == 0x000000, "Member 'BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC::Enable' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC, PC) == 0x000008, "Member 'BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC::PC' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC, __WorldContext) == 0x000010, "Member 'BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC::__WorldContext' has a wrong offset!");

// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.Is Platform Console QLOC
// 0x0028 (0x0028 - 0x0000)
struct BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Console;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B72[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC) == 0x000008, "Wrong alignment on BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC");
static_assert(sizeof(BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC) == 0x000028, "Wrong size on BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC, __WorldContext) == 0x000000, "Member 'BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC, Is_Console) == 0x000008, "Member 'BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC::Is_Console' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC, CallFunc_GetPlatformName_ReturnValue) == 0x000010, "Member 'BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC, K2Node_SwitchString_CmpSuccess) == 0x000020, "Member 'BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

}


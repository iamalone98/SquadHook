#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FactionUnitDetails

#include "Basic.hpp"

#include "SQFactionCharacteristic_structs.hpp"
#include "UMG_structs.hpp"
#include "SQActionEntry_structs.hpp"
#include "Engine_structs.hpp"
#include "SQDeployableEntry_structs.hpp"
#include "ESQVehicleTag_structs.hpp"
#include "SQVehicleEntry_structs.hpp"
#include "Squad_structs.hpp"
#include "SQFactionEntry_structs.hpp"
#include "SQFactionSetupEntry_structs.hpp"


namespace SDK::Params
{

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.ExecuteUbergraph_W_FactionUnitDetails
// 0x0038 (0x0038 - 0x0000)
struct W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_VehicleTableList_C*                K2Node_DynamicCast_AsUMG_Vehicle_Table_List;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41F8[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails) == 0x000008, "Wrong alignment on W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails");
static_assert(sizeof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails) == 0x000038, "Wrong size on W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, EntryPoint) == 0x000000, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, K2Node_DynamicCast_AsUMG_Vehicle_Table_List) == 0x000018, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::K2Node_DynamicCast_AsUMG_Vehicle_Table_List' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'W_FactionUnitDetails_C_ExecuteUbergraph_W_FactionUnitDetails::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.FillFromFaction
// 0x0C78 (0x0C78 - 0x0000)
struct W_FactionUnitDetails_C_FillFromFaction final
{
public:
	class USQFactionSetup*                        Faction;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQLayer*                               Layer;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_TeamId;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnemyTeam;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41F9[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        FactionEntry;                                      // 0x0018(0x0580)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         TicketsTeam2;                                      // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TicketsTeam1;                                      // 0x059C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x05A0(0x0018)()
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup;           // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41FA[0x7];                                     // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetUnitTypeIcon_Icon;                     // 0x05C8(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetUnitTypeIcon_TypeName;                 // 0x05F0(0x0018)()
	class UBP_SQFaction_C*                        K2Node_DynamicCast_AsBP_SQFaction;                 // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFactionEntry_Success;               // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41FB[0x6];                                     // 0x0612(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry;          // 0x0618(0x0580)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0B98(0x0018)()
	struct FSQFactionSetupEntry                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0BB0(0x00A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0C59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41FC[0x6];                                     // 0x0C5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0C60(0x0018)()
};
static_assert(alignof(W_FactionUnitDetails_C_FillFromFaction) == 0x000008, "Wrong alignment on W_FactionUnitDetails_C_FillFromFaction");
static_assert(sizeof(W_FactionUnitDetails_C_FillFromFaction) == 0x000C78, "Wrong size on W_FactionUnitDetails_C_FillFromFaction");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, Faction) == 0x000000, "Member 'W_FactionUnitDetails_C_FillFromFaction::Faction' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, Layer) == 0x000008, "Member 'W_FactionUnitDetails_C_FillFromFaction::Layer' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, Param_TeamId) == 0x000010, "Member 'W_FactionUnitDetails_C_FillFromFaction::Param_TeamId' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, EnemyTeam) == 0x000014, "Member 'W_FactionUnitDetails_C_FillFromFaction::EnemyTeam' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, FactionEntry) == 0x000018, "Member 'W_FactionUnitDetails_C_FillFromFaction::FactionEntry' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, TicketsTeam2) == 0x000598, "Member 'W_FactionUnitDetails_C_FillFromFaction::TicketsTeam2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, TicketsTeam1) == 0x00059C, "Member 'W_FactionUnitDetails_C_FillFromFaction::TicketsTeam1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, Temp_text_Variable) == 0x0005A0, "Member 'W_FactionUnitDetails_C_FillFromFaction::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, K2Node_DynamicCast_AsBP_SQFaction_Setup) == 0x0005B8, "Member 'W_FactionUnitDetails_C_FillFromFaction::K2Node_DynamicCast_AsBP_SQFaction_Setup' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, K2Node_DynamicCast_bSuccess) == 0x0005C0, "Member 'W_FactionUnitDetails_C_FillFromFaction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, CallFunc_GetUnitTypeIcon_Icon) == 0x0005C8, "Member 'W_FactionUnitDetails_C_FillFromFaction::CallFunc_GetUnitTypeIcon_Icon' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, CallFunc_GetUnitTypeIcon_TypeName) == 0x0005F0, "Member 'W_FactionUnitDetails_C_FillFromFaction::CallFunc_GetUnitTypeIcon_TypeName' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, K2Node_DynamicCast_AsBP_SQFaction) == 0x000608, "Member 'W_FactionUnitDetails_C_FillFromFaction::K2Node_DynamicCast_AsBP_SQFaction' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, K2Node_DynamicCast_bSuccess_1) == 0x000610, "Member 'W_FactionUnitDetails_C_FillFromFaction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, CallFunc_TryGetFactionEntry_Success) == 0x000611, "Member 'W_FactionUnitDetails_C_FillFromFaction::CallFunc_TryGetFactionEntry_Success' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, CallFunc_TryGetFactionEntry_FactionEntry) == 0x000618, "Member 'W_FactionUnitDetails_C_FillFromFaction::CallFunc_TryGetFactionEntry_FactionEntry' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, Temp_text_Variable_1) == 0x000B98, "Member 'W_FactionUnitDetails_C_FillFromFaction::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, CallFunc_GetDataTableRowFromName_OutRow) == 0x000BB0, "Member 'W_FactionUnitDetails_C_FillFromFaction::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000C58, "Member 'W_FactionUnitDetails_C_FillFromFaction::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, Temp_bool_Variable) == 0x000C59, "Member 'W_FactionUnitDetails_C_FillFromFaction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillFromFaction, K2Node_Select_Default) == 0x000C60, "Member 'W_FactionUnitDetails_C_FillFromFaction::K2Node_Select_Default' has a wrong offset!");

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.GetChoiceIndex
// 0x0040 (0x0040 - 0x0000)
struct W_FactionUnitDetails_C_GetChoiceIndex final
{
public:
	class FName                                   ChoiceId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41FD[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQVoteSessionChoiceInfo               CallFunc_Array_Get_Item;                           // 0x0020(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_FactionUnitDetails_C_GetChoiceIndex) == 0x000008, "Wrong alignment on W_FactionUnitDetails_C_GetChoiceIndex");
static_assert(sizeof(W_FactionUnitDetails_C_GetChoiceIndex) == 0x000040, "Wrong size on W_FactionUnitDetails_C_GetChoiceIndex");
static_assert(offsetof(W_FactionUnitDetails_C_GetChoiceIndex, ChoiceId) == 0x000000, "Member 'W_FactionUnitDetails_C_GetChoiceIndex::ChoiceId' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetChoiceIndex, Param_Index) == 0x000008, "Member 'W_FactionUnitDetails_C_GetChoiceIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetChoiceIndex, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'W_FactionUnitDetails_C_GetChoiceIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetChoiceIndex, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'W_FactionUnitDetails_C_GetChoiceIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetChoiceIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'W_FactionUnitDetails_C_GetChoiceIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetChoiceIndex, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_FactionUnitDetails_C_GetChoiceIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetChoiceIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_FactionUnitDetails_C_GetChoiceIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetChoiceIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'W_FactionUnitDetails_C_GetChoiceIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetChoiceIndex, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000039, "Member 'W_FactionUnitDetails_C_GetChoiceIndex::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.GetFactionSetup
// 0x0030 (0x0030 - 0x0000)
struct W_FactionUnitDetails_C_GetFactionSetup final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        Faction;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FactionID;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41FF[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        CallFunc_GetFactionSetupByID_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FactionUnitDetails_C_GetFactionSetup) == 0x000008, "Wrong alignment on W_FactionUnitDetails_C_GetFactionSetup");
static_assert(sizeof(W_FactionUnitDetails_C_GetFactionSetup) == 0x000030, "Wrong size on W_FactionUnitDetails_C_GetFactionSetup");
static_assert(offsetof(W_FactionUnitDetails_C_GetFactionSetup, Param_Index) == 0x000000, "Member 'W_FactionUnitDetails_C_GetFactionSetup::Param_Index' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetFactionSetup, Faction) == 0x000008, "Member 'W_FactionUnitDetails_C_GetFactionSetup::Faction' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetFactionSetup, FactionID) == 0x000010, "Member 'W_FactionUnitDetails_C_GetFactionSetup::FactionID' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetFactionSetup, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_FactionUnitDetails_C_GetFactionSetup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetFactionSetup, CallFunc_Percent_IntInt_ReturnValue) == 0x00001C, "Member 'W_FactionUnitDetails_C_GetFactionSetup::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetFactionSetup, CallFunc_NotEqual_NameName_ReturnValue) == 0x000020, "Member 'W_FactionUnitDetails_C_GetFactionSetup::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetFactionSetup, CallFunc_GetFactionSetupByID_ReturnValue) == 0x000028, "Member 'W_FactionUnitDetails_C_GetFactionSetup::CallFunc_GetFactionSetupByID_ReturnValue' has a wrong offset!");

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.FillVehicles
// 0x00D8 (0x00D8 - 0x0000)
struct W_FactionUnitDetails_C_FillVehicles final
{
public:
	class USQFactionSetup*                        Faction;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowCount;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4200[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4201[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQAvailability_Vehicle*                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4202[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4203[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4204[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Ruleset_Vehicle_C*                  K2Node_DynamicCast_AsBP_Ruleset_Vehicle;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4205[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_VehicleTableItem_C*                CallFunc_GetVehicleRow_Row;                        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetVehicleRow_Valid;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4206[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4207[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4208[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUMG_VehicleTableList_C*>        CallFunc_Map_Values_Values;                        // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4209[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_VehicleTableList_C*                CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x00B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_420A[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_VehicleTableList_C*                CallFunc_Map_Find_Value_1;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420B[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_VehicleTableList_C*                K2Node_Select_Default_1;                           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FactionUnitDetails_C_FillVehicles) == 0x000008, "Wrong alignment on W_FactionUnitDetails_C_FillVehicles");
static_assert(sizeof(W_FactionUnitDetails_C_FillVehicles) == 0x0000D8, "Wrong size on W_FactionUnitDetails_C_FillVehicles");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, Faction) == 0x000000, "Member 'W_FactionUnitDetails_C_FillVehicles::Faction' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, RowCount) == 0x000008, "Member 'W_FactionUnitDetails_C_FillVehicles::RowCount' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_FactionUnitDetails_C_FillVehicles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'W_FactionUnitDetails_C_FillVehicles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, Temp_int_Variable) == 0x000020, "Member 'W_FactionUnitDetails_C_FillVehicles::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000030, "Member 'W_FactionUnitDetails_C_FillVehicles::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_FactionUnitDetails_C_FillVehicles::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_MakeLiteralName_ReturnValue) == 0x00003C, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, Temp_bool_Variable) == 0x000044, "Member 'W_FactionUnitDetails_C_FillVehicles::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'W_FactionUnitDetails_C_FillVehicles::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000050, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, K2Node_DynamicCast_AsBP_Ruleset_Vehicle) == 0x000058, "Member 'W_FactionUnitDetails_C_FillVehicles::K2Node_DynamicCast_AsBP_Ruleset_Vehicle' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'W_FactionUnitDetails_C_FillVehicles::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_GetVehicleRow_Row) == 0x000068, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_GetVehicleRow_Row' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_GetVehicleRow_Valid) == 0x000070, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_GetVehicleRow_Valid' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'W_FactionUnitDetails_C_FillVehicles::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, Temp_bool_Variable_1) == 0x00007C, "Member 'W_FactionUnitDetails_C_FillVehicles::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Map_Values_Values) == 0x000088, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Map_Find_Value) == 0x000098, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, K2Node_Select_Default) == 0x0000B0, "Member 'W_FactionUnitDetails_C_FillVehicles::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Map_Find_Value_1) == 0x0000C0, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Map_Find_ReturnValue_1) == 0x0000C8, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C9, "Member 'W_FactionUnitDetails_C_FillVehicles::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillVehicles, K2Node_Select_Default_1) == 0x0000D0, "Member 'W_FactionUnitDetails_C_FillVehicles::K2Node_Select_Default_1' has a wrong offset!");

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.GetVehicleRow
// 0x0278 (0x0278 - 0x0000)
struct W_FactionUnitDetails_C_GetVehicleRow final
{
public:
	class USQAvailability_Vehicle*                Settings;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_420C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Ruleset_Vehicle_C*                  RuleSet;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_VehicleTableItem_C*                Row;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OutAmphibious;                                     // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420D[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutTickets;                                        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutTime;                                           // 0x0028(0x0018)(Edit, BlueprintVisible)
	int32                                         OutNumeber;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_420E[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              OutIcon;                                           // 0x0048(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   OutDisplay;                                        // 0x0070(0x0018)(Edit, BlueprintVisible)
	class UUMG_VehicleTableItem_C*                OutRow;                                            // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_VehicleTableItem_C*                CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLimitedCount_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_420F[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A0(0x0018)()
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4210[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTicketsForVehicleKill_Out_Tickets;     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00C8(0x0018)()
	class USQRestriction_Delay*                   K2Node_DynamicCast_AsSQRestriction_Delay;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4211[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalMinutes_ReturnValue;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQVehicleEntry                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F0(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4212[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0168(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0180(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4213[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4214[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x01D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01F0(0x0040)(HasGetValueTypeHash)
	ESQVehicleTag                                 Temp_byte_Variable;                                // 0x0230(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4215[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0238(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0248(0x0018)()
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4216[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_VehicleTableItem_C*                CallFunc_Array_Get_Item;                           // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_FactionUnitDetails_C_GetVehicleRow) == 0x000008, "Wrong alignment on W_FactionUnitDetails_C_GetVehicleRow");
static_assert(sizeof(W_FactionUnitDetails_C_GetVehicleRow) == 0x000278, "Wrong size on W_FactionUnitDetails_C_GetVehicleRow");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, Settings) == 0x000000, "Member 'W_FactionUnitDetails_C_GetVehicleRow::Settings' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, RowIndex) == 0x000008, "Member 'W_FactionUnitDetails_C_GetVehicleRow::RowIndex' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, RuleSet) == 0x000010, "Member 'W_FactionUnitDetails_C_GetVehicleRow::RuleSet' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, Row) == 0x000018, "Member 'W_FactionUnitDetails_C_GetVehicleRow::Row' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, Valid) == 0x000020, "Member 'W_FactionUnitDetails_C_GetVehicleRow::Valid' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, OutAmphibious) == 0x000021, "Member 'W_FactionUnitDetails_C_GetVehicleRow::OutAmphibious' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, OutTickets) == 0x000024, "Member 'W_FactionUnitDetails_C_GetVehicleRow::OutTickets' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, OutTime) == 0x000028, "Member 'W_FactionUnitDetails_C_GetVehicleRow::OutTime' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, OutNumeber) == 0x000040, "Member 'W_FactionUnitDetails_C_GetVehicleRow::OutNumeber' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, OutIcon) == 0x000048, "Member 'W_FactionUnitDetails_C_GetVehicleRow::OutIcon' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, OutDisplay) == 0x000070, "Member 'W_FactionUnitDetails_C_GetVehicleRow::OutDisplay' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, OutRow) == 0x000088, "Member 'W_FactionUnitDetails_C_GetVehicleRow::OutRow' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Create_ReturnValue) == 0x000090, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_GetLimitedCount_ReturnValue) == 0x000098, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_GetLimitedCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A0, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x0000B8, "Member 'W_FactionUnitDetails_C_GetVehicleRow::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'W_FactionUnitDetails_C_GetVehicleRow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_GetTicketsForVehicleKill_Out_Tickets) == 0x0000C4, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_GetTicketsForVehicleKill_Out_Tickets' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000C8, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, K2Node_DynamicCast_AsSQRestriction_Delay) == 0x0000E0, "Member 'W_FactionUnitDetails_C_GetVehicleRow::K2Node_DynamicCast_AsSQRestriction_Delay' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'W_FactionUnitDetails_C_GetVehicleRow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_GetTotalMinutes_ReturnValue) == 0x0000EC, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_GetTotalMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F0, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000160, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000161, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_FTrunc_ReturnValue) == 0x000164, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000168, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, K2Node_MakeStruct_FormatArgumentData) == 0x000180, "Member 'W_FactionUnitDetails_C_GetVehicleRow::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Fraction_ReturnValue) == 0x0001C0, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001C4, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_TextIsEmpty_ReturnValue) == 0x0001C8, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_FTrunc_ReturnValue_1) == 0x0001CC, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Not_PreBool_ReturnValue) == 0x0001D0, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Conv_IntToText_ReturnValue_3) == 0x0001D8, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001F0, "Member 'W_FactionUnitDetails_C_GetVehicleRow::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, Temp_byte_Variable) == 0x000230, "Member 'W_FactionUnitDetails_C_GetVehicleRow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, K2Node_MakeArray_Array) == 0x000238, "Member 'W_FactionUnitDetails_C_GetVehicleRow::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Format_ReturnValue) == 0x000248, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Set_Contains_ReturnValue) == 0x000260, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Array_Add_ReturnValue) == 0x000264, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Array_Get_Item) == 0x000268, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetVehicleRow, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000270, "Member 'W_FactionUnitDetails_C_GetVehicleRow::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.FillRightTable
// 0x0218 (0x0218 - 0x0000)
struct W_FactionUnitDetails_C_FillRightTable final
{
public:
	class USQFactionSetup*                        Faction;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FOBVisible;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4217[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RowIndex;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4218[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4219[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421B[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421C[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421D[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_SimpleTableItem_C*                 CallFunc_GetSimpleRow_Row;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421E[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionCharacteristic               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421F[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4220[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_SimpleTableItem_C*                 CallFunc_GetSimpleRow_Row_1;                       // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4221[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_SimpleTableItem_C*                 CallFunc_GetSimpleRow_Row_2;                       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4222[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQAvailability_Deployable*             CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4223[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQDeployableSettings_C*             K2Node_DynamicCast_AsBP_SQDeployable_Settings;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4224[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQDeployableEntry                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00F0(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4225[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0160(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class USQAvailability_Action*                 CallFunc_Array_Get_Item_2;                         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4226[0x1];                                     // 0x0197(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQActionEntry                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0198(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4227[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x01F0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_FactionUnitDetails_C_FillRightTable) == 0x000008, "Wrong alignment on W_FactionUnitDetails_C_FillRightTable");
static_assert(sizeof(W_FactionUnitDetails_C_FillRightTable) == 0x000218, "Wrong size on W_FactionUnitDetails_C_FillRightTable");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Faction) == 0x000000, "Member 'W_FactionUnitDetails_C_FillRightTable::Faction' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, FOBVisible) == 0x000008, "Member 'W_FactionUnitDetails_C_FillRightTable::FOBVisible' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, RowIndex) == 0x00000C, "Member 'W_FactionUnitDetails_C_FillRightTable::RowIndex' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_bool_Variable) == 0x000010, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_int_Array_Index_Variable) == 0x000014, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_byte_Variable) == 0x00001D, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_int_Variable) == 0x000020, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_byte_Variable_1) == 0x000028, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_bool_Variable_1) == 0x00003C, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_byte_Variable_2) == 0x00003D, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_int_Variable_1) == 0x000040, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_int_Array_Index_Variable_2) == 0x00004C, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_byte_Variable_3) == 0x000050, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_bool_Variable_2) == 0x000051, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, K2Node_Select_Default) == 0x000058, "Member 'W_FactionUnitDetails_C_FillRightTable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_GetSimpleRow_Row) == 0x000060, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_GetSimpleRow_Row' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Array_Get_Item) == 0x000068, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Array_Length_ReturnValue_2) == 0x00009C, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, K2Node_Select_Default_1) == 0x0000A1, "Member 'W_FactionUnitDetails_C_FillRightTable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_GetSimpleRow_Row_1) == 0x0000A8, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_GetSimpleRow_Row_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B0, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_int_Variable_2) == 0x0000B4, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000B8, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_byte_Variable_4) == 0x0000BC, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, Temp_byte_Variable_5) == 0x0000BD, "Member 'W_FactionUnitDetails_C_FillRightTable::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_GetSimpleRow_Row_2) == 0x0000C0, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_GetSimpleRow_Row_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, K2Node_Select_Default_2) == 0x0000C8, "Member 'W_FactionUnitDetails_C_FillRightTable::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Array_Length_ReturnValue_3) == 0x0000D8, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DC, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, K2Node_DynamicCast_AsBP_SQDeployable_Settings) == 0x0000E0, "Member 'W_FactionUnitDetails_C_FillRightTable::K2Node_DynamicCast_AsBP_SQDeployable_Settings' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'W_FactionUnitDetails_C_FillRightTable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Array_Contains_ReturnValue) == 0x0000E9, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000F0, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000158, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000160, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Array_Get_Item_2) == 0x000188, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Array_Length_ReturnValue_4) == 0x000190, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_IsValid_ReturnValue) == 0x000194, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Less_IntInt_ReturnValue_2) == 0x000195, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_IsValid_ReturnValue_1) == 0x000196, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000198, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0001E8, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_FillRightTable, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x0001F0, "Member 'W_FactionUnitDetails_C_FillRightTable::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.GetSimpleRow
// 0x0028 (0x0028 - 0x0000)
struct W_FactionUnitDetails_C_GetSimpleRow final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4228[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_SimpleTableItem_C*                 Row;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_SimpleTableItem_C*                 CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_SimpleTableItem_C*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4229[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FactionUnitDetails_C_GetSimpleRow) == 0x000008, "Wrong alignment on W_FactionUnitDetails_C_GetSimpleRow");
static_assert(sizeof(W_FactionUnitDetails_C_GetSimpleRow) == 0x000028, "Wrong size on W_FactionUnitDetails_C_GetSimpleRow");
static_assert(offsetof(W_FactionUnitDetails_C_GetSimpleRow, Param_Index) == 0x000000, "Member 'W_FactionUnitDetails_C_GetSimpleRow::Param_Index' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetSimpleRow, Row) == 0x000008, "Member 'W_FactionUnitDetails_C_GetSimpleRow::Row' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetSimpleRow, CallFunc_Create_ReturnValue) == 0x000010, "Member 'W_FactionUnitDetails_C_GetSimpleRow::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetSimpleRow, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_FactionUnitDetails_C_GetSimpleRow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetSimpleRow, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'W_FactionUnitDetails_C_GetSimpleRow::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_GetSimpleRow, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'W_FactionUnitDetails_C_GetSimpleRow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.UpdateUnitTypeIcon
// 0x0040 (0x0040 - 0x0000)
struct W_FactionUnitDetails_C_UpdateUnitTypeIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              InRoleIcon;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   InUnitName;                                        // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_FactionUnitDetails_C_UpdateUnitTypeIcon) == 0x000008, "Wrong alignment on W_FactionUnitDetails_C_UpdateUnitTypeIcon");
static_assert(sizeof(W_FactionUnitDetails_C_UpdateUnitTypeIcon) == 0x000040, "Wrong size on W_FactionUnitDetails_C_UpdateUnitTypeIcon");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateUnitTypeIcon, InRoleIcon) == 0x000000, "Member 'W_FactionUnitDetails_C_UpdateUnitTypeIcon::InRoleIcon' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateUnitTypeIcon, InUnitName) == 0x000028, "Member 'W_FactionUnitDetails_C_UpdateUnitTypeIcon::InUnitName' has a wrong offset!");

// Function W_FactionUnitDetails.W_FactionUnitDetails_C.UpdateLayerAvailability
// 0x0010 (0x0010 - 0x0000)
struct W_FactionUnitDetails_C_UpdateLayerAvailability final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FactionUnitDetails_C_UpdateLayerAvailability) == 0x000001, "Wrong alignment on W_FactionUnitDetails_C_UpdateLayerAvailability");
static_assert(sizeof(W_FactionUnitDetails_C_UpdateLayerAvailability) == 0x000010, "Wrong size on W_FactionUnitDetails_C_UpdateLayerAvailability");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_byte_Variable) == 0x000000, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_byte_Variable_1) == 0x000001, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_bool_Variable) == 0x000002, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_byte_Variable_2) == 0x000003, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_byte_Variable_3) == 0x000004, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_bool_Variable_1) == 0x000005, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_byte_Variable_4) == 0x000006, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_byte_Variable_5) == 0x000007, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_bool_Variable_2) == 0x000008, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_byte_Variable_6) == 0x000009, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_byte_Variable_7) == 0x00000A, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, Temp_bool_Variable_3) == 0x00000B, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, K2Node_Select_Default) == 0x00000C, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, K2Node_Select_Default_1) == 0x00000D, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, K2Node_Select_Default_2) == 0x00000E, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_FactionUnitDetails_C_UpdateLayerAvailability, K2Node_Select_Default_3) == 0x00000F, "Member 'W_FactionUnitDetails_C_UpdateLayerAvailability::K2Node_Select_Default_3' has a wrong offset!");

}


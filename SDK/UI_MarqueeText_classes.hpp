#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_MarqueeText

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_MarqueeText.UI_MarqueeText_C
// 0x0050 (0x02B0 - 0x0260)
class UUI_MarqueeText_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                DetectionButton;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MainText;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 StartText;                                         // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         LettersLimit;                                      // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         TextLen;                                           // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChopedNum;                                         // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MarqueeInterval;                                   // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           MarqueeIntervalTimer;                              // 0x0298(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DotsEnding;                                        // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3B9E[0x3];                                     // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResetNameLimitChop;                                // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  StartJustification;                                // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_MarqueeText(int32 EntryPoint);
	void BndEvt__UI_MarqueeText_DetectionButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_MarqueeText_DetectionButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void UpdateFont(const struct FSlateFontInfo& InFontInfo, ETextJustify Param_StartJustification, const struct FSlateColor& TextColor);
	void SetStartText(const class FString& NewText);
	void ResetText();
	void MarqueeIteration();

	void GetMainButton(class UButton** Param_DetectionButton) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_MarqueeText_C">();
	}
	static class UUI_MarqueeText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_MarqueeText_C>();
	}
};
static_assert(alignof(UUI_MarqueeText_C) == 0x000008, "Wrong alignment on UUI_MarqueeText_C");
static_assert(sizeof(UUI_MarqueeText_C) == 0x0002B0, "Wrong size on UUI_MarqueeText_C");
static_assert(offsetof(UUI_MarqueeText_C, UberGraphFrame) == 0x000260, "Member 'UUI_MarqueeText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, DetectionButton) == 0x000268, "Member 'UUI_MarqueeText_C::DetectionButton' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, MainText) == 0x000270, "Member 'UUI_MarqueeText_C::MainText' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, StartText) == 0x000278, "Member 'UUI_MarqueeText_C::StartText' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, LettersLimit) == 0x000288, "Member 'UUI_MarqueeText_C::LettersLimit' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, TextLen) == 0x00028C, "Member 'UUI_MarqueeText_C::TextLen' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, ChopedNum) == 0x000290, "Member 'UUI_MarqueeText_C::ChopedNum' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, MarqueeInterval) == 0x000294, "Member 'UUI_MarqueeText_C::MarqueeInterval' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, MarqueeIntervalTimer) == 0x000298, "Member 'UUI_MarqueeText_C::MarqueeIntervalTimer' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, DotsEnding) == 0x0002A0, "Member 'UUI_MarqueeText_C::DotsEnding' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, ResetNameLimitChop) == 0x0002A4, "Member 'UUI_MarqueeText_C::ResetNameLimitChop' has a wrong offset!");
static_assert(offsetof(UUI_MarqueeText_C, StartJustification) == 0x0002A8, "Member 'UUI_MarqueeText_C::StartJustification' has a wrong offset!");

}


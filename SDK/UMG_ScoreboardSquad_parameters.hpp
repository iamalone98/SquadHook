#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_ScoreboardSquad

#include "Basic.hpp"

#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function UMG_ScoreboardSquad.UMG_ScoreboardSquad_C.ExecuteUbergraph_UMG_ScoreboardSquad
// 0x0004 (0x0004 - 0x0000)
struct UMG_ScoreboardSquad_C_ExecuteUbergraph_UMG_ScoreboardSquad final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_ScoreboardSquad_C_ExecuteUbergraph_UMG_ScoreboardSquad) == 0x000004, "Wrong alignment on UMG_ScoreboardSquad_C_ExecuteUbergraph_UMG_ScoreboardSquad");
static_assert(sizeof(UMG_ScoreboardSquad_C_ExecuteUbergraph_UMG_ScoreboardSquad) == 0x000004, "Wrong size on UMG_ScoreboardSquad_C_ExecuteUbergraph_UMG_ScoreboardSquad");
static_assert(offsetof(UMG_ScoreboardSquad_C_ExecuteUbergraph_UMG_ScoreboardSquad, EntryPoint) == 0x000000, "Member 'UMG_ScoreboardSquad_C_ExecuteUbergraph_UMG_ScoreboardSquad::EntryPoint' has a wrong offset!");

// Function UMG_ScoreboardSquad.UMG_ScoreboardSquad_C.Sort Squad
// 0x00D0 (0x00D0 - 0x0000)
struct UMG_ScoreboardSquad_C_Sort_Squad final
{
public:
	TArray<class ASQPlayerState*>                 Final_List;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ASQPlayerState*>                 L_FT4;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ASQPlayerState*>                 L_FT3;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ASQPlayerState*>                 L_FT2;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ASQPlayerState*>                 L_FT1;                                             // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2915[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerWidgetPair                      CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2916[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2917[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2918[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamPosition_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2919[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASQPlayerState*>                 K2Node_Select_Default;                             // 0x00C0(0x0010)(ReferenceParm)
};
static_assert(alignof(UMG_ScoreboardSquad_C_Sort_Squad) == 0x000008, "Wrong alignment on UMG_ScoreboardSquad_C_Sort_Squad");
static_assert(sizeof(UMG_ScoreboardSquad_C_Sort_Squad) == 0x0000D0, "Wrong size on UMG_ScoreboardSquad_C_Sort_Squad");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, Final_List) == 0x000000, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::Final_List' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, L_FT4) == 0x000010, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::L_FT4' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, L_FT3) == 0x000020, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::L_FT3' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, L_FT2) == 0x000030, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::L_FT2' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, L_FT1) == 0x000040, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::L_FT1' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, Temp_int_Array_Index_Variable) == 0x000050, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, Temp_int_Variable) == 0x000054, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Array_Get_Item) == 0x000070, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Array_Find_ReturnValue) == 0x000084, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000088, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Max_ReturnValue) == 0x000090, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_IsValid_ReturnValue_1) == 0x0000A4, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Less_IntInt_ReturnValue) == 0x0000A5, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_GetFireTeamPosition_ReturnValue) == 0x0000A8, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_GetFireTeamPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_GetFireTeamIndex_ReturnValue) == 0x0000AC, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Max_ReturnValue_1) == 0x0000B0, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Max_ReturnValue_2) == 0x0000B4, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_ScoreboardSquad_C_Sort_Squad, K2Node_Select_Default) == 0x0000C0, "Member 'UMG_ScoreboardSquad_C_Sort_Squad::K2Node_Select_Default' has a wrong offset!");

}


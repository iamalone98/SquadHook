#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ruleset_Vehicle

#include "Basic.hpp"

#include "TeamVehicleRuleelement_structs.hpp"
#include "VehicleRuleElement_structs.hpp"
#include "Squad_structs.hpp"
#include "ESQVehicleTag_structs.hpp"


namespace SDK::Params
{

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.ExecuteUbergraph_BP_Ruleset_Vehicle
// 0x0058 (0x0058 - 0x0000)
struct BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4757[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    K2Node_Event_Killer;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_Event_Victim;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             K2Node_Event_DestroyedVehicle;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetVictimTeamState_Out_Success;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4758[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           CallFunc_GetVictimTeamState_Out_TeamState;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstigatorTeamState_Out_Success;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4759[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           CallFunc_GetInstigatorTeamState_Out_TeamState;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVehicleRuleElement>            CallFunc_SelectRules_Out_Rules;                    // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle");
static_assert(sizeof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle) == 0x000058, "Wrong size on BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, EntryPoint) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, K2Node_Event_Killer) == 0x000008, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::K2Node_Event_Killer' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, K2Node_Event_Victim) == 0x000010, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::K2Node_Event_Victim' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, K2Node_Event_DestroyedVehicle) == 0x000018, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::K2Node_Event_DestroyedVehicle' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, CallFunc_GetVictimTeamState_Out_Success) == 0x000021, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::CallFunc_GetVictimTeamState_Out_Success' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, CallFunc_GetVictimTeamState_Out_TeamState) == 0x000028, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::CallFunc_GetVictimTeamState_Out_TeamState' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000030, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, CallFunc_GetInstigatorTeamState_Out_Success) == 0x000039, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::CallFunc_GetInstigatorTeamState_Out_Success' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, CallFunc_GetInstigatorTeamState_Out_TeamState) == 0x000040, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::CallFunc_GetInstigatorTeamState_Out_TeamState' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle, CallFunc_SelectRules_Out_Rules) == 0x000048, "Member 'BP_Ruleset_Vehicle_C_ExecuteUbergraph_BP_Ruleset_Vehicle::CallFunc_SelectRules_Out_Rules' has a wrong offset!");

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.VehicleDestroyed
// 0x0018 (0x0018 - 0x0000)
struct BP_Ruleset_Vehicle_C_VehicleDestroyed final
{
public:
	class ASQPlayerController*                    Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    Victim;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             DestroyedVehicle;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_VehicleDestroyed) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_VehicleDestroyed");
static_assert(sizeof(BP_Ruleset_Vehicle_C_VehicleDestroyed) == 0x000018, "Wrong size on BP_Ruleset_Vehicle_C_VehicleDestroyed");
static_assert(offsetof(BP_Ruleset_Vehicle_C_VehicleDestroyed, Killer) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_VehicleDestroyed::Killer' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_VehicleDestroyed, Victim) == 0x000008, "Member 'BP_Ruleset_Vehicle_C_VehicleDestroyed::Victim' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_VehicleDestroyed, DestroyedVehicle) == 0x000010, "Member 'BP_Ruleset_Vehicle_C_VehicleDestroyed::DestroyedVehicle' has a wrong offset!");

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.ApplyRules
// 0x0148 (0x0148 - 0x0000)
struct BP_Ruleset_Vehicle_C_ApplyRules final
{
public:
	TArray<struct FVehicleRuleElement>            In_Vehicle_Rule;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_SQVehicleSettings_C*                In_Vehicle_Settings;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    In_Killer;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           In_Victim_TeamState;                               // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           In_Kill_Instigator_TeamState;                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 L_Reason;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	ESQTeam                                       L_VehicleTeam;                                     // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRulesetEnabled_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475A[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTickets_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475B[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475C[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0060(0x0018)()
	bool                                          CallFunc_GetDisplayName_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475D[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475E[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVehicleRuleElement                    CallFunc_Array_Get_Item;                           // 0x00A0(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_475F[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4760[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_ApplyRules) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_ApplyRules");
static_assert(sizeof(BP_Ruleset_Vehicle_C_ApplyRules) == 0x000148, "Wrong size on BP_Ruleset_Vehicle_C_ApplyRules");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, In_Vehicle_Rule) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::In_Vehicle_Rule' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, In_Vehicle_Settings) == 0x000010, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::In_Vehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, In_Killer) == 0x000018, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::In_Killer' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, In_Victim_TeamState) == 0x000020, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::In_Victim_TeamState' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, In_Kill_Instigator_TeamState) == 0x000028, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::In_Kill_Instigator_TeamState' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, L_Reason) == 0x000030, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::L_Reason' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, L_VehicleTeam) == 0x000040, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::L_VehicleTeam' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_GetRulesetEnabled_ReturnValue) == 0x000041, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_GetRulesetEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_GetTickets_ReturnValue) == 0x000044, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_GetTickets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, K2Node_DynamicCast_AsSQPlayer_State) == 0x000050, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_GetDisplayName_OutDisplayName) == 0x000060, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_GetDisplayName_ReturnValue) == 0x000078, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_Conv_TextToString_ReturnValue) == 0x000080, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_Subtract_IntInt_ReturnValue) == 0x000100, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, Temp_bool_Variable) == 0x000108, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_Conv_StringToName_ReturnValue) == 0x00010C, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, Temp_string_Variable) == 0x000118, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, K2Node_Select_Default) == 0x000128, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_ApplyRules, CallFunc_Concat_StrStr_ReturnValue) == 0x000138, "Member 'BP_Ruleset_Vehicle_C_ApplyRules::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.GetInstigatorTeamState
// 0x0058 (0x0058 - 0x0000)
struct BP_Ruleset_Vehicle_C_GetInstigatorTeamState final
{
public:
	class ASQPlayerController*                    In_Killer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    In_Victim;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             In_Vehicle;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_Success;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4761[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           Out_TeamState;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4762[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISQTeamInterface>      CallFunc_GetTeamId_self_CastInput;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTeamId_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4763[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           CallFunc_TryGetTeamState_OutTeamState;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetTeamState_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_GetInstigatorTeamState");
static_assert(sizeof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState) == 0x000058, "Wrong size on BP_Ruleset_Vehicle_C_GetInstigatorTeamState");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, In_Killer) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::In_Killer' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, In_Victim) == 0x000008, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::In_Victim' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, In_Vehicle) == 0x000010, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::In_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, Out_Success) == 0x000018, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::Out_Success' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, Out_TeamState) == 0x000020, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::Out_TeamState' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, CallFunc_GetTeamId_self_CastInput) == 0x000030, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::CallFunc_GetTeamId_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, CallFunc_GetTeamId_ReturnValue) == 0x000040, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::CallFunc_GetTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, CallFunc_TryGetTeamState_OutTeamState) == 0x000048, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::CallFunc_TryGetTeamState_OutTeamState' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, CallFunc_TryGetTeamState_ReturnValue) == 0x000050, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::CallFunc_TryGetTeamState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, CallFunc_IsValid_ReturnValue_2) == 0x000052, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, CallFunc_IsValid_ReturnValue_3) == 0x000053, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetInstigatorTeamState, CallFunc_IsValid_ReturnValue_4) == 0x000054, "Member 'BP_Ruleset_Vehicle_C_GetInstigatorTeamState::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.GetVictimTeamState
// 0x0080 (0x0080 - 0x0000)
struct BP_Ruleset_Vehicle_C_GetVictimTeamState final
{
public:
	class ASQPlayerController*                    In_Killer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    In_Victim;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             In_Vehicle;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_Success;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4764[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           Out_TeamState;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4765[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISQTeamInterface>      CallFunc_GetTeamId_self_CastInput;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTeamId_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4766[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           CallFunc_TryGetTeamState_OutTeamState;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetTeamState_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4767[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQLayer*                               CallFunc_TryGetCurrentLayer_OutLayer;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetCurrentLayer_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4768[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTeamConfig_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4769[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_476A[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_GetVictimTeamState) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_GetVictimTeamState");
static_assert(sizeof(BP_Ruleset_Vehicle_C_GetVictimTeamState) == 0x000080, "Wrong size on BP_Ruleset_Vehicle_C_GetVictimTeamState");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, In_Killer) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::In_Killer' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, In_Victim) == 0x000008, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::In_Victim' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, In_Vehicle) == 0x000010, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::In_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, Out_Success) == 0x000018, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::Out_Success' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, Out_TeamState) == 0x000020, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::Out_TeamState' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_GetTeamId_self_CastInput) == 0x000030, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_GetTeamId_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_GetTeamId_ReturnValue) == 0x000040, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_GetTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_IsValid_ReturnValue_1) == 0x000045, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_TryGetTeamState_OutTeamState) == 0x000048, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_TryGetTeamState_OutTeamState' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_TryGetTeamState_ReturnValue) == 0x000050, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_TryGetTeamState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_IsValid_ReturnValue_2) == 0x000051, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_TryGetCurrentLayer_OutLayer) == 0x000058, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_TryGetCurrentLayer_OutLayer' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_TryGetCurrentLayer_ReturnValue) == 0x000060, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_TryGetCurrentLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_HasTeamConfig_ReturnValue) == 0x000070, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_HasTeamConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_IsValid_ReturnValue_3) == 0x000071, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_IsValid_ReturnValue_4) == 0x000072, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetVictimTeamState, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_Ruleset_Vehicle_C_GetVictimTeamState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.FindRuleList
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Ruleset_Vehicle_C_FindRuleList final
{
public:
	int32                                         In_TeamId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeamRelationShip                           In_Relationship;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_Found;                                         // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_476B[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeamVehicleRuleElement                Out_Rule;                                          // 0x0008(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_476C[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_476D[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeamVehicleRuleElement                CallFunc_Array_Get_Item;                           // 0x0080(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_FindRuleList) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_FindRuleList");
static_assert(sizeof(BP_Ruleset_Vehicle_C_FindRuleList) == 0x0000F8, "Wrong size on BP_Ruleset_Vehicle_C_FindRuleList");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, In_TeamId) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::In_TeamId' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, In_Relationship) == 0x000004, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::In_Relationship' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, Out_Found) == 0x000005, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::Out_Found' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, Out_Rule) == 0x000008, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::Out_Rule' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, CallFunc_Conv_IntToByte_ReturnValue) == 0x000070, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, CallFunc_GetValidValue_ReturnValue) == 0x000078, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, CallFunc_Set_Contains_ReturnValue) == 0x0000ED, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, CallFunc_Array_Contains_ReturnValue) == 0x0000EE, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, CallFunc_BooleanAND_ReturnValue) == 0x0000EF, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRuleList, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_Ruleset_Vehicle_C_FindRuleList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.FindRules
// 0x0158 (0x0158 - 0x0000)
struct BP_Ruleset_Vehicle_C_FindRules final
{
public:
	struct FTeamVehicleRuleElement                In_Team_Rule;                                      // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UBP_SQVehicleSettings_C*                In_Vehicle_Setting;                                // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVehicleRuleElement>            Out_Rules;                                         // 0x0070(0x0010)(Parm, OutParm)
	TArray<struct FVehicleRuleElement>            L_Out_Rules;                                       // 0x0080(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           L_RowNames;                                        // 0x0090(0x0010)(Edit, BlueprintVisible)
	ESQTeam                                       L_VehicleTeam;                                     // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_476E[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00A8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_476F[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVehicleRuleElement                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x00D0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4770[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4771[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESQVehicleTag>                         CallFunc_Set_ToArray_Result;                       // 0x0140(0x0010)(ReferenceParm)
	bool                                          CallFunc_HasTags_Out_HasTag;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_FindRules) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_FindRules");
static_assert(sizeof(BP_Ruleset_Vehicle_C_FindRules) == 0x000158, "Wrong size on BP_Ruleset_Vehicle_C_FindRules");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, In_Team_Rule) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_FindRules::In_Team_Rule' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, In_Vehicle_Setting) == 0x000068, "Member 'BP_Ruleset_Vehicle_C_FindRules::In_Vehicle_Setting' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, Out_Rules) == 0x000070, "Member 'BP_Ruleset_Vehicle_C_FindRules::Out_Rules' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, L_Out_Rules) == 0x000080, "Member 'BP_Ruleset_Vehicle_C_FindRules::L_Out_Rules' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, L_RowNames) == 0x000090, "Member 'BP_Ruleset_Vehicle_C_FindRules::L_RowNames' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, L_VehicleTeam) == 0x0000A0, "Member 'BP_Ruleset_Vehicle_C_FindRules::L_VehicleTeam' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'BP_Ruleset_Vehicle_C_FindRules::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000A8, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BP_Ruleset_Vehicle_C_FindRules::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_Array_Get_Item) == 0x0000C4, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000D0, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_Array_Add_ReturnValue) == 0x000134, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000138, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_Set_ToArray_Result) == 0x000140, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_HasTags_Out_HasTag) == 0x000150, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_HasTags_Out_HasTag' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_FindRules, CallFunc_BooleanAND_ReturnValue) == 0x000151, "Member 'BP_Ruleset_Vehicle_C_FindRules::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.GetPointsForVehicleKill
// 0x0118 (0x0118 - 0x0000)
struct BP_Ruleset_Vehicle_C_GetPointsForVehicleKill final
{
public:
	int32                                         In_TeamId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4772[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                In_Vehicle_Settings;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out_Points;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Out_Points;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRuleList_Out_Found;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4773[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeamVehicleRuleElement                CallFunc_FindRuleList_Out_Rule;                    // 0x0020(0x0068)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4774[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVehicleRuleElement>            CallFunc_FindRules_Out_Rules;                      // 0x0090(0x0010)(ReferenceParm)
	struct FVehicleRuleElement                    CallFunc_Array_Get_Item;                           // 0x00A0(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4775[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_GetPointsForVehicleKill");
static_assert(sizeof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill) == 0x000118, "Wrong size on BP_Ruleset_Vehicle_C_GetPointsForVehicleKill");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, In_TeamId) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::In_TeamId' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, In_Vehicle_Settings) == 0x000008, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::In_Vehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, Out_Points) == 0x000010, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::Out_Points' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, L_Out_Points) == 0x000014, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::L_Out_Points' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, CallFunc_FindRuleList_Out_Found) == 0x000018, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::CallFunc_FindRuleList_Out_Found' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, CallFunc_FindRuleList_Out_Rule) == 0x000020, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::CallFunc_FindRuleList_Out_Rule' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, CallFunc_FindRules_Out_Rules) == 0x000090, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::CallFunc_FindRules_Out_Rules' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, Temp_int_Loop_Counter_Variable) == 0x000104, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetPointsForVehicleKill, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'BP_Ruleset_Vehicle_C_GetPointsForVehicleKill::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.SelectRules
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Ruleset_Vehicle_C_SelectRules final
{
public:
	int32                                         In_Kill_Instigator_Team_ID;                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Victim_Team_ID;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQVehicleSettings_C*                In_Vehicle_Settings;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVehicleRuleElement>            Out_Rules;                                         // 0x0010(0x0010)(Parm, OutParm)
	ESQTeamRelationShip                           CallFunc_GetRelationShipByIndex_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRuleList_Out_Found;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4776[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeamVehicleRuleElement                CallFunc_FindRuleList_Out_Rule;                    // 0x0028(0x0068)(HasGetValueTypeHash)
	TArray<struct FVehicleRuleElement>            CallFunc_FindRules_Out_Rules;                      // 0x0090(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_SelectRules) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_SelectRules");
static_assert(sizeof(BP_Ruleset_Vehicle_C_SelectRules) == 0x0000A0, "Wrong size on BP_Ruleset_Vehicle_C_SelectRules");
static_assert(offsetof(BP_Ruleset_Vehicle_C_SelectRules, In_Kill_Instigator_Team_ID) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_SelectRules::In_Kill_Instigator_Team_ID' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_SelectRules, In_Victim_Team_ID) == 0x000004, "Member 'BP_Ruleset_Vehicle_C_SelectRules::In_Victim_Team_ID' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_SelectRules, In_Vehicle_Settings) == 0x000008, "Member 'BP_Ruleset_Vehicle_C_SelectRules::In_Vehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_SelectRules, Out_Rules) == 0x000010, "Member 'BP_Ruleset_Vehicle_C_SelectRules::Out_Rules' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_SelectRules, CallFunc_GetRelationShipByIndex_ReturnValue) == 0x000020, "Member 'BP_Ruleset_Vehicle_C_SelectRules::CallFunc_GetRelationShipByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_SelectRules, CallFunc_FindRuleList_Out_Found) == 0x000021, "Member 'BP_Ruleset_Vehicle_C_SelectRules::CallFunc_FindRuleList_Out_Found' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_SelectRules, CallFunc_FindRuleList_Out_Rule) == 0x000028, "Member 'BP_Ruleset_Vehicle_C_SelectRules::CallFunc_FindRuleList_Out_Rule' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_SelectRules, CallFunc_FindRules_Out_Rules) == 0x000090, "Member 'BP_Ruleset_Vehicle_C_SelectRules::CallFunc_FindRules_Out_Rules' has a wrong offset!");

// Function BP_Ruleset_Vehicle.BP_Ruleset_Vehicle_C.GetTicketsForVehicleKill
// 0x0118 (0x0118 - 0x0000)
struct BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill final
{
public:
	int32                                         In_TeamId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4777[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                In_Vehicle_Settings;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out_Tickets;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Out_Tickets;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRuleList_Out_Found;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4778[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeamVehicleRuleElement                CallFunc_FindRuleList_Out_Rule;                    // 0x0020(0x0068)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4779[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVehicleRuleElement>            CallFunc_FindRules_Out_Rules;                      // 0x0090(0x0010)(ReferenceParm)
	struct FVehicleRuleElement                    CallFunc_Array_Get_Item;                           // 0x00A0(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_477A[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill) == 0x000008, "Wrong alignment on BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill");
static_assert(sizeof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill) == 0x000118, "Wrong size on BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, In_TeamId) == 0x000000, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::In_TeamId' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, In_Vehicle_Settings) == 0x000008, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::In_Vehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, Out_Tickets) == 0x000010, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::Out_Tickets' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, L_Out_Tickets) == 0x000014, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::L_Out_Tickets' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, CallFunc_FindRuleList_Out_Found) == 0x000018, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::CallFunc_FindRuleList_Out_Found' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, CallFunc_FindRuleList_Out_Rule) == 0x000020, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::CallFunc_FindRuleList_Out_Rule' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, CallFunc_FindRules_Out_Rules) == 0x000090, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::CallFunc_FindRules_Out_Rules' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, Temp_int_Loop_Counter_Variable) == 0x000104, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'BP_Ruleset_Vehicle_C_GetTicketsForVehicleKill::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TC_HexZone

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function TC_HexZone.TC_HexZone_C.ExecuteUbergraph_TC_HexZone
// 0x02B8 (0x02B8 - 0x0000)
struct TC_HexZone_C_ExecuteUbergraph_TC_HexZone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F6D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F6E[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F6F[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F70[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCanTeamCapture_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F71[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQCaptureZoneComponent*                K2Node_CustomEvent_CaptureZone;                    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_Team_1;                         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F72[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Protector;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_CustomEvent_Team;                           // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           CallFunc_TryGetTeamState_OutTeamState;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetTeamState_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F73[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TryGetFactionDisplayName_OutDisplayName;  // 0x00E0(0x0018)()
	bool                                          CallFunc_TryGetFactionDisplayName_ReturnValue;     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F74[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USQCaptureZoneComponent* CaptureZone, uint8 Team)> K2Node_CreateDelegate_OutputDelegate;              // 0x00FC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3F75[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0160(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0178(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0190(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0210(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0220(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0238(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F76[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0280(0x0010)(ReferenceParm)
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId;        // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue;      // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F77[0x3];                                     // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0298(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone) == 0x000008, "Wrong alignment on TC_HexZone_C_ExecuteUbergraph_TC_HexZone");
static_assert(sizeof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone) == 0x0002B8, "Wrong size on TC_HexZone_C_ExecuteUbergraph_TC_HexZone");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, EntryPoint) == 0x000000, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::EntryPoint' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_HasAuthority_ReturnValue) == 0x000048, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_HasAuthority_ReturnValue_1) == 0x000049, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_Event_DeltaSeconds) == 0x000060, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, Temp_int_Variable) == 0x000064, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_BooleanOR_ReturnValue) == 0x000068, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Conv_IntToByte_ReturnValue) == 0x000090, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_GetCanTeamCapture_ReturnValue) == 0x0000A8, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_GetCanTeamCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_CustomEvent_CaptureZone) == 0x0000B0, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_CustomEvent_CaptureZone' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_CustomEvent_Team_1) == 0x0000B8, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_CustomEvent_Team_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_CustomEvent_Protector) == 0x0000C0, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_CustomEvent_Protector' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Not_PreBool_ReturnValue) == 0x0000C8, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_CustomEvent_Team) == 0x0000CA, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000CB, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000CC, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_TryGetTeamState_OutTeamState) == 0x0000D0, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_TryGetTeamState_OutTeamState' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_TryGetTeamState_ReturnValue) == 0x0000D8, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_TryGetTeamState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_TryGetFactionDisplayName_OutDisplayName) == 0x0000E0, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_TryGetFactionDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_TryGetFactionDisplayName_ReturnValue) == 0x0000F8, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_TryGetFactionDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_CreateDelegate_OutputDelegate) == 0x0000FC, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_MakeArray_Array) == 0x000150, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_MakeLiteralText_ReturnValue) == 0x000160, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Format_ReturnValue) == 0x000178, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_MakeStruct_FormatArgumentData_2) == 0x000190, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001D0, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_MakeArray_Array_1) == 0x000210, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Format_ReturnValue_1) == 0x000220, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_MakeStruct_FormatArgumentData_4) == 0x000238, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000278, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, K2Node_MakeArray_Array_2) == 0x000280, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_TryGetLocalPlayerTeamId_OutTeamId) == 0x000290, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_TryGetLocalPlayerTeamId_OutTeamId' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_TryGetLocalPlayerTeamId_ReturnValue) == 0x000294, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_TryGetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_Format_ReturnValue_2) == 0x000298, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002B0, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0002B1, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_ExecuteUbergraph_TC_HexZone, CallFunc_BooleanOR_ReturnValue_1) == 0x0002B2, "Member 'TC_HexZone_C_ExecuteUbergraph_TC_HexZone::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.State Changed Notify
// 0x0001 (0x0001 - 0x0000)
struct TC_HexZone_C_State_Changed_Notify final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TC_HexZone_C_State_Changed_Notify) == 0x000001, "Wrong alignment on TC_HexZone_C_State_Changed_Notify");
static_assert(sizeof(TC_HexZone_C_State_Changed_Notify) == 0x000001, "Wrong size on TC_HexZone_C_State_Changed_Notify");
static_assert(offsetof(TC_HexZone_C_State_Changed_Notify, Team) == 0x000000, "Member 'TC_HexZone_C_State_Changed_Notify::Team' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Protector Destroyed
// 0x0008 (0x0008 - 0x0000)
struct TC_HexZone_C_Protector_Destroyed final
{
public:
	class AActor*                                 Protector;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TC_HexZone_C_Protector_Destroyed) == 0x000008, "Wrong alignment on TC_HexZone_C_Protector_Destroyed");
static_assert(sizeof(TC_HexZone_C_Protector_Destroyed) == 0x000008, "Wrong size on TC_HexZone_C_Protector_Destroyed");
static_assert(offsetof(TC_HexZone_C_Protector_Destroyed, Protector) == 0x000000, "Member 'TC_HexZone_C_Protector_Destroyed::Protector' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.State Changed
// 0x0010 (0x0010 - 0x0000)
struct TC_HexZone_C_State_Changed final
{
public:
	class USQCaptureZoneComponent*                CaptureZone;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Team;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TC_HexZone_C_State_Changed) == 0x000008, "Wrong alignment on TC_HexZone_C_State_Changed");
static_assert(sizeof(TC_HexZone_C_State_Changed) == 0x000010, "Wrong size on TC_HexZone_C_State_Changed");
static_assert(offsetof(TC_HexZone_C_State_Changed, CaptureZone) == 0x000000, "Member 'TC_HexZone_C_State_Changed::CaptureZone' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_State_Changed, Team) == 0x000008, "Member 'TC_HexZone_C_State_Changed::Team' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TC_HexZone_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TC_HexZone_C_ReceiveTick) == 0x000004, "Wrong alignment on TC_HexZone_C_ReceiveTick");
static_assert(sizeof(TC_HexZone_C_ReceiveTick) == 0x000004, "Wrong size on TC_HexZone_C_ReceiveTick");
static_assert(offsetof(TC_HexZone_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TC_HexZone_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Refresh Zone Debug
// 0x02C8 (0x02C8 - 0x0000)
struct TC_HexZone_C_Refresh_Zone_Debug final
{
public:
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F78[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetCanTeamCapture_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCanTeamCapture_ReturnValue_1;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F79[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0040)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F7A[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0180(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       Temp_byte_Variable;                                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7B[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0210(0x0040)(HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0260(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B0(0x0018)()
};
static_assert(alignof(TC_HexZone_C_Refresh_Zone_Debug) == 0x000008, "Wrong alignment on TC_HexZone_C_Refresh_Zone_Debug");
static_assert(sizeof(TC_HexZone_C_Refresh_Zone_Debug) == 0x0002C8, "Wrong size on TC_HexZone_C_Refresh_Zone_Debug");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, Temp_struct_Variable) == 0x000000, "Member 'TC_HexZone_C_Refresh_Zone_Debug::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, Temp_struct_Variable_1) == 0x000010, "Member 'TC_HexZone_C_Refresh_Zone_Debug::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, Temp_struct_Variable_2) == 0x000020, "Member 'TC_HexZone_C_Refresh_Zone_Debug::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_GetValidValue_ReturnValue) == 0x000034, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'TC_HexZone_C_Refresh_Zone_Debug::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_GetCanTeamCapture_ReturnValue) == 0x000078, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_GetCanTeamCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_GetCanTeamCapture_ReturnValue_1) == 0x000079, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_GetCanTeamCapture_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_SelectString_ReturnValue) == 0x000080, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_SelectString_ReturnValue_1) == 0x000090, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000B8, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'TC_HexZone_C_Refresh_Zone_Debug::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'TC_HexZone_C_Refresh_Zone_Debug::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_GetActorForwardVector_ReturnValue) == 0x000150, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_RotateAngleAxis_ReturnValue) == 0x00015C, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000168, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000178, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000180, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, Temp_byte_Variable) == 0x00020C, "Member 'TC_HexZone_C_Refresh_Zone_Debug::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, K2Node_MakeStruct_FormatArgumentData_3) == 0x000210, "Member 'TC_HexZone_C_Refresh_Zone_Debug::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, K2Node_Select_Default) == 0x000250, "Member 'TC_HexZone_C_Refresh_Zone_Debug::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, K2Node_MakeStruct_FormatArgumentData_4) == 0x000260, "Member 'TC_HexZone_C_Refresh_Zone_Debug::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, K2Node_MakeArray_Array) == 0x0002A0, "Member 'TC_HexZone_C_Refresh_Zone_Debug::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Zone_Debug, CallFunc_Format_ReturnValue) == 0x0002B0, "Member 'TC_HexZone_C_Refresh_Zone_Debug::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Init Data
// 0x005C (0x005C - 0x0000)
struct TC_HexZone_C_Init_Data final
{
public:
	uint8                                         Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7C[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F7D[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F7E[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Select_Default_1;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TC_HexZone_C_Init_Data) == 0x000004, "Wrong alignment on TC_HexZone_C_Init_Data");
static_assert(sizeof(TC_HexZone_C_Init_Data) == 0x00005C, "Wrong size on TC_HexZone_C_Init_Data");
static_assert(offsetof(TC_HexZone_C_Init_Data, Temp_byte_Variable) == 0x000000, "Member 'TC_HexZone_C_Init_Data::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, Temp_bool_Variable) == 0x000001, "Member 'TC_HexZone_C_Init_Data::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, Temp_byte_Variable_1) == 0x000002, "Member 'TC_HexZone_C_Init_Data::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, Temp_byte_Variable_2) == 0x000003, "Member 'TC_HexZone_C_Init_Data::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, K2Node_Select_Default) == 0x000004, "Member 'TC_HexZone_C_Init_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, Temp_byte_Variable_3) == 0x000005, "Member 'TC_HexZone_C_Init_Data::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'TC_HexZone_C_Init_Data::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'TC_HexZone_C_Init_Data::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'TC_HexZone_C_Init_Data::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue) == 0x00001C, "Member 'TC_HexZone_C_Init_Data::CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'TC_HexZone_C_Init_Data::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'TC_HexZone_C_Init_Data::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000028, "Member 'TC_HexZone_C_Init_Data::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'TC_HexZone_C_Init_Data::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'TC_HexZone_C_Init_Data::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_FTrunc_ReturnValue_1) == 0x000034, "Member 'TC_HexZone_C_Init_Data::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000038, "Member 'TC_HexZone_C_Init_Data::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'TC_HexZone_C_Init_Data::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000040, "Member 'TC_HexZone_C_Init_Data::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'TC_HexZone_C_Init_Data::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_GetSplineLength_ReturnValue) == 0x000048, "Member 'TC_HexZone_C_Init_Data::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'TC_HexZone_C_Init_Data::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, Temp_bool_Variable_1) == 0x000050, "Member 'TC_HexZone_C_Init_Data::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'TC_HexZone_C_Init_Data::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'TC_HexZone_C_Init_Data::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, K2Node_Select_Default_1) == 0x000059, "Member 'TC_HexZone_C_Init_Data::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00005A, "Member 'TC_HexZone_C_Init_Data::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Init_Data, CallFunc_BooleanOR_ReturnValue) == 0x00005B, "Member 'TC_HexZone_C_Init_Data::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Cache Local Hexes
// 0x00A0 (0x00A0 - 0x0000)
struct TC_HexZone_C_Cache_Local_Hexes final
{
public:
	class ATC_HexZone_C*                          L_Zone;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATC_HexZone_C*                          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F80[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F81[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F82[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F83[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(TC_HexZone_C_Cache_Local_Hexes) == 0x000008, "Wrong alignment on TC_HexZone_C_Cache_Local_Hexes");
static_assert(sizeof(TC_HexZone_C_Cache_Local_Hexes) == 0x0000A0, "Wrong size on TC_HexZone_C_Cache_Local_Hexes");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, L_Zone) == 0x000000, "Member 'TC_HexZone_C_Cache_Local_Hexes::L_Zone' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TC_HexZone_C_Cache_Local_Hexes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'TC_HexZone_C_Cache_Local_Hexes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_Array_Get_Item) == 0x000018, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_GetComponentBounds_Origin) == 0x000034, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_GetComponentBounds_BoxExtent) == 0x000040, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_GetComponentBounds_SphereRadius) == 0x00004C, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_BreakVector_X) == 0x000054, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_BreakVector_Y) == 0x000058, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_BreakVector_Z) == 0x00005C, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_VSize_ReturnValue) == 0x00007C, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000084, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_BooleanAND_ReturnValue) == 0x000085, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Cache_Local_Hexes, CallFunc_Conv_IntToString_ReturnValue) == 0x000090, "Member 'TC_HexZone_C_Cache_Local_Hexes::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Refresh Can Cap
// 0x0050 (0x0050 - 0x0000)
struct TC_HexZone_C_Refresh_Can_Cap final
{
public:
	bool                                          L_Changed_state;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F84[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F85[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F86[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATC_HexZone_C*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Calculate_Can_Capture_Can_Capture;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTeamCanCapture_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F87[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F88[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F89[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TC_HexZone_C_Refresh_Can_Cap) == 0x000008, "Wrong alignment on TC_HexZone_C_Refresh_Can_Cap");
static_assert(sizeof(TC_HexZone_C_Refresh_Can_Cap) == 0x000050, "Wrong size on TC_HexZone_C_Refresh_Can_Cap");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, L_Changed_state) == 0x000000, "Member 'TC_HexZone_C_Refresh_Can_Cap::L_Changed_state' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, Temp_int_Array_Index_Variable) == 0x000004, "Member 'TC_HexZone_C_Refresh_Can_Cap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Conv_IntToByte_ReturnValue) == 0x000009, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'TC_HexZone_C_Refresh_Can_Cap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'TC_HexZone_C_Refresh_Can_Cap::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Array_Get_Item) == 0x000020, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Calculate_Can_Capture_Can_Capture) == 0x00002C, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Calculate_Can_Capture_Can_Capture' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_SetTeamCanCapture_ReturnValue) == 0x00002D, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_SetTeamCanCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'TC_HexZone_C_Refresh_Can_Cap::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Can_Cap, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'TC_HexZone_C_Refresh_Can_Cap::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Refresh Local Zones
// 0x0040 (0x0040 - 0x0000)
struct TC_HexZone_C_Refresh_Local_Zones final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATC_HexZone_C*                          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATC_HexZone_C*                          CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F8C[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TC_HexZone_C_Refresh_Local_Zones) == 0x000008, "Wrong alignment on TC_HexZone_C_Refresh_Local_Zones");
static_assert(sizeof(TC_HexZone_C_Refresh_Local_Zones) == 0x000040, "Wrong size on TC_HexZone_C_Refresh_Local_Zones");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'TC_HexZone_C_Refresh_Local_Zones::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'TC_HexZone_C_Refresh_Local_Zones::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TC_HexZone_C_Refresh_Local_Zones::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'TC_HexZone_C_Refresh_Local_Zones::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'TC_HexZone_C_Refresh_Local_Zones::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, CallFunc_Array_Get_Item) == 0x000018, "Member 'TC_HexZone_C_Refresh_Local_Zones::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'TC_HexZone_C_Refresh_Local_Zones::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'TC_HexZone_C_Refresh_Local_Zones::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'TC_HexZone_C_Refresh_Local_Zones::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'TC_HexZone_C_Refresh_Local_Zones::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'TC_HexZone_C_Refresh_Local_Zones::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Local_Zones, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'TC_HexZone_C_Refresh_Local_Zones::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Calculate Can Capture
// 0x0014 (0x0014 - 0x0000)
struct TC_HexZone_C_Calculate_Can_Capture final
{
public:
	int32                                         Nearby_Zones;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Capture;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Protected_By_Neighbours_Protected;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TC_HexZone_C_Calculate_Can_Capture) == 0x000004, "Wrong alignment on TC_HexZone_C_Calculate_Can_Capture");
static_assert(sizeof(TC_HexZone_C_Calculate_Can_Capture) == 0x000014, "Wrong size on TC_HexZone_C_Calculate_Can_Capture");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, Nearby_Zones) == 0x000000, "Member 'TC_HexZone_C_Calculate_Can_Capture::Nearby_Zones' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, Team) == 0x000004, "Member 'TC_HexZone_C_Calculate_Can_Capture::Team' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, Can_Capture) == 0x000008, "Member 'TC_HexZone_C_Calculate_Can_Capture::Can_Capture' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, CallFunc_Get_Protected_By_Neighbours_Protected) == 0x000009, "Member 'TC_HexZone_C_Calculate_Can_Capture::CallFunc_Get_Protected_By_Neighbours_Protected' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000A, "Member 'TC_HexZone_C_Calculate_Can_Capture::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'TC_HexZone_C_Calculate_Can_Capture::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'TC_HexZone_C_Calculate_Can_Capture::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'TC_HexZone_C_Calculate_Can_Capture::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'TC_HexZone_C_Calculate_Can_Capture::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000F, "Member 'TC_HexZone_C_Calculate_Can_Capture::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, CallFunc_BooleanAND_ReturnValue_1) == 0x000010, "Member 'TC_HexZone_C_Calculate_Can_Capture::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Calculate_Can_Capture, CallFunc_BooleanAND_ReturnValue_2) == 0x000011, "Member 'TC_HexZone_C_Calculate_Can_Capture::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Set ID
// 0x0088 (0x0088 - 0x0000)
struct TC_HexZone_C_Set_ID final
{
public:
	int32                                         Param_Hex_Num;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
};
static_assert(alignof(TC_HexZone_C_Set_ID) == 0x000008, "Wrong alignment on TC_HexZone_C_Set_ID");
static_assert(sizeof(TC_HexZone_C_Set_ID) == 0x000088, "Wrong size on TC_HexZone_C_Set_ID");
static_assert(offsetof(TC_HexZone_C_Set_ID, Param_Hex_Num) == 0x000000, "Member 'TC_HexZone_C_Set_ID::Param_Hex_Num' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Set_ID, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'TC_HexZone_C_Set_ID::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Set_ID, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'TC_HexZone_C_Set_ID::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Set_ID, K2Node_MakeArray_Array) == 0x000060, "Member 'TC_HexZone_C_Set_ID::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Set_ID, CallFunc_Format_ReturnValue) == 0x000070, "Member 'TC_HexZone_C_Set_ID::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Get Protected By Neighbours
// 0x0028 (0x0028 - 0x0000)
struct TC_HexZone_C_Get_Protected_By_Neighbours final
{
public:
	bool                                          Param_Protected;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F8E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATC_HexZone_C*                          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TC_HexZone_C_Get_Protected_By_Neighbours) == 0x000008, "Wrong alignment on TC_HexZone_C_Get_Protected_By_Neighbours");
static_assert(sizeof(TC_HexZone_C_Get_Protected_By_Neighbours) == 0x000028, "Wrong size on TC_HexZone_C_Get_Protected_By_Neighbours");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, Param_Protected) == 0x000000, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::Param_Protected' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, Temp_int_Array_Index_Variable) == 0x000004, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, CallFunc_Array_Get_Item) == 0x000018, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Get_Protected_By_Neighbours, CallFunc_BooleanAND_ReturnValue_1) == 0x000023, "Member 'TC_HexZone_C_Get_Protected_By_Neighbours::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function TC_HexZone.TC_HexZone_C.Refresh Protection
// 0x0080 (0x0080 - 0x0000)
struct TC_HexZone_C_Refresh_Protection final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F90[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F91[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0030(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F92[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISQTeamInterface>      K2Node_DynamicCast_AsSQTeam_Interface;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F93[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamId_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CaptureZoneModifier_C> K2Node_DynamicCast_AsBPI_Capture_Zone_Modifier;    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Additional_Can_Capture_Can_Capture;       // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TC_HexZone_C_Refresh_Protection) == 0x000008, "Wrong alignment on TC_HexZone_C_Refresh_Protection");
static_assert(sizeof(TC_HexZone_C_Refresh_Protection) == 0x000080, "Wrong size on TC_HexZone_C_Refresh_Protection");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'TC_HexZone_C_Refresh_Protection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'TC_HexZone_C_Refresh_Protection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'TC_HexZone_C_Refresh_Protection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, Temp_int_Variable) == 0x000020, "Member 'TC_HexZone_C_Refresh_Protection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000030, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_Array_Get_Item) == 0x000040, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, K2Node_DynamicCast_AsSQTeam_Interface) == 0x000050, "Member 'TC_HexZone_C_Refresh_Protection::K2Node_DynamicCast_AsSQTeam_Interface' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'TC_HexZone_C_Refresh_Protection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_GetTeamId_ReturnValue) == 0x000064, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_GetTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, K2Node_DynamicCast_AsBPI_Capture_Zone_Modifier) == 0x000068, "Member 'TC_HexZone_C_Refresh_Protection::K2Node_DynamicCast_AsBPI_Capture_Zone_Modifier' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'TC_HexZone_C_Refresh_Protection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_Additional_Can_Capture_Can_Capture) == 0x00007A, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_Additional_Can_Capture_Can_Capture' has a wrong offset!");
static_assert(offsetof(TC_HexZone_C_Refresh_Protection, CallFunc_DoesImplementInterface_ReturnValue) == 0x00007B, "Member 'TC_HexZone_C_Refresh_Protection::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");

}


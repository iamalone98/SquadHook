#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GenericDeployableMortarVehicle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.ExecuteUbergraph_BP_GenericDeployableMortarVehicle
// 0x0100 (0x0100 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_CustomEvent_Vehicle;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_Player;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Seat;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9F[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQVehicle* Vehicle, class APlayerController* Player, int32 Seat)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Rate;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASQVehicle* Vehicle, class APlayerController* Player, int32 Seat)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA0[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA1[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_OldController;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA2[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentWeaponInputEnabled_ReturnValue;  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_1; // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA3[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_2; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA4[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_3; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FA5[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_CustomEvent_Vehicle_1;                      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_Player_1;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Seat_1;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA6[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller_1;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle) == 0x000008, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle) == 0x000100, "Wrong size on BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, EntryPoint) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_CustomEvent_Vehicle) == 0x000008, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_CustomEvent_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_CustomEvent_Player) == 0x000010, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_CustomEvent_Seat) == 0x000018, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_CustomEvent_Seat' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000020, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_Event_Rate) == 0x00003C, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_Event_Rate' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_IsValidClass_ReturnValue) == 0x000050, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_InputAxisEvent_AxisValue_4) == 0x000054, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_InputAxisEvent_AxisValue_3) == 0x000058, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_Event_OldController) == 0x000060, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000068, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_InputAxisEvent_AxisValue_2) == 0x000074, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000080, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000084, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000088, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00008C, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_MakeRotator_ReturnValue_1) == 0x00009C, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_IsCurrentWeaponInputEnabled_ReturnValue) == 0x0000A8, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_IsCurrentWeaponInputEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_1) == 0x0000A9, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_InputAxisEvent_AxisValue_1) == 0x0000AC, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_2) == 0x0000B0, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_MakeRotator_ReturnValue_2) == 0x0000B4, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_InputAxisEvent_AxisValue) == 0x0000C0, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_MakeRotator_ReturnValue_3) == 0x0000C4, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_3) == 0x0000D0, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_CustomEvent_Vehicle_1) == 0x0000D8, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_CustomEvent_Vehicle_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_CustomEvent_Player_1) == 0x0000E0, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_CustomEvent_Player_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_CustomEvent_Seat_1) == 0x0000E8, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_CustomEvent_Seat_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_DynamicCast_AsBP_Player_Controller_1) == 0x0000F0, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_DynamicCast_AsBP_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'BP_GenericDeployableMortarVehicle_C_ExecuteUbergraph_BP_GenericDeployableMortarVehicle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.OnPlayerExited_Event
// 0x0018 (0x0018 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event final
{
public:
	class ASQVehicle*                             Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seat;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event) == 0x000008, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event) == 0x000018, "Wrong size on BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event, Vehicle) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event::Vehicle' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event, Player) == 0x000008, "Member 'BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event::Player' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event, Seat) == 0x000010, "Member 'BP_GenericDeployableMortarVehicle_C_OnPlayerExited_Event::Seat' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.OnPlayerEntered_Event
// 0x0018 (0x0018 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event final
{
public:
	class ASQVehicle*                             Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seat;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event) == 0x000008, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event) == 0x000018, "Wrong size on BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event, Vehicle) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event::Vehicle' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event, Player) == 0x000008, "Member 'BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event::Player' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event, Seat) == 0x000010, "Member 'BP_GenericDeployableMortarVehicle_C_OnPlayerEntered_Event::Seat' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_4
// 0x0004 (0x0004 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_4 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_4) == 0x000004, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_4");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_4) == 0x000004, "Wrong size on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_4");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_4, AxisValue) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_4::AxisValue' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_3
// 0x0004 (0x0004 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_3 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_3) == 0x000004, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_3");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_3) == 0x000004, "Wrong size on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_3");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_3, AxisValue) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_3::AxisValue' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_2
// 0x0004 (0x0004 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_2 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_2) == 0x000004, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_2");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_2) == 0x000004, "Wrong size on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_2");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_2, AxisValue) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_2::AxisValue' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_ReceiveUnpossessed");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_ReceiveUnpossessed) == 0x000008, "Wrong size on BP_GenericDeployableMortarVehicle_C_ReceiveUnpossessed");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_GenericDeployableMortarVehicle_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.LookUp
// 0x0004 (0x0004 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_LookUp final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_LookUp) == 0x000004, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_LookUp");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_LookUp) == 0x000004, "Wrong size on BP_GenericDeployableMortarVehicle_C_LookUp");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_LookUp, Rate) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_LookUp::Rate' has a wrong offset!");

// Function BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C.GetADSCameraLocationComponent
// 0x0018 (0x0018 - 0x0000)
struct BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GenericMortarWeapon_C*              K2Node_DynamicCast_AsBP_Generic_Mortar_Weapon;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent) == 0x000008, "Wrong alignment on BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent");
static_assert(sizeof(BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent) == 0x000018, "Wrong size on BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent, ReturnValue) == 0x000000, "Member 'BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent, K2Node_DynamicCast_AsBP_Generic_Mortar_Weapon) == 0x000008, "Member 'BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent::K2Node_DynamicCast_AsBP_Generic_Mortar_Weapon' has a wrong offset!");
static_assert(offsetof(BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GenericDeployableMortarVehicle_C_GetADSCameraLocationComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


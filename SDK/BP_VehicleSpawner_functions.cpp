#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleSpawner

#include "Basic.hpp"

#include "BP_VehicleSpawner_classes.hpp"
#include "BP_VehicleSpawner_parameters.hpp"


namespace SDK
{

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.ExecuteUbergraph_BP_VehicleSpawner
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::ExecuteUbergraph_BP_VehicleSpawner(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "ExecuteUbergraph_BP_VehicleSpawner");

	Params::BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_VehicleSpawner_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.OnNeutralVehicleDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::OnNeutralVehicleDestroyed(class ASQVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "OnNeutralVehicleDestroyed");

	Params::BP_VehicleSpawner_C_OnNeutralVehicleDestroyed Parms{};

	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.OnVehicleSpawned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       OutVehicle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::OnVehicleSpawned(class ASQVehicle* OutVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "OnVehicleSpawned");

	Params::BP_VehicleSpawner_C_OnVehicleSpawned Parms{};

	Parms.OutVehicle = OutVehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_VehicleSpawner_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_VehicleSpawner_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GeneratePreviewMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_VehicleSpawner_C::GeneratePreviewMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "GeneratePreviewMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GenerateReservedAreaDisplay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_VehicleSpawner_C::GenerateReservedAreaDisplay(bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "GenerateReservedAreaDisplay");

	Params::BP_VehicleSpawner_C_GenerateReservedAreaDisplay Parms{};

	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetVehicleDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       In_Vehicle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::SetVehicleDamage(class ASQVehicle* In_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "SetVehicleDamage");

	Params::BP_VehicleSpawner_C_SetVehicleDamage Parms{};

	Parms.In_Vehicle = In_Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetEngineDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       In_Vehicle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::SetEngineDamage(class ASQVehicle* In_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "SetEngineDamage");

	Params::BP_VehicleSpawner_C_SetEngineDamage Parms{};

	Parms.In_Vehicle = In_Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetPropulsionDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       In_Vehicle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::SetPropulsionDamage(class ASQVehicle* In_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "SetPropulsionDamage");

	Params::BP_VehicleSpawner_C_SetPropulsionDamage Parms{};

	Parms.In_Vehicle = In_Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetComponentsArrayHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USQVehicleComponent*>      Components                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Param_NeverDestroyComponents                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   NewHealthFrac                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::SetComponentsArrayHealth(TArray<class USQVehicleComponent*>& Components, bool Param_NeverDestroyComponents, float NewHealthFrac)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "SetComponentsArrayHealth");

	Params::BP_VehicleSpawner_C_SetComponentsArrayHealth Parms{};

	Parms.Components = std::move(Components);
	Parms.Param_NeverDestroyComponents = Param_NeverDestroyComponents;
	Parms.NewHealthFrac = NewHealthFrac;

	UObject::ProcessEvent(Func, &Parms);

	Components = std::move(Parms.Components);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetComponentsHealthByType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       VehicleTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ClassToChangeHealth                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FractionHealth                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_VehicleSpawner_C::SetComponentsHealthByType(class ASQVehicle* VehicleTarget, class UClass* ClassToChangeHealth, float FractionHealth, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "SetComponentsHealthByType");

	Params::BP_VehicleSpawner_C_SetComponentsHealthByType Parms{};

	Parms.VehicleTarget = VehicleTarget;
	Parms.ClassToChangeHealth = ClassToChangeHealth;
	Parms.FractionHealth = FractionHealth;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetWeaponInitialAmmo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::SetWeaponInitialAmmo(class ASQVehicle* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "SetWeaponInitialAmmo");

	Params::BP_VehicleSpawner_C_SetWeaponInitialAmmo Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetDebugTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESQTeam                                 OutDebugTeam                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::GetDebugTeam(ESQTeam* OutDebugTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "GetDebugTeam");

	Params::BP_VehicleSpawner_C_GetDebugTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDebugTeam != nullptr)
		*OutDebugTeam = Parms.OutDebugTeam;
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.LoadPreviewMesh
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftClassPtr<class UClass>             AssetClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::LoadPreviewMesh(TSoftClassPtr<class UClass> AssetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "LoadPreviewMesh");

	Params::BP_VehicleSpawner_C_LoadPreviewMesh Parms{};

	Parms.AssetClass = AssetClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.RefreshPreview
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VehicleSpawner_C::RefreshPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "RefreshPreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetPreviewMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkinnedMeshComponent*            Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::SetPreviewMesh(class USkinnedMeshComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "SetPreviewMesh");

	Params::BP_VehicleSpawner_C_SetPreviewMesh Parms{};

	Parms.Mesh = Mesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetDebugPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       OutPosition                                            (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_VehicleSpawner_C::GetDebugPosition(struct FTransform* OutPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "GetDebugPosition");

	Params::BP_VehicleSpawner_C_GetDebugPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutPosition != nullptr)
		*OutPosition = std::move(Parms.OutPosition);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.Set PreviewText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InTextColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::Set_PreviewText(const struct FLinearColor& InTextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "Set PreviewText");

	Params::BP_VehicleSpawner_C_Set_PreviewText Parms{};

	Parms.InTextColor = std::move(InTextColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.Editor_GetVehicleToSpawn
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class USQAvailability_Vehicle*>  In_Vehicles                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Out_Has_Something_To_Spawn                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USQVehicleSettings*               Out_Selected_Vehicle                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::Editor_GetVehicleToSpawn(TArray<class USQAvailability_Vehicle*>& In_Vehicles, bool* Out_Has_Something_To_Spawn, class USQVehicleSettings** Out_Selected_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "Editor_GetVehicleToSpawn");

	Params::BP_VehicleSpawner_C_Editor_GetVehicleToSpawn Parms{};

	Parms.In_Vehicles = std::move(In_Vehicles);

	UObject::ProcessEvent(Func, &Parms);

	In_Vehicles = std::move(Parms.In_Vehicles);

	if (Out_Has_Something_To_Spawn != nullptr)
		*Out_Has_Something_To_Spawn = Parms.Out_Has_Something_To_Spawn;

	if (Out_Selected_Vehicle != nullptr)
		*Out_Selected_Vehicle = Parms.Out_Selected_Vehicle;
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.CanSpawnVehicle
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USQVehicleSettings*               InAvailableVehicle                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_VehicleSpawner_C::CanSpawnVehicle(const class USQVehicleSettings* InAvailableVehicle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "CanSpawnVehicle");

	Params::BP_VehicleSpawner_C_CanSpawnVehicle Parms{};

	Parms.InAvailableVehicle = InAvailableVehicle;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetVehicleReference
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USQVehicleSettings*               InVehicleSettings                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             OutVehicleReference                                    (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::GetVehicleReference(class USQVehicleSettings* InVehicleSettings, TSoftClassPtr<class UClass>* OutVehicleReference) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "GetVehicleReference");

	Params::BP_VehicleSpawner_C_GetVehicleReference Parms{};

	Parms.InVehicleSettings = InVehicleSettings;

	UObject::ProcessEvent(Func, &Parms);

	if (OutVehicleReference != nullptr)
		*OutVehicleReference = Parms.OutVehicleReference;
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.IsConfigurationValid
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_VehicleSpawner_C::IsConfigurationValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "IsConfigurationValid");

	Params::BP_VehicleSpawner_C_IsConfigurationValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetSpawnerBound
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutBounds                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VehicleSpawner_C::GetSpawnerBound(struct FVector* OutBounds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "GetSpawnerBound");

	Params::BP_VehicleSpawner_C_GetSpawnerBound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutBounds != nullptr)
		*OutBounds = std::move(Parms.OutBounds);
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.IsSpawnerAvailable
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_VehicleSpawner_C::IsSpawnerAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "IsSpawnerAvailable");

	Params::BP_VehicleSpawner_C_IsSpawnerAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetVehiclePriority
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FSQAvailabilityState_Vehicle     InAvailableVehicle                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_VehicleSpawner_C::GetVehiclePriority(const struct FSQAvailabilityState_Vehicle& InAvailableVehicle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "GetVehiclePriority");

	Params::BP_VehicleSpawner_C_GetVehiclePriority Parms{};

	Parms.InAvailableVehicle = std::move(InAvailableVehicle);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.ComputeInitialSpawnerDelay
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FTimespan ABP_VehicleSpawner_C::ComputeInitialSpawnerDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "ComputeInitialSpawnerDelay");

	Params::BP_VehicleSpawner_C_ComputeInitialSpawnerDelay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VehicleSpawner.BP_VehicleSpawner_C.ComputeSpawnerDelay
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FTimespan ABP_VehicleSpawner_C::ComputeSpawnerDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VehicleSpawner_C", "ComputeSpawnerDelay");

	Params::BP_VehicleSpawner_C_ComputeSpawnerDelay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_SeatProgress

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UMG_SeatProgress.UMG_SeatProgress_C.ExecuteUbergraph_UMG_SeatProgress
// 0x0010 (0x0010 - 0x0000)
struct UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38AD[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_RemainingPct;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress) == 0x000004, "Wrong alignment on UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress");
static_assert(sizeof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress) == 0x000010, "Wrong size on UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress");
static_assert(offsetof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress, EntryPoint) == 0x000000, "Member 'UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress, CallFunc_IsValid_ReturnValue_2) == 0x000006, "Member 'UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress, K2Node_Event_RemainingPct) == 0x000008, "Member 'UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress::K2Node_Event_RemainingPct' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress, CallFunc_IsValid_ReturnValue_3) == 0x00000C, "Member 'UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress, CallFunc_IsValid_ReturnValue_4) == 0x00000D, "Member 'UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress, CallFunc_IsValid_ReturnValue_5) == 0x00000E, "Member 'UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00000F, "Member 'UMG_SeatProgress_C_ExecuteUbergraph_UMG_SeatProgress::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function UMG_SeatProgress.UMG_SeatProgress_C.BPOnTimerProgress
// 0x0004 (0x0004 - 0x0000)
struct UMG_SeatProgress_C_BPOnTimerProgress final
{
public:
	float                                         RemainingPct;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_SeatProgress_C_BPOnTimerProgress) == 0x000004, "Wrong alignment on UMG_SeatProgress_C_BPOnTimerProgress");
static_assert(sizeof(UMG_SeatProgress_C_BPOnTimerProgress) == 0x000004, "Wrong size on UMG_SeatProgress_C_BPOnTimerProgress");
static_assert(offsetof(UMG_SeatProgress_C_BPOnTimerProgress, RemainingPct) == 0x000000, "Member 'UMG_SeatProgress_C_BPOnTimerProgress::RemainingPct' has a wrong offset!");

// Function UMG_SeatProgress.UMG_SeatProgress_C.Create Radial
// 0x00E0 (0x00E0 - 0x0000)
struct UMG_SeatProgress_C_Create_Radial final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38AE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 L_Model;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38AF[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URadialCenterVehicle_C*                 K2Node_DynamicCast_AsRadial_Center_Vehicle;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B0[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPComponent_RadialModel_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B1[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_38B2[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B3[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOpenRadialMenu_CanOpenRadialMenu;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B4[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B5[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B6[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B7[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      CallFunc_Get_Radial_Menu_Radial_Menu;              // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBaseRadialMenu_C*                      CallFunc_Get_Radial_Menu_Radial_Menu_1;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38B8[0x5];                                     // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_2;                    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_SeatProgress_C_Create_Radial) == 0x000008, "Wrong alignment on UMG_SeatProgress_C_Create_Radial");
static_assert(sizeof(UMG_SeatProgress_C_Create_Radial) == 0x0000E0, "Wrong size on UMG_SeatProgress_C_Create_Radial");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, Success) == 0x000000, "Member 'UMG_SeatProgress_C_Create_Radial::Success' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, L_Model) == 0x000008, "Member 'UMG_SeatProgress_C_Create_Radial::L_Model' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_AsRadial_Center_Vehicle) == 0x000018, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_AsRadial_Center_Vehicle' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000021, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_IsValidClass_ReturnValue) == 0x000031, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000050, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_GetHUD_ReturnValue) == 0x000060, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_CanOpenRadialMenu_CanOpenRadialMenu) == 0x000068, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_CanOpenRadialMenu_CanOpenRadialMenu' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_AsSQHUD) == 0x000070, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_AsBPI_HUD) == 0x000080, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000098, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_Get_Radial_Menu_Radial_Menu) == 0x0000B0, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_Get_Radial_Menu_Radial_Menu' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_Get_Radial_Menu_Radial_Menu_1) == 0x0000B8, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_Get_Radial_Menu_Radial_Menu_1' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_IsValid_ReturnValue_2) == 0x0000C0, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_IsValid_ReturnValue_3) == 0x0000C1, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000C2, "Member 'UMG_SeatProgress_C_Create_Radial::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_AsBPI_HUD_2) == 0x0000C8, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_AsBPI_HUD_2' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Create_Radial, K2Node_DynamicCast_bSuccess_5) == 0x0000D8, "Member 'UMG_SeatProgress_C_Create_Radial::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");

// Function UMG_SeatProgress.UMG_SeatProgress_C.Update Visibility
// 0x0018 (0x0018 - 0x0000)
struct UMG_SeatProgress_C_Update_Visibility final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Selection;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Create_Radial_Success;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_SeatProgress_C_Update_Visibility) == 0x000004, "Wrong alignment on UMG_SeatProgress_C_Update_Visibility");
static_assert(sizeof(UMG_SeatProgress_C_Update_Visibility) == 0x000018, "Wrong size on UMG_SeatProgress_C_Update_Visibility");
static_assert(offsetof(UMG_SeatProgress_C_Update_Visibility, Force) == 0x000000, "Member 'UMG_SeatProgress_C_Update_Visibility::Force' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Update_Visibility, Selection) == 0x000001, "Member 'UMG_SeatProgress_C_Update_Visibility::Selection' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Update_Visibility, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'UMG_SeatProgress_C_Update_Visibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Update_Visibility, CallFunc_Create_Radial_Success) == 0x000003, "Member 'UMG_SeatProgress_C_Update_Visibility::CallFunc_Create_Radial_Success' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Update_Visibility, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UMG_SeatProgress_C_Update_Visibility::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Update_Visibility, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'UMG_SeatProgress_C_Update_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Update_Visibility, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'UMG_SeatProgress_C_Update_Visibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Update_Visibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000016, "Member 'UMG_SeatProgress_C_Update_Visibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Update_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000017, "Member 'UMG_SeatProgress_C_Update_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function UMG_SeatProgress.UMG_SeatProgress_C.Close Radial Menu
// 0x0038 (0x0038 - 0x0000)
struct UMG_SeatProgress_C_Close_Radial_Menu final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B9[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBaseRadialMenu_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38BA[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_SeatProgress_C_Close_Radial_Menu) == 0x000008, "Wrong alignment on UMG_SeatProgress_C_Close_Radial_Menu");
static_assert(sizeof(UMG_SeatProgress_C_Close_Radial_Menu) == 0x000038, "Wrong size on UMG_SeatProgress_C_Close_Radial_Menu");
static_assert(offsetof(UMG_SeatProgress_C_Close_Radial_Menu, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UMG_SeatProgress_C_Close_Radial_Menu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Close_Radial_Menu, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UMG_SeatProgress_C_Close_Radial_Menu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Close_Radial_Menu, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UMG_SeatProgress_C_Close_Radial_Menu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Close_Radial_Menu, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'UMG_SeatProgress_C_Close_Radial_Menu::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Close_Radial_Menu, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UMG_SeatProgress_C_Close_Radial_Menu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Close_Radial_Menu, CallFunc_Array_Get_Item) == 0x000028, "Member 'UMG_SeatProgress_C_Close_Radial_Menu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_SeatProgress_C_Close_Radial_Menu, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'UMG_SeatProgress_C_Close_Radial_Menu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


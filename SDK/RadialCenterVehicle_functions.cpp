#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialCenterVehicle

#include "Basic.hpp"

#include "RadialCenterVehicle_classes.hpp"
#include "RadialCenterVehicle_parameters.hpp"


namespace SDK
{

// Function RadialCenterVehicle.RadialCenterVehicle_C.ExecuteUbergraph_RadialCenterVehicle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialCenterVehicle_C::ExecuteUbergraph_RadialCenterVehicle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "ExecuteUbergraph_RadialCenterVehicle");

	Params::RadialCenterVehicle_C_ExecuteUbergraph_RadialCenterVehicle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void URadialCenterVehicle_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.OnHoverEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URadialCenterVehicle_C::OnHoverEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "OnHoverEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialCenterVehicle_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Tick");

	Params::RadialCenterVehicle_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.OnHoverBegin
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URadialCenterVehicle_C::OnHoverBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "OnHoverBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Get_Background_ColorAndOpacity_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor URadialCenterVehicle_C::Get_Background_ColorAndOpacity_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Get_Background_ColorAndOpacity_0");

	Params::RadialCenterVehicle_C_Get_Background_ColorAndOpacity_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.SetTimerProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RemainingTimePct                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialCenterVehicle_C::SetTimerProgress(float RemainingTimePct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "SetTimerProgress");

	Params::RadialCenterVehicle_C_SetTimerProgress Parms{};

	Parms.RemainingTimePct = RemainingTimePct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.SetTimerActivation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialCenterVehicle_C::SetTimerActivation(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "SetTimerActivation");

	Params::RadialCenterVehicle_C_SetTimerActivation Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Get_Text_SupplyStatus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText URadialCenterVehicle_C::Get_Text_SupplyStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Get_Text_SupplyStatus");

	Params::RadialCenterVehicle_C_Get_Text_SupplyStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Vehicle Speed Check
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Speed_Is_Valid                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialCenterVehicle_C::Vehicle_Speed_Check(bool* Speed_Is_Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Vehicle Speed Check");

	Params::RadialCenterVehicle_C_Vehicle_Speed_Check Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Speed_Is_Valid != nullptr)
		*Speed_Is_Valid = Parms.Speed_Is_Valid;
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Vehicle Denied
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool URadialCenterVehicle_C::Vehicle_Denied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Vehicle Denied");

	Params::RadialCenterVehicle_C_Vehicle_Denied Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Is Action Ammo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is_Ammo_Action                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialCenterVehicle_C::Is_Action_Ammo(bool* Is_Ammo_Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Is Action Ammo");

	Params::RadialCenterVehicle_C_Is_Action_Ammo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Ammo_Action != nullptr)
		*Is_Ammo_Action = Parms.Is_Ammo_Action;
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Validate Transaction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Con_Valid                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Ammo_Valid                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_Loading                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Zone_has_Points                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialCenterVehicle_C::Validate_Transaction(bool* Valid, bool* Con_Valid, bool* Ammo_Valid, bool* Is_Loading, bool* Zone_has_Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Validate Transaction");

	Params::RadialCenterVehicle_C_Validate_Transaction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (Con_Valid != nullptr)
		*Con_Valid = Parms.Con_Valid;

	if (Ammo_Valid != nullptr)
		*Ammo_Valid = Parms.Ammo_Valid;

	if (Is_Loading != nullptr)
		*Is_Loading = Parms.Is_Loading;

	if (Zone_has_Points != nullptr)
		*Zone_has_Points = Parms.Zone_has_Points;
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Validate FOB
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialCenterVehicle_C::Validate_FOB(bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Validate FOB");

	Params::RadialCenterVehicle_C_Validate_FOB Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Get Action Text
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText URadialCenterVehicle_C::Get_Action_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Get Action Text");

	Params::RadialCenterVehicle_C_Get_Action_Text Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Get Widget Text
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQRadialButton*                  Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             DisplayText                                            (Parm, OutParm)

void URadialCenterVehicle_C::Get_Widget_Text(class USQRadialButton* Button, class FText* DisplayText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Get Widget Text");

	Params::RadialCenterVehicle_C_Get_Widget_Text Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);

	if (DisplayText != nullptr)
		*DisplayText = std::move(Parms.DisplayText);
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.Is Soldier Alive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Alive                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialCenterVehicle_C::Is_Soldier_Alive(bool* Alive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "Is Soldier Alive");

	Params::RadialCenterVehicle_C_Is_Soldier_Alive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Alive != nullptr)
		*Alive = Parms.Alive;
}


// Function RadialCenterVehicle.RadialCenterVehicle_C.HelicopterAltitudeCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    AltitudeValid                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialCenterVehicle_C::HelicopterAltitudeCheck(bool* AltitudeValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialCenterVehicle_C", "HelicopterAltitudeCheck");

	Params::RadialCenterVehicle_C_HelicopterAltitudeCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AltitudeValid != nullptr)
		*AltitudeValid = Parms.AltitudeValid;
}

}


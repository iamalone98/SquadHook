#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_Compass_Marker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function UMG_Compass_Marker.UMG_Compass_Marker_C.ExecuteUbergraph_UMG_Compass_Marker
// 0x0158 (0x0158 - 0x0000)
struct UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFireteamId_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CE[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAlphabetLetterString_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0028)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CF[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireteamId_ReturnValue_1;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapMarkerType                              CallFunc_GetMarkerType_ReturnValue;                // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D0[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MapMarkersEnabledDefined_ReturnValue;     // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MapMarkersEnabledDefined_ReturnValue_1;   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D1[0x5];                                     // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset_1;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MapMarkersEnabledDefined_ReturnValue_2;   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D2[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue_1;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Compass_C*                         K2Node_DynamicCast_AsUMG_Compass;                  // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D3[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue_1;                   // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAlphabetLetterString_ReturnValue_1;    // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0110(0x0028)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0138(0x0018)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker) == 0x000008, "Wrong alignment on UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker");
static_assert(sizeof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker) == 0x000158, "Wrong size on UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, EntryPoint) == 0x000000, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetFireteamId_ReturnValue) == 0x000004, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetFireteamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_Max_ReturnValue) == 0x00000C, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetAlphabetLetterString_ReturnValue) == 0x000010, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetAlphabetLetterString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x000038, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetColor_ReturnValue) == 0x000040, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetOwningPlayer_ReturnValue) == 0x000078, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_DynamicCast_AsSQPlayer_State) == 0x000080, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetFireteamId_ReturnValue_1) == 0x00008C, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetFireteamId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetFireTeamIndex_ReturnValue) == 0x000090, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_IsSquadLeader_ReturnValue) == 0x000094, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000095, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetMarkerType_ReturnValue) == 0x000096, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetMarkerType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_IsValid_ReturnValue) == 0x000097, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_BooleanOR_ReturnValue) == 0x000099, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_SwitchEnum_CmpSuccess) == 0x00009A, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_BooleanOR_ReturnValue_1) == 0x00009B, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_PlayAnimation_ReturnValue) == 0x0000A0, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_DynamicCast_AsTexture_2D) == 0x0000A8, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_MapMarkersEnabledDefined_ReturnValue) == 0x0000B1, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_MapMarkersEnabledDefined_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_MapMarkersEnabledDefined_ReturnValue_1) == 0x0000B2, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_MapMarkersEnabledDefined_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_Get_SQHUD_Colors_ColorsDataAsset_1) == 0x0000B8, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_Get_SQHUD_Colors_ColorsDataAsset_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_MapMarkersEnabledDefined_ReturnValue_2) == 0x0000C0, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_MapMarkersEnabledDefined_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C1, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_Event_IsDesignTime) == 0x0000C2, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000C3, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetParent_ReturnValue) == 0x0000C8, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetOuterObject_ReturnValue) == 0x0000D0, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetOuterObject_ReturnValue_1) == 0x0000D8, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetOuterObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_DynamicCast_AsUMG_Compass) == 0x0000E0, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_DynamicCast_AsUMG_Compass' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_Max_ReturnValue_1) == 0x0000EC, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetColor_ReturnValue_1) == 0x0000F0, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_GetAlphabetLetterString_ReturnValue_1) == 0x000100, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_GetAlphabetLetterString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, K2Node_MakeStruct_SlateColor_1) == 0x000110, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000138, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000150, "Member 'UMG_Compass_Marker_C_ExecuteUbergraph_UMG_Compass_Marker::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_Compass_Marker.UMG_Compass_Marker_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_Compass_Marker_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Compass_Marker_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_Compass_Marker_C_PreConstruct");
static_assert(sizeof(UMG_Compass_Marker_C_PreConstruct) == 0x000001, "Wrong size on UMG_Compass_Marker_C_PreConstruct");
static_assert(offsetof(UMG_Compass_Marker_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_Compass_Marker_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_Compass_Marker.UMG_Compass_Marker_C.ChangeDisplayMode
// 0x0038 (0x0038 - 0x0000)
struct UMG_Compass_Marker_C_ChangeDisplayMode final
{
public:
	bool                                          Param_bTopScreenView;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D4[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_Compass_Marker_C_ChangeDisplayMode) == 0x000008, "Wrong alignment on UMG_Compass_Marker_C_ChangeDisplayMode");
static_assert(sizeof(UMG_Compass_Marker_C_ChangeDisplayMode) == 0x000038, "Wrong size on UMG_Compass_Marker_C_ChangeDisplayMode");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, Param_bTopScreenView) == 0x000000, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::Param_bTopScreenView' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, Temp_bool_Variable) == 0x000001, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, Temp_bool_Variable_1) == 0x000002, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, Temp_struct_Variable) == 0x000004, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, Temp_struct_Variable_1) == 0x00000C, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, K2Node_Select_Default) == 0x000020, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, K2Node_Select_Default_1) == 0x000028, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_Compass_Marker_C_ChangeDisplayMode, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000030, "Member 'UMG_Compass_Marker_C_ChangeDisplayMode::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");

}


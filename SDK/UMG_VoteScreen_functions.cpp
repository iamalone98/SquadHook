#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteScreen

#include "Basic.hpp"

#include "UMG_VoteScreen_classes.hpp"
#include "UMG_VoteScreen_parameters.hpp"


namespace SDK
{

// Function UMG_VoteScreen.UMG_VoteScreen_C.ExecuteUbergraph_UMG_VoteScreen
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::ExecuteUbergraph_UMG_VoteScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "ExecuteUbergraph_UMG_VoteScreen");

	Params::UMG_VoteScreen_C_ExecuteUbergraph_UMG_VoteScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UMainMenu_Button_C*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, class UMainMenu_Button_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	Params::UMG_VoteScreen_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature Parms{};

	Parms.bSelected = bSelected;
	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_Team2Info_K2Node_ComponentBoundEvent_13_InfoClicked__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_Team2Info_K2Node_ComponentBoundEvent_13_InfoClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_Team2Info_K2Node_ComponentBoundEvent_13_InfoClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_Team1Info_K2Node_ComponentBoundEvent_12_InfoClicked__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_Team1Info_K2Node_ComponentBoundEvent_12_InfoClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_Team1Info_K2Node_ComponentBoundEvent_12_InfoClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_MapInfo_K2Node_ComponentBoundEvent_11_InfoClicked__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_MapInfo_K2Node_ComponentBoundEvent_11_InfoClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_MapInfo_K2Node_ComponentBoundEvent_11_InfoClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             ChoiceId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature(class FName ChoiceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature");

	Params::UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ResultItem_K2Node_ComponentBoundEvent_6_InfoSelected__DelegateSignature Parms{};

	Parms.ChoiceId = ChoiceId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_VoteProgress_K2Node_ComponentBoundEvent_5_RequestMapInfo__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_VoteProgress_K2Node_ComponentBoundEvent_5_RequestMapInfo__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_VoteProgress_K2Node_ComponentBoundEvent_5_RequestMapInfo__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_VoteProgress_K2Node_ComponentBoundEvent_4_RequestFactionInfo__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_VoteProgress_K2Node_ComponentBoundEvent_4_RequestFactionInfo__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_VoteProgress_K2Node_ComponentBoundEvent_4_RequestFactionInfo__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_FactionVoteDetails_K2Node_ComponentBoundEvent_3_CloseWindow__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_FactionVoteDetails_K2Node_ComponentBoundEvent_3_CloseWindow__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_FactionVoteDetails_K2Node_ComponentBoundEvent_3_CloseWindow__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_LayerVoteDetails_K2Node_ComponentBoundEvent_2_CloseWindow__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_LayerVoteDetails_K2Node_ComponentBoundEvent_2_CloseWindow__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_LayerVoteDetails_K2Node_ComponentBoundEvent_2_CloseWindow__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUMG_VoteScreen_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UW_MainMenuButton_C*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, class UW_MainMenuButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	Params::UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_ButtonSERVERBROWSERN_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature Parms{};

	Parms.bSelected = bSelected;
	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             VoteId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature(class FName VoteId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature");

	Params::UMG_VoteScreen_C_BndEvt__UMG_VoteScreen_VoteNone_K2Node_ComponentBoundEvent_0_VoteSelected__DelegateSignature Parms{};

	Parms.VoteId = VoteId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.Update Self Activation
// (BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::Update_Self_Activation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "Update Self Activation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUMG_VoteScreen_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.SetVoteScreenActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activated                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteScreen_C::SetVoteScreenActive(bool Activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "SetVoteScreenActive");

	Params::UMG_VoteScreen_C_SetVoteScreenActive Parms{};

	Parms.Activated = Activated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.OnVoteEnded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             VoteSession                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSQChoice                        Winner                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUMG_VoteScreen_C::OnVoteEnded(class USQVoteSessionClient* VoteSession, const struct FSQChoice& Winner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "OnVoteEnded");

	Params::UMG_VoteScreen_C_OnVoteEnded Parms{};

	Parms.VoteSession = VoteSession;
	Parms.Winner = std::move(Winner);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.OnVoteUpdated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             VoteSession                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerCurrentVoteCount                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::OnVoteUpdated(class USQVoteSessionClient* VoteSession, int32 PlayerCurrentVoteCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "OnVoteUpdated");

	Params::UMG_VoteScreen_C_OnVoteUpdated Parms{};

	Parms.VoteSession = VoteSession;
	Parms.PlayerCurrentVoteCount = PlayerCurrentVoteCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.OnVoteStarted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             VoteSession                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    VotePossible                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteScreen_C::OnVoteStarted(class USQVoteSessionClient* VoteSession, bool VotePossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "OnVoteStarted");

	Params::UMG_VoteScreen_C_OnVoteStarted Parms{};

	Parms.VoteSession = VoteSession;
	Parms.VotePossible = VotePossible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "Tick");

	Params::UMG_VoteScreen_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.OnVoteUpdatedByID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ChoiceId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::OnVoteUpdatedByID(class FName ChoiceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "OnVoteUpdatedByID");

	Params::UMG_VoteScreen_C_OnVoteUpdatedByID Parms{};

	Parms.ChoiceId = ChoiceId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.SwitchToScreen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::SwitchToScreen(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "SwitchToScreen");

	Params::UMG_VoteScreen_C_SwitchToScreen Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.PresentFinalResult
// (BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::PresentFinalResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "PresentFinalResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateActivations
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQVoteType                             VoteType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_VoteScreen_C>ActivatedScreen                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteScreen_C::UpdateActivations(ESQVoteType VoteType, TScriptInterface<class IBPI_VoteScreen_C>* ActivatedScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateActivations");

	Params::UMG_VoteScreen_C_UpdateActivations Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	if (ActivatedScreen != nullptr)
		*ActivatedScreen = Parms.ActivatedScreen;
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.GetVoteType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USQVoteSession*                   InVoteSession                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESQVoteType                             OutVoteType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::GetVoteType(class USQVoteSession* InVoteSession, ESQVoteType* OutVoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "GetVoteType");

	Params::UMG_VoteScreen_C_GetVoteType Parms{};

	Parms.InVoteSession = InVoteSession;

	UObject::ProcessEvent(Func, &Parms);

	if (OutVoteType != nullptr)
		*OutVoteType = Parms.OutVoteType;
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.GetVoteWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESQVoteType                             VoteType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Create                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class IBPI_VoteScreen_C>Widget                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteScreen_C::GetVoteWidget(ESQVoteType VoteType, bool Create, bool* Success, TScriptInterface<class IBPI_VoteScreen_C>* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "GetVoteWidget");

	Params::UMG_VoteScreen_C_GetVoteWidget Parms{};

	Parms.VoteType = VoteType;
	Parms.Create = Create;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.GetVoteWidgetIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESQVoteType                             VoteType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Out_Widget_Index                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::GetVoteWidgetIndex(ESQVoteType VoteType, int32* Out_Widget_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "GetVoteWidgetIndex");

	Params::UMG_VoteScreen_C_GetVoteWidgetIndex Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Widget_Index != nullptr)
		*Out_Widget_Index = Parms.Out_Widget_Index;
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::UpdateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.GetRemainingTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USQVoteSession*                   In_Vote_Session                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Minutes                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Seconds                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::GetRemainingTime(class USQVoteSession* In_Vote_Session, int32* Minutes, int32* Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "GetRemainingTime");

	Params::UMG_VoteScreen_C_GetRemainingTime Parms{};

	Parms.In_Vote_Session = In_Vote_Session;

	UObject::ProcessEvent(Func, &Parms);

	if (Minutes != nullptr)
		*Minutes = Parms.Minutes;

	if (Seconds != nullptr)
		*Seconds = Parms.Seconds;
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateTexts
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             VoteSession                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::UpdateTexts(class USQVoteSessionClient* VoteSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateTexts");

	Params::UMG_VoteScreen_C_UpdateTexts Parms{};

	Parms.VoteSession = VoteSession;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.DeActivateAll
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::DeActivateAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "DeActivateAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.To Human Readable Time
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   In_Minutes                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   In_Seconds                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Result                                                 (Parm, OutParm)

void UUMG_VoteScreen_C::To_Human_Readable_Time(int32 In_Minutes, int32 In_Seconds, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "To Human Readable Time");

	Params::UMG_VoteScreen_C_To_Human_Readable_Time Parms{};

	Parms.In_Minutes = In_Minutes;
	Parms.In_Seconds = In_Seconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.CreateVotePopup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class IBPI_VoteScreen_C>VoteScreen                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteScreen_C::CreateVotePopup(bool* Success, TScriptInterface<class IBPI_VoteScreen_C>* VoteScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "CreateVotePopup");

	Params::UMG_VoteScreen_C_CreateVotePopup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (VoteScreen != nullptr)
		*VoteScreen = Parms.VoteScreen;
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateVoteCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VoteCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::UpdateVoteCount(int32 VoteCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateVoteCount");

	Params::UMG_VoteScreen_C_UpdateVoteCount Parms{};

	Parms.VoteCount = VoteCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpgradeVoteProgressBar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::UpgradeVoteProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpgradeVoteProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.BindToVoteState
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::BindToVoteState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "BindToVoteState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateResultsState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::UpdateResultsState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateResultsState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.VotePhaseChanged
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::VotePhaseChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "VotePhaseChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.ShowRegenerateScreen
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::ShowRegenerateScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "ShowRegenerateScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.ShowResultScreen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::ShowResultScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "ShowResultScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.PresentFactionResult
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQLayer*                         Layer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSQLayerSettings                 LayerInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// int32                                   TeamId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::PresentFactionResult(class USQLayer* Layer, const struct FSQLayerSettings& LayerInfo, int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "PresentFactionResult");

	Params::UMG_VoteScreen_C_PresentFactionResult Parms{};

	Parms.Layer = Layer;
	Parms.LayerInfo = std::move(LayerInfo);
	Parms.TeamId = TeamId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.TickCheck
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::TickCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "TickCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateScoreboardTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       TextObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::UpdateScoreboardTimer(class UTextBlock* TextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateScoreboardTimer");

	Params::UMG_VoteScreen_C_UpdateScoreboardTimer Parms{};

	Parms.TextObject = TextObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.PresentLayerInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LayerID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::PresentLayerInfo(class FName LayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "PresentLayerInfo");

	Params::UMG_VoteScreen_C_PresentLayerInfo Parms{};

	Parms.LayerID = LayerID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.CloseDetailsWindow
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::CloseDetailsWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "CloseDetailsWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.PresentFactionInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Faction                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::PresentFactionInfo(class FName Faction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "PresentFactionInfo");

	Params::UMG_VoteScreen_C_PresentFactionInfo Parms{};

	Parms.Faction = Faction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateFactionItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQFactionSetup*                  UsedSetup                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UUMG_VoteItem_C*>          UpdateItems                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UUMG_VoteScreen_C::UpdateFactionItem(class USQFactionSetup* UsedSetup, TArray<class UUMG_VoteItem_C*>& UpdateItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateFactionItem");

	Params::UMG_VoteScreen_C_UpdateFactionItem Parms{};

	Parms.UsedSetup = UsedSetup;
	Parms.UpdateItems = std::move(UpdateItems);

	UObject::ProcessEvent(Func, &Parms);

	UpdateItems = std::move(Parms.UpdateItems);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateFinalResult
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::UpdateFinalResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateFinalResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.RemoveAllChoices
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::RemoveAllChoices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "RemoveAllChoices");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.ShowChoosenFactionInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TeamId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::ShowChoosenFactionInfo(int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "ShowChoosenFactionInfo");

	Params::UMG_VoteScreen_C_ShowChoosenFactionInfo Parms{};

	Parms.TeamId = TeamId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.ShowChoosenLayerInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::ShowChoosenLayerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "ShowChoosenLayerInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.ShowInfoFromSingleResult
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::ShowInfoFromSingleResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "ShowInfoFromSingleResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateSquadChatButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteScreen_C::UpdateSquadChatButton(bool Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateSquadChatButton");

	Params::UMG_VoteScreen_C_UpdateSquadChatButton Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.GetScoreboardRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUMG_Scoreboard_C*                ScoreBoard                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::GetScoreboardRef(class UUMG_Scoreboard_C** ScoreBoard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "GetScoreboardRef");

	Params::UMG_VoteScreen_C_GetScoreboardRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ScoreBoard != nullptr)
		*ScoreBoard = Parms.ScoreBoard;
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateGameMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::UpdateGameMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateGameMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.SetRefreshVoip
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteScreen_C::SetRefreshVoip(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "SetRefreshVoip");

	Params::UMG_VoteScreen_C_SetRefreshVoip Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.ActivateWindow
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::ActivateWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "ActivateWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdateCantVoteScreen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUMG_VoteScreen_C::UpdateCantVoteScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdateCantVoteScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.GetFactionSetup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             FactionID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             FactionType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TeamId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQFactionSetup*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USQFactionSetup* UUMG_VoteScreen_C::GetFactionSetup(class FName FactionID, class FName FactionType, int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "GetFactionSetup");

	Params::UMG_VoteScreen_C_GetFactionSetup Parms{};

	Parms.FactionID = FactionID;
	Parms.FactionType = FactionType;
	Parms.TeamId = TeamId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.GetFactionSetupByID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             FactionID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TeamId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQFactionSetup*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USQFactionSetup* UUMG_VoteScreen_C::GetFactionSetupByID(class FName FactionID, int32 TeamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "GetFactionSetupByID");

	Params::UMG_VoteScreen_C_GetFactionSetupByID Parms{};

	Parms.FactionID = FactionID;
	Parms.TeamId = TeamId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.TryToResetup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             Session                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::TryToResetup(class USQVoteSessionClient* Session)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "TryToResetup");

	Params::UMG_VoteScreen_C_TryToResetup Parms{};

	Parms.Session = Session;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteScreen.UMG_VoteScreen_C.UpdatePlayersCountText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteScreen_C::UpdatePlayersCountText(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteScreen_C", "UpdatePlayersCountText");

	Params::UMG_VoteScreen_C_UpdatePlayersCountText Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModdingRuntime

#include "Basic.hpp"

#include "ModdingRuntime_classes.hpp"
#include "ModdingRuntime_parameters.hpp"


namespace SDK
{

// Function ModdingRuntime.ModdingRuntimeBlueprintLibrary.CancelDownloads
// (Final, Native, Static, Public, BlueprintCallable)

void UModdingRuntimeBlueprintLibrary::CancelDownloads()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModdingRuntimeBlueprintLibrary", "CancelDownloads");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ModdingRuntime.ModdingRuntimeBlueprintLibrary.DownloadMissingMods
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSQModLoadProgress>       MissingModData                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UModdingRuntimeBlueprintLibrary::DownloadMissingMods(TArray<struct FSQModLoadProgress>& MissingModData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModdingRuntimeBlueprintLibrary", "DownloadMissingMods");

	Params::ModdingRuntimeBlueprintLibrary_DownloadMissingMods Parms{};

	Parms.MissingModData = std::move(MissingModData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	MissingModData = std::move(Parms.MissingModData);
}


// Function ModdingRuntime.ModdingRuntimeBlueprintLibrary.GetModInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSQModLoadProgress               MissingModData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSQModInfo                       OutModInfo                                             (Parm, OutParm, NativeAccessSpecifierPublic)

void UModdingRuntimeBlueprintLibrary::GetModInfo(const struct FSQModLoadProgress& MissingModData, struct FSQModInfo* OutModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModdingRuntimeBlueprintLibrary", "GetModInfo");

	Params::ModdingRuntimeBlueprintLibrary_GetModInfo Parms{};

	Parms.MissingModData = std::move(MissingModData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutModInfo != nullptr)
		*OutModInfo = std::move(Parms.OutModInfo);
}


// Function ModdingRuntime.ModdingRuntimeBlueprintLibrary.ToIDString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSQModInfo                       ModInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UModdingRuntimeBlueprintLibrary::ToIDString(const struct FSQModInfo& ModInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModdingRuntimeBlueprintLibrary", "ToIDString");

	Params::ModdingRuntimeBlueprintLibrary_ToIDString Parms{};

	Parms.ModInfo = std::move(ModInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ModdingRuntime.ModdingRuntimeBlueprintLibrary.VerifyModIntegrity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSQModLoadProgress               ServerModProgress                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModdingRuntimeBlueprintLibrary::VerifyModIntegrity(const struct FSQModLoadProgress& ServerModProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModdingRuntimeBlueprintLibrary", "VerifyModIntegrity");

	Params::ModdingRuntimeBlueprintLibrary_VerifyModIntegrity Parms{};

	Parms.ServerModProgress = std::move(ServerModProgress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}


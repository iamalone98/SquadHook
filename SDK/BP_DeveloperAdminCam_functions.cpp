#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeveloperAdminCam

#include "Basic.hpp"

#include "BP_DeveloperAdminCam_classes.hpp"
#include "BP_DeveloperAdminCam_parameters.hpp"


namespace SDK
{

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ExecuteUbergraph_BP_DeveloperAdminCam
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::ExecuteUbergraph_BP_DeveloperAdminCam(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "ExecuteUbergraph_BP_DeveloperAdminCam");

	Params::BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ClearSelection_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_DeveloperAdminCam_C::ClearSelection_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "ClearSelection_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.CLIENT_HideSelectionMenu
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_DeveloperAdminCam_C::CLIENT_HideSelectionMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "CLIENT_HideSelectionMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.Server_DamageVehicle
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BaseDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UDamageType>          DamageTypeClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::Server_DamageVehicle(class AActor* DamagedActor, float BaseDamage, TSubclassOf<class UDamageType> DamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "Server_DamageVehicle");

	Params::BP_DeveloperAdminCam_C_Server_DamageVehicle Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.BaseDamage = BaseDamage;
	Parms.DamageTypeClass = DamageTypeClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SERVER_SetTeam
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::SERVER_SetTeam(class AActor* Actor, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "SERVER_SetTeam");

	Params::BP_DeveloperAdminCam_C_SERVER_SetTeam Parms{};

	Parms.Actor = Actor;
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.VehicleDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::VehicleDestroyed(class ASQVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "VehicleDestroyed");

	Params::BP_DeveloperAdminCam_C_VehicleDestroyed Parms{};

	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.Server_PossessSelection
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*                       Soldier                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::Server_PossessSelection(class ASQSoldier* Soldier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "Server_PossessSelection");

	Params::BP_DeveloperAdminCam_C_Server_PossessSelection Parms{};

	Parms.Soldier = Soldier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.Server_Destroy
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::Server_Destroy(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "Server_Destroy");

	Params::BP_DeveloperAdminCam_C_Server_Destroy Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.Client_ApplyDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQVehicleComponent*              Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::Client_ApplyDamage(class AActor* Actor, class USQVehicleComponent* Component, float Damage, class UClass* DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "Client_ApplyDamage");

	Params::BP_DeveloperAdminCam_C_Client_ApplyDamage Parms{};

	Parms.Actor = Actor;
	Parms.Component = Component;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ClientSetMousemode
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMouseMode                              NewMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::ClientSetMousemode(EMouseMode NewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "ClientSetMousemode");

	Params::BP_DeveloperAdminCam_C_ClientSetMousemode Parms{};

	Parms.NewMode = NewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.OnActorPlaced
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::OnActorPlaced(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "OnActorPlaced");

	Params::BP_DeveloperAdminCam_C_OnActorPlaced Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DeveloperAdminCam_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "ReceiveEndPlay");

	Params::BP_DeveloperAdminCam_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ToggleMenu
// (Event, Public, BlueprintEvent)

void ABP_DeveloperAdminCam_C::ToggleMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "ToggleMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ToggleLookEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_DeveloperAdminCam_C::ToggleLookEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "ToggleLookEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ToggleLookStart
// (BlueprintCallable, BlueprintEvent)

void ABP_DeveloperAdminCam_C::ToggleLookStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "ToggleLookStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SelectVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::SelectVehicle(class ASQVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "SelectVehicle");

	Params::BP_DeveloperAdminCam_C_SelectVehicle Parms{};

	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SelectDeployable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQDeployable*                    Deployable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::SelectDeployable(class ASQDeployable* Deployable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "SelectDeployable");

	Params::BP_DeveloperAdminCam_C_SelectDeployable Parms{};

	Parms.Deployable = Deployable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SelectPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*                       Soldier                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::SelectPlayer(class ASQSoldier* Soldier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "SelectPlayer");

	Params::BP_DeveloperAdminCam_C_SelectPlayer Parms{};

	Parms.Soldier = Soldier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.On Selection Updated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Selected                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::On_Selection_Updated(class AActor* Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "On Selection Updated");

	Params::BP_DeveloperAdminCam_C_On_Selection_Updated Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.On Selected Destroyed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::On_Selected_Destroyed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "On Selected Destroyed");

	Params::BP_DeveloperAdminCam_C_On_Selected_Destroyed Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.OnActorTrackStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TrackedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::OnActorTrackStart(class AActor* TrackedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "OnActorTrackStart");

	Params::BP_DeveloperAdminCam_C_OnActorTrackStart Parms{};

	Parms.TrackedActor = TrackedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ApplyDamageToVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::ApplyDamageToVehicle(class AActor* ActorRef, float Amount, class UClass* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "ApplyDamageToVehicle");

	Params::BP_DeveloperAdminCam_C_ApplyDamageToVehicle Parms{};

	Parms.ActorRef = ActorRef;
	Parms.Amount = Amount;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SetTeam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DeveloperAdminCam_C::SetTeam(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DeveloperAdminCam_C", "SetTeam");

	Params::BP_DeveloperAdminCam_C_SetTeam Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CommandActor_ArtilleryBase

#include "Basic.hpp"

#include "BP_CommandActor_ArtilleryBase_classes.hpp"
#include "BP_CommandActor_ArtilleryBase_parameters.hpp"


namespace SDK
{

// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.ExecuteUbergraph_BP_CommandActor_ArtilleryBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CommandActor_ArtilleryBase_C::ExecuteUbergraph_BP_CommandActor_ArtilleryBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "ExecuteUbergraph_BP_CommandActor_ArtilleryBase");

	Params::BP_CommandActor_ArtilleryBase_C_ExecuteUbergraph_BP_CommandActor_ArtilleryBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Server Prewarning Projectiles
// (BlueprintCallable, BlueprintEvent)

void ABP_CommandActor_ArtilleryBase_C::Server_Prewarning_Projectiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Server Prewarning Projectiles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Fire Projectiles
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Locations                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_CommandActor_ArtilleryBase_C::Fire_Projectiles(const TArray<struct FVector>& Locations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Fire Projectiles");

	Params::BP_CommandActor_ArtilleryBase_C_Fire_Projectiles Parms{};

	Parms.Locations = std::move(Locations);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Server Projectiles
// (BlueprintCallable, BlueprintEvent)

void ABP_CommandActor_ArtilleryBase_C::Server_Projectiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Server Projectiles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CommandActor_ArtilleryBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Get Landscape Hit Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CommandActor_ArtilleryBase_C::Get_Landscape_Hit_Location(struct FVector* Location, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Get Landscape Hit Location");

	Params::BP_CommandActor_ArtilleryBase_C_Get_Landscape_Hit_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.OnRep_Start Move
// (BlueprintCallable, BlueprintEvent)

void ABP_CommandActor_ArtilleryBase_C::OnRep_Start_Move()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "OnRep_Start Move");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Randomise Location
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CommandActor_ArtilleryBase_C::Randomise_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Randomise Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Init Artillery
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CommandActor_ArtilleryBase_C::Init_Artillery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Init Artillery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Get Main Barrage Array
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Out_Locations                                          (Parm, OutParm)

void ABP_CommandActor_ArtilleryBase_C::Get_Main_Barrage_Array(TArray<struct FVector>* Out_Locations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Get Main Barrage Array");

	Params::BP_CommandActor_ArtilleryBase_C_Get_Main_Barrage_Array Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Locations != nullptr)
		*Out_Locations = std::move(Parms.Out_Locations);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Get Prewarn Barrage Array
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Out_Locations                                          (Parm, OutParm)

void ABP_CommandActor_ArtilleryBase_C::Get_Prewarn_Barrage_Array(TArray<struct FVector>* Out_Locations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Get Prewarn Barrage Array");

	Params::BP_CommandActor_ArtilleryBase_C_Get_Prewarn_Barrage_Array Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Locations != nullptr)
		*Out_Locations = std::move(Parms.Out_Locations);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Server Start Active Duration
// (BlueprintCallable, BlueprintEvent)

void ABP_CommandActor_ArtilleryBase_C::Server_Start_Active_Duration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Server Start Active Duration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Server End Active Duration
// (BlueprintCallable, BlueprintEvent)

void ABP_CommandActor_ArtilleryBase_C::Server_End_Active_Duration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Server End Active Duration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Get Radius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CommandActor_ArtilleryBase_C::Get_Radius(float* Radius) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Get Radius");

	Params::BP_CommandActor_ArtilleryBase_C_Get_Radius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.Get Distance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Dist                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CommandActor_ArtilleryBase_C::Get_Distance(float* Dist) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "Get Distance");

	Params::BP_CommandActor_ArtilleryBase_C_Get_Distance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dist != nullptr)
		*Dist = Parms.Dist;
}


// Function BP_CommandActor_ArtilleryBase.BP_CommandActor_ArtilleryBase_C.GetStartingOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CommandActor_ArtilleryBase_C::GetStartingOffset(struct FVector* Offset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommandActor_ArtilleryBase_C", "GetStartingOffset");

	Params::BP_CommandActor_ArtilleryBase_C_GetStartingOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = std::move(Parms.Offset);
}

}


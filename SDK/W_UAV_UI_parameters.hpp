#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_UAV_UI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_UAV_UI.W_UAV_UI_C.ExecuteUbergraph_W_UAV_UI
// 0x0058 (0x0058 - 0x0000)
struct W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30FE[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FF[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI) == 0x000008, "Wrong alignment on W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI");
static_assert(sizeof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI) == 0x000058, "Wrong size on W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI");
static_assert(offsetof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI, EntryPoint) == 0x000000, "Member 'W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000050, "Member 'W_UAV_UI_C_ExecuteUbergraph_W_UAV_UI::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_UAV_UI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_UAV_UI_C_Tick) == 0x000004, "Wrong alignment on W_UAV_UI_C_Tick");
static_assert(sizeof(W_UAV_UI_C_Tick) == 0x00003C, "Wrong size on W_UAV_UI_C_Tick");
static_assert(offsetof(W_UAV_UI_C_Tick, MyGeometry) == 0x000000, "Member 'W_UAV_UI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Tick, InDeltaTime) == 0x000038, "Member 'W_UAV_UI_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Get Cam Delta
// 0x00D0 (0x00D0 - 0x0000)
struct W_UAV_UI_C_Get_Cam_Delta final
{
public:
	struct FVector2D                              Mouse_Coordinate;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              Geometry;                                          // 0x0008(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         X;                                                 // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Y;                                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min_Y;                                             // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_X;                                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min_X;                                             // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3100[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3101[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3102[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3103[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3104[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3105[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_UAV_UI_C_Get_Cam_Delta) == 0x000004, "Wrong alignment on W_UAV_UI_C_Get_Cam_Delta");
static_assert(sizeof(W_UAV_UI_C_Get_Cam_Delta) == 0x0000D0, "Wrong size on W_UAV_UI_C_Get_Cam_Delta");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Mouse_Coordinate) == 0x000000, "Member 'W_UAV_UI_C_Get_Cam_Delta::Mouse_Coordinate' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Geometry) == 0x000008, "Member 'W_UAV_UI_C_Get_Cam_Delta::Geometry' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, X) == 0x000040, "Member 'W_UAV_UI_C_Get_Cam_Delta::X' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Y) == 0x000044, "Member 'W_UAV_UI_C_Get_Cam_Delta::Y' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Max_Y) == 0x000048, "Member 'W_UAV_UI_C_Get_Cam_Delta::Max_Y' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Min_Y) == 0x00004C, "Member 'W_UAV_UI_C_Get_Cam_Delta::Min_Y' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Max_X) == 0x000050, "Member 'W_UAV_UI_C_Get_Cam_Delta::Max_X' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Min_X) == 0x000054, "Member 'W_UAV_UI_C_Get_Cam_Delta::Min_X' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Temp_float_Variable) == 0x000058, "Member 'W_UAV_UI_C_Get_Cam_Delta::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_GetLocalSize_ReturnValue) == 0x00005C, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_BreakVector2D_X) == 0x000064, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_AbsoluteToLocal_ReturnValue) == 0x00006C, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Temp_bool_Variable) == 0x000074, "Member 'W_UAV_UI_C_Get_Cam_Delta::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_BreakVector2D_Y_1) == 0x00007C, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Temp_bool_Variable_1) == 0x000080, "Member 'W_UAV_UI_C_Get_Cam_Delta::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000084, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000088, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Temp_float_Variable_1) == 0x00008C, "Member 'W_UAV_UI_C_Get_Cam_Delta::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_MakeVector2D_ReturnValue) == 0x000090, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_BreakVector2D_X_2) == 0x000098, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_BreakVector2D_Y_2) == 0x00009C, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Temp_bool_Variable_2) == 0x0000A0, "Member 'W_UAV_UI_C_Get_Cam_Delta::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_MapRangeClamped_ReturnValue) == 0x0000A4, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000A8, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000AC, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000AD, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0000B0, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000B4, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000B8, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000B9, "Member 'W_UAV_UI_C_Get_Cam_Delta::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, K2Node_Select_Default) == 0x0000BC, "Member 'W_UAV_UI_C_Get_Cam_Delta::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, K2Node_Select_Default_1) == 0x0000C0, "Member 'W_UAV_UI_C_Get_Cam_Delta::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, Temp_bool_Variable_3) == 0x0000C4, "Member 'W_UAV_UI_C_Get_Cam_Delta::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, K2Node_Select_Default_2) == 0x0000C8, "Member 'W_UAV_UI_C_Get_Cam_Delta::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Get_Cam_Delta, K2Node_Select_Default_3) == 0x0000CC, "Member 'W_UAV_UI_C_Get_Cam_Delta::K2Node_Select_Default_3' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Set Grid Ref
// 0x0298 (0x0298 - 0x0000)
struct W_UAV_UI_C_Set_Grid_Ref final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3106[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3107[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3108[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0088(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3109[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetNumGridLines_ReturnValue;              // 0x0114(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMapBoundsScale_ReturnValue;            // 0x011C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_GetWorldBounds_ReturnValue;               // 0x0124(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310A[0x2];                                     // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_310B[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_WorldToMapLocation_OutMapLocation;        // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WorldToMapLocation_ReturnValue;           // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310C[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x01D8(0x0018)()
	class FString                                 CallFunc_MapLocationToGridCoordinateString_ReturnValue; // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0200(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0240(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0258(0x0010)(ReferenceParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0268(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0280(0x0018)()
};
static_assert(alignof(W_UAV_UI_C_Set_Grid_Ref) == 0x000008, "Wrong alignment on W_UAV_UI_C_Set_Grid_Ref");
static_assert(sizeof(W_UAV_UI_C_Set_Grid_Ref) == 0x000298, "Wrong size on W_UAV_UI_C_Set_Grid_Ref");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000014, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_GetHUD_ReturnValue) == 0x000048, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, K2Node_DynamicCast_AsBPI_HUD) == 0x000050, "Member 'W_UAV_UI_C_Set_Grid_Ref::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'W_UAV_UI_C_Set_Grid_Ref::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_GetAttachParentActor_ReturnValue) == 0x000068, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_Get_Map_Core_Map_Core) == 0x000070, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, K2Node_MakeArray_Array) == 0x000078, "Member 'W_UAV_UI_C_Set_Grid_Ref::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_LineTraceSingle_OutHit) == 0x000088, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_LineTraceSingle_ReturnValue) == 0x000110, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_GetNumGridLines_ReturnValue) == 0x000114, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_GetNumGridLines_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_GetMapBoundsScale_ReturnValue) == 0x00011C, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_GetMapBoundsScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_GetWorldBounds_ReturnValue) == 0x000124, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_GetWorldBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_bBlockingHit) == 0x000138, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_bInitialOverlap) == 0x000139, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_Location) == 0x000144, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_ImpactPoint) == 0x000150, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_Normal) == 0x00015C, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_TraceStart) == 0x0001A4, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x0001BC, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001C8, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_WorldToMapLocation_OutMapLocation) == 0x0001CC, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_WorldToMapLocation_OutMapLocation' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_WorldToMapLocation_ReturnValue) == 0x0001D4, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_WorldToMapLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_Conv_FloatToText_ReturnValue) == 0x0001D8, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_MapLocationToGridCoordinateString_ReturnValue) == 0x0001F0, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_MapLocationToGridCoordinateString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, K2Node_MakeStruct_FormatArgumentData) == 0x000200, "Member 'W_UAV_UI_C_Set_Grid_Ref::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_Conv_StringToText_ReturnValue) == 0x000240, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, K2Node_MakeArray_Array_1) == 0x000258, "Member 'W_UAV_UI_C_Set_Grid_Ref::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_MakeLiteralText_ReturnValue) == 0x000268, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Grid_Ref, CallFunc_Format_ReturnValue) == 0x000280, "Member 'W_UAV_UI_C_Set_Grid_Ref::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Set Time
// 0x0198 (0x0198 - 0x0000)
struct W_UAV_UI_C_Set_Time final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310D[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRemainingTime_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0100(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0180(0x0018)()
};
static_assert(alignof(W_UAV_UI_C_Set_Time) == 0x000008, "Wrong alignment on W_UAV_UI_C_Set_Time");
static_assert(sizeof(W_UAV_UI_C_Set_Time) == 0x000198, "Wrong size on W_UAV_UI_C_Set_Time");
static_assert(offsetof(W_UAV_UI_C_Set_Time, Temp_text_Variable) == 0x000000, "Member 'W_UAV_UI_C_Set_Time::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_GetSquadGameState_Return_Value) == 0x000018, "Member 'W_UAV_UI_C_Set_Time::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_UAV_UI_C_Set_Time::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_GetRemainingTime_ReturnValue) == 0x000024, "Member 'W_UAV_UI_C_Set_Time::CallFunc_GetRemainingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'W_UAV_UI_C_Set_Time::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_MakeTimespan_ReturnValue) == 0x000030, "Member 'W_UAV_UI_C_Set_Time::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, Temp_bool_Variable) == 0x000038, "Member 'W_UAV_UI_C_Set_Time::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_BreakTimespan_Days) == 0x00003C, "Member 'W_UAV_UI_C_Set_Time::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_BreakTimespan_Hours) == 0x000040, "Member 'W_UAV_UI_C_Set_Time::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_BreakTimespan_Minutes) == 0x000044, "Member 'W_UAV_UI_C_Set_Time::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_BreakTimespan_Seconds) == 0x000048, "Member 'W_UAV_UI_C_Set_Time::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_BreakTimespan_Milliseconds) == 0x00004C, "Member 'W_UAV_UI_C_Set_Time::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'W_UAV_UI_C_Set_Time::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000068, "Member 'W_UAV_UI_C_Set_Time::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'W_UAV_UI_C_Set_Time::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'W_UAV_UI_C_Set_Time::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000100, "Member 'W_UAV_UI_C_Set_Time::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'W_UAV_UI_C_Set_Time::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, K2Node_MakeArray_Array) == 0x000158, "Member 'W_UAV_UI_C_Set_Time::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, CallFunc_Format_ReturnValue) == 0x000168, "Member 'W_UAV_UI_C_Set_Time::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Time, K2Node_Select_Default) == 0x000180, "Member 'W_UAV_UI_C_Set_Time::K2Node_Select_Default' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Update Compass
// 0x0038 (0x0038 - 0x0000)
struct W_UAV_UI_C_Update_Compass final
{
public:
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0000(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_UAV_UI_C_Update_Compass) == 0x000008, "Wrong alignment on W_UAV_UI_C_Update_Compass");
static_assert(sizeof(W_UAV_UI_C_Update_Compass) == 0x000038, "Wrong size on W_UAV_UI_C_Update_Compass");
static_assert(offsetof(W_UAV_UI_C_Update_Compass, CallFunc_GetText_ReturnValue) == 0x000000, "Member 'W_UAV_UI_C_Update_Compass::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Update_Compass, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'W_UAV_UI_C_Update_Compass::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Update_Compass, CallFunc_Conv_StringToFloat_ReturnValue) == 0x000028, "Member 'W_UAV_UI_C_Update_Compass::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Update_Compass, CallFunc_MapRangeClamped_ReturnValue) == 0x00002C, "Member 'W_UAV_UI_C_Update_Compass::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Update_Compass, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'W_UAV_UI_C_Update_Compass::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Set Fuel
// 0x0020 (0x0020 - 0x0000)
struct W_UAV_UI_C_Set_Fuel final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3110[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQCommandActor*                        K2Node_DynamicCast_AsSQCommand_Actor;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3111[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateStatePercentTimeRemaining_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_UAV_UI_C_Set_Fuel) == 0x000008, "Wrong alignment on W_UAV_UI_C_Set_Fuel");
static_assert(sizeof(W_UAV_UI_C_Set_Fuel) == 0x000020, "Wrong size on W_UAV_UI_C_Set_Fuel");
static_assert(offsetof(W_UAV_UI_C_Set_Fuel, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'W_UAV_UI_C_Set_Fuel::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Fuel, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'W_UAV_UI_C_Set_Fuel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Fuel, CallFunc_GetAttachParentActor_ReturnValue) == 0x000008, "Member 'W_UAV_UI_C_Set_Fuel::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Fuel, K2Node_DynamicCast_AsSQCommand_Actor) == 0x000010, "Member 'W_UAV_UI_C_Set_Fuel::K2Node_DynamicCast_AsSQCommand_Actor' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Fuel, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_UAV_UI_C_Set_Fuel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Fuel, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'W_UAV_UI_C_Set_Fuel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Fuel, CallFunc_CalculateStatePercentTimeRemaining_ReturnValue) == 0x00001C, "Member 'W_UAV_UI_C_Set_Fuel::CallFunc_CalculateStatePercentTimeRemaining_ReturnValue' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Set Pitch
// 0x0068 (0x0068 - 0x0000)
struct W_UAV_UI_C_Set_Pitch final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3112[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0048(0x001C)(NoDestructor)
};
static_assert(alignof(W_UAV_UI_C_Set_Pitch) == 0x000008, "Wrong alignment on W_UAV_UI_C_Set_Pitch");
static_assert(sizeof(W_UAV_UI_C_Set_Pitch) == 0x000068, "Wrong size on W_UAV_UI_C_Set_Pitch");
static_assert(offsetof(W_UAV_UI_C_Set_Pitch, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'W_UAV_UI_C_Set_Pitch::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Pitch, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'W_UAV_UI_C_Set_Pitch::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Pitch, CallFunc_BreakRotator_Roll) == 0x000014, "Member 'W_UAV_UI_C_Set_Pitch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Pitch, CallFunc_BreakRotator_Pitch) == 0x000018, "Member 'W_UAV_UI_C_Set_Pitch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Pitch, CallFunc_BreakRotator_Yaw) == 0x00001C, "Member 'W_UAV_UI_C_Set_Pitch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Pitch, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'W_UAV_UI_C_Set_Pitch::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Pitch, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'W_UAV_UI_C_Set_Pitch::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Pitch, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'W_UAV_UI_C_Set_Pitch::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Pitch, K2Node_MakeStruct_WidgetTransform) == 0x000048, "Member 'W_UAV_UI_C_Set_Pitch::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Set Self Grid Ref
// 0x00B8 (0x00B8 - 0x0000)
struct W_UAV_UI_C_Set_Self_Grid_Ref final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3113[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3114[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetNumGridLines_ReturnValue;              // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMapBoundsScale_ReturnValue;            // 0x0050(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_GetWorldBounds_ReturnValue;               // 0x0058(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FVector2D                              CallFunc_WorldToMapLocation_OutMapLocation;        // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WorldToMapLocation_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3115[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MapLocationToGridCoordinateString_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00A0(0x0018)()
};
static_assert(alignof(W_UAV_UI_C_Set_Self_Grid_Ref) == 0x000008, "Wrong alignment on W_UAV_UI_C_Set_Self_Grid_Ref");
static_assert(sizeof(W_UAV_UI_C_Set_Self_Grid_Ref) == 0x0000B8, "Wrong size on W_UAV_UI_C_Set_Self_Grid_Ref");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, K2Node_DynamicCast_AsBPI_HUD) == 0x000020, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x000034, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_Get_Map_Core_Map_Core) == 0x000040, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_GetNumGridLines_ReturnValue) == 0x000048, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_GetNumGridLines_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_GetMapBoundsScale_ReturnValue) == 0x000050, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_GetMapBoundsScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_GetWorldBounds_ReturnValue) == 0x000058, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_GetWorldBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_WorldToMapLocation_OutMapLocation) == 0x00006C, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_WorldToMapLocation_OutMapLocation' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_WorldToMapLocation_ReturnValue) == 0x000074, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_WorldToMapLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_MapLocationToGridCoordinateString_ReturnValue) == 0x000078, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_MapLocationToGridCoordinateString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Self_Grid_Ref, CallFunc_MakeLiteralText_ReturnValue) == 0x0000A0, "Member 'W_UAV_UI_C_Set_Self_Grid_Ref::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Set Elevation
// 0x01C0 (0x01C0 - 0x0000)
struct W_UAV_UI_C_Set_Elevation final
{
public:
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3116[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3117[0x1];                                     // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0140(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0158(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0198(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A8(0x0018)()
};
static_assert(alignof(W_UAV_UI_C_Set_Elevation) == 0x000008, "Wrong alignment on W_UAV_UI_C_Set_Elevation");
static_assert(sizeof(W_UAV_UI_C_Set_Elevation) == 0x0001C0, "Wrong size on W_UAV_UI_C_Set_Elevation");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_GetAttachParentActor_ReturnValue) == 0x000000, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, K2Node_MakeArray_Array) == 0x000018, "Member 'W_UAV_UI_C_Set_Elevation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_LineTraceSingle_OutHit) == 0x000034, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_LineTraceSingle_ReturnValue) == 0x0000BC, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_bBlockingHit) == 0x0000BD, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000BE, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_Time) == 0x0000C0, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_Distance) == 0x0000C4, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_Location) == 0x0000C8, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D4, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_Normal) == 0x0000E0, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_ImpactNormal) == 0x0000EC, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_PhysMat) == 0x0000F8, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_HitActor) == 0x000100, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_HitComponent) == 0x000108, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_HitBoneName) == 0x000110, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_HitItem) == 0x000118, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_ElementIndex) == 0x00011C, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_FaceIndex) == 0x000120, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_TraceStart) == 0x000124, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_BreakHitResult_TraceEnd) == 0x000130, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00013C, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_Conv_FloatToText_ReturnValue) == 0x000140, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, K2Node_MakeStruct_FormatArgumentData) == 0x000158, "Member 'W_UAV_UI_C_Set_Elevation::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, K2Node_MakeArray_Array_1) == 0x000198, "Member 'W_UAV_UI_C_Set_Elevation::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Elevation, CallFunc_Format_ReturnValue) == 0x0001A8, "Member 'W_UAV_UI_C_Set_Elevation::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Set Zoom
// 0x0088 (0x0088 - 0x0000)
struct W_UAV_UI_C_Set_Zoom final
{
public:
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
};
static_assert(alignof(W_UAV_UI_C_Set_Zoom) == 0x000008, "Wrong alignment on W_UAV_UI_C_Set_Zoom");
static_assert(sizeof(W_UAV_UI_C_Set_Zoom) == 0x000088, "Wrong size on W_UAV_UI_C_Set_Zoom");
static_assert(offsetof(W_UAV_UI_C_Set_Zoom, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'W_UAV_UI_C_Set_Zoom::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Zoom, CallFunc_FFloor_ReturnValue) == 0x000004, "Member 'W_UAV_UI_C_Set_Zoom::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Zoom, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'W_UAV_UI_C_Set_Zoom::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Zoom, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'W_UAV_UI_C_Set_Zoom::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Zoom, K2Node_MakeArray_Array) == 0x000060, "Member 'W_UAV_UI_C_Set_Zoom::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Set_Zoom, CallFunc_Format_ReturnValue) == 0x000070, "Member 'W_UAV_UI_C_Set_Zoom::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_UAV_UI.W_UAV_UI_C.Manage Animations
// 0x0040 (0x0040 - 0x0000)
struct W_UAV_UI_C_Manage_Animations final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3118[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3119[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQCommandActor*                        K2Node_DynamicCast_AsSQCommand_Actor;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311B[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateStateTimeRemaining_ReturnValue;  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_UAV_UI_C_Manage_Animations) == 0x000008, "Wrong alignment on W_UAV_UI_C_Manage_Animations");
static_assert(sizeof(W_UAV_UI_C_Manage_Animations) == 0x000040, "Wrong size on W_UAV_UI_C_Manage_Animations");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'W_UAV_UI_C_Manage_Animations::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_UAV_UI_C_Manage_Animations::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_UAV_UI_C_Manage_Animations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000011, "Member 'W_UAV_UI_C_Manage_Animations::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, CallFunc_GetAttachParentActor_ReturnValue) == 0x000018, "Member 'W_UAV_UI_C_Manage_Animations::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'W_UAV_UI_C_Manage_Animations::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, K2Node_DynamicCast_AsSQCommand_Actor) == 0x000028, "Member 'W_UAV_UI_C_Manage_Animations::K2Node_DynamicCast_AsSQCommand_Actor' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_UAV_UI_C_Manage_Animations::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, CallFunc_CalculateStateTimeRemaining_ReturnValue) == 0x000034, "Member 'W_UAV_UI_C_Manage_Animations::CallFunc_CalculateStateTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, CallFunc_Less_FloatFloat_ReturnValue) == 0x000038, "Member 'W_UAV_UI_C_Manage_Animations::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_UAV_UI_C_Manage_Animations, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000039, "Member 'W_UAV_UI_C_Manage_Animations::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");

}


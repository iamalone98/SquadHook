#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialEntry_ToolTip_Text

#include "Basic.hpp"

#include "RadialEntry_ToolTip_Text_classes.hpp"
#include "RadialEntry_ToolTip_Text_parameters.hpp"


namespace SDK
{

// Function RadialEntry_ToolTip_Text.RadialEntry_Tooltip_Text_C.ExecuteUbergraph_RadialEntry_Tooltip_Text
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialEntry_Tooltip_Text_C::ExecuteUbergraph_RadialEntry_Tooltip_Text(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialEntry_Tooltip_Text_C", "ExecuteUbergraph_RadialEntry_Tooltip_Text");

	Params::RadialEntry_Tooltip_Text_C_ExecuteUbergraph_RadialEntry_Tooltip_Text Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialEntry_ToolTip_Text.RadialEntry_Tooltip_Text_C.OnSetContext
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_RadialItemModel_C*            In_Outer_Context                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialEntry_Tooltip_Text_C::OnSetContext(class UBP_RadialItemModel_C* In_Outer_Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialEntry_Tooltip_Text_C", "OnSetContext");

	Params::RadialEntry_Tooltip_Text_C_OnSetContext Parms{};

	Parms.In_Outer_Context = In_Outer_Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialEntry_ToolTip_Text.RadialEntry_Tooltip_Text_C.UpdateDetails
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Details                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// class FName                             Key_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Key_1                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Key_2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URadialEntry_Tooltip_Text_C::UpdateDetails(const class FText& Param_Details, class FName Key_0, class FName Key_1, class FName Key_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialEntry_Tooltip_Text_C", "UpdateDetails");

	Params::RadialEntry_Tooltip_Text_C_UpdateDetails Parms{};

	Parms.Param_Details = std::move(Param_Details);
	Parms.Key_0 = Key_0;
	Parms.Key_1 = Key_1;
	Parms.Key_2 = Key_2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadialEntry_ToolTip_Text.RadialEntry_Tooltip_Text_C.UpdateRearmAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_RadialItemModel_C*            In_Outer_Context                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Out_HasCost                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URadialEntry_Tooltip_Text_C::UpdateRearmAction(class UBP_RadialItemModel_C* In_Outer_Context, bool* Out_HasCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadialEntry_Tooltip_Text_C", "UpdateRearmAction");

	Params::RadialEntry_Tooltip_Text_C_UpdateRearmAction Parms{};

	Parms.In_Outer_Context = In_Outer_Context;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_HasCost != nullptr)
		*Out_HasCost = Parms.Out_HasCost;
}

}


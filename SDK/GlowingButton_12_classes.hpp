#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlowingButton_12

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GlowingButton_12.GlowingButton_12_C
// 0x00A0 (0x0300 - 0x0260)
class UGlowingButton_12_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button;                                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGlowingText_12_C*                      GlowingText_12_C_0;                                // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonText;                                        // 0x0278(0x0018)(Edit, BlueprintVisible)
	struct FLinearColor                           RegularColor;                                      // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLinearColor                           SelectedColor;                                     // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredColor;                                      // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedHoveredColor;                              // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelected;                                         // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsToggle;                                         // 0x02E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3174[0x5];                                     // 0x02E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHover;                                           // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bShowShadow;                                       // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void OnClicked__DelegateSignature(bool Param_bSelected, class UGlowingButton_12_C* Param_Button);
	void OnHover__DelegateSignature(bool Param_bHovered);
	void ExecuteUbergraph_GlowingButton_12(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void SetSelected(bool Param_bSelected);
	void UpdateButtonColor();
	void SetText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GlowingButton_12_C">();
	}
	static class UGlowingButton_12_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGlowingButton_12_C>();
	}
};
static_assert(alignof(UGlowingButton_12_C) == 0x000008, "Wrong alignment on UGlowingButton_12_C");
static_assert(sizeof(UGlowingButton_12_C) == 0x000300, "Wrong size on UGlowingButton_12_C");
static_assert(offsetof(UGlowingButton_12_C, UberGraphFrame) == 0x000260, "Member 'UGlowingButton_12_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, Button) == 0x000268, "Member 'UGlowingButton_12_C::Button' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, GlowingText_12_C_0) == 0x000270, "Member 'UGlowingButton_12_C::GlowingText_12_C_0' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, ButtonText) == 0x000278, "Member 'UGlowingButton_12_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, RegularColor) == 0x000290, "Member 'UGlowingButton_12_C::RegularColor' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, OnClicked) == 0x0002A0, "Member 'UGlowingButton_12_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, SelectedColor) == 0x0002B0, "Member 'UGlowingButton_12_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, HoveredColor) == 0x0002C0, "Member 'UGlowingButton_12_C::HoveredColor' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, SelectedHoveredColor) == 0x0002D0, "Member 'UGlowingButton_12_C::SelectedHoveredColor' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, bHovered) == 0x0002E0, "Member 'UGlowingButton_12_C::bHovered' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, bSelected) == 0x0002E1, "Member 'UGlowingButton_12_C::bSelected' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, bIsToggle) == 0x0002E2, "Member 'UGlowingButton_12_C::bIsToggle' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, OnHover) == 0x0002E8, "Member 'UGlowingButton_12_C::OnHover' has a wrong offset!");
static_assert(offsetof(UGlowingButton_12_C, bShowShadow) == 0x0002F8, "Member 'UGlowingButton_12_C::bShowShadow' has a wrong offset!");

}


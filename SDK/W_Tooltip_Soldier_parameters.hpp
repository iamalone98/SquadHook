#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Tooltip_Soldier

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FSQRoleEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function W_Tooltip_Soldier.W_Tooltip_Soldier_C.ExecuteUbergraph_W_Tooltip_Soldier
// 0x0048 (0x0048 - 0x0000)
struct W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQSoldierInfo                         K2Node_CustomEvent_Soldier_Info;                   // 0x0008(0x0028)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier) == 0x000008, "Wrong alignment on W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier");
static_assert(sizeof(W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier) == 0x000048, "Wrong size on W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier");
static_assert(offsetof(W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier, EntryPoint) == 0x000000, "Member 'W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier, K2Node_CustomEvent_Soldier_Info) == 0x000008, "Member 'W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier::K2Node_CustomEvent_Soldier_Info' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'W_Tooltip_Soldier_C_ExecuteUbergraph_W_Tooltip_Soldier::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_Tooltip_Soldier.W_Tooltip_Soldier_C.Update Info
// 0x0028 (0x0028 - 0x0000)
struct W_Tooltip_Soldier_C_Update_Info final
{
public:
	struct FSQSoldierInfo                         Param_Soldier_Info;                                // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Tooltip_Soldier_C_Update_Info) == 0x000008, "Wrong alignment on W_Tooltip_Soldier_C_Update_Info");
static_assert(sizeof(W_Tooltip_Soldier_C_Update_Info) == 0x000028, "Wrong size on W_Tooltip_Soldier_C_Update_Info");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Info, Param_Soldier_Info) == 0x000000, "Member 'W_Tooltip_Soldier_C_Update_Info::Param_Soldier_Info' has a wrong offset!");

// Function W_Tooltip_Soldier.W_Tooltip_Soldier_C.UpdateKitVisuals
// 0x00E0 (0x00E0 - 0x0000)
struct W_Tooltip_Soldier_C_UpdateKitVisuals final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433B[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRoleSettings_C*                   K2Node_DynamicCast_AsBP_SQRole_Settings;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRoleEntry_Success;                     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_433C[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_RoleEntry;                   // 0x0018(0x00C0)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_Soldier_C_UpdateKitVisuals) == 0x000008, "Wrong alignment on W_Tooltip_Soldier_C_UpdateKitVisuals");
static_assert(sizeof(W_Tooltip_Soldier_C_UpdateKitVisuals) == 0x0000E0, "Wrong size on W_Tooltip_Soldier_C_UpdateKitVisuals");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, Temp_bool_Variable) == 0x000000, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, Temp_byte_Variable) == 0x000001, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, Temp_byte_Variable_1) == 0x000002, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, K2Node_DynamicCast_AsBP_SQRole_Settings) == 0x000008, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::K2Node_DynamicCast_AsBP_SQRole_Settings' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, CallFunc_GetRoleEntry_Success) == 0x000012, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::CallFunc_GetRoleEntry_Success' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, CallFunc_GetRoleEntry_RoleEntry) == 0x000018, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::CallFunc_GetRoleEntry_RoleEntry' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D9, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateKitVisuals, K2Node_Select_Default) == 0x0000DA, "Member 'W_Tooltip_Soldier_C_UpdateKitVisuals::K2Node_Select_Default' has a wrong offset!");

// Function W_Tooltip_Soldier.W_Tooltip_Soldier_C.UpdateSquadVisuals
// 0x0090 (0x0090 - 0x0000)
struct W_Tooltip_Soldier_C_UpdateSquadVisuals final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_433D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue_1;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433E[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_433F[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0028)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_Soldier_C_UpdateSquadVisuals) == 0x000008, "Wrong alignment on W_Tooltip_Soldier_C_UpdateSquadVisuals");
static_assert(sizeof(W_Tooltip_Soldier_C_UpdateSquadVisuals) == 0x000090, "Wrong size on W_Tooltip_Soldier_C_UpdateSquadVisuals");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, Temp_bool_Variable) == 0x000001, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, Temp_struct_Variable) == 0x000004, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, Temp_struct_Variable_1) == 0x000014, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, Temp_bool_Variable_1) == 0x000024, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, Temp_byte_Variable) == 0x000025, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, Temp_byte_Variable_1) == 0x000026, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, Temp_bool_Variable_2) == 0x000027, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, Temp_byte_Variable_2) == 0x000028, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, Temp_byte_Variable_3) == 0x000029, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00002A, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x00002B, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, CallFunc_GreaterEqual_ByteByte_ReturnValue_1) == 0x00002C, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::CallFunc_GreaterEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, K2Node_Select_Default) == 0x00002D, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, K2Node_Select_Default_1) == 0x000048, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_UpdateSquadVisuals, K2Node_Select_Default_2) == 0x000088, "Member 'W_Tooltip_Soldier_C_UpdateSquadVisuals::K2Node_Select_Default_2' has a wrong offset!");

// Function W_Tooltip_Soldier.W_Tooltip_Soldier_C.Update Tint Color
// 0x0010 (0x0010 - 0x0000)
struct W_Tooltip_Soldier_C_Update_Tint_Color final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_Soldier_C_Update_Tint_Color) == 0x000004, "Wrong alignment on W_Tooltip_Soldier_C_Update_Tint_Color");
static_assert(sizeof(W_Tooltip_Soldier_C_Update_Tint_Color) == 0x000010, "Wrong size on W_Tooltip_Soldier_C_Update_Tint_Color");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Tint_Color, Color) == 0x000000, "Member 'W_Tooltip_Soldier_C_Update_Tint_Color::Color' has a wrong offset!");

// Function W_Tooltip_Soldier.W_Tooltip_Soldier_C.Update Rank
// 0x0048 (0x0048 - 0x0000)
struct W_Tooltip_Soldier_C_Update_Rank final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4340[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4341[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue_1;      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4342[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_Soldier_C_Update_Rank) == 0x000008, "Wrong alignment on W_Tooltip_Soldier_C_Update_Rank");
static_assert(sizeof(W_Tooltip_Soldier_C_Update_Rank) == 0x000048, "Wrong size on W_Tooltip_Soldier_C_Update_Rank");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'W_Tooltip_Soldier_C_Update_Rank::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, Temp_bool_Variable) == 0x000001, "Member 'W_Tooltip_Soldier_C_Update_Rank::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, Temp_byte_Variable) == 0x000002, "Member 'W_Tooltip_Soldier_C_Update_Rank::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, Temp_byte_Variable_1) == 0x000003, "Member 'W_Tooltip_Soldier_C_Update_Rank::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, Temp_bool_Variable_1) == 0x000004, "Member 'W_Tooltip_Soldier_C_Update_Rank::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, Temp_object_Variable) == 0x000008, "Member 'W_Tooltip_Soldier_C_Update_Rank::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, Temp_object_Variable_1) == 0x000010, "Member 'W_Tooltip_Soldier_C_Update_Rank::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, Temp_bool_Variable_2) == 0x000018, "Member 'W_Tooltip_Soldier_C_Update_Rank::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, Temp_object_Variable_2) == 0x000020, "Member 'W_Tooltip_Soldier_C_Update_Rank::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000028, "Member 'W_Tooltip_Soldier_C_Update_Rank::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000029, "Member 'W_Tooltip_Soldier_C_Update_Rank::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'W_Tooltip_Soldier_C_Update_Rank::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, CallFunc_GreaterEqual_ByteByte_ReturnValue_1) == 0x00002B, "Member 'W_Tooltip_Soldier_C_Update_Rank::CallFunc_GreaterEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, K2Node_Select_Default) == 0x000030, "Member 'W_Tooltip_Soldier_C_Update_Rank::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, K2Node_Select_Default_1) == 0x000038, "Member 'W_Tooltip_Soldier_C_Update_Rank::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Rank, K2Node_Select_Default_2) == 0x000040, "Member 'W_Tooltip_Soldier_C_Update_Rank::K2Node_Select_Default_2' has a wrong offset!");

// Function W_Tooltip_Soldier.W_Tooltip_Soldier_C.Update Fireteam
// 0x0048 (0x0048 - 0x0000)
struct W_Tooltip_Soldier_C_Update_Fireteam final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4343[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetAlphabetLetterString_ReturnValue;      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4344[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(W_Tooltip_Soldier_C_Update_Fireteam) == 0x000008, "Wrong alignment on W_Tooltip_Soldier_C_Update_Fireteam");
static_assert(sizeof(W_Tooltip_Soldier_C_Update_Fireteam) == 0x000048, "Wrong size on W_Tooltip_Soldier_C_Update_Fireteam");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Fireteam, Temp_bool_Variable) == 0x000000, "Member 'W_Tooltip_Soldier_C_Update_Fireteam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Fireteam, Temp_byte_Variable) == 0x000001, "Member 'W_Tooltip_Soldier_C_Update_Fireteam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Fireteam, Temp_byte_Variable_1) == 0x000002, "Member 'W_Tooltip_Soldier_C_Update_Fireteam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Fireteam, CallFunc_Less_IntInt_ReturnValue) == 0x000003, "Member 'W_Tooltip_Soldier_C_Update_Fireteam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Fireteam, CallFunc_GetAlphabetLetterString_ReturnValue) == 0x000008, "Member 'W_Tooltip_Soldier_C_Update_Fireteam::CallFunc_GetAlphabetLetterString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Fireteam, CallFunc_ToUpper_ReturnValue) == 0x000018, "Member 'W_Tooltip_Soldier_C_Update_Fireteam::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Fireteam, K2Node_Select_Default) == 0x000028, "Member 'W_Tooltip_Soldier_C_Update_Fireteam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_Update_Fireteam, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'W_Tooltip_Soldier_C_Update_Fireteam::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_Tooltip_Soldier.W_Tooltip_Soldier_C.ShowHideCommanderStar
// 0x0009 (0x0009 - 0x0000)
struct W_Tooltip_Soldier_C_ShowHideCommanderStar final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tooltip_Soldier_C_ShowHideCommanderStar) == 0x000001, "Wrong alignment on W_Tooltip_Soldier_C_ShowHideCommanderStar");
static_assert(sizeof(W_Tooltip_Soldier_C_ShowHideCommanderStar) == 0x000009, "Wrong size on W_Tooltip_Soldier_C_ShowHideCommanderStar");
static_assert(offsetof(W_Tooltip_Soldier_C_ShowHideCommanderStar, Temp_bool_Variable) == 0x000000, "Member 'W_Tooltip_Soldier_C_ShowHideCommanderStar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ShowHideCommanderStar, Temp_byte_Variable) == 0x000001, "Member 'W_Tooltip_Soldier_C_ShowHideCommanderStar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ShowHideCommanderStar, Temp_byte_Variable_1) == 0x000002, "Member 'W_Tooltip_Soldier_C_ShowHideCommanderStar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ShowHideCommanderStar, Temp_bool_Variable_1) == 0x000003, "Member 'W_Tooltip_Soldier_C_ShowHideCommanderStar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ShowHideCommanderStar, Temp_byte_Variable_2) == 0x000004, "Member 'W_Tooltip_Soldier_C_ShowHideCommanderStar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ShowHideCommanderStar, Temp_byte_Variable_3) == 0x000005, "Member 'W_Tooltip_Soldier_C_ShowHideCommanderStar::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ShowHideCommanderStar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'W_Tooltip_Soldier_C_ShowHideCommanderStar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ShowHideCommanderStar, K2Node_Select_Default) == 0x000007, "Member 'W_Tooltip_Soldier_C_ShowHideCommanderStar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Tooltip_Soldier_C_ShowHideCommanderStar, K2Node_Select_Default_1) == 0x000008, "Member 'W_Tooltip_Soldier_C_ShowHideCommanderStar::K2Node_Select_Default_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarkerWidget_HAB

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.ExecuteUbergraph_BP_MarkerWidget_HAB
// 0x00B0 (0x00B0 - 0x0000)
struct BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4F40[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_UpdateSpawnBrush_ReturnValue;             // 0x0018(0x0088)()
	bool                                          CallFunc_ShouldMarkerUpdate_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F41[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB) == 0x000008, "Wrong alignment on BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB");
static_assert(sizeof(BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB) == 0x0000B0, "Wrong size on BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB");
static_assert(offsetof(BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB, EntryPoint) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB, CallFunc_UpdateSpawnBrush_ReturnValue) == 0x000018, "Member 'BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB::CallFunc_UpdateSpawnBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB, CallFunc_ShouldMarkerUpdate_ReturnValue) == 0x0000A0, "Member 'BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB::CallFunc_ShouldMarkerUpdate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A8, "Member 'BP_MarkerWidget_HAB_C_ExecuteUbergraph_BP_MarkerWidget_HAB::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.UpdateSelectSpawnVisibility
// 0x0005 (0x0005 - 0x0000)
struct BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_Selected;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility) == 0x000001, "Wrong alignment on BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility");
static_assert(sizeof(BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility) == 0x000005, "Wrong size on BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility, Temp_bool_Variable) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility, Temp_byte_Variable) == 0x000001, "Member 'BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility, CallFunc_IsSelected_Selected) == 0x000003, "Member 'BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility::CallFunc_IsSelected_Selected' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility, K2Node_Select_Default) == 0x000004, "Member 'BP_MarkerWidget_HAB_C_UpdateSelectSpawnVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.OnMouseButtonDown
// 0x02D8 (0x02D8 - 0x0000)
struct BP_MarkerWidget_HAB_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F42[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0220(0x00B8)()
};
static_assert(alignof(BP_MarkerWidget_HAB_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on BP_MarkerWidget_HAB_C_OnMouseButtonDown");
static_assert(sizeof(BP_MarkerWidget_HAB_C_OnMouseButtonDown) == 0x0002D8, "Wrong size on BP_MarkerWidget_HAB_C_OnMouseButtonDown");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000218, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000220, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.SelectSpawn
// 0x0030 (0x0030 - 0x0000)
struct BP_MarkerWidget_HAB_C_SelectSpawn final
{
public:
	bool                                          Commit;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F43[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Deployable_Hab_C*                   CallFunc_GetHAB_HAB;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F44[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_HAB_C_SelectSpawn) == 0x000008, "Wrong alignment on BP_MarkerWidget_HAB_C_SelectSpawn");
static_assert(sizeof(BP_MarkerWidget_HAB_C_SelectSpawn) == 0x000030, "Wrong size on BP_MarkerWidget_HAB_C_SelectSpawn");
static_assert(offsetof(BP_MarkerWidget_HAB_C_SelectSpawn, Commit) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_SelectSpawn::Commit' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_SelectSpawn, CallFunc_GetHAB_HAB) == 0x000008, "Member 'BP_MarkerWidget_HAB_C_SelectSpawn::CallFunc_GetHAB_HAB' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_SelectSpawn, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_HAB_C_SelectSpawn::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_SelectSpawn, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MarkerWidget_HAB_C_SelectSpawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_SelectSpawn, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000020, "Member 'BP_MarkerWidget_HAB_C_SelectSpawn::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_SelectSpawn, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MarkerWidget_HAB_C_SelectSpawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.OnMouseButtonDoubleClick
// 0x02D8 (0x02D8 - 0x0000)
struct BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick final
{
public:
	struct FGeometry                              InMyGeometry;                                      // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F45[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0220(0x00B8)()
};
static_assert(alignof(BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick) == 0x000008, "Wrong alignment on BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick");
static_assert(sizeof(BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick) == 0x0002D8, "Wrong size on BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick, InMyGeometry) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick::InMyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick, InMouseEvent) == 0x000038, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick::InMouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick, ReturnValue) == 0x0000A8, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000218, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick, CallFunc_Unhandled_ReturnValue) == 0x000220, "Member 'BP_MarkerWidget_HAB_C_OnMouseButtonDoubleClick::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.UpdateSpawnBrush
// 0x0130 (0x0130 - 0x0000)
struct BP_MarkerWidget_HAB_C_UpdateSpawnBrush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	bool                                          CanSpawn;                                          // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F46[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0090(0x0088)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F47[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameSpawn*                           CallFunc_GetSpawn_Spawn;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSpawn_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush) == 0x000008, "Wrong alignment on BP_MarkerWidget_HAB_C_UpdateSpawnBrush");
static_assert(sizeof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush) == 0x000130, "Wrong size on BP_MarkerWidget_HAB_C_UpdateSpawnBrush");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, CanSpawn) == 0x000088, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::CanSpawn' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, Temp_bool_Variable) == 0x000089, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, Temp_byte_Variable) == 0x00008A, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, Temp_byte_Variable_1) == 0x00008B, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, K2Node_MakeStruct_SlateBrush) == 0x000090, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, K2Node_Select_Default) == 0x000118, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, CallFunc_GetSpawn_Spawn) == 0x000120, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::CallFunc_GetSpawn_Spawn' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, CallFunc_CanSpawn_ReturnValue) == 0x000128, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::CallFunc_CanSpawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UpdateSpawnBrush, CallFunc_IsValid_ReturnValue) == 0x000129, "Member 'BP_MarkerWidget_HAB_C_UpdateSpawnBrush::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.UnselectSpawn
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_HAB_C_UnselectSpawn final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_HAB_C_UnselectSpawn) == 0x000008, "Wrong alignment on BP_MarkerWidget_HAB_C_UnselectSpawn");
static_assert(sizeof(BP_MarkerWidget_HAB_C_UnselectSpawn) == 0x000018, "Wrong size on BP_MarkerWidget_HAB_C_UnselectSpawn");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UnselectSpawn, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_UnselectSpawn::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UnselectSpawn, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000008, "Member 'BP_MarkerWidget_HAB_C_UnselectSpawn::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_UnselectSpawn, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MarkerWidget_HAB_C_UnselectSpawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.IsSelected
// 0x0040 (0x0040 - 0x0000)
struct BP_MarkerWidget_HAB_C_IsSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F48[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameSpawn*                           CallFunc_GetSpawn_Spawn;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F49[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F4A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameSpawn*                           CallFunc_GetSelectedSpawn_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_HAB_C_IsSelected) == 0x000008, "Wrong alignment on BP_MarkerWidget_HAB_C_IsSelected");
static_assert(sizeof(BP_MarkerWidget_HAB_C_IsSelected) == 0x000040, "Wrong size on BP_MarkerWidget_HAB_C_IsSelected");
static_assert(offsetof(BP_MarkerWidget_HAB_C_IsSelected, Selected) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_IsSelected::Selected' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_IsSelected, CallFunc_GetSpawn_Spawn) == 0x000008, "Member 'BP_MarkerWidget_HAB_C_IsSelected::CallFunc_GetSpawn_Spawn' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_IsSelected, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_HAB_C_IsSelected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_IsSelected, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'BP_MarkerWidget_HAB_C_IsSelected::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_IsSelected, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000020, "Member 'BP_MarkerWidget_HAB_C_IsSelected::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_IsSelected, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MarkerWidget_HAB_C_IsSelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_IsSelected, CallFunc_GetSelectedSpawn_ReturnValue) == 0x000030, "Member 'BP_MarkerWidget_HAB_C_IsSelected::CallFunc_GetSelectedSpawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_IsSelected, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_MarkerWidget_HAB_C_IsSelected::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_IsSelected, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'BP_MarkerWidget_HAB_C_IsSelected::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.GetHAB
// 0x0028 (0x0028 - 0x0000)
struct BP_MarkerWidget_HAB_C_GetHAB final
{
public:
	class ABP_Deployable_Hab_C*                   HAB;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F4B[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Deployable_Hab_C*                   K2Node_DynamicCast_AsBP_Deployable_Hab;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_HAB_C_GetHAB) == 0x000008, "Wrong alignment on BP_MarkerWidget_HAB_C_GetHAB");
static_assert(sizeof(BP_MarkerWidget_HAB_C_GetHAB) == 0x000028, "Wrong size on BP_MarkerWidget_HAB_C_GetHAB");
static_assert(offsetof(BP_MarkerWidget_HAB_C_GetHAB, HAB) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_GetHAB::HAB' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_GetHAB, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_HAB_C_GetHAB::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_GetHAB, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_HAB_C_GetHAB::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_GetHAB, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_MarkerWidget_HAB_C_GetHAB::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_GetHAB, K2Node_DynamicCast_AsBP_Deployable_Hab) == 0x000018, "Member 'BP_MarkerWidget_HAB_C_GetHAB::K2Node_DynamicCast_AsBP_Deployable_Hab' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_GetHAB, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MarkerWidget_HAB_C_GetHAB::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MarkerWidget_HAB.BP_MarkerWidget_HAB_C.GetSpawn
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_HAB_C_GetSpawn final
{
public:
	class ASQGameSpawn*                           Spawn;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Deployable_Hab_C*                   CallFunc_GetHAB_HAB;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_HAB_C_GetSpawn) == 0x000008, "Wrong alignment on BP_MarkerWidget_HAB_C_GetSpawn");
static_assert(sizeof(BP_MarkerWidget_HAB_C_GetSpawn) == 0x000018, "Wrong size on BP_MarkerWidget_HAB_C_GetSpawn");
static_assert(offsetof(BP_MarkerWidget_HAB_C_GetSpawn, Spawn) == 0x000000, "Member 'BP_MarkerWidget_HAB_C_GetSpawn::Spawn' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_GetSpawn, CallFunc_GetHAB_HAB) == 0x000008, "Member 'BP_MarkerWidget_HAB_C_GetSpawn::CallFunc_GetHAB_HAB' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_HAB_C_GetSpawn, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_HAB_C_GetSpawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DOF_Manager_Effect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_structs.hpp"
#include "Squad_classes.hpp"
#include "DLSSBlueprint_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DOF_Manager_Effect.BP_DOF_Manager_Effect_C
// 0x00D0 (0x0670 - 0x05A0)
class UBP_DOF_Manager_Effect_C final : public USQLocalCameraEffectHandler
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Aperture_Target;                                   // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceTarget;                                    // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    PlayerController;                                  // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedFOVSetting;                                  // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1F[0x4];                                     // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             Soldier;                                           // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Weapon2_C*                          Weapon;                                            // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ADS_Timer_Handle;                                  // 0x05D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CurrentADS;                                        // 0x05D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LastADS;                                           // 0x05D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F20[0x6];                                     // 0x05DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SuppressionEffectData_C*            PresetAsset;                                       // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ADSTimerPeriod;                                    // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SuppressionLevelClamped;                           // 0x05F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUsesPip;                                          // 0x05F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F21[0x3];                                     // 0x05F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HipfireDofAperture;                                // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HipfireFocalDistance;                              // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdsFocalDistance;                                  // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdsAperture;                                       // 0x0604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           AdsDofTransitionCurveDefault;                      // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AdsInterpolationInProgress;                        // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F22[0x7];                                     // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Pip_C*                              NewVar_0;                                          // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           AdsDofTransitionCurveCurrent;                      // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AntiAliasingEnabled;                               // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F23[0x3];                                     // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfPixels;                                    // 0x062C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentFOV;                                        // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CalculatedLensDistance;                            // 0x0634(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecoilBlurAlpha;                                   // 0x0638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFiring;                                          // 0x063C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F24[0x3];                                     // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecoilBlurRampUpSpeed;                             // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecoilBlurDecaySpeed;                              // 0x0644(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecoilBlurRandomMin;                               // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecoilBlurRandomMax;                               // 0x064C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PrevAdsInterpInProgress;                           // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F25[0x3];                                     // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartAdsInterpPosition;                            // 0x0654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetAdsInterpPosition;                           // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpTargetAperture;                              // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinimalDofApertureSize;                            // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUpscaleMode                                  UpscaleMode;                                       // 0x0664(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F26[0x3];                                     // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MutableSoldier_C*                   BPMutableSoldier;                                  // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DOF_Manager_Effect(int32 EntryPoint);
	void BP_ApplyCameraEffect(float Param_DeltaTime, class ASQSoldier* SoldierToApplyTo);
	void BP_InitCameraEffect(class ASQPlayerController* InPlayerController);
	void OnFired();
	void BP_SoldierChanged(class ASQSoldier* NewSoldier);
	void ADS_Blend_Update();
	void Start_ADS_Timer();
	void ADS_Interp_Complete();
	void SettingsUpdated(const class USQGameUserSettings* UserSettings);
	void ComputeAdsInterpFactor(float* Factor);
	void GetDOFScaleByResolution(float* Multiplier);
	void Get_Item_DOF_Parameters(bool GetADS, float* Aperture, float* FocalDistance);
	float GetBlendedADSFocalDistance();
	void UpdateInterpolationProgress(bool* ShouldContinue);
	void Set_Ads_Interp_Positions(float* OutTimerDuration);

	void GetDOFQualityMultiplier(float* Multiplier) const;
	void Scale_DOF_by_FOV(float InBaselineFOV, float InBaselineFocusDistance, float InBaselineFMinusstop, float InTargetFOV, float* OutFMinusStop, float* OutFocusDistance) const;
	void GetFocalLength(float SensorSize, float FOV, float* Focal_Length) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DOF_Manager_Effect_C">();
	}
	static class UBP_DOF_Manager_Effect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DOF_Manager_Effect_C>();
	}
};
static_assert(alignof(UBP_DOF_Manager_Effect_C) == 0x000010, "Wrong alignment on UBP_DOF_Manager_Effect_C");
static_assert(sizeof(UBP_DOF_Manager_Effect_C) == 0x000670, "Wrong size on UBP_DOF_Manager_Effect_C");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, UberGraphFrame) == 0x0005A0, "Member 'UBP_DOF_Manager_Effect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, Aperture_Target) == 0x0005A8, "Member 'UBP_DOF_Manager_Effect_C::Aperture_Target' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, DistanceTarget) == 0x0005AC, "Member 'UBP_DOF_Manager_Effect_C::DistanceTarget' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, PlayerController) == 0x0005B0, "Member 'UBP_DOF_Manager_Effect_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, CachedFOVSetting) == 0x0005B8, "Member 'UBP_DOF_Manager_Effect_C::CachedFOVSetting' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, Soldier) == 0x0005C0, "Member 'UBP_DOF_Manager_Effect_C::Soldier' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, Weapon) == 0x0005C8, "Member 'UBP_DOF_Manager_Effect_C::Weapon' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, ADS_Timer_Handle) == 0x0005D0, "Member 'UBP_DOF_Manager_Effect_C::ADS_Timer_Handle' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, CurrentADS) == 0x0005D8, "Member 'UBP_DOF_Manager_Effect_C::CurrentADS' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, LastADS) == 0x0005D9, "Member 'UBP_DOF_Manager_Effect_C::LastADS' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, PresetAsset) == 0x0005E0, "Member 'UBP_DOF_Manager_Effect_C::PresetAsset' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, DeltaTime) == 0x0005E8, "Member 'UBP_DOF_Manager_Effect_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, ADSTimerPeriod) == 0x0005EC, "Member 'UBP_DOF_Manager_Effect_C::ADSTimerPeriod' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, SuppressionLevelClamped) == 0x0005F0, "Member 'UBP_DOF_Manager_Effect_C::SuppressionLevelClamped' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, bUsesPip) == 0x0005F4, "Member 'UBP_DOF_Manager_Effect_C::bUsesPip' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, HipfireDofAperture) == 0x0005F8, "Member 'UBP_DOF_Manager_Effect_C::HipfireDofAperture' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, HipfireFocalDistance) == 0x0005FC, "Member 'UBP_DOF_Manager_Effect_C::HipfireFocalDistance' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, AdsFocalDistance) == 0x000600, "Member 'UBP_DOF_Manager_Effect_C::AdsFocalDistance' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, AdsAperture) == 0x000604, "Member 'UBP_DOF_Manager_Effect_C::AdsAperture' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, AdsDofTransitionCurveDefault) == 0x000608, "Member 'UBP_DOF_Manager_Effect_C::AdsDofTransitionCurveDefault' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, AdsInterpolationInProgress) == 0x000610, "Member 'UBP_DOF_Manager_Effect_C::AdsInterpolationInProgress' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, NewVar_0) == 0x000618, "Member 'UBP_DOF_Manager_Effect_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, AdsDofTransitionCurveCurrent) == 0x000620, "Member 'UBP_DOF_Manager_Effect_C::AdsDofTransitionCurveCurrent' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, AntiAliasingEnabled) == 0x000628, "Member 'UBP_DOF_Manager_Effect_C::AntiAliasingEnabled' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, NumberOfPixels) == 0x00062C, "Member 'UBP_DOF_Manager_Effect_C::NumberOfPixels' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, CurrentFOV) == 0x000630, "Member 'UBP_DOF_Manager_Effect_C::CurrentFOV' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, CalculatedLensDistance) == 0x000634, "Member 'UBP_DOF_Manager_Effect_C::CalculatedLensDistance' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, RecoilBlurAlpha) == 0x000638, "Member 'UBP_DOF_Manager_Effect_C::RecoilBlurAlpha' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, IsFiring) == 0x00063C, "Member 'UBP_DOF_Manager_Effect_C::IsFiring' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, RecoilBlurRampUpSpeed) == 0x000640, "Member 'UBP_DOF_Manager_Effect_C::RecoilBlurRampUpSpeed' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, RecoilBlurDecaySpeed) == 0x000644, "Member 'UBP_DOF_Manager_Effect_C::RecoilBlurDecaySpeed' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, RecoilBlurRandomMin) == 0x000648, "Member 'UBP_DOF_Manager_Effect_C::RecoilBlurRandomMin' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, RecoilBlurRandomMax) == 0x00064C, "Member 'UBP_DOF_Manager_Effect_C::RecoilBlurRandomMax' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, PrevAdsInterpInProgress) == 0x000650, "Member 'UBP_DOF_Manager_Effect_C::PrevAdsInterpInProgress' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, StartAdsInterpPosition) == 0x000654, "Member 'UBP_DOF_Manager_Effect_C::StartAdsInterpPosition' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, TargetAdsInterpPosition) == 0x000658, "Member 'UBP_DOF_Manager_Effect_C::TargetAdsInterpPosition' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, InterpTargetAperture) == 0x00065C, "Member 'UBP_DOF_Manager_Effect_C::InterpTargetAperture' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, MinimalDofApertureSize) == 0x000660, "Member 'UBP_DOF_Manager_Effect_C::MinimalDofApertureSize' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, UpscaleMode) == 0x000664, "Member 'UBP_DOF_Manager_Effect_C::UpscaleMode' has a wrong offset!");
static_assert(offsetof(UBP_DOF_Manager_Effect_C, BPMutableSoldier) == 0x000668, "Member 'UBP_DOF_Manager_Effect_C::BPMutableSoldier' has a wrong offset!");

}


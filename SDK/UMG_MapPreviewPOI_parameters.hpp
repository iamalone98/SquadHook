#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_MapPreviewPOI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.ExecuteUbergraph_UMG_MapPreviewPOI
// 0x0060 (0x0060 - 0x0000)
struct UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MapPreviewPOI_Name_C*              CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI");
static_assert(sizeof(UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI) == 0x000060, "Wrong size on UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI");
static_assert(offsetof(UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI, EntryPoint) == 0x000000, "Member 'UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI, K2Node_Event_MyGeometry) == 0x000004, "Member 'UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI, CallFunc_Create_ReturnValue) == 0x000040, "Member 'UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI, CallFunc_AddChildToCanvas_ReturnValue) == 0x000048, "Member 'UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000050, "Member 'UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000058, "Member 'UMG_MapPreviewPOI_C_ExecuteUbergraph_UMG_MapPreviewPOI::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.Tick
// 0x003C (0x003C - 0x0000)
struct UMG_MapPreviewPOI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_MapPreviewPOI_C_Tick) == 0x000004, "Wrong alignment on UMG_MapPreviewPOI_C_Tick");
static_assert(sizeof(UMG_MapPreviewPOI_C_Tick) == 0x00003C, "Wrong size on UMG_MapPreviewPOI_C_Tick");
static_assert(offsetof(UMG_MapPreviewPOI_C_Tick, MyGeometry) == 0x000000, "Member 'UMG_MapPreviewPOI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_Tick, InDeltaTime) == 0x000038, "Member 'UMG_MapPreviewPOI_C_Tick::InDeltaTime' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.FillTexture
// 0x0160 (0x0160 - 0x0000)
struct UMG_MapPreviewPOI_C_FillTexture final
{
public:
	class UTexture2D*                             Minimap;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQLayer*                               Layer;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         POISize;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DisplayMode;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SecondMain;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PresentedElementesCount;                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowPoints;                                        // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4247[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjectivesCount;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RevertIndex;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowLines;                                         // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4248[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              UsedTextureSize;                                   // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDisplayMode_Mode;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDisplayMode_Size;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4249[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MapPreviewPOI_Element_C*           CallFunc_GetPOIElement_Element;                    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldRevertPoints_Revert;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShowConnectLines_Show;              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShowPoints_Show;                    // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_424A[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424B[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0088(0x0010)(NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00A0(0x0018)()
	class FName                                   CallFunc_GetGameModeID_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MapPreviewPOI_Element_C*           CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_424C[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLastObjectiveIndex_LastObjIndex;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424D[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQLayerPOIData                        CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0028)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_424E[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ConvertObjectiveLocation_TexturePos;      // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_424F[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOrderID_Order;                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ConvertObjectiveLocation_TexturePos_1;    // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorForOrder_Color;                   // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_MapPreviewPOI_C_FillTexture) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_FillTexture");
static_assert(sizeof(UMG_MapPreviewPOI_C_FillTexture) == 0x000160, "Wrong size on UMG_MapPreviewPOI_C_FillTexture");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, Minimap) == 0x000000, "Member 'UMG_MapPreviewPOI_C_FillTexture::Minimap' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, Layer) == 0x000008, "Member 'UMG_MapPreviewPOI_C_FillTexture::Layer' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, POISize) == 0x000010, "Member 'UMG_MapPreviewPOI_C_FillTexture::POISize' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, DisplayMode) == 0x000014, "Member 'UMG_MapPreviewPOI_C_FillTexture::DisplayMode' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, SecondMain) == 0x000018, "Member 'UMG_MapPreviewPOI_C_FillTexture::SecondMain' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, PresentedElementesCount) == 0x00001C, "Member 'UMG_MapPreviewPOI_C_FillTexture::PresentedElementesCount' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, ShowPoints) == 0x000020, "Member 'UMG_MapPreviewPOI_C_FillTexture::ShowPoints' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, ObjectivesCount) == 0x000024, "Member 'UMG_MapPreviewPOI_C_FillTexture::ObjectivesCount' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, RevertIndex) == 0x000028, "Member 'UMG_MapPreviewPOI_C_FillTexture::RevertIndex' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, ShowLines) == 0x000029, "Member 'UMG_MapPreviewPOI_C_FillTexture::ShowLines' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, UsedTextureSize) == 0x00002C, "Member 'UMG_MapPreviewPOI_C_FillTexture::UsedTextureSize' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_GetDisplayMode_Mode) == 0x000034, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_GetDisplayMode_Mode' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_GetDisplayMode_Size) == 0x000038, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_GetDisplayMode_Size' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'UMG_MapPreviewPOI_C_FillTexture::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, Temp_int_Variable) == 0x000040, "Member 'UMG_MapPreviewPOI_C_FillTexture::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_GetPOIElement_Element) == 0x000048, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_GetPOIElement_Element' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'UMG_MapPreviewPOI_C_FillTexture::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, Temp_int_Variable_1) == 0x000060, "Member 'UMG_MapPreviewPOI_C_FillTexture::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_ShouldRevertPoints_Revert) == 0x000064, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_ShouldRevertPoints_Revert' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_ShouldShowConnectLines_Show) == 0x000065, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_ShouldShowConnectLines_Show' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_ShouldShowPoints_Show) == 0x000066, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_ShouldShowPoints_Show' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000068, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_MakeVector2D_ReturnValue) == 0x00006C, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000078, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000080, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000088, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, Temp_int_Variable_2) == 0x000098, "Member 'UMG_MapPreviewPOI_C_FillTexture::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_MakeLiteralText_ReturnValue) == 0x0000A0, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_GetGameModeID_ReturnValue) == 0x0000B8, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_GetGameModeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000CC, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000D4, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000D8, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_GetLastObjectiveIndex_LastObjIndex) == 0x0000E0, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_GetLastObjectiveIndex_LastObjIndex' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000110, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_ConvertObjectiveLocation_TexturePos) == 0x000114, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_ConvertObjectiveLocation_TexturePos' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00011C, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000120, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_GetOrderID_Order) == 0x00012C, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_GetOrderID_Order' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_ConvertObjectiveLocation_TexturePos_1) == 0x000130, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_ConvertObjectiveLocation_TexturePos_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_GetColorForOrder_Color) == 0x000138, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_GetColorForOrder_Color' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x000148, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Array_Add_ReturnValue_1) == 0x000150, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Array_Length_ReturnValue_1) == 0x000154, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Array_Length_ReturnValue_2) == 0x000158, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_FillTexture, CallFunc_Less_IntInt_ReturnValue) == 0x00015C, "Member 'UMG_MapPreviewPOI_C_FillTexture::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.ConvertObjectiveLocation
// 0x0050 (0x0050 - 0x0000)
struct UMG_MapPreviewPOI_C_ConvertObjectiveLocation final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4250[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQLayer*                               InLayer;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TexturePos;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_ConvertObjectiveLocation");
static_assert(sizeof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation) == 0x000050, "Wrong size on UMG_MapPreviewPOI_C_ConvertObjectiveLocation");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, InLocation) == 0x000000, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::InLocation' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, InLayer) == 0x000010, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::InLayer' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, TexturePos) == 0x000018, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::TexturePos' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_BreakVector_X) == 0x000020, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_BreakVector_Y) == 0x000024, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_BreakVector_Z) == 0x000028, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_BreakVector2D_X_1) == 0x000034, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_BreakVector2D_Y_1) == 0x000038, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_MapRangeClamped_ReturnValue) == 0x00003C, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ConvertObjectiveLocation, CallFunc_MakeVector2D_ReturnValue) == 0x000044, "Member 'UMG_MapPreviewPOI_C_ConvertObjectiveLocation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.GetColorForOrder
// 0x0038 (0x0038 - 0x0000)
struct UMG_MapPreviewPOI_C_GetColorForOrder final
{
public:
	int32                                         Order;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Mode;                                              // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x000C(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4251[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_MapPreviewPOI_C_GetColorForOrder) == 0x000004, "Wrong alignment on UMG_MapPreviewPOI_C_GetColorForOrder");
static_assert(sizeof(UMG_MapPreviewPOI_C_GetColorForOrder) == 0x000038, "Wrong size on UMG_MapPreviewPOI_C_GetColorForOrder");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetColorForOrder, Order) == 0x000000, "Member 'UMG_MapPreviewPOI_C_GetColorForOrder::Order' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetColorForOrder, Mode) == 0x000004, "Member 'UMG_MapPreviewPOI_C_GetColorForOrder::Mode' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetColorForOrder, Color) == 0x00000C, "Member 'UMG_MapPreviewPOI_C_GetColorForOrder::Color' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetColorForOrder, CallFunc_MakeColor_ReturnValue) == 0x00001C, "Member 'UMG_MapPreviewPOI_C_GetColorForOrder::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetColorForOrder, K2Node_SwitchName_CmpSuccess) == 0x00002C, "Member 'UMG_MapPreviewPOI_C_GetColorForOrder::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetColorForOrder, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'UMG_MapPreviewPOI_C_GetColorForOrder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetColorForOrder, CallFunc_Percent_IntInt_ReturnValue) == 0x000034, "Member 'UMG_MapPreviewPOI_C_GetColorForOrder::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.GetPOIElement
// 0x0048 (0x0048 - 0x0000)
struct UMG_MapPreviewPOI_C_GetPOIElement final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4252[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MapPreviewPOI_Element_C*           Element;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UUMG_MapPreviewPOI_Element_C* POI, bool Hovered)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UUMG_MapPreviewPOI_Element_C*           CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4253[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MapPreviewPOI_Element_C*           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_MapPreviewPOI_C_GetPOIElement) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_GetPOIElement");
static_assert(sizeof(UMG_MapPreviewPOI_C_GetPOIElement) == 0x000048, "Wrong size on UMG_MapPreviewPOI_C_GetPOIElement");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetPOIElement, Param_Index) == 0x000000, "Member 'UMG_MapPreviewPOI_C_GetPOIElement::Param_Index' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetPOIElement, Element) == 0x000008, "Member 'UMG_MapPreviewPOI_C_GetPOIElement::Element' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetPOIElement, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UMG_MapPreviewPOI_C_GetPOIElement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetPOIElement, CallFunc_Create_ReturnValue) == 0x000020, "Member 'UMG_MapPreviewPOI_C_GetPOIElement::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetPOIElement, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'UMG_MapPreviewPOI_C_GetPOIElement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetPOIElement, CallFunc_AddChildToCanvas_ReturnValue) == 0x000030, "Member 'UMG_MapPreviewPOI_C_GetPOIElement::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetPOIElement, CallFunc_Array_Get_Item) == 0x000038, "Member 'UMG_MapPreviewPOI_C_GetPOIElement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetPOIElement, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'UMG_MapPreviewPOI_C_GetPOIElement::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.ShouldShowConnectLines
// 0x0040 (0x0040 - 0x0000)
struct UMG_MapPreviewPOI_C_ShouldShowConnectLines final
{
public:
	class USQLayer*                               Layer;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4254[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           PossibleModes;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	class FName                                   CallFunc_GetGameModeID_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_MapPreviewPOI_C_ShouldShowConnectLines) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_ShouldShowConnectLines");
static_assert(sizeof(UMG_MapPreviewPOI_C_ShouldShowConnectLines) == 0x000040, "Wrong size on UMG_MapPreviewPOI_C_ShouldShowConnectLines");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowConnectLines, Layer) == 0x000000, "Member 'UMG_MapPreviewPOI_C_ShouldShowConnectLines::Layer' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowConnectLines, Show) == 0x000008, "Member 'UMG_MapPreviewPOI_C_ShouldShowConnectLines::Show' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowConnectLines, PossibleModes) == 0x000010, "Member 'UMG_MapPreviewPOI_C_ShouldShowConnectLines::PossibleModes' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowConnectLines, K2Node_MakeArray_Array) == 0x000020, "Member 'UMG_MapPreviewPOI_C_ShouldShowConnectLines::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowConnectLines, CallFunc_GetGameModeID_ReturnValue) == 0x000030, "Member 'UMG_MapPreviewPOI_C_ShouldShowConnectLines::CallFunc_GetGameModeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowConnectLines, CallFunc_Array_Contains_ReturnValue) == 0x000038, "Member 'UMG_MapPreviewPOI_C_ShouldShowConnectLines::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.UpdateLinesVisual
// 0x0098 (0x0098 - 0x0000)
struct UMG_MapPreviewPOI_C_UpdateLinesVisual final
{
public:
	struct FVector2D                              LineDir;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      LinesCopy;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4255[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4256[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4257[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_MapPreviewPOI_C_UpdateLinesVisual) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_UpdateLinesVisual");
static_assert(sizeof(UMG_MapPreviewPOI_C_UpdateLinesVisual) == 0x000098, "Wrong size on UMG_MapPreviewPOI_C_UpdateLinesVisual");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, LineDir) == 0x000000, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::LineDir' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, LinesCopy) == 0x000008, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::LinesCopy' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, Temp_int_Array_Index_Variable) == 0x000018, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Divide_IntInt_ReturnValue) == 0x000030, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, Temp_int_Variable) == 0x00003C, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Multiply_IntInt_ReturnValue) == 0x000040, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Add_IntInt_ReturnValue_3) == 0x00004C, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Array_Get_Item) == 0x000050, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000060, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Array_Add_ReturnValue_1) == 0x00006C, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000070, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Normal2D_ReturnValue) == 0x00007C, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000088, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_UpdateLinesVisual, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000090, "Member 'UMG_MapPreviewPOI_C_UpdateLinesVisual::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.PoiHovered
// 0x0010 (0x0010 - 0x0000)
struct UMG_MapPreviewPOI_C_PoiHovered final
{
public:
	class UUMG_MapPreviewPOI_Element_C*           POI;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hovered;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_MapPreviewPOI_C_PoiHovered) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_PoiHovered");
static_assert(sizeof(UMG_MapPreviewPOI_C_PoiHovered) == 0x000010, "Wrong size on UMG_MapPreviewPOI_C_PoiHovered");
static_assert(offsetof(UMG_MapPreviewPOI_C_PoiHovered, POI) == 0x000000, "Member 'UMG_MapPreviewPOI_C_PoiHovered::POI' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_PoiHovered, Hovered) == 0x000008, "Member 'UMG_MapPreviewPOI_C_PoiHovered::Hovered' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.GetOrderID
// 0x0014 (0x0014 - 0x0000)
struct UMG_MapPreviewPOI_C_GetOrderID final
{
public:
	bool                                          Invert;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4258[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ObjNum;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Order;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_MapPreviewPOI_C_GetOrderID) == 0x000004, "Wrong alignment on UMG_MapPreviewPOI_C_GetOrderID");
static_assert(sizeof(UMG_MapPreviewPOI_C_GetOrderID) == 0x000014, "Wrong size on UMG_MapPreviewPOI_C_GetOrderID");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetOrderID, Invert) == 0x000000, "Member 'UMG_MapPreviewPOI_C_GetOrderID::Invert' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetOrderID, ObjNum) == 0x000004, "Member 'UMG_MapPreviewPOI_C_GetOrderID::ObjNum' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetOrderID, Param_Index) == 0x000008, "Member 'UMG_MapPreviewPOI_C_GetOrderID::Param_Index' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetOrderID, Order) == 0x00000C, "Member 'UMG_MapPreviewPOI_C_GetOrderID::Order' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetOrderID, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'UMG_MapPreviewPOI_C_GetOrderID::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.GetLastObjectiveIndex
// 0x0058 (0x0058 - 0x0000)
struct UMG_MapPreviewPOI_C_GetLastObjectiveIndex final
{
public:
	class USQLayer*                               Layer;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastObjIndex;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutMax;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQLayerPOIData                        CallFunc_Array_Get_Item;                           // 0x0018(0x0028)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4259[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_GetLastObjectiveIndex");
static_assert(sizeof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex) == 0x000058, "Wrong size on UMG_MapPreviewPOI_C_GetLastObjectiveIndex");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, Layer) == 0x000000, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::Layer' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, LastObjIndex) == 0x000008, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::LastObjIndex' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, OutMax) == 0x00000C, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::OutMax' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, Temp_int_Array_Index_Variable) == 0x000010, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, CallFunc_Array_Get_Item) == 0x000018, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetLastObjectiveIndex, CallFunc_Max_ReturnValue) == 0x000050, "Member 'UMG_MapPreviewPOI_C_GetLastObjectiveIndex::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.ShouldShowPoints
// 0x0040 (0x0040 - 0x0000)
struct UMG_MapPreviewPOI_C_ShouldShowPoints final
{
public:
	class USQLayer*                               Layer;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           PossibleModes;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	class FName                                   CallFunc_GetGameModeID_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_MapPreviewPOI_C_ShouldShowPoints) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_ShouldShowPoints");
static_assert(sizeof(UMG_MapPreviewPOI_C_ShouldShowPoints) == 0x000040, "Wrong size on UMG_MapPreviewPOI_C_ShouldShowPoints");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowPoints, Layer) == 0x000000, "Member 'UMG_MapPreviewPOI_C_ShouldShowPoints::Layer' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowPoints, Show) == 0x000008, "Member 'UMG_MapPreviewPOI_C_ShouldShowPoints::Show' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowPoints, PossibleModes) == 0x000010, "Member 'UMG_MapPreviewPOI_C_ShouldShowPoints::PossibleModes' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowPoints, K2Node_MakeArray_Array) == 0x000020, "Member 'UMG_MapPreviewPOI_C_ShouldShowPoints::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowPoints, CallFunc_GetGameModeID_ReturnValue) == 0x000030, "Member 'UMG_MapPreviewPOI_C_ShouldShowPoints::CallFunc_GetGameModeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldShowPoints, CallFunc_Array_Contains_ReturnValue) == 0x000038, "Member 'UMG_MapPreviewPOI_C_ShouldShowPoints::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.GetDisplayMode
// 0x00B8 (0x00B8 - 0x0000)
struct UMG_MapPreviewPOI_C_GetDisplayMode final
{
public:
	class USQLayer*                               InLayer;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Mode;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirectionDot;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDistance;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClosestTC;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FirstTC;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmallestDistance;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGameModeID_ReturnValue;                // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425B[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425C[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425D[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0068(0x0018)()
	struct FSQLayerPOIData                        CallFunc_Array_Get_Item;                           // 0x0080(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425E[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance2DSquared_ReturnValue;     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_MapPreviewPOI_C_GetDisplayMode) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_GetDisplayMode");
static_assert(sizeof(UMG_MapPreviewPOI_C_GetDisplayMode) == 0x0000B8, "Wrong size on UMG_MapPreviewPOI_C_GetDisplayMode");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, InLayer) == 0x000000, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::InLayer' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, Mode) == 0x000008, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::Mode' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, Size) == 0x00000C, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::Size' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, DirectionDot) == 0x000010, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::DirectionDot' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CurrentDistance) == 0x000014, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CurrentDistance' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, ClosestTC) == 0x000018, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::ClosestTC' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, FirstTC) == 0x00001C, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::FirstTC' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, SmallestDistance) == 0x000020, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::SmallestDistance' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_GetGameModeID_ReturnValue) == 0x000024, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_GetGameModeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000030, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Sqrt_ReturnValue) == 0x000040, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000044, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_BreakVector2D_X) == 0x00004C, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_BreakVector2D_Y) == 0x000050, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Abs_ReturnValue) == 0x000054, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Less_FloatFloat_ReturnValue) == 0x000058, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000064, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_MakeLiteralText_ReturnValue) == 0x000068, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Array_Get_Item) == 0x000080, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_NotEqual_TextText_ReturnValue) == 0x0000AD, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_GetDisplayMode, CallFunc_Vector_Distance2DSquared_ReturnValue) == 0x0000B0, "Member 'UMG_MapPreviewPOI_C_GetDisplayMode::CallFunc_Vector_Distance2DSquared_ReturnValue' has a wrong offset!");

// Function UMG_MapPreviewPOI.UMG_MapPreviewPOI_C.ShouldRevertPoints
// 0x0020 (0x0020 - 0x0000)
struct UMG_MapPreviewPOI_C_ShouldRevertPoints final
{
public:
	class USQLayer*                               Layer;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Revert;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425F[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TryGetLocalPlayerTeamId_OutTeamId;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamId_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4260[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetGameModeID_ReturnValue;                // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_MapPreviewPOI_C_ShouldRevertPoints) == 0x000008, "Wrong alignment on UMG_MapPreviewPOI_C_ShouldRevertPoints");
static_assert(sizeof(UMG_MapPreviewPOI_C_ShouldRevertPoints) == 0x000020, "Wrong size on UMG_MapPreviewPOI_C_ShouldRevertPoints");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldRevertPoints, Layer) == 0x000000, "Member 'UMG_MapPreviewPOI_C_ShouldRevertPoints::Layer' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldRevertPoints, Revert) == 0x000008, "Member 'UMG_MapPreviewPOI_C_ShouldRevertPoints::Revert' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldRevertPoints, CallFunc_TryGetLocalPlayerTeamId_OutTeamId) == 0x00000C, "Member 'UMG_MapPreviewPOI_C_ShouldRevertPoints::CallFunc_TryGetLocalPlayerTeamId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldRevertPoints, CallFunc_TryGetLocalPlayerTeamId_ReturnValue) == 0x000010, "Member 'UMG_MapPreviewPOI_C_ShouldRevertPoints::CallFunc_TryGetLocalPlayerTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldRevertPoints, CallFunc_GetGameModeID_ReturnValue) == 0x000014, "Member 'UMG_MapPreviewPOI_C_ShouldRevertPoints::CallFunc_GetGameModeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldRevertPoints, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'UMG_MapPreviewPOI_C_ShouldRevertPoints::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldRevertPoints, CallFunc_NotEqual_NameName_ReturnValue) == 0x00001D, "Member 'UMG_MapPreviewPOI_C_ShouldRevertPoints::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_MapPreviewPOI_C_ShouldRevertPoints, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'UMG_MapPreviewPOI_C_ShouldRevertPoints::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameplayFunctionLibrary

#include "Basic.hpp"

#include "BP_GameplayFunctionLibrary_classes.hpp"
#include "BP_GameplayFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.GetSquadPlayerController
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Player_Index                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASQPlayerController*              Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameplayFunctionLibrary_C::GetSquadPlayerController(int32 Player_Index, class UObject* __WorldContext, class ASQPlayerController** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_GameplayFunctionLibrary_C", "GetSquadPlayerController");

	Params::BP_GameplayFunctionLibrary_C_GetSquadPlayerController Parms{};

	Parms.Player_Index = Player_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.GetSquadGameState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASQGameState*                     Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameplayFunctionLibrary_C::GetSquadGameState(class UObject* __WorldContext, class ASQGameState** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_GameplayFunctionLibrary_C", "GetSquadGameState");

	Params::BP_GameplayFunctionLibrary_C_GetSquadGameState Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.GetSquadGameMode
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASQGameMode*                      Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameplayFunctionLibrary_C::GetSquadGameMode(class UObject* __WorldContext, class ASQGameMode** Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_GameplayFunctionLibrary_C", "GetSquadGameMode");

	Params::BP_GameplayFunctionLibrary_C_GetSquadGameMode Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.Show Hide Mouse
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Focus                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Game_Input                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Display_Input                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UI_Input                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    New_Input_State                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameplayFunctionLibrary_C::Show_Hide_Mouse(class UUserWidget* Focus, bool Game_Input, bool Display_Input, bool UI_Input, bool New_Input_State, const class FString& Reason, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_GameplayFunctionLibrary_C", "Show Hide Mouse");

	Params::BP_GameplayFunctionLibrary_C_Show_Hide_Mouse Parms{};

	Parms.Focus = Focus;
	Parms.Game_Input = Game_Input;
	Parms.Display_Input = Display_Input;
	Parms.UI_Input = UI_Input;
	Parms.New_Input_State = New_Input_State;
	Parms.Reason = std::move(Reason);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.Set Virtual Cursor QLOC
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class APlayerController*                PC                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameplayFunctionLibrary_C::Set_Virtual_Cursor_QLOC(bool Enable, class APlayerController* PC, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_GameplayFunctionLibrary_C", "Set Virtual Cursor QLOC");

	Params::BP_GameplayFunctionLibrary_C_Set_Virtual_Cursor_QLOC Parms{};

	Parms.Enable = Enable;
	Parms.PC = PC;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_GameplayFunctionLibrary.BP_GameplayFunctionLibrary_C.Is Platform Console QLOC
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Console                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GameplayFunctionLibrary_C::Is_Platform_Console_QLOC(class UObject* __WorldContext, bool* Is_Console)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_GameplayFunctionLibrary_C", "Is Platform Console QLOC");

	Params::BP_GameplayFunctionLibrary_C_Is_Platform_Console_QLOC Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Is_Console != nullptr)
		*Is_Console = Parms.Is_Console;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GridData_DirectorOption

#include "Basic.hpp"

#include "GridData_BaseOption_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GridData_DirectorOption.GridData_DirectorOption_C
// 0x0020 (0x0080 - 0x0060)
class UGridData_DirectorOption_C : public UGridData_BaseOption_C
{
public:
	class UClass*                                 Control_Widget;                                    // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Map_Marker_Class;                                  // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min_Distance;                                      // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Distance;                                      // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQMapMarkerDataAsset*                  MapMarkerDataAsset;                                // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GridData_DirectorOption_C">();
	}
	static class UGridData_DirectorOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGridData_DirectorOption_C>();
	}
};
static_assert(alignof(UGridData_DirectorOption_C) == 0x000008, "Wrong alignment on UGridData_DirectorOption_C");
static_assert(sizeof(UGridData_DirectorOption_C) == 0x000080, "Wrong size on UGridData_DirectorOption_C");
static_assert(offsetof(UGridData_DirectorOption_C, Control_Widget) == 0x000060, "Member 'UGridData_DirectorOption_C::Control_Widget' has a wrong offset!");
static_assert(offsetof(UGridData_DirectorOption_C, Map_Marker_Class) == 0x000068, "Member 'UGridData_DirectorOption_C::Map_Marker_Class' has a wrong offset!");
static_assert(offsetof(UGridData_DirectorOption_C, Min_Distance) == 0x000070, "Member 'UGridData_DirectorOption_C::Min_Distance' has a wrong offset!");
static_assert(offsetof(UGridData_DirectorOption_C, Max_Distance) == 0x000074, "Member 'UGridData_DirectorOption_C::Max_Distance' has a wrong offset!");
static_assert(offsetof(UGridData_DirectorOption_C, MapMarkerDataAsset) == 0x000078, "Member 'UGridData_DirectorOption_C::MapMarkerDataAsset' has a wrong offset!");

}


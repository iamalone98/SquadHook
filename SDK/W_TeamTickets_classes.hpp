#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TeamTickets

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TeamTickets.W_TeamTickets_C
// 0x0050 (0x02B0 - 0x0260)
class UW_TeamTickets_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Bleeding;                                          // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IconFlag;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconTickets;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                MainBorder;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Bleed;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Tickets;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ASQPlayerState*                         PlayerState;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           Current_Team_State;                                // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGraphNodeBasedBleedComponent_C*        Bleed_Component;                                   // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_TeamTickets(int32 EntryPoint);
	void Refresh();
	void Construct();
	void GetBleedComponent(bool* IsValid, class UGraphNodeBasedBleedComponent_C** BleedComponent);
	void UpdateCurrentTeam(bool* TeamChanged);
	void UpdateTickets();
	void UpdateFlag();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TeamTickets_C">();
	}
	static class UW_TeamTickets_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TeamTickets_C>();
	}
};
static_assert(alignof(UW_TeamTickets_C) == 0x000008, "Wrong alignment on UW_TeamTickets_C");
static_assert(sizeof(UW_TeamTickets_C) == 0x0002B0, "Wrong size on UW_TeamTickets_C");
static_assert(offsetof(UW_TeamTickets_C, UberGraphFrame) == 0x000260, "Member 'UW_TeamTickets_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TeamTickets_C, Bleeding) == 0x000268, "Member 'UW_TeamTickets_C::Bleeding' has a wrong offset!");
static_assert(offsetof(UW_TeamTickets_C, IconFlag) == 0x000270, "Member 'UW_TeamTickets_C::IconFlag' has a wrong offset!");
static_assert(offsetof(UW_TeamTickets_C, IconTickets) == 0x000278, "Member 'UW_TeamTickets_C::IconTickets' has a wrong offset!");
static_assert(offsetof(UW_TeamTickets_C, MainBorder) == 0x000280, "Member 'UW_TeamTickets_C::MainBorder' has a wrong offset!");
static_assert(offsetof(UW_TeamTickets_C, TB_Bleed) == 0x000288, "Member 'UW_TeamTickets_C::TB_Bleed' has a wrong offset!");
static_assert(offsetof(UW_TeamTickets_C, TB_Tickets) == 0x000290, "Member 'UW_TeamTickets_C::TB_Tickets' has a wrong offset!");
static_assert(offsetof(UW_TeamTickets_C, PlayerState) == 0x000298, "Member 'UW_TeamTickets_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UW_TeamTickets_C, Current_Team_State) == 0x0002A0, "Member 'UW_TeamTickets_C::Current_Team_State' has a wrong offset!");
static_assert(offsetof(UW_TeamTickets_C, Bleed_Component) == 0x0002A8, "Member 'UW_TeamTickets_C::Bleed_Component' has a wrong offset!");

}


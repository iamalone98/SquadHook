#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InteractableItem_HelicopterRepair

#include "Basic.hpp"

#include "W_InteractableItem_HelicopterRepair_classes.hpp"
#include "W_InteractableItem_HelicopterRepair_parameters.hpp"


namespace SDK
{

// Function W_InteractableItem_HelicopterRepair.W_InteractableItem_HelicopterRepair_C.ExecuteUbergraph_W_InteractableItem_HelicopterRepair
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableItem_HelicopterRepair_C::ExecuteUbergraph_W_InteractableItem_HelicopterRepair(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_HelicopterRepair_C", "ExecuteUbergraph_W_InteractableItem_HelicopterRepair");

	Params::W_InteractableItem_HelicopterRepair_C_ExecuteUbergraph_W_InteractableItem_HelicopterRepair Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InteractableItem_HelicopterRepair.W_InteractableItem_HelicopterRepair_C.Format Text
// (Public, BlueprintCallable, BlueprintEvent)

void UW_InteractableItem_HelicopterRepair_C::Format_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_HelicopterRepair_C", "Format Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_InteractableItem_HelicopterRepair.W_InteractableItem_HelicopterRepair_C.Update Vehicle Health
// (Public, BlueprintCallable, BlueprintEvent)

void UW_InteractableItem_HelicopterRepair_C::Update_Vehicle_Health()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_HelicopterRepair_C", "Update Vehicle Health");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_InteractableItem_HelicopterRepair.W_InteractableItem_HelicopterRepair_C.Get Format Box
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UHorizontalBox*                   Param_FormatBox                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableItem_HelicopterRepair_C::Get_Format_Box(class UHorizontalBox** Param_FormatBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_HelicopterRepair_C", "Get Format Box");

	Params::W_InteractableItem_HelicopterRepair_C_Get_Format_Box Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_FormatBox != nullptr)
		*Param_FormatBox = Parms.Param_FormatBox;
}


// Function W_InteractableItem_HelicopterRepair.W_InteractableItem_HelicopterRepair_C.Set Main Health
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQVehicle*                       Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Limit_Reached                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Max_Health                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_InteractableItem_HelicopterRepair_C::Set_Main_Health(class ASQVehicle* Vehicle, bool* Limit_Reached, bool* Max_Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_HelicopterRepair_C", "Set Main Health");

	Params::W_InteractableItem_HelicopterRepair_C_Set_Main_Health Parms{};

	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);

	if (Limit_Reached != nullptr)
		*Limit_Reached = Parms.Limit_Reached;

	if (Max_Health != nullptr)
		*Max_Health = Parms.Max_Health;
}

}


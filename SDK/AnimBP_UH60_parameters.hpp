#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_UH60

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_UH60.AnimBP_UH60_C.ExecuteUbergraph_AnimBP_UH60
// 0x01B8 (0x01B8 - 0x0000)
struct AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D87[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UH60_C*                             K2Node_DynamicCast_AsBP_UH60;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D88[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentRotorRPM_RPM;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentRotorRPM_RPM_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RPMtoDegPerSec_DegPerSec;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RPMtoDegPerSec_DegPerSec_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetBladesScale_Blades;                    // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBladesScale_BlurBlades;                // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBladesScale_Blades_1;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBladesScale_BlurBlades_1;              // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISQHelicopterInstruments> CallFunc_GetRollInput_self_CastInput;              // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRollInput_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D89[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISQHelicopterInstruments> CallFunc_GetPitchInput_self_CastInput;             // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPitchInput_ReturnValue;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMainRotorThrust_ReturnValue;           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHealthy_ReturnValue;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8A[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHealthy_ReturnValue_1;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8B[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetThrustPower_Thrust;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_7;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_8;                // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_9;                // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_10;               // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60) == 0x000008, "Wrong alignment on AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60");
static_assert(sizeof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60) == 0x0001B8, "Wrong size on AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, EntryPoint) == 0x000000, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_BreakRotator_Roll) == 0x000008, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_BreakRotator_Pitch) == 0x00000C, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_BreakRotator_Yaw) == 0x000010, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000014, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000018, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_BreakRotator_Roll_1) == 0x000020, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_BreakRotator_Pitch_1) == 0x000024, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_BreakRotator_Yaw_1) == 0x000028, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, K2Node_DynamicCast_AsBP_UH60) == 0x000030, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::K2Node_DynamicCast_AsBP_UH60' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, K2Node_Event_DeltaTimeX) == 0x00003C, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetCurrentRotorRPM_RPM) == 0x000040, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetCurrentRotorRPM_RPM' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetCurrentRotorRPM_RPM_1) == 0x000044, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetCurrentRotorRPM_RPM_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_RPMtoDegPerSec_DegPerSec) == 0x000048, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_RPMtoDegPerSec_DegPerSec' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_RPMtoDegPerSec_DegPerSec_1) == 0x00004C, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_RPMtoDegPerSec_DegPerSec_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000054, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_1) == 0x00006C, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetBladesScale_Blades) == 0x000078, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetBladesScale_Blades' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetBladesScale_BlurBlades) == 0x000084, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetBladesScale_BlurBlades' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetBladesScale_Blades_1) == 0x000090, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetBladesScale_Blades_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetBladesScale_BlurBlades_1) == 0x00009C, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetBladesScale_BlurBlades_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A8, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000B4, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetRollInput_self_CastInput) == 0x0000C0, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetRollInput_self_CastInput' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetRollInput_ReturnValue) == 0x0000D0, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetRollInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetPitchInput_self_CastInput) == 0x0000D8, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetPitchInput_self_CastInput' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetPitchInput_ReturnValue) == 0x0000E8, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetPitchInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000EC, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000F0, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetMainRotorThrust_ReturnValue) == 0x0000F4, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetMainRotorThrust_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_2) == 0x0000F8, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_RInterpTo_ReturnValue) == 0x000104, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_IsHealthy_ReturnValue) == 0x000110, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_IsHealthy_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_SelectVector_ReturnValue) == 0x000114, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_IsHealthy_ReturnValue_1) == 0x000120, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_IsHealthy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_SelectVector_ReturnValue_1) == 0x000124, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000130, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_GetThrustPower_Thrust) == 0x000134, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_GetThrustPower_Thrust' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_3) == 0x000138, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Lerp_ReturnValue_1) == 0x000144, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_4) == 0x000148, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_5) == 0x000154, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_6) == 0x000160, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_7) == 0x00016C, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_8) == 0x000178, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_9) == 0x000184, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_MakeRotator_ReturnValue_10) == 0x000190, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_MakeRotator_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x00019C, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0001A8, "Member 'AnimBP_UH60_C_ExecuteUbergraph_AnimBP_UH60::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");

// Function AnimBP_UH60.AnimBP_UH60_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_UH60_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_UH60_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AnimBP_UH60_C_BlueprintUpdateAnimation");
static_assert(sizeof(AnimBP_UH60_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AnimBP_UH60_C_BlueprintUpdateAnimation");
static_assert(offsetof(AnimBP_UH60_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AnimBP_UH60_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AnimBP_UH60.AnimBP_UH60_C.GetCurrentRotorRPM
// 0x0020 (0x0020 - 0x0000)
struct AnimBP_UH60_C_GetCurrentRotorRPM final
{
public:
	class ABP_Generic_Helicopter_C*               Helicopter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Main;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RPM;                                               // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEngineThrust_EngineThrust;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_UH60_C_GetCurrentRotorRPM) == 0x000008, "Wrong alignment on AnimBP_UH60_C_GetCurrentRotorRPM");
static_assert(sizeof(AnimBP_UH60_C_GetCurrentRotorRPM) == 0x000020, "Wrong size on AnimBP_UH60_C_GetCurrentRotorRPM");
static_assert(offsetof(AnimBP_UH60_C_GetCurrentRotorRPM, Helicopter) == 0x000000, "Member 'AnimBP_UH60_C_GetCurrentRotorRPM::Helicopter' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetCurrentRotorRPM, Main) == 0x000008, "Member 'AnimBP_UH60_C_GetCurrentRotorRPM::Main' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetCurrentRotorRPM, RPM) == 0x00000C, "Member 'AnimBP_UH60_C_GetCurrentRotorRPM::RPM' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetCurrentRotorRPM, CallFunc_GetEngineThrust_EngineThrust) == 0x000010, "Member 'AnimBP_UH60_C_GetCurrentRotorRPM::CallFunc_GetEngineThrust_EngineThrust' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetCurrentRotorRPM, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'AnimBP_UH60_C_GetCurrentRotorRPM::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetCurrentRotorRPM, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000018, "Member 'AnimBP_UH60_C_GetCurrentRotorRPM::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function AnimBP_UH60.AnimBP_UH60_C.RPMtoDegPerSec
// 0x0038 (0x0038 - 0x0000)
struct AnimBP_UH60_C_RPMtoDegPerSec final
{
public:
	float                                         RPM;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MainRotor;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UH60_C*                             Helicopter;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DegPerSec;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_UH60_C_RPMtoDegPerSec) == 0x000008, "Wrong alignment on AnimBP_UH60_C_RPMtoDegPerSec");
static_assert(sizeof(AnimBP_UH60_C_RPMtoDegPerSec) == 0x000038, "Wrong size on AnimBP_UH60_C_RPMtoDegPerSec");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, RPM) == 0x000000, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::RPM' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, MainRotor) == 0x000004, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::MainRotor' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, Helicopter) == 0x000008, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::Helicopter' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, DegPerSec) == 0x000010, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::DegPerSec' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, CallFunc_SelectInt_ReturnValue_1) == 0x000018, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000020, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00002C, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_RPMtoDegPerSec, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000030, "Member 'AnimBP_UH60_C_RPMtoDegPerSec::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function AnimBP_UH60.AnimBP_UH60_C.GetBladesScale
// 0x0080 (0x0080 - 0x0000)
struct AnimBP_UH60_C_GetBladesScale final
{
public:
	class ABP_Generic_Helicopter_C*               Helicopter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Main;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Blades;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlurBlades;                                        // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxRPM;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinRPM;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentRotorRPM_RPM;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D8F[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D90[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D91[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_UH60_C_GetBladesScale) == 0x000008, "Wrong alignment on AnimBP_UH60_C_GetBladesScale");
static_assert(sizeof(AnimBP_UH60_C_GetBladesScale) == 0x000080, "Wrong size on AnimBP_UH60_C_GetBladesScale");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, Helicopter) == 0x000000, "Member 'AnimBP_UH60_C_GetBladesScale::Helicopter' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, Main) == 0x000008, "Member 'AnimBP_UH60_C_GetBladesScale::Main' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, Blades) == 0x00000C, "Member 'AnimBP_UH60_C_GetBladesScale::Blades' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, BlurBlades) == 0x000018, "Member 'AnimBP_UH60_C_GetBladesScale::BlurBlades' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, MaxRPM) == 0x000024, "Member 'AnimBP_UH60_C_GetBladesScale::MaxRPM' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, MinRPM) == 0x000028, "Member 'AnimBP_UH60_C_GetBladesScale::MinRPM' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, Temp_float_Variable) == 0x00002C, "Member 'AnimBP_UH60_C_GetBladesScale::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_GetCurrentRotorRPM_RPM) == 0x000030, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_GetCurrentRotorRPM_RPM' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000038, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, Temp_float_Variable_1) == 0x00003C, "Member 'AnimBP_UH60_C_GetBladesScale::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_FClamp_ReturnValue) == 0x000044, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, Temp_bool_Variable) == 0x000048, "Member 'AnimBP_UH60_C_GetBladesScale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00004C, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000050, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000051, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, Temp_float_Variable_2) == 0x000054, "Member 'AnimBP_UH60_C_GetBladesScale::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, Temp_float_Variable_3) == 0x000058, "Member 'AnimBP_UH60_C_GetBladesScale::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, Temp_bool_Variable_1) == 0x00005C, "Member 'AnimBP_UH60_C_GetBladesScale::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, K2Node_Select_Default) == 0x000060, "Member 'AnimBP_UH60_C_GetBladesScale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_MakeVector_ReturnValue) == 0x000064, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, K2Node_Select_Default_1) == 0x000070, "Member 'AnimBP_UH60_C_GetBladesScale::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AnimBP_UH60_C_GetBladesScale, CallFunc_MakeVector_ReturnValue_1) == 0x000074, "Member 'AnimBP_UH60_C_GetBladesScale::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function AnimBP_UH60.AnimBP_UH60_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_UH60_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_UH60_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_UH60_C_AnimGraph");
static_assert(sizeof(AnimBP_UH60_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_UH60_C_AnimGraph");
static_assert(offsetof(AnimBP_UH60_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'AnimBP_UH60_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SquadRallyPoint

#include "Basic.hpp"

#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.ExecuteUbergraph_BP_SquadRallyPoint
// 0x0120 (0x0120 - 0x0000)
struct BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_270D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_Player_2;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Can_Pickup;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_270E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_User;                                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_270F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanOpenRadialMenu_CanOpenRadialMenu;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2710[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetCurrentRole_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2711[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_1;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2712[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2713[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_Player;                               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller_1;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2714[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2715[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2716[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       CallFunc_FindValidWeaponByClass_ReturnValue;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2717[0x5];                                     // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_User_1;                               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2718[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_2;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD_1;                      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2719[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_User_2;                               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_User_3;                               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_User_4;                               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_Player_1;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint");
static_assert(sizeof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint) == 0x000120, "Wrong size on BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, EntryPoint) == 0x000000, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_Event_Player_2) == 0x000008, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_Event_Can_Pickup) == 0x000010, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_Event_Can_Pickup' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_GetSquadPlayerController_Return_Value) == 0x000018, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_GetSquadPlayerController_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_Event_User) == 0x000020, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_Event_User' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000030, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_CanOpenRadialMenu_CanOpenRadialMenu) == 0x000039, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_CanOpenRadialMenu_CanOpenRadialMenu' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_GetCurrentRole_ReturnValue) == 0x000040, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_GetCurrentRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_GetHUD_ReturnValue) == 0x000048, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_IsSquadLeader_ReturnValue) == 0x000050, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_AsBPI_HUD) == 0x000058, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_IsSquadLeader_ReturnValue_1) == 0x000069, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_IsSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_GetHUD_ReturnValue_1) == 0x000070, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_AsSQHUD) == 0x000078, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_Event_Player) == 0x000088, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_AsBP_Player_Controller_1) == 0x000090, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_AsBP_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_K2_GetPawn_ReturnValue) == 0x0000A0, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_HasAuthority_ReturnValue) == 0x0000A8, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_AsSQSoldier) == 0x0000B0, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_bSuccess_4) == 0x0000B8, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_FindValidWeaponByClass_ReturnValue) == 0x0000C0, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_FindValidWeaponByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C8, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C9, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_IsValid_ReturnValue_1) == 0x0000CA, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_Event_User_1) == 0x0000D0, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_Event_User_1' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x0000D8, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_bSuccess_5) == 0x0000E0, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, CallFunc_GetHUD_ReturnValue_2) == 0x0000E8, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::CallFunc_GetHUD_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_AsSQHUD_1) == 0x0000F0, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_AsSQHUD_1' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_DynamicCast_bSuccess_6) == 0x0000F8, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_Event_User_2) == 0x000100, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_Event_User_2' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_Event_User_3) == 0x000108, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_Event_User_3' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_Event_User_4) == 0x000110, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_Event_User_4' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint, K2Node_Event_Player_1) == 0x000118, "Member 'BP_SquadRallyPoint_C_ExecuteUbergraph_BP_SquadRallyPoint::K2Node_Event_Player_1' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.Pickup Item
// 0x0008 (0x0008 - 0x0000)
struct BP_SquadRallyPoint_C_Pickup_Item final
{
public:
	class APlayerController*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_Pickup_Item) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_Pickup_Item");
static_assert(sizeof(BP_SquadRallyPoint_C_Pickup_Item) == 0x000008, "Wrong size on BP_SquadRallyPoint_C_Pickup_Item");
static_assert(offsetof(BP_SquadRallyPoint_C_Pickup_Item, Player) == 0x000000, "Member 'BP_SquadRallyPoint_C_Pickup_Item::Player' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.BPOnUsed
// 0x0008 (0x0008 - 0x0000)
struct BP_SquadRallyPoint_C_BPOnUsed final
{
public:
	class AController*                            User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_BPOnUsed) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_BPOnUsed");
static_assert(sizeof(BP_SquadRallyPoint_C_BPOnUsed) == 0x000008, "Wrong size on BP_SquadRallyPoint_C_BPOnUsed");
static_assert(offsetof(BP_SquadRallyPoint_C_BPOnUsed, User) == 0x000000, "Member 'BP_SquadRallyPoint_C_BPOnUsed::User' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.BPDisplayPrompt
// 0x0008 (0x0008 - 0x0000)
struct BP_SquadRallyPoint_C_BPDisplayPrompt final
{
public:
	class AController*                            User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_BPDisplayPrompt) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_BPDisplayPrompt");
static_assert(sizeof(BP_SquadRallyPoint_C_BPDisplayPrompt) == 0x000008, "Wrong size on BP_SquadRallyPoint_C_BPDisplayPrompt");
static_assert(offsetof(BP_SquadRallyPoint_C_BPDisplayPrompt, User) == 0x000000, "Member 'BP_SquadRallyPoint_C_BPDisplayPrompt::User' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.ServerStopUsed
// 0x0008 (0x0008 - 0x0000)
struct BP_SquadRallyPoint_C_ServerStopUsed final
{
public:
	class AController*                            User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_ServerStopUsed) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_ServerStopUsed");
static_assert(sizeof(BP_SquadRallyPoint_C_ServerStopUsed) == 0x000008, "Wrong size on BP_SquadRallyPoint_C_ServerStopUsed");
static_assert(offsetof(BP_SquadRallyPoint_C_ServerStopUsed, User) == 0x000000, "Member 'BP_SquadRallyPoint_C_ServerStopUsed::User' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.ServerOnUsed
// 0x0008 (0x0008 - 0x0000)
struct BP_SquadRallyPoint_C_ServerOnUsed final
{
public:
	class AController*                            User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_ServerOnUsed) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_ServerOnUsed");
static_assert(sizeof(BP_SquadRallyPoint_C_ServerOnUsed) == 0x000008, "Wrong size on BP_SquadRallyPoint_C_ServerOnUsed");
static_assert(offsetof(BP_SquadRallyPoint_C_ServerOnUsed, User) == 0x000000, "Member 'BP_SquadRallyPoint_C_ServerOnUsed::User' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.BPStopUsed
// 0x0008 (0x0008 - 0x0000)
struct BP_SquadRallyPoint_C_BPStopUsed final
{
public:
	class AController*                            User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_BPStopUsed) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_BPStopUsed");
static_assert(sizeof(BP_SquadRallyPoint_C_BPStopUsed) == 0x000008, "Wrong size on BP_SquadRallyPoint_C_BPStopUsed");
static_assert(offsetof(BP_SquadRallyPoint_C_BPStopUsed, User) == 0x000000, "Member 'BP_SquadRallyPoint_C_BPStopUsed::User' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.Player Left Radius
// 0x0008 (0x0008 - 0x0000)
struct BP_SquadRallyPoint_C_Player_Left_Radius final
{
public:
	class APlayerController*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_Player_Left_Radius) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_Player_Left_Radius");
static_assert(sizeof(BP_SquadRallyPoint_C_Player_Left_Radius) == 0x000008, "Wrong size on BP_SquadRallyPoint_C_Player_Left_Radius");
static_assert(offsetof(BP_SquadRallyPoint_C_Player_Left_Radius, Player) == 0x000000, "Member 'BP_SquadRallyPoint_C_Player_Left_Radius::Player' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.Player Enter Radius
// 0x0010 (0x0010 - 0x0000)
struct BP_SquadRallyPoint_C_Player_Enter_Radius final
{
public:
	class APlayerController*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Pickup;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SquadRallyPoint_C_Player_Enter_Radius) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_Player_Enter_Radius");
static_assert(sizeof(BP_SquadRallyPoint_C_Player_Enter_Radius) == 0x000010, "Wrong size on BP_SquadRallyPoint_C_Player_Enter_Radius");
static_assert(offsetof(BP_SquadRallyPoint_C_Player_Enter_Radius, Player) == 0x000000, "Member 'BP_SquadRallyPoint_C_Player_Enter_Radius::Player' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_Player_Enter_Radius, Can_Pickup) == 0x000008, "Member 'BP_SquadRallyPoint_C_Player_Enter_Radius::Can_Pickup' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.GetUsableData
// 0x0040 (0x0040 - 0x0000)
struct BP_SquadRallyPoint_C_GetUsableData final
{
public:
	struct FSQUsableData                          ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_SquadRallyPoint_C_GetUsableData) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_GetUsableData");
static_assert(sizeof(BP_SquadRallyPoint_C_GetUsableData) == 0x000040, "Wrong size on BP_SquadRallyPoint_C_GetUsableData");
static_assert(offsetof(BP_SquadRallyPoint_C_GetUsableData, ReturnValue) == 0x000000, "Member 'BP_SquadRallyPoint_C_GetUsableData::ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.GetInterfaceTeam
// 0x000C (0x000C - 0x0000)
struct BP_SquadRallyPoint_C_GetInterfaceTeam final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       CallFunc_GetTeam_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_GetInterfaceTeam) == 0x000004, "Wrong alignment on BP_SquadRallyPoint_C_GetInterfaceTeam");
static_assert(sizeof(BP_SquadRallyPoint_C_GetInterfaceTeam) == 0x00000C, "Wrong size on BP_SquadRallyPoint_C_GetInterfaceTeam");
static_assert(offsetof(BP_SquadRallyPoint_C_GetInterfaceTeam, ReturnValue) == 0x000000, "Member 'BP_SquadRallyPoint_C_GetInterfaceTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_GetInterfaceTeam, CallFunc_GetTeam_ReturnValue) == 0x000004, "Member 'BP_SquadRallyPoint_C_GetInterfaceTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_GetInterfaceTeam, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_SquadRallyPoint_C_GetInterfaceTeam::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.ShouldDisplayPrompt
// 0x0030 (0x0030 - 0x0000)
struct BP_SquadRallyPoint_C_ShouldDisplayPrompt final
{
public:
	class AController*                            User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271C[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetCurrentRole_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_1;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SquadRallyPoint_C_ShouldDisplayPrompt) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_ShouldDisplayPrompt");
static_assert(sizeof(BP_SquadRallyPoint_C_ShouldDisplayPrompt) == 0x000030, "Wrong size on BP_SquadRallyPoint_C_ShouldDisplayPrompt");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, User) == 0x000000, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::User' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, ReturnValue) == 0x000008, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000010, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, CallFunc_IsSquadLeader_ReturnValue) == 0x000019, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, CallFunc_GetCurrentRole_ReturnValue) == 0x000020, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::CallFunc_GetCurrentRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, CallFunc_IsSquadLeader_ReturnValue_1) == 0x000028, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::CallFunc_IsSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000029, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ShouldDisplayPrompt, CallFunc_BooleanAND_ReturnValue_1) == 0x00002B, "Member 'BP_SquadRallyPoint_C_ShouldDisplayPrompt::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.UnbindEventToAmmoUpdated
// 0x0014 (0x0014 - 0x0000)
struct BP_SquadRallyPoint_C_UnbindEventToAmmoUpdated final
{
public:
	TDelegate<void()>                             Delegate;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SquadRallyPoint_C_UnbindEventToAmmoUpdated) == 0x000004, "Wrong alignment on BP_SquadRallyPoint_C_UnbindEventToAmmoUpdated");
static_assert(sizeof(BP_SquadRallyPoint_C_UnbindEventToAmmoUpdated) == 0x000014, "Wrong size on BP_SquadRallyPoint_C_UnbindEventToAmmoUpdated");
static_assert(offsetof(BP_SquadRallyPoint_C_UnbindEventToAmmoUpdated, Delegate) == 0x000000, "Member 'BP_SquadRallyPoint_C_UnbindEventToAmmoUpdated::Delegate' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_UnbindEventToAmmoUpdated, ReturnValue) == 0x000010, "Member 'BP_SquadRallyPoint_C_UnbindEventToAmmoUpdated::ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.GetRearmSuccessString
// 0x0010 (0x0010 - 0x0000)
struct BP_SquadRallyPoint_C_GetRearmSuccessString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_GetRearmSuccessString) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_GetRearmSuccessString");
static_assert(sizeof(BP_SquadRallyPoint_C_GetRearmSuccessString) == 0x000010, "Wrong size on BP_SquadRallyPoint_C_GetRearmSuccessString");
static_assert(offsetof(BP_SquadRallyPoint_C_GetRearmSuccessString, ReturnValue) == 0x000000, "Member 'BP_SquadRallyPoint_C_GetRearmSuccessString::ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.GetRearmNoAmmoString
// 0x0010 (0x0010 - 0x0000)
struct BP_SquadRallyPoint_C_GetRearmNoAmmoString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_GetRearmNoAmmoString) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_GetRearmNoAmmoString");
static_assert(sizeof(BP_SquadRallyPoint_C_GetRearmNoAmmoString) == 0x000010, "Wrong size on BP_SquadRallyPoint_C_GetRearmNoAmmoString");
static_assert(offsetof(BP_SquadRallyPoint_C_GetRearmNoAmmoString, ReturnValue) == 0x000000, "Member 'BP_SquadRallyPoint_C_GetRearmNoAmmoString::ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.ConsumeAmmo
// 0x0008 (0x0008 - 0x0000)
struct BP_SquadRallyPoint_C_ConsumeAmmo final
{
public:
	float                                         AmmoRequired;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SquadRallyPoint_C_ConsumeAmmo) == 0x000004, "Wrong alignment on BP_SquadRallyPoint_C_ConsumeAmmo");
static_assert(sizeof(BP_SquadRallyPoint_C_ConsumeAmmo) == 0x000008, "Wrong size on BP_SquadRallyPoint_C_ConsumeAmmo");
static_assert(offsetof(BP_SquadRallyPoint_C_ConsumeAmmo, AmmoRequired) == 0x000000, "Member 'BP_SquadRallyPoint_C_ConsumeAmmo::AmmoRequired' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_ConsumeAmmo, ReturnValue) == 0x000004, "Member 'BP_SquadRallyPoint_C_ConsumeAmmo::ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.BindEventToAmmoUpdated
// 0x0014 (0x0014 - 0x0000)
struct BP_SquadRallyPoint_C_BindEventToAmmoUpdated final
{
public:
	TDelegate<void()>                             Delegate;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SquadRallyPoint_C_BindEventToAmmoUpdated) == 0x000004, "Wrong alignment on BP_SquadRallyPoint_C_BindEventToAmmoUpdated");
static_assert(sizeof(BP_SquadRallyPoint_C_BindEventToAmmoUpdated) == 0x000014, "Wrong size on BP_SquadRallyPoint_C_BindEventToAmmoUpdated");
static_assert(offsetof(BP_SquadRallyPoint_C_BindEventToAmmoUpdated, Delegate) == 0x000000, "Member 'BP_SquadRallyPoint_C_BindEventToAmmoUpdated::Delegate' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_BindEventToAmmoUpdated, ReturnValue) == 0x000010, "Member 'BP_SquadRallyPoint_C_BindEventToAmmoUpdated::ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.GetRearmType
// 0x0001 (0x0001 - 0x0000)
struct BP_SquadRallyPoint_C_GetRearmType final
{
public:
	ESQRearmType                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_GetRearmType) == 0x000001, "Wrong alignment on BP_SquadRallyPoint_C_GetRearmType");
static_assert(sizeof(BP_SquadRallyPoint_C_GetRearmType) == 0x000001, "Wrong size on BP_SquadRallyPoint_C_GetRearmType");
static_assert(offsetof(BP_SquadRallyPoint_C_GetRearmType, ReturnValue) == 0x000000, "Member 'BP_SquadRallyPoint_C_GetRearmType::ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.GetAmmo
// 0x0004 (0x0004 - 0x0000)
struct BP_SquadRallyPoint_C_GetAmmo final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SquadRallyPoint_C_GetAmmo) == 0x000004, "Wrong alignment on BP_SquadRallyPoint_C_GetAmmo");
static_assert(sizeof(BP_SquadRallyPoint_C_GetAmmo) == 0x000004, "Wrong size on BP_SquadRallyPoint_C_GetAmmo");
static_assert(offsetof(BP_SquadRallyPoint_C_GetAmmo, ReturnValue) == 0x000000, "Member 'BP_SquadRallyPoint_C_GetAmmo::ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.CanRearmWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_SquadRallyPoint_C_CanRearmWeapon final
{
public:
	const class ASQEquipableItem*                 Weapon;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SquadRallyPoint_C_CanRearmWeapon) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_CanRearmWeapon");
static_assert(sizeof(BP_SquadRallyPoint_C_CanRearmWeapon) == 0x000010, "Wrong size on BP_SquadRallyPoint_C_CanRearmWeapon");
static_assert(offsetof(BP_SquadRallyPoint_C_CanRearmWeapon, Weapon) == 0x000000, "Member 'BP_SquadRallyPoint_C_CanRearmWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_CanRearmWeapon, ReturnValue) == 0x000008, "Member 'BP_SquadRallyPoint_C_CanRearmWeapon::ReturnValue' has a wrong offset!");

// Function BP_SquadRallyPoint.BP_SquadRallyPoint_C.CanRearmPawn
// 0x0010 (0x0010 - 0x0000)
struct BP_SquadRallyPoint_C_CanRearmPawn final
{
public:
	const class APawn*                            Rearmer;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SquadRallyPoint_C_CanRearmPawn) == 0x000008, "Wrong alignment on BP_SquadRallyPoint_C_CanRearmPawn");
static_assert(sizeof(BP_SquadRallyPoint_C_CanRearmPawn) == 0x000010, "Wrong size on BP_SquadRallyPoint_C_CanRearmPawn");
static_assert(offsetof(BP_SquadRallyPoint_C_CanRearmPawn, Rearmer) == 0x000000, "Member 'BP_SquadRallyPoint_C_CanRearmPawn::Rearmer' has a wrong offset!");
static_assert(offsetof(BP_SquadRallyPoint_C_CanRearmPawn, ReturnValue) == 0x000008, "Member 'BP_SquadRallyPoint_C_CanRearmPawn::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MusicPlayer

#include "Basic.hpp"


namespace SDK::Params
{

// Function MusicPlayer.MusicPlayer_C.ExecuteUbergraph_MusicPlayer
// 0x0178 (0x0178 - 0x0000)
struct MusicPlayer_C_ExecuteUbergraph_MusicPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34EC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bSelected;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34ED[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     K2Node_ComponentBoundEvent_Button;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EE[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bSelected_1;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34EF[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     K2Node_ComponentBoundEvent_Button_1;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USoundWave*                       K2Node_CustomEvent_PlayingSoundWave;               // 0x0058(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PlaybackPercent;                // 0x0060(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F0[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentMapName_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F1[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC;                     // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F2[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC_1;                   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34F3[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC_2;                   // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC_3;                   // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F4[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC_4;                   // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bSelected_2;            // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F5[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     K2Node_ComponentBoundEvent_Button_2;               // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundBase>              CallFunc_Array_Get_Item;                           // 0x00F0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F6[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC_5;                   // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_NewSound;                       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bSelected_3;            // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F7[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     K2Node_ComponentBoundEvent_Button_3;               // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F8[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer) == 0x000008, "Wrong alignment on MusicPlayer_C_ExecuteUbergraph_MusicPlayer");
static_assert(sizeof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer) == 0x000178, "Wrong size on MusicPlayer_C_ExecuteUbergraph_MusicPlayer");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, EntryPoint) == 0x000000, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000008, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_ComponentBoundEvent_bSelected) == 0x000010, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_ComponentBoundEvent_bSelected' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_ComponentBoundEvent_Button) == 0x000018, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_GetValue_ReturnValue) == 0x000020, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_MapRangeClamped_ReturnValue) == 0x000024, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000038, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_GetValue_ReturnValue_1) == 0x00003C, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000040, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_ComponentBoundEvent_bSelected_1) == 0x000049, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_ComponentBoundEvent_bSelected_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_ComponentBoundEvent_Button_1) == 0x000050, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_CustomEvent_PlayingSoundWave) == 0x000058, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_CustomEvent_PlayingSoundWave' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_CustomEvent_PlaybackPercent) == 0x000060, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_CustomEvent_PlaybackPercent' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_GetCurrentMapName_ReturnValue) == 0x000068, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_GetCurrentMapName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_GetSquadPlayerController_Return_Value) == 0x000078, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_GetSquadPlayerController_Return_Value' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Contains_ReturnValue) == 0x000080, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Get_Music_AC_MusicAC) == 0x000088, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Get_Music_AC_MusicAC' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_CustomEvent_Loaded) == 0x000090, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Get_Music_AC_MusicAC_1) == 0x0000A0, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Get_Music_AC_MusicAC_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000A8, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_CreateDelegate_OutputDelegate) == 0x0000AC, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Get_Music_AC_MusicAC_2) == 0x0000C0, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Get_Music_AC_MusicAC_2' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Get_Music_AC_MusicAC_3) == 0x0000C8, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Get_Music_AC_MusicAC_3' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_IsValid_ReturnValue_2) == 0x0000D1, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Get_Music_AC_MusicAC_4) == 0x0000D8, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Get_Music_AC_MusicAC_4' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_CustomEvent_Index) == 0x0000E0, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_ComponentBoundEvent_bSelected_2) == 0x0000E4, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_ComponentBoundEvent_bSelected_2' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_ComponentBoundEvent_Button_2) == 0x0000E8, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000118, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Get_Music_AC_MusicAC_5) == 0x000120, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Get_Music_AC_MusicAC_5' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_CustomEvent_NewSound) == 0x000128, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_CustomEvent_NewSound' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_ComponentBoundEvent_bSelected_3) == 0x000130, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_ComponentBoundEvent_bSelected_3' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_ComponentBoundEvent_Button_3) == 0x000138, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000148, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, CallFunc_IsValid_ReturnValue_3) == 0x000149, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, Temp_object_Variable) == 0x000150, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000158, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_DynamicCast_AsSound_Base) == 0x000168, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_ExecuteUbergraph_MusicPlayer, K2Node_Event_IsDesignTime) == 0x000171, "Member 'MusicPlayer_C_ExecuteUbergraph_MusicPlayer::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MusicPlayer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicPlayer_C_PreConstruct) == 0x000001, "Wrong alignment on MusicPlayer_C_PreConstruct");
static_assert(sizeof(MusicPlayer_C_PreConstruct) == 0x000001, "Wrong size on MusicPlayer_C_PreConstruct");
static_assert(offsetof(MusicPlayer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MusicPlayer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Play Sound
// 0x0008 (0x0008 - 0x0000)
struct MusicPlayer_C_Play_Sound final
{
public:
	class USoundBase*                             NewSound;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_Play_Sound) == 0x000008, "Wrong alignment on MusicPlayer_C_Play_Sound");
static_assert(sizeof(MusicPlayer_C_Play_Sound) == 0x000008, "Wrong size on MusicPlayer_C_Play_Sound");
static_assert(offsetof(MusicPlayer_C_Play_Sound, NewSound) == 0x000000, "Member 'MusicPlayer_C_Play_Sound::NewSound' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Load Sound
// 0x0004 (0x0004 - 0x0000)
struct MusicPlayer_C_Load_Sound final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_Load_Sound) == 0x000004, "Wrong alignment on MusicPlayer_C_Load_Sound");
static_assert(sizeof(MusicPlayer_C_Load_Sound) == 0x000004, "Wrong size on MusicPlayer_C_Load_Sound");
static_assert(offsetof(MusicPlayer_C_Load_Sound, Param_Index) == 0x000000, "Member 'MusicPlayer_C_Load_Sound::Param_Index' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Play Time
// 0x0010 (0x0010 - 0x0000)
struct MusicPlayer_C_Play_Time final
{
public:
	const class USoundWave*                       PlayingSoundWave;                                  // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlaybackPercent;                                   // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_Play_Time) == 0x000008, "Wrong alignment on MusicPlayer_C_Play_Time");
static_assert(sizeof(MusicPlayer_C_Play_Time) == 0x000010, "Wrong size on MusicPlayer_C_Play_Time");
static_assert(offsetof(MusicPlayer_C_Play_Time, PlayingSoundWave) == 0x000000, "Member 'MusicPlayer_C_Play_Time::PlayingSoundWave' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Play_Time, PlaybackPercent) == 0x000008, "Member 'MusicPlayer_C_Play_Time::PlaybackPercent' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MusicPlayer_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34F9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on MusicPlayer_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature");
static_assert(sizeof(MusicPlayer_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature) == 0x000010, "Wrong size on MusicPlayer_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature");
static_assert(offsetof(MusicPlayer_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'MusicPlayer_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'MusicPlayer_C_BndEvt__MainMenu_Button_K2Node_ComponentBoundEvent_133_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MusicPlayer_C_BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on MusicPlayer_C_BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(MusicPlayer_C_BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000010, "Wrong size on MusicPlayer_C_BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(MusicPlayer_C_BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'MusicPlayer_C_BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'MusicPlayer_C_BndEvt__ButtonSkipForward_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MusicPlayer_C_BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on MusicPlayer_C_BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature");
static_assert(sizeof(MusicPlayer_C_BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature) == 0x000010, "Wrong size on MusicPlayer_C_BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature");
static_assert(offsetof(MusicPlayer_C_BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'MusicPlayer_C_BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'MusicPlayer_C_BndEvt__ButtonSkipBack_K2Node_ComponentBoundEvent_27_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct MusicPlayer_C_BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenu_Button_C*                     Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on MusicPlayer_C_BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(sizeof(MusicPlayer_C_BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000010, "Wrong size on MusicPlayer_C_BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(offsetof(MusicPlayer_C_BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature, bSelected) == 0x000000, "Member 'MusicPlayer_C_BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature::bSelected' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature, Button) == 0x000008, "Member 'MusicPlayer_C_BndEvt__ButtonPlayPause_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.OnLoaded_64894CBD4CB9747691437E9B69432F5B
// 0x0008 (0x0008 - 0x0000)
struct MusicPlayer_C_OnLoaded_64894CBD4CB9747691437E9B69432F5B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_OnLoaded_64894CBD4CB9747691437E9B69432F5B) == 0x000008, "Wrong alignment on MusicPlayer_C_OnLoaded_64894CBD4CB9747691437E9B69432F5B");
static_assert(sizeof(MusicPlayer_C_OnLoaded_64894CBD4CB9747691437E9B69432F5B) == 0x000008, "Wrong size on MusicPlayer_C_OnLoaded_64894CBD4CB9747691437E9B69432F5B");
static_assert(offsetof(MusicPlayer_C_OnLoaded_64894CBD4CB9747691437E9B69432F5B, Loaded) == 0x000000, "Member 'MusicPlayer_C_OnLoaded_64894CBD4CB9747691437E9B69432F5B::Loaded' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Skip Track
// 0x0070 (0x0070 - 0x0000)
struct MusicPlayer_C_Skip_Track final
{
public:
	bool                                          Forward;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FD[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC_1;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FE[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundBase>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0020(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34FF[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3500[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3501[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_Skip_Track) == 0x000008, "Wrong alignment on MusicPlayer_C_Skip_Track");
static_assert(sizeof(MusicPlayer_C_Skip_Track) == 0x000070, "Wrong size on MusicPlayer_C_Skip_Track");
static_assert(offsetof(MusicPlayer_C_Skip_Track, Forward) == 0x000000, "Member 'MusicPlayer_C_Skip_Track::Forward' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, Temp_bool_Variable) == 0x000001, "Member 'MusicPlayer_C_Skip_Track::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, Temp_int_Variable) == 0x000004, "Member 'MusicPlayer_C_Skip_Track::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_Get_Music_AC_MusicAC) == 0x000008, "Member 'MusicPlayer_C_Skip_Track::CallFunc_Get_Music_AC_MusicAC' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_Get_Music_AC_MusicAC_1) == 0x000010, "Member 'MusicPlayer_C_Skip_Track::CallFunc_Get_Music_AC_MusicAC_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MusicPlayer_C_Skip_Track::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'MusicPlayer_C_Skip_Track::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000020, "Member 'MusicPlayer_C_Skip_Track::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, Temp_bool_Variable_1) == 0x000048, "Member 'MusicPlayer_C_Skip_Track::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_Array_Find_ReturnValue) == 0x00004C, "Member 'MusicPlayer_C_Skip_Track::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'MusicPlayer_C_Skip_Track::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_Array_LastIndex_ReturnValue) == 0x000054, "Member 'MusicPlayer_C_Skip_Track::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'MusicPlayer_C_Skip_Track::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'MusicPlayer_C_Skip_Track::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'MusicPlayer_C_Skip_Track::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'MusicPlayer_C_Skip_Track::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, K2Node_Select_Default) == 0x000064, "Member 'MusicPlayer_C_Skip_Track::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Skip_Track, K2Node_Select_Default_1) == 0x000068, "Member 'MusicPlayer_C_Skip_Track::K2Node_Select_Default_1' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Refresh Audio
// 0x0058 (0x0058 - 0x0000)
struct MusicPlayer_C_Refresh_Audio final
{
public:
	class UTexture2D*                             Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3502[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC_1;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3503[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3504[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_Refresh_Audio) == 0x000008, "Wrong alignment on MusicPlayer_C_Refresh_Audio");
static_assert(sizeof(MusicPlayer_C_Refresh_Audio) == 0x000058, "Wrong size on MusicPlayer_C_Refresh_Audio");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, Temp_object_Variable) == 0x000000, "Member 'MusicPlayer_C_Refresh_Audio::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_Get_Music_AC_MusicAC) == 0x000008, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_Get_Music_AC_MusicAC' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_IsPlaying_ReturnValue) == 0x000011, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, Temp_bool_Variable) == 0x000013, "Member 'MusicPlayer_C_Refresh_Audio::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_Get_Music_AC_MusicAC_1) == 0x000018, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_Get_Music_AC_MusicAC_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, Temp_object_Variable_1) == 0x000020, "Member 'MusicPlayer_C_Refresh_Audio::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000030, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_FMax_ReturnValue) == 0x000038, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000040, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, K2Node_Select_Default) == 0x000048, "Member 'MusicPlayer_C_Refresh_Audio::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Refresh_Audio, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'MusicPlayer_C_Refresh_Audio::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Mute Audio
// 0x0030 (0x0030 - 0x0000)
struct MusicPlayer_C_Mute_Audio final
{
public:
	bool                                          Mute;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3505[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC_1;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3506[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_Mute_Audio) == 0x000008, "Wrong alignment on MusicPlayer_C_Mute_Audio");
static_assert(sizeof(MusicPlayer_C_Mute_Audio) == 0x000030, "Wrong size on MusicPlayer_C_Mute_Audio");
static_assert(offsetof(MusicPlayer_C_Mute_Audio, Mute) == 0x000000, "Member 'MusicPlayer_C_Mute_Audio::Mute' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Mute_Audio, CallFunc_Get_Music_AC_MusicAC) == 0x000008, "Member 'MusicPlayer_C_Mute_Audio::CallFunc_Get_Music_AC_MusicAC' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Mute_Audio, CallFunc_Get_Music_AC_MusicAC_1) == 0x000010, "Member 'MusicPlayer_C_Mute_Audio::CallFunc_Get_Music_AC_MusicAC_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Mute_Audio, CallFunc_IsPlaying_ReturnValue) == 0x000018, "Member 'MusicPlayer_C_Mute_Audio::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Mute_Audio, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'MusicPlayer_C_Mute_Audio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Mute_Audio, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000020, "Member 'MusicPlayer_C_Mute_Audio::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Mute_Audio, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'MusicPlayer_C_Mute_Audio::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Update Menu Settings
// 0x0020 (0x0020 - 0x0000)
struct MusicPlayer_C_Update_Menu_Settings final
{
public:
	TArray<class UAudioWindow_C*>                 CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3507[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioWindow_C*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_Update_Menu_Settings) == 0x000008, "Wrong alignment on MusicPlayer_C_Update_Menu_Settings");
static_assert(sizeof(MusicPlayer_C_Update_Menu_Settings) == 0x000020, "Wrong size on MusicPlayer_C_Update_Menu_Settings");
static_assert(offsetof(MusicPlayer_C_Update_Menu_Settings, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000000, "Member 'MusicPlayer_C_Update_Menu_Settings::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Update_Menu_Settings, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'MusicPlayer_C_Update_Menu_Settings::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Update_Menu_Settings, CallFunc_Array_Get_Item) == 0x000018, "Member 'MusicPlayer_C_Update_Menu_Settings::CallFunc_Array_Get_Item' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Get_TBSongName_Text_0
// 0x0050 (0x0050 - 0x0000)
struct MusicPlayer_C_Get_TBSongName_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3508[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(MusicPlayer_C_Get_TBSongName_Text_0) == 0x000008, "Wrong alignment on MusicPlayer_C_Get_TBSongName_Text_0");
static_assert(sizeof(MusicPlayer_C_Get_TBSongName_Text_0) == 0x000050, "Wrong size on MusicPlayer_C_Get_TBSongName_Text_0");
static_assert(offsetof(MusicPlayer_C_Get_TBSongName_Text_0, ReturnValue) == 0x000000, "Member 'MusicPlayer_C_Get_TBSongName_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_TBSongName_Text_0, CallFunc_Get_Music_AC_MusicAC) == 0x000018, "Member 'MusicPlayer_C_Get_TBSongName_Text_0::CallFunc_Get_Music_AC_MusicAC' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_TBSongName_Text_0, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'MusicPlayer_C_Get_TBSongName_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_TBSongName_Text_0, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'MusicPlayer_C_Get_TBSongName_Text_0::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_TBSongName_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'MusicPlayer_C_Get_TBSongName_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Get Song Progress
// 0x0018 (0x0018 - 0x0000)
struct MusicPlayer_C_Get_Song_Progress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3509[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350A[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicPlayer_C_Get_Song_Progress) == 0x000008, "Wrong alignment on MusicPlayer_C_Get_Song_Progress");
static_assert(sizeof(MusicPlayer_C_Get_Song_Progress) == 0x000018, "Wrong size on MusicPlayer_C_Get_Song_Progress");
static_assert(offsetof(MusicPlayer_C_Get_Song_Progress, ReturnValue) == 0x000000, "Member 'MusicPlayer_C_Get_Song_Progress::ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_Song_Progress, CallFunc_Get_Music_AC_MusicAC) == 0x000008, "Member 'MusicPlayer_C_Get_Song_Progress::CallFunc_Get_Music_AC_MusicAC' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_Song_Progress, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MusicPlayer_C_Get_Song_Progress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_Song_Progress, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'MusicPlayer_C_Get_Song_Progress::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_Song_Progress, CallFunc_GetValue_ReturnValue) == 0x000014, "Member 'MusicPlayer_C_Get_Song_Progress::CallFunc_GetValue_ReturnValue' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Get Music AC
// 0x0010 (0x0010 - 0x0000)
struct MusicPlayer_C_Get_Music_AC final
{
public:
	class UAudioComponent*                        MusicAC;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicPlayer_C_Get_Music_AC) == 0x000008, "Wrong alignment on MusicPlayer_C_Get_Music_AC");
static_assert(sizeof(MusicPlayer_C_Get_Music_AC) == 0x000010, "Wrong size on MusicPlayer_C_Get_Music_AC");
static_assert(offsetof(MusicPlayer_C_Get_Music_AC, MusicAC) == 0x000000, "Member 'MusicPlayer_C_Get_Music_AC::MusicAC' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_Music_AC, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'MusicPlayer_C_Get_Music_AC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Get_Music_AC, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'MusicPlayer_C_Get_Music_AC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function MusicPlayer.MusicPlayer_C.Play Music
// 0x0018 (0x0018 - 0x0000)
struct MusicPlayer_C_Play_Music final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_350B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Get_Music_AC_MusicAC;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicPlayer_C_Play_Music) == 0x000008, "Wrong alignment on MusicPlayer_C_Play_Music");
static_assert(sizeof(MusicPlayer_C_Play_Music) == 0x000018, "Wrong size on MusicPlayer_C_Play_Music");
static_assert(offsetof(MusicPlayer_C_Play_Music, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'MusicPlayer_C_Play_Music::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Play_Music, CallFunc_Get_Music_AC_MusicAC) == 0x000008, "Member 'MusicPlayer_C_Play_Music::CallFunc_Get_Music_AC_MusicAC' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Play_Music, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MusicPlayer_C_Play_Music::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicPlayer_C_Play_Music, CallFunc_IsPlaying_ReturnValue) == 0x000011, "Member 'MusicPlayer_C_Play_Music::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

}


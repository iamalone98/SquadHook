#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Setting_Button

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ButtonLineSide_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Setting_Button.Setting_Button_C
// 0x01F8 (0x0458 - 0x0260)
class USetting_Button_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Press;                                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BottomLine;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxMain;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IconScaleBox;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftLine;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LineParent;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MyIcon;                                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightLine;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Bold;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Main;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Bold;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EHorizontalAlignment                          BoxAlignment;                                      // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EButtonLineSide                               Line_Position;                                     // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Line;                                          // 0x02D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E0[0x1];                                     // 0x02D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RegularColor;                                      // 0x02D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E1[0x4];                                     // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLinearColor                           SelectedColor;                                     // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredColor;                                      // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedHoveredColor;                              // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelected;                                         // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsToggle;                                         // 0x032A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E2[0x5];                                     // 0x032B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHover;                                           // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Use_Icon;                                          // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Bold_Text;                                         // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E3[0x6];                                     // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon_Image;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Icon_Size;                                         // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E4[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Icon_Color;                                        // 0x0358(0x0028)(Edit, BlueprintVisible)
	class FText                                   Display_Text;                                      // 0x0380(0x0018)(Edit, BlueprintVisible)
	int32                                         Text_Size;                                         // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Text_Padding_Amount;                               // 0x039C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                Button_Padding;                                    // 0x03AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Text_Normal;                                       // 0x03BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Toggle_Normal;                                // 0x03CC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Selected;                                     // 0x03DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Hovered;                                      // 0x03EC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Text_Selected_Hovered;                             // 0x03FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Color;                                        // 0x040C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Hover_Color;                                  // 0x041C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Line_Unhover_Color;                                // 0x042C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31E5[0x4];                                     // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDoubleClicked;                                   // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Last_Click_Time;                                   // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnClicked__DelegateSignature(bool Param_bSelected, class USetting_Button_C* Param_Button);
	void OnHover__DelegateSignature(bool Param_bHovered);
	void OnDoubleClicked__DelegateSignature();
	void ExecuteUbergraph_Setting_Button(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetSelected(bool Param_bSelected);
	void UpdateColors();
	void SetText(const class FText& Text);
	struct FLinearColor Bind_LineColor();
	struct FSlateColor Bind_TextColor();
	void Update_Button();
	void Setup_Button();
	void Refresh_Line();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Setting_Button_C">();
	}
	static class USetting_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetting_Button_C>();
	}
};
static_assert(alignof(USetting_Button_C) == 0x000008, "Wrong alignment on USetting_Button_C");
static_assert(sizeof(USetting_Button_C) == 0x000458, "Wrong size on USetting_Button_C");
static_assert(offsetof(USetting_Button_C, UberGraphFrame) == 0x000260, "Member 'USetting_Button_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Press) == 0x000268, "Member 'USetting_Button_C::Press' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, BottomLine) == 0x000270, "Member 'USetting_Button_C::BottomLine' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Button) == 0x000278, "Member 'USetting_Button_C::Button' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, HorizontalBoxMain) == 0x000280, "Member 'USetting_Button_C::HorizontalBoxMain' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, IconScaleBox) == 0x000288, "Member 'USetting_Button_C::IconScaleBox' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, LeftLine) == 0x000290, "Member 'USetting_Button_C::LeftLine' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, LineParent) == 0x000298, "Member 'USetting_Button_C::LineParent' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, MyIcon) == 0x0002A0, "Member 'USetting_Button_C::MyIcon' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, RightLine) == 0x0002A8, "Member 'USetting_Button_C::RightLine' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, TB_Bold) == 0x0002B0, "Member 'USetting_Button_C::TB_Bold' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, TB_Main) == 0x0002B8, "Member 'USetting_Button_C::TB_Main' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, TopLine) == 0x0002C0, "Member 'USetting_Button_C::TopLine' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, WidgetSwitcher_Bold) == 0x0002C8, "Member 'USetting_Button_C::WidgetSwitcher_Bold' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, BoxAlignment) == 0x0002D0, "Member 'USetting_Button_C::BoxAlignment' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Line_Position) == 0x0002D1, "Member 'USetting_Button_C::Line_Position' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Use_Line) == 0x0002D2, "Member 'USetting_Button_C::Use_Line' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, RegularColor) == 0x0002D4, "Member 'USetting_Button_C::RegularColor' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, OnClicked) == 0x0002E8, "Member 'USetting_Button_C::OnClicked' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, SelectedColor) == 0x0002F8, "Member 'USetting_Button_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, HoveredColor) == 0x000308, "Member 'USetting_Button_C::HoveredColor' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, SelectedHoveredColor) == 0x000318, "Member 'USetting_Button_C::SelectedHoveredColor' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, bHovered) == 0x000328, "Member 'USetting_Button_C::bHovered' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, bSelected) == 0x000329, "Member 'USetting_Button_C::bSelected' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, bIsToggle) == 0x00032A, "Member 'USetting_Button_C::bIsToggle' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, OnHover) == 0x000330, "Member 'USetting_Button_C::OnHover' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Use_Icon) == 0x000340, "Member 'USetting_Button_C::Use_Icon' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Bold_Text) == 0x000341, "Member 'USetting_Button_C::Bold_Text' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Icon_Image) == 0x000348, "Member 'USetting_Button_C::Icon_Image' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Icon_Size) == 0x000350, "Member 'USetting_Button_C::Icon_Size' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Icon_Color) == 0x000358, "Member 'USetting_Button_C::Icon_Color' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Display_Text) == 0x000380, "Member 'USetting_Button_C::Display_Text' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Text_Size) == 0x000398, "Member 'USetting_Button_C::Text_Size' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Text_Padding_Amount) == 0x00039C, "Member 'USetting_Button_C::Text_Padding_Amount' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Button_Padding) == 0x0003AC, "Member 'USetting_Button_C::Button_Padding' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Text_Normal) == 0x0003BC, "Member 'USetting_Button_C::Text_Normal' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Text_Toggle_Normal) == 0x0003CC, "Member 'USetting_Button_C::Text_Toggle_Normal' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Text_Selected) == 0x0003DC, "Member 'USetting_Button_C::Text_Selected' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Text_Hovered) == 0x0003EC, "Member 'USetting_Button_C::Text_Hovered' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Text_Selected_Hovered) == 0x0003FC, "Member 'USetting_Button_C::Text_Selected_Hovered' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Line_Color) == 0x00040C, "Member 'USetting_Button_C::Line_Color' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Line_Hover_Color) == 0x00041C, "Member 'USetting_Button_C::Line_Hover_Color' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Line_Unhover_Color) == 0x00042C, "Member 'USetting_Button_C::Line_Unhover_Color' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, OnDoubleClicked) == 0x000440, "Member 'USetting_Button_C::OnDoubleClicked' has a wrong offset!");
static_assert(offsetof(USetting_Button_C, Last_Click_Time) == 0x000450, "Member 'USetting_Button_C::Last_Click_Time' has a wrong offset!");

}


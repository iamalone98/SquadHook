#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteLayer

#include "Basic.hpp"

#include "UMG_VoteBase_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_VoteLayer.UMG_VoteLayer_C
// 0x0040 (0x02B0 - 0x0270)
class UUMG_VoteLayer_C final : public UUMG_VoteBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UMG_VoteLayer_C;                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HB1;                                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB2;                                               // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UUMG_VoteItem_C*>                ChoicesWidgets;                                    // 0x0288(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class USQVoteSessionClient*                   VoteSessionRef;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             LayerInfoRequested;                                // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void LayerInfoRequested__DelegateSignature(class FName LayerID);
	void ExecuteUbergraph_UMG_VoteLayer(int32 EntryPoint);
	void OnVoteUpdatedByID(class FName ChoiceId);
	void OnSetup(const class FText& TeamName, class FName Param_PlayerName);
	void SetVoteScreenActive(bool Activated);
	void OnVoteEnded(class USQVoteSessionClient* VoteSession, const struct FSQChoice& Winner);
	void OnVoteUpdated(class USQVoteSessionClient* VoteSession, int32 PlayerCurrentVoteCount);
	void OnVoteStarted(class USQVoteSessionClient* VoteSession, bool VotePossible);
	void Generate_Items(class USQVoteSessionClient* Vote_Session);
	void Update_Choices(class USQVoteSessionClient* Vote_Session, int32 Player_Current_Vote_Count);
	void Display_Result(class USQVoteSession* VoteSession, const struct FSQChoice& SQChoice);
	void OnChoiceSelected(class FName Choice);
	void UpdateChoiceByID(class FName ChoiceId);
	void OnInfoSelected(class FName ChoiceId);
	void GetLayerInfo(class UBP_SQLayer_C* InLayer, class FText* DisplayName, TSoftObjectPtr<class UTexture2D>* Thumbnail);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_VoteLayer_C">();
	}
	static class UUMG_VoteLayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_VoteLayer_C>();
	}
};
static_assert(alignof(UUMG_VoteLayer_C) == 0x000008, "Wrong alignment on UUMG_VoteLayer_C");
static_assert(sizeof(UUMG_VoteLayer_C) == 0x0002B0, "Wrong size on UUMG_VoteLayer_C");
static_assert(offsetof(UUMG_VoteLayer_C, UberGraphFrame_UMG_VoteLayer_C) == 0x000270, "Member 'UUMG_VoteLayer_C::UberGraphFrame_UMG_VoteLayer_C' has a wrong offset!");
static_assert(offsetof(UUMG_VoteLayer_C, HB1) == 0x000278, "Member 'UUMG_VoteLayer_C::HB1' has a wrong offset!");
static_assert(offsetof(UUMG_VoteLayer_C, HB2) == 0x000280, "Member 'UUMG_VoteLayer_C::HB2' has a wrong offset!");
static_assert(offsetof(UUMG_VoteLayer_C, ChoicesWidgets) == 0x000288, "Member 'UUMG_VoteLayer_C::ChoicesWidgets' has a wrong offset!");
static_assert(offsetof(UUMG_VoteLayer_C, VoteSessionRef) == 0x000298, "Member 'UUMG_VoteLayer_C::VoteSessionRef' has a wrong offset!");
static_assert(offsetof(UUMG_VoteLayer_C, LayerInfoRequested) == 0x0002A0, "Member 'UUMG_VoteLayer_C::LayerInfoRequested' has a wrong offset!");

}


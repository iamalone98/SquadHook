#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQAvailability_Deployable

#include "Basic.hpp"

#include "BP_SQAvailability_Deployable_classes.hpp"
#include "BP_SQAvailability_Deployable_parameters.hpp"


namespace SDK
{

// Function BP_SQAvailability_Deployable.BP_SQAvailability_Deployable_C.GetRefundPercentage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_SQAvailability_Deployable_C::GetRefundPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQAvailability_Deployable_C", "GetRefundPercentage");

	Params::BP_SQAvailability_Deployable_C_GetRefundPercentage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SQAvailability_Deployable.BP_SQAvailability_Deployable_C.GetAvailabilityForPlayer
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ASQPlayerController*              InPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSQAvailabilityState             InTeamStatus                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FSQAvailabilityState             OutPlayerStatus                                        (Parm, OutParm)

void UBP_SQAvailability_Deployable_C::GetAvailabilityForPlayer(class ASQPlayerController* InPlayer, const struct FSQAvailabilityState& InTeamStatus, struct FSQAvailabilityState* OutPlayerStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQAvailability_Deployable_C", "GetAvailabilityForPlayer");

	Params::BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer Parms{};

	Parms.InPlayer = InPlayer;
	Parms.InTeamStatus = std::move(InTeamStatus);

	UObject::ProcessEvent(Func, &Parms);

	if (OutPlayerStatus != nullptr)
		*OutPlayerStatus = std::move(Parms.OutPlayerStatus);
}

}


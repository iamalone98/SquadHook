#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarkerWidget_CaptureZoneTC

#include "Basic.hpp"

#include "BP_MarkerWidget_CaptureZoneTC_classes.hpp"
#include "BP_MarkerWidget_CaptureZoneTC_parameters.hpp"


namespace SDK
{

// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.CloseTooltip__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::CloseTooltip__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "CloseTooltip__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MarkerWidget_CaptureZoneTC_C::ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC");

	Params::BP_MarkerWidget_CaptureZoneTC_C_ExecuteUbergraph_BP_MarkerWidget_CaptureZoneTC Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Stop Timer Update Hex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUMG_MenuBase_C*                  Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MarkerWidget_CaptureZoneTC_C::Stop_Timer_Update_Hex(class UUMG_MenuBase_C* Menu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Stop Timer Update Hex");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Stop_Timer_Update_Hex Parms{};

	Parms.Menu = Menu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Start Timer Update Hex
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUMG_MenuBase_C*                  Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MarkerWidget_CaptureZoneTC_C::Start_Timer_Update_Hex(class UUMG_MenuBase_C* Menu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Start Timer Update Hex");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Start_Timer_Update_Hex Parms{};

	Parms.Menu = Menu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.UpdateState
// (BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::UpdateState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "UpdateState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Play Capture Fade Animation
// (BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Play_Capture_Fade_Animation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Play Capture Fade Animation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.OnCapturePercentChanged
// (Event, Protected, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::OnCapturePercentChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "OnCapturePercentChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Reset Hex Opacity
// (BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Reset_Hex_Opacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Reset Hex Opacity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Set Name Via Grid Ref
// (BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Set_Name_Via_Grid_Ref()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Set Name Via Grid Ref");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.OnScaleChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   UniformScale                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MarkerWidget_CaptureZoneTC_C::OnScaleChanged(float UniformScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "OnScaleChanged");

	Params::BP_MarkerWidget_CaptureZoneTC_C_OnScaleChanged Parms{};

	Parms.UniformScale = UniformScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.OnFlagNameChanged
// (Event, Protected, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::OnFlagNameChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "OnFlagNameChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MarkerWidget_CaptureZoneTC_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Tick");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Widget
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Update_Widget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Update Widget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Hex Color
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Update_Hex_Color()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Update Hex Color");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Capture Bar
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Update_Capture_Bar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Update Capture Bar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Same Team
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Same                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MarkerWidget_CaptureZoneTC_C::Get_Same_Team(bool* Same)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Get Same Team");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Get_Same_Team Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Same != nullptr)
		*Same = Parms.Same;
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Can Cap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATC_HexZone_C*                    Zone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Self_Team                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_Can_Cap                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MarkerWidget_CaptureZoneTC_C::Can_Cap(class ATC_HexZone_C* Zone, bool Self_Team, bool* Param_Can_Cap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Can Cap");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Can_Cap Parms{};

	Parms.Zone = Zone;
	Parms.Self_Team = Self_Team;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Can_Cap != nullptr)
		*Param_Can_Cap = Parms.Param_Can_Cap;
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Anchor Visual
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Update_Anchor_Visual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Update Anchor Visual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Hex Zone
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Get_Hex_Zone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Get Hex Zone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Nearby Zones
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Team_1_Nearby                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Team_2_Nearby                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MarkerWidget_CaptureZoneTC_C::Nearby_Zones(bool* Team_1_Nearby, bool* Team_2_Nearby)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Nearby Zones");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Nearby_Zones Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Team_1_Nearby != nullptr)
		*Team_1_Nearby = Parms.Team_1_Nearby;

	if (Team_2_Nearby != nullptr)
		*Team_2_Nearby = Parms.Team_2_Nearby;
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Frontline
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Update_Frontline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Update Frontline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Owner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATC_HexZone_C*                    Zone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Friendly                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Neutral                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MarkerWidget_CaptureZoneTC_C::Get_Owner(class ATC_HexZone_C* Zone, bool* Friendly, bool* Enemy, bool* Neutral)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Get Owner");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Get_Owner Parms{};

	Parms.Zone = Zone;

	UObject::ProcessEvent(Func, &Parms);

	if (Friendly != nullptr)
		*Friendly = Parms.Friendly;

	if (Enemy != nullptr)
		*Enemy = Parms.Enemy;

	if (Neutral != nullptr)
		*Neutral = Parms.Neutral;
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Captor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATC_HexZone_C*                    Zone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Friendly                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Neutral                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MarkerWidget_CaptureZoneTC_C::Get_Captor(class ATC_HexZone_C* Zone, bool* Friendly, bool* Enemy, bool* Neutral)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Get Captor");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Get_Captor Parms{};

	Parms.Zone = Zone;

	UObject::ProcessEvent(Func, &Parms);

	if (Friendly != nullptr)
		*Friendly = Parms.Friendly;

	if (Enemy != nullptr)
		*Enemy = Parms.Enemy;

	if (Neutral != nullptr)
		*Neutral = Parms.Neutral;
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Can Cap Team
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATC_HexZone_C*                    Zone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Friendly                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Neutral                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MarkerWidget_CaptureZoneTC_C::Get_Can_Cap_Team(class ATC_HexZone_C* Zone, bool* Friendly, bool* Enemy, bool* Neutral)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Get Can Cap Team");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Get_Can_Cap_Team Parms{};

	Parms.Zone = Zone;

	UObject::ProcessEvent(Func, &Parms);

	if (Friendly != nullptr)
		*Friendly = Parms.Friendly;

	if (Enemy != nullptr)
		*Enemy = Parms.Enemy;

	if (Neutral != nullptr)
		*Neutral = Parms.Neutral;
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Hex Owning Team
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Param_OwningTeam                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MarkerWidget_CaptureZoneTC_C::Get_Hex_Owning_Team(uint8* Param_OwningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Get Hex Owning Team");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Owning_Team Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_OwningTeam != nullptr)
		*Param_OwningTeam = Parms.Param_OwningTeam;
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get Hex Text
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_MarkerWidget_CaptureZoneTC_C::Get_Hex_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Get Hex Text");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Get_Hex_Text Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Get POI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_MarkerWidget_CaptureZoneTC_C::Get_POI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Get POI");

	Params::BP_MarkerWidget_CaptureZoneTC_C_Get_POI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Visibility from Save Data
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Update_Visibility_from_Save_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Update Visibility from Save Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Bind BPHUD Events
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Bind_BPHUD_Events()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Bind BPHUD Events");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Touching Start
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Update_Touching_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Update Touching Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarkerWidget_CaptureZoneTC.BP_MarkerWidget_CaptureZoneTC_C.Update Protected Visibility
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MarkerWidget_CaptureZoneTC_C::Update_Protected_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarkerWidget_CaptureZoneTC_C", "Update Protected Visibility");

	UObject::ProcessEvent(Func, nullptr);
}

}


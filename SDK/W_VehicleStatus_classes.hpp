#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VehicleStatus

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_VehicleStatus.W_VehicleStatus_C
// 0x0058 (0x02B8 - 0x0260)
class UW_VehicleStatus_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AmmoCookingWarning;                                // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                           HealthBar;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_GenericState_C*                    State_AmmoHealth;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_GenericState_C*                    State_EngineHealth;                                // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_GenericState_C*                    State_TrackHealth;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_GenericState_C*                    State_TurretHealth;                                // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                VehicleHealth;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ASQVehicle*                             REF_Vehicle;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    My_PC;                                             // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_VehicleStatus(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Refresh_Vehicle();
	void Construct();
	void Get_Vehicle();
	float Get_VehicleHealthPercent();
	void Update_Engine_State();
	void Update_Ammo_State();
	void Wheel_State();
	void Update_Turret_State();
	void VehicleHealthColor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_VehicleStatus_C">();
	}
	static class UW_VehicleStatus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_VehicleStatus_C>();
	}
};
static_assert(alignof(UW_VehicleStatus_C) == 0x000008, "Wrong alignment on UW_VehicleStatus_C");
static_assert(sizeof(UW_VehicleStatus_C) == 0x0002B8, "Wrong size on UW_VehicleStatus_C");
static_assert(offsetof(UW_VehicleStatus_C, UberGraphFrame) == 0x000260, "Member 'UW_VehicleStatus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, AmmoCookingWarning) == 0x000268, "Member 'UW_VehicleStatus_C::AmmoCookingWarning' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, HealthBar) == 0x000270, "Member 'UW_VehicleStatus_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, Image_0) == 0x000278, "Member 'UW_VehicleStatus_C::Image_0' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, State_AmmoHealth) == 0x000280, "Member 'UW_VehicleStatus_C::State_AmmoHealth' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, State_EngineHealth) == 0x000288, "Member 'UW_VehicleStatus_C::State_EngineHealth' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, State_TrackHealth) == 0x000290, "Member 'UW_VehicleStatus_C::State_TrackHealth' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, State_TurretHealth) == 0x000298, "Member 'UW_VehicleStatus_C::State_TurretHealth' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, VehicleHealth) == 0x0002A0, "Member 'UW_VehicleStatus_C::VehicleHealth' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, REF_Vehicle) == 0x0002A8, "Member 'UW_VehicleStatus_C::REF_Vehicle' has a wrong offset!");
static_assert(offsetof(UW_VehicleStatus_C, My_PC) == 0x0002B0, "Member 'UW_VehicleStatus_C::My_PC' has a wrong offset!");

}


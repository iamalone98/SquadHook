#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TireFire

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Deployable_classes.hpp"
#include "Squad_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TireFire.BP_TireFire_C
// 0x0098 (0x04D8 - 0x0440)
class ABP_TireFire_C final : public ABP_Deployable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_TireFire_C;                      // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USQMovementAdjustmentComponent*         SQMovementAdjustment1;                             // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OilDrum;                                           // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FireEffect;                                        // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        burning_vehicle_large_loop_01;                     // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fire_LightOnly;                                    // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal2;                                            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal1;                                            // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_TyrePile_v5_Full;                               // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_TyrePile_v5_Mid;                                // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_TyrePile_v5_Low;                                // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQMovementAdjustmentComponent*         SQMovementAdjustment;                              // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQPainCausingVolumeComponent*          SQPainCausingVolume;                               // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractZone;                                      // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ConstructionBox;                                   // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FadeAudio_Fade_1FAE54DC412D9D723A3C0690D6D8E41B;   // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FadeAudio__Direction_1FAE54DC412D9D723A3C0690D6D8E41B; // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FCC[0x3];                                     // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FadeAudio;                                         // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EffectWeight;                                      // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TireFire(int32 EntryPoint);
	void ReceiveBeginPlay();
	void BP_OnStateChangeClient(ESQBuildState OldBuildState);
	void FadeAudio__UpdateFunc();
	void FadeAudio__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TireFire_C">();
	}
	static class ABP_TireFire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TireFire_C>();
	}
};
static_assert(alignof(ABP_TireFire_C) == 0x000008, "Wrong alignment on ABP_TireFire_C");
static_assert(sizeof(ABP_TireFire_C) == 0x0004D8, "Wrong size on ABP_TireFire_C");
static_assert(offsetof(ABP_TireFire_C, UberGraphFrame_BP_TireFire_C) == 0x000440, "Member 'ABP_TireFire_C::UberGraphFrame_BP_TireFire_C' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, SQMovementAdjustment1) == 0x000448, "Member 'ABP_TireFire_C::SQMovementAdjustment1' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, OilDrum) == 0x000450, "Member 'ABP_TireFire_C::OilDrum' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, FireEffect) == 0x000458, "Member 'ABP_TireFire_C::FireEffect' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, burning_vehicle_large_loop_01) == 0x000460, "Member 'ABP_TireFire_C::burning_vehicle_large_loop_01' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, Fire_LightOnly) == 0x000468, "Member 'ABP_TireFire_C::Fire_LightOnly' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, Decal2) == 0x000470, "Member 'ABP_TireFire_C::Decal2' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, Decal1) == 0x000478, "Member 'ABP_TireFire_C::Decal1' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, SM_TyrePile_v5_Full) == 0x000480, "Member 'ABP_TireFire_C::SM_TyrePile_v5_Full' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, SM_TyrePile_v5_Mid) == 0x000488, "Member 'ABP_TireFire_C::SM_TyrePile_v5_Mid' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, SM_TyrePile_v5_Low) == 0x000490, "Member 'ABP_TireFire_C::SM_TyrePile_v5_Low' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, Decal) == 0x000498, "Member 'ABP_TireFire_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, SQMovementAdjustment) == 0x0004A0, "Member 'ABP_TireFire_C::SQMovementAdjustment' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, SQPainCausingVolume) == 0x0004A8, "Member 'ABP_TireFire_C::SQPainCausingVolume' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, InteractZone) == 0x0004B0, "Member 'ABP_TireFire_C::InteractZone' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, ConstructionBox) == 0x0004B8, "Member 'ABP_TireFire_C::ConstructionBox' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, FadeAudio_Fade_1FAE54DC412D9D723A3C0690D6D8E41B) == 0x0004C0, "Member 'ABP_TireFire_C::FadeAudio_Fade_1FAE54DC412D9D723A3C0690D6D8E41B' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, FadeAudio__Direction_1FAE54DC412D9D723A3C0690D6D8E41B) == 0x0004C4, "Member 'ABP_TireFire_C::FadeAudio__Direction_1FAE54DC412D9D723A3C0690D6D8E41B' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, FadeAudio) == 0x0004C8, "Member 'ABP_TireFire_C::FadeAudio' has a wrong offset!");
static_assert(offsetof(ABP_TireFire_C, EffectWeight) == 0x0004D0, "Member 'ABP_TireFire_C::EffectWeight' has a wrong offset!");

}


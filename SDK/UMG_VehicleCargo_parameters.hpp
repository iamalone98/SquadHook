#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VehicleCargo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UMG_VehicleCargo.UMG_VehicleCargo_C.ExecuteUbergraph_UMG_VehicleCargo
// 0x0040 (0x0040 - 0x0000)
struct UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FE[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQVehicle* VehicleRef)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo) == 0x000008, "Wrong alignment on UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo");
static_assert(sizeof(UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo) == 0x000040, "Wrong size on UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo");
static_assert(offsetof(UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo, EntryPoint) == 0x000000, "Member 'UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000020, "Member 'UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'UMG_VehicleCargo_C_ExecuteUbergraph_UMG_VehicleCargo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function UMG_VehicleCargo.UMG_VehicleCargo_C.Refresh Info
// 0x01E8 (0x01E8 - 0x0000)
struct UMG_VehicleCargo_C_Refresh_Info final
{
public:
	bool                                          bIsRefreshInfoBound;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35FF[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3600[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0060(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0078(0x0018)()
	float                                         CallFunc_ValueSizeBox_Size;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ValueSizeBox_Size_1;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00A8(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0130(0x0088)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x01B8(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalSharedResourceAmount_ReturnValue; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleCargo_C_Refresh_Info) == 0x000008, "Wrong alignment on UMG_VehicleCargo_C_Refresh_Info");
static_assert(sizeof(UMG_VehicleCargo_C_Refresh_Info) == 0x0001E8, "Wrong size on UMG_VehicleCargo_C_Refresh_Info");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, bIsRefreshInfoBound) == 0x000000, "Member 'UMG_VehicleCargo_C_Refresh_Info::bIsRefreshInfoBound' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, Temp_byte_Variable) == 0x000001, "Member 'UMG_VehicleCargo_C_Refresh_Info::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, Temp_byte_Variable_1) == 0x000002, "Member 'UMG_VehicleCargo_C_Refresh_Info::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, Temp_bool_Variable) == 0x000003, "Member 'UMG_VehicleCargo_C_Refresh_Info::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, Temp_byte_Variable_2) == 0x000004, "Member 'UMG_VehicleCargo_C_Refresh_Info::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, Temp_byte_Variable_3) == 0x000005, "Member 'UMG_VehicleCargo_C_Refresh_Info::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'UMG_VehicleCargo_C_Refresh_Info::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'UMG_VehicleCargo_C_Refresh_Info::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, Temp_bool_Variable_1) == 0x000058, "Member 'UMG_VehicleCargo_C_Refresh_Info::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, K2Node_Select_Default) == 0x000059, "Member 'UMG_VehicleCargo_C_Refresh_Info::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, K2Node_Select_Default_1) == 0x00005A, "Member 'UMG_VehicleCargo_C_Refresh_Info::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_Conv_FloatToText_ReturnValue) == 0x000060, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000078, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_ValueSizeBox_Size) == 0x000090, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_ValueSizeBox_Size' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_ValueSizeBox_Size_1) == 0x000094, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_ValueSizeBox_Size_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_MakeVector2D_ReturnValue) == 0x000098, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A0, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, K2Node_MakeStruct_SlateBrush) == 0x0000A8, "Member 'UMG_VehicleCargo_C_Refresh_Info::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, K2Node_MakeStruct_SlateBrush_1) == 0x000130, "Member 'UMG_VehicleCargo_C_Refresh_Info::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x0001B8, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001D0, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0001D4, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_GetTotalSharedResourceAmount_ReturnValue) == 0x0001D8, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_GetTotalSharedResourceAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0001DC, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Refresh_Info, CallFunc_IsValid_ReturnValue) == 0x0001E0, "Member 'UMG_VehicleCargo_C_Refresh_Info::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UMG_VehicleCargo.UMG_VehicleCargo_C.Set Name
// 0x0010 (0x0010 - 0x0000)
struct UMG_VehicleCargo_C_Set_Name final
{
public:
	class USQVehicleInventoryComponent*           CallFunc_GetSeatPawnInventory_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleCargo_C_Set_Name) == 0x000008, "Wrong alignment on UMG_VehicleCargo_C_Set_Name");
static_assert(sizeof(UMG_VehicleCargo_C_Set_Name) == 0x000010, "Wrong size on UMG_VehicleCargo_C_Set_Name");
static_assert(offsetof(UMG_VehicleCargo_C_Set_Name, CallFunc_GetSeatPawnInventory_ReturnValue) == 0x000000, "Member 'UMG_VehicleCargo_C_Set_Name::CallFunc_GetSeatPawnInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Set_Name, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UMG_VehicleCargo_C_Set_Name::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_Set_Name, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'UMG_VehicleCargo_C_Set_Name::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UMG_VehicleCargo.UMG_VehicleCargo_C.SetupUI
// 0x0050 (0x0050 - 0x0000)
struct UMG_VehicleCargo_C_SetupUI final
{
public:
	class ASQVehicle*                             VehicleRef;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleInventoryComponent*           CallFunc_GetVehicleInventory_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleResourceWeaponInventoryComponent* K2Node_DynamicCast_AsSQVehicle_Resource_Weapon_Inventory_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3601[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleResource*                     CallFunc_FindConstructionWeapon_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3602[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleResource*                     CallFunc_FindAmmoWeapon_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3603[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UMG_VehicleCargo_C_SetupUI) == 0x000008, "Wrong alignment on UMG_VehicleCargo_C_SetupUI");
static_assert(sizeof(UMG_VehicleCargo_C_SetupUI) == 0x000050, "Wrong size on UMG_VehicleCargo_C_SetupUI");
static_assert(offsetof(UMG_VehicleCargo_C_SetupUI, VehicleRef) == 0x000000, "Member 'UMG_VehicleCargo_C_SetupUI::VehicleRef' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_SetupUI, CallFunc_GetVehicleInventory_ReturnValue) == 0x000008, "Member 'UMG_VehicleCargo_C_SetupUI::CallFunc_GetVehicleInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_SetupUI, K2Node_DynamicCast_AsSQVehicle_Resource_Weapon_Inventory_Component) == 0x000010, "Member 'UMG_VehicleCargo_C_SetupUI::K2Node_DynamicCast_AsSQVehicle_Resource_Weapon_Inventory_Component' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_SetupUI, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UMG_VehicleCargo_C_SetupUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_SetupUI, CallFunc_FindConstructionWeapon_ReturnValue) == 0x000020, "Member 'UMG_VehicleCargo_C_SetupUI::CallFunc_FindConstructionWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_SetupUI, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'UMG_VehicleCargo_C_SetupUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_SetupUI, CallFunc_FindAmmoWeapon_ReturnValue) == 0x000030, "Member 'UMG_VehicleCargo_C_SetupUI::CallFunc_FindAmmoWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_SetupUI, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'UMG_VehicleCargo_C_SetupUI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_SetupUI, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'UMG_VehicleCargo_C_SetupUI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function UMG_VehicleCargo.UMG_VehicleCargo_C.DisableUI
// 0x0020 (0x0020 - 0x0000)
struct UMG_VehicleCargo_C_DisableUI final
{
public:
	class ASQVehicle*                             CachedVehicleRef;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3604[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UMG_VehicleCargo_C_DisableUI) == 0x000008, "Wrong alignment on UMG_VehicleCargo_C_DisableUI");
static_assert(sizeof(UMG_VehicleCargo_C_DisableUI) == 0x000020, "Wrong size on UMG_VehicleCargo_C_DisableUI");
static_assert(offsetof(UMG_VehicleCargo_C_DisableUI, CachedVehicleRef) == 0x000000, "Member 'UMG_VehicleCargo_C_DisableUI::CachedVehicleRef' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_DisableUI, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UMG_VehicleCargo_C_DisableUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_DisableUI, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'UMG_VehicleCargo_C_DisableUI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function UMG_VehicleCargo.UMG_VehicleCargo_C.ValueSizeBox
// 0x0014 (0x0014 - 0x0000)
struct UMG_VehicleCargo_C_ValueSizeBox final
{
public:
	float                                         InPoints;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3605[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleCargo_C_ValueSizeBox) == 0x000004, "Wrong alignment on UMG_VehicleCargo_C_ValueSizeBox");
static_assert(sizeof(UMG_VehicleCargo_C_ValueSizeBox) == 0x000014, "Wrong size on UMG_VehicleCargo_C_ValueSizeBox");
static_assert(offsetof(UMG_VehicleCargo_C_ValueSizeBox, InPoints) == 0x000000, "Member 'UMG_VehicleCargo_C_ValueSizeBox::InPoints' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ValueSizeBox, Size) == 0x000004, "Member 'UMG_VehicleCargo_C_ValueSizeBox::Size' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ValueSizeBox, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'UMG_VehicleCargo_C_ValueSizeBox::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ValueSizeBox, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'UMG_VehicleCargo_C_ValueSizeBox::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleCargo_C_ValueSizeBox, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'UMG_VehicleCargo_C_ValueSizeBox::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}


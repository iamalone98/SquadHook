#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BRDMMinus2_periscope

#include "Basic.hpp"

#include "BP_BTR80_RUS_Periscope_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BRDM-2_periscope.BP_BRDM-2_periscope_C
// 0x0010 (0x04C0 - 0x04B0)
class ABP_BRDMMinus2_periscope_C : public ABP_BTR80_RUS_Periscope_C
{
public:
	float                                         MaxRotationSpeed;                                  // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         RotationSpeedMultiplier;                           // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         ElevationSpeedMultiplier;                          // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         MaxElevationSpeed;                                 // 0x04B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	class USceneComponent* Get3PAttachComponent() const;
	class USceneComponent* Get1PAttachComponent() const;
	class USkinnedMeshComponent* GetMasterPoseComponent() const;
	class USceneComponent* GetWeaponAttachComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BRDM-2_periscope_C">();
	}
	static class ABP_BRDMMinus2_periscope_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BRDMMinus2_periscope_C>();
	}
};
static_assert(alignof(ABP_BRDMMinus2_periscope_C) == 0x000010, "Wrong alignment on ABP_BRDMMinus2_periscope_C");
static_assert(sizeof(ABP_BRDMMinus2_periscope_C) == 0x0004C0, "Wrong size on ABP_BRDMMinus2_periscope_C");
static_assert(offsetof(ABP_BRDMMinus2_periscope_C, MaxRotationSpeed) == 0x0004A8, "Member 'ABP_BRDMMinus2_periscope_C::MaxRotationSpeed' has a wrong offset!");
static_assert(offsetof(ABP_BRDMMinus2_periscope_C, RotationSpeedMultiplier) == 0x0004AC, "Member 'ABP_BRDMMinus2_periscope_C::RotationSpeedMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_BRDMMinus2_periscope_C, ElevationSpeedMultiplier) == 0x0004B0, "Member 'ABP_BRDMMinus2_periscope_C::ElevationSpeedMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_BRDMMinus2_periscope_C, MaxElevationSpeed) == 0x0004B4, "Member 'ABP_BRDMMinus2_periscope_C::MaxElevationSpeed' has a wrong offset!");

}


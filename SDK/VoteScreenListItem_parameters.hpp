#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VoteScreenListItem

#include "Basic.hpp"

#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function VoteScreenListItem.VoteScreenListItem_C.OnUpdate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VoteScreenListItem_C_OnUpdate__DelegateSignature final
{
public:
	int32                                         VoteCount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasVotedFor;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoteScreenListItem_C_OnUpdate__DelegateSignature) == 0x000004, "Wrong alignment on VoteScreenListItem_C_OnUpdate__DelegateSignature");
static_assert(sizeof(VoteScreenListItem_C_OnUpdate__DelegateSignature) == 0x000008, "Wrong size on VoteScreenListItem_C_OnUpdate__DelegateSignature");
static_assert(offsetof(VoteScreenListItem_C_OnUpdate__DelegateSignature, VoteCount) == 0x000000, "Member 'VoteScreenListItem_C_OnUpdate__DelegateSignature::VoteCount' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_OnUpdate__DelegateSignature, HasVotedFor) == 0x000004, "Member 'VoteScreenListItem_C_OnUpdate__DelegateSignature::HasVotedFor' has a wrong offset!");

// Function VoteScreenListItem.VoteScreenListItem_C.OnEnd__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct VoteScreenListItem_C_OnEnd__DelegateSignature final
{
public:
	bool                                          IsWinner;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VoteScreenListItem_C_OnEnd__DelegateSignature) == 0x000001, "Wrong alignment on VoteScreenListItem_C_OnEnd__DelegateSignature");
static_assert(sizeof(VoteScreenListItem_C_OnEnd__DelegateSignature) == 0x000001, "Wrong size on VoteScreenListItem_C_OnEnd__DelegateSignature");
static_assert(offsetof(VoteScreenListItem_C_OnEnd__DelegateSignature, IsWinner) == 0x000000, "Member 'VoteScreenListItem_C_OnEnd__DelegateSignature::IsWinner' has a wrong offset!");

// Function VoteScreenListItem.VoteScreenListItem_C.ExecuteUbergraph_VoteScreenListItem
// 0x0048 (0x0048 - 0x0000)
struct VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVoteSession*                         K2Node_CustomEvent_VoteSession_1;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerCurrentVotes;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C7[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVoteSession*                         K2Node_CustomEvent_VoteSession;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WinnerId;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQVoteSessionChoiceInfo               CallFunc_GetChoiceState_OutState;                  // 0x0028(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C8[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem) == 0x000008, "Wrong alignment on VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem");
static_assert(sizeof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem) == 0x000048, "Wrong size on VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem");
static_assert(offsetof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem, EntryPoint) == 0x000000, "Member 'VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem, K2Node_CustomEvent_VoteSession_1) == 0x000008, "Member 'VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem::K2Node_CustomEvent_VoteSession_1' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem, K2Node_CustomEvent_PlayerCurrentVotes) == 0x000010, "Member 'VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem::K2Node_CustomEvent_PlayerCurrentVotes' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem, K2Node_CustomEvent_VoteSession) == 0x000018, "Member 'VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem::K2Node_CustomEvent_VoteSession' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem, K2Node_CustomEvent_WinnerId) == 0x000020, "Member 'VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem::K2Node_CustomEvent_WinnerId' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem, CallFunc_GetChoiceState_OutState) == 0x000028, "Member 'VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem::CallFunc_GetChoiceState_OutState' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000040, "Member 'VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem, CallFunc_Array_Contains_ReturnValue) == 0x000041, "Member 'VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'VoteScreenListItem_C_ExecuteUbergraph_VoteScreenListItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function VoteScreenListItem.VoteScreenListItem_C.OnVoteEnded
// 0x0010 (0x0010 - 0x0000)
struct VoteScreenListItem_C_OnVoteEnded final
{
public:
	class USQVoteSession*                         Param_VoteSession;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   WinnerId;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoteScreenListItem_C_OnVoteEnded) == 0x000008, "Wrong alignment on VoteScreenListItem_C_OnVoteEnded");
static_assert(sizeof(VoteScreenListItem_C_OnVoteEnded) == 0x000010, "Wrong size on VoteScreenListItem_C_OnVoteEnded");
static_assert(offsetof(VoteScreenListItem_C_OnVoteEnded, Param_VoteSession) == 0x000000, "Member 'VoteScreenListItem_C_OnVoteEnded::Param_VoteSession' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_OnVoteEnded, WinnerId) == 0x000008, "Member 'VoteScreenListItem_C_OnVoteEnded::WinnerId' has a wrong offset!");

// Function VoteScreenListItem.VoteScreenListItem_C.OnVoteUpdated
// 0x0010 (0x0010 - 0x0000)
struct VoteScreenListItem_C_OnVoteUpdated final
{
public:
	class USQVoteSession*                         Param_VoteSession;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_PlayerCurrentVotes;                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoteScreenListItem_C_OnVoteUpdated) == 0x000008, "Wrong alignment on VoteScreenListItem_C_OnVoteUpdated");
static_assert(sizeof(VoteScreenListItem_C_OnVoteUpdated) == 0x000010, "Wrong size on VoteScreenListItem_C_OnVoteUpdated");
static_assert(offsetof(VoteScreenListItem_C_OnVoteUpdated, Param_VoteSession) == 0x000000, "Member 'VoteScreenListItem_C_OnVoteUpdated::Param_VoteSession' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_OnVoteUpdated, Param_PlayerCurrentVotes) == 0x000008, "Member 'VoteScreenListItem_C_OnVoteUpdated::Param_PlayerCurrentVotes' has a wrong offset!");

// Function VoteScreenListItem.VoteScreenListItem_C.SendVote
// 0x0030 (0x0030 - 0x0000)
struct VoteScreenListItem_C_SendVote final
{
public:
	bool                                          OutVotedDisplayStatus;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37C9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQVoteSessionChoiceInfo               CallFunc_GetChoiceState_OutState;                  // 0x0008(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VoteScreenListItem_C_SendVote) == 0x000008, "Wrong alignment on VoteScreenListItem_C_SendVote");
static_assert(sizeof(VoteScreenListItem_C_SendVote) == 0x000030, "Wrong size on VoteScreenListItem_C_SendVote");
static_assert(offsetof(VoteScreenListItem_C_SendVote, OutVotedDisplayStatus) == 0x000000, "Member 'VoteScreenListItem_C_SendVote::OutVotedDisplayStatus' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_SendVote, Temp_bool_Variable) == 0x000001, "Member 'VoteScreenListItem_C_SendVote::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_SendVote, CallFunc_Less_IntInt_ReturnValue) == 0x000002, "Member 'VoteScreenListItem_C_SendVote::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_SendVote, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'VoteScreenListItem_C_SendVote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_SendVote, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'VoteScreenListItem_C_SendVote::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_SendVote, CallFunc_GetChoiceState_OutState) == 0x000008, "Member 'VoteScreenListItem_C_SendVote::CallFunc_GetChoiceState_OutState' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_SendVote, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'VoteScreenListItem_C_SendVote::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_SendVote, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'VoteScreenListItem_C_SendVote::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_SendVote, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'VoteScreenListItem_C_SendVote::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VoteScreenListItem_C_SendVote, K2Node_Select_Default) == 0x00002C, "Member 'VoteScreenListItem_C_SendVote::K2Node_Select_Default' has a wrong offset!");

}


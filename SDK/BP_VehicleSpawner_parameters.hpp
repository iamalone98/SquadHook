#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleSpawner

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"
#include "Engine_structs.hpp"
#include "ESQVehicleSpawnerSize_structs.hpp"
#include "ESQVehicleTag_structs.hpp"


namespace SDK::Params
{

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.ExecuteUbergraph_BP_VehicleSpawner
// 0x0048 (0x0048 - 0x0000)
struct BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       CallFunc_GetTeam_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B06[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B07[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_Event_OutVehicle;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B08[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_CustomEvent_Vehicle;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B09[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQVehicle* Vehicle)>    K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B0A[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner");
static_assert(sizeof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner) == 0x000048, "Wrong size on BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, EntryPoint) == 0x000000, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, CallFunc_GetTeam_ReturnValue) == 0x000004, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, Temp_int_Variable) == 0x000008, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, K2Node_Event_OutVehicle) == 0x000010, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::K2Node_Event_OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, K2Node_CustomEvent_Vehicle) == 0x000020, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::K2Node_CustomEvent_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, CallFunc_IsServer_ReturnValue) == 0x000028, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, CallFunc_IsValid_ReturnValue_1) == 0x00003C, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_VehicleSpawner_C_ExecuteUbergraph_BP_VehicleSpawner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.OnNeutralVehicleDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleSpawner_C_OnNeutralVehicleDestroyed final
{
public:
	class ASQVehicle*                             Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_OnNeutralVehicleDestroyed) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_OnNeutralVehicleDestroyed");
static_assert(sizeof(BP_VehicleSpawner_C_OnNeutralVehicleDestroyed) == 0x000008, "Wrong size on BP_VehicleSpawner_C_OnNeutralVehicleDestroyed");
static_assert(offsetof(BP_VehicleSpawner_C_OnNeutralVehicleDestroyed, Vehicle) == 0x000000, "Member 'BP_VehicleSpawner_C_OnNeutralVehicleDestroyed::Vehicle' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.OnVehicleSpawned
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleSpawner_C_OnVehicleSpawned final
{
public:
	class ASQVehicle*                             OutVehicle;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_OnVehicleSpawned) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_OnVehicleSpawned");
static_assert(sizeof(BP_VehicleSpawner_C_OnVehicleSpawned) == 0x000008, "Wrong size on BP_VehicleSpawner_C_OnVehicleSpawned");
static_assert(offsetof(BP_VehicleSpawner_C_OnVehicleSpawned, OutVehicle) == 0x000000, "Member 'BP_VehicleSpawner_C_OnVehicleSpawned::OutVehicle' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleSpawner_C_UserConstructionScript final
{
public:
	class UBP_SQVehicleSettings_C*                VehicleSettings;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_UserConstructionScript");
static_assert(sizeof(BP_VehicleSpawner_C_UserConstructionScript) == 0x000008, "Wrong size on BP_VehicleSpawner_C_UserConstructionScript");
static_assert(offsetof(BP_VehicleSpawner_C_UserConstructionScript, VehicleSettings) == 0x000000, "Member 'BP_VehicleSpawner_C_UserConstructionScript::VehicleSettings' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GeneratePreviewMesh
// 0x00D0 (0x00D0 - 0x0000)
struct BP_VehicleSpawner_C_GeneratePreviewMesh final
{
public:
	class USQVehicleSettings*                     L_SelectedVehicle;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_BestPriority;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B0B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B0C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSettings*                     K2Node_DynamicCast_AsSQVehicle_Settings;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQTeam                                       CallFunc_GetDebugTeam_OutDebugTeam;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0D[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQEditorPlaySettings*                  CallFunc_GetEditorPlaySettings_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQLayer*                               CallFunc_TryGetEditorSQLayer_OutEditorLayer;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetEditorSQLayer_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B0E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQFactionSetup*                        CallFunc_TryGetEditorFactionSetup_OutFactionSetup; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetEditorFactionSetup_ReturnValue;     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B0F[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B10[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_TryGetVehicleWithLayer_OutVehicle;        // 0x0068(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetVehicleWithLayer_ReturnValue;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Editor_GetVehicleToSpawn_Out_Has_Something_To_Spawn; // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B11[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSettings*                     CallFunc_Editor_GetVehicleToSpawn_Out_Selected_Vehicle; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_TryGetVehicleWithBiome_OutVehicle;        // 0x00A0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_TryGetVehicleWithBiome_ReturnValue;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_GeneratePreviewMesh) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_GeneratePreviewMesh");
static_assert(sizeof(BP_VehicleSpawner_C_GeneratePreviewMesh) == 0x0000D0, "Wrong size on BP_VehicleSpawner_C_GeneratePreviewMesh");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, L_SelectedVehicle) == 0x000000, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::L_SelectedVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, L_BestPriority) == 0x000008, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::L_BestPriority' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000018, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, K2Node_DynamicCast_AsSQVehicle_Settings) == 0x000020, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::K2Node_DynamicCast_AsSQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_GetDebugTeam_OutDebugTeam) == 0x000029, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_GetDebugTeam_OutDebugTeam' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_GetEditorPlaySettings_ReturnValue) == 0x000030, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_GetEditorPlaySettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_TryGetEditorSQLayer_OutEditorLayer) == 0x000038, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_TryGetEditorSQLayer_OutEditorLayer' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_TryGetEditorSQLayer_ReturnValue) == 0x000040, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_TryGetEditorSQLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_TryGetEditorFactionSetup_OutFactionSetup) == 0x000048, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_TryGetEditorFactionSetup_OutFactionSetup' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_TryGetEditorFactionSetup_ReturnValue) == 0x000050, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_TryGetEditorFactionSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000058, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_TryGetVehicleWithLayer_OutVehicle) == 0x000068, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_TryGetVehicleWithLayer_OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_TryGetVehicleWithLayer_ReturnValue) == 0x000090, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_TryGetVehicleWithLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_Editor_GetVehicleToSpawn_Out_Has_Something_To_Spawn) == 0x000091, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_Editor_GetVehicleToSpawn_Out_Has_Something_To_Spawn' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_Editor_GetVehicleToSpawn_Out_Selected_Vehicle) == 0x000098, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_Editor_GetVehicleToSpawn_Out_Selected_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_TryGetVehicleWithBiome_OutVehicle) == 0x0000A0, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_TryGetVehicleWithBiome_OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_TryGetVehicleWithBiome_ReturnValue) == 0x0000C8, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_TryGetVehicleWithBiome_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GeneratePreviewMesh, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x0000C9, "Member 'BP_VehicleSpawner_C_GeneratePreviewMesh::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GenerateReservedAreaDisplay
// 0x0130 (0x0130 - 0x0000)
struct BP_VehicleSpawner_C_GenerateReservedAreaDisplay final
{
public:
	bool                                          Reset;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B12[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B13[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B14[0xB];                                     // 0x0045(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetDebugPosition_OutPosition;             // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConfigurationValid_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ComputeSpawnPosition_ReturnValue;         // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B15[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSpawnerBound_OutBounds;                // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpawnerOverlapped_ReturnValue;          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B16[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_VehicleSpawner_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x00F8(0x0010)(ReferenceParm)
	class ABP_VehicleSpawner_C*                   CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay) == 0x000010, "Wrong alignment on BP_VehicleSpawner_C_GenerateReservedAreaDisplay");
static_assert(sizeof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay) == 0x000130, "Wrong size on BP_VehicleSpawner_C_GenerateReservedAreaDisplay");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, Reset) == 0x000000, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::Reset' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, Temp_struct_Variable) == 0x000004, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, Temp_struct_Variable_1) == 0x000014, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, Temp_bool_Variable) == 0x000024, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, Temp_struct_Variable_2) == 0x000028, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, Temp_bool_Variable_1) == 0x000044, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_GetDebugPosition_OutPosition) == 0x000050, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_GetDebugPosition_OutPosition' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_BreakTransform_Location) == 0x00008C, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_BreakTransform_Scale) == 0x0000A4, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000BC, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_IsConfigurationValid_ReturnValue) == 0x0000C8, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_IsConfigurationValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_ComputeSpawnPosition_ReturnValue) == 0x0000C9, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_ComputeSpawnPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_GetSpawnerBound_OutBounds) == 0x0000CC, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_GetSpawnerBound_OutBounds' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0000D8, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, K2Node_Select_Default) == 0x0000E4, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_IsSpawnerOverlapped_ReturnValue) == 0x0000F4, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_IsSpawnerOverlapped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000F8, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, K2Node_Select_Default_1) == 0x000110, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GenerateReservedAreaDisplay, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BP_VehicleSpawner_C_GenerateReservedAreaDisplay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetVehicleDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_VehicleSpawner_C_SetVehicleDamage final
{
public:
	class ASQVehicle*                             In_Vehicle;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_SetVehicleDamage) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_SetVehicleDamage");
static_assert(sizeof(BP_VehicleSpawner_C_SetVehicleDamage) == 0x000010, "Wrong size on BP_VehicleSpawner_C_SetVehicleDamage");
static_assert(offsetof(BP_VehicleSpawner_C_SetVehicleDamage, In_Vehicle) == 0x000000, "Member 'BP_VehicleSpawner_C_SetVehicleDamage::In_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetVehicleDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_VehicleSpawner_C_SetVehicleDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetEngineDamage
// 0x0018 (0x0018 - 0x0000)
struct BP_VehicleSpawner_C_SetEngineDamage final
{
public:
	class ASQVehicle*                             In_Vehicle;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleComponent*                    CallFunc_GetVehicleEngine_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaximumHealth_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_SetEngineDamage) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_SetEngineDamage");
static_assert(sizeof(BP_VehicleSpawner_C_SetEngineDamage) == 0x000018, "Wrong size on BP_VehicleSpawner_C_SetEngineDamage");
static_assert(offsetof(BP_VehicleSpawner_C_SetEngineDamage, In_Vehicle) == 0x000000, "Member 'BP_VehicleSpawner_C_SetEngineDamage::In_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetEngineDamage, CallFunc_GetVehicleEngine_ReturnValue) == 0x000008, "Member 'BP_VehicleSpawner_C_SetEngineDamage::CallFunc_GetVehicleEngine_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetEngineDamage, CallFunc_GetMaximumHealth_ReturnValue) == 0x000010, "Member 'BP_VehicleSpawner_C_SetEngineDamage::CallFunc_GetMaximumHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetEngineDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_VehicleSpawner_C_SetEngineDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetPropulsionDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_VehicleSpawner_C_SetPropulsionDamage final
{
public:
	class ASQVehicle*                             In_Vehicle;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USQVehicleComponent*>            Components;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_SetComponentsHealthByType_Success;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetComponentsHealthByType_Success_1;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetComponentsHealthByType_Success_2;      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_SetPropulsionDamage) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_SetPropulsionDamage");
static_assert(sizeof(BP_VehicleSpawner_C_SetPropulsionDamage) == 0x000020, "Wrong size on BP_VehicleSpawner_C_SetPropulsionDamage");
static_assert(offsetof(BP_VehicleSpawner_C_SetPropulsionDamage, In_Vehicle) == 0x000000, "Member 'BP_VehicleSpawner_C_SetPropulsionDamage::In_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPropulsionDamage, Components) == 0x000008, "Member 'BP_VehicleSpawner_C_SetPropulsionDamage::Components' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPropulsionDamage, CallFunc_SetComponentsHealthByType_Success) == 0x000018, "Member 'BP_VehicleSpawner_C_SetPropulsionDamage::CallFunc_SetComponentsHealthByType_Success' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPropulsionDamage, CallFunc_SetComponentsHealthByType_Success_1) == 0x000019, "Member 'BP_VehicleSpawner_C_SetPropulsionDamage::CallFunc_SetComponentsHealthByType_Success_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPropulsionDamage, CallFunc_SetComponentsHealthByType_Success_2) == 0x00001A, "Member 'BP_VehicleSpawner_C_SetPropulsionDamage::CallFunc_SetComponentsHealthByType_Success_2' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetComponentsArrayHealth
// 0x00A0 (0x00A0 - 0x0000)
struct BP_VehicleSpawner_C_SetComponentsArrayHealth final
{
public:
	TArray<class USQVehicleComponent*>            Components;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Param_NeverDestroyComponents;                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B17[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewHealthFrac;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalHealth;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B18[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B19[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleComponent*                    CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaximumHealth_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1A[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleComponent*                    CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaximumHealth_ReturnValue_1;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaximumHealth_ReturnValue_2;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1B[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1C[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_SetComponentsArrayHealth) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_SetComponentsArrayHealth");
static_assert(sizeof(BP_VehicleSpawner_C_SetComponentsArrayHealth) == 0x0000A0, "Wrong size on BP_VehicleSpawner_C_SetComponentsArrayHealth");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, Components) == 0x000000, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::Components' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, Param_NeverDestroyComponents) == 0x000010, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::Param_NeverDestroyComponents' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, NewHealthFrac) == 0x000014, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::NewHealthFrac' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, TotalHealth) == 0x000018, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::TotalHealth' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, Temp_int_Array_Index_Variable_2) == 0x000038, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_GetMaximumHealth_ReturnValue) == 0x00004C, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_GetMaximumHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_GetMaximumHealth_ReturnValue_1) == 0x000070, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_GetMaximumHealth_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_GetMaximumHealth_ReturnValue_2) == 0x000074, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_GetMaximumHealth_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000078, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Array_Length_ReturnValue_2) == 0x000084, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Less_IntInt_ReturnValue_1) == 0x000089, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, Temp_int_Loop_Counter_Variable_2) == 0x00008C, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Less_IntInt_ReturnValue_2) == 0x000090, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_Add_IntInt_ReturnValue_2) == 0x000094, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsArrayHealth, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'BP_VehicleSpawner_C_SetComponentsArrayHealth::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetComponentsHealthByType
// 0x0030 (0x0030 - 0x0000)
struct BP_VehicleSpawner_C_SetComponentsHealthByType final
{
public:
	class ASQVehicle*                             VehicleTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ClassToChangeHealth;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FractionHealth;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1D[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USQVehicleComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_SetComponentsHealthByType) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_SetComponentsHealthByType");
static_assert(sizeof(BP_VehicleSpawner_C_SetComponentsHealthByType) == 0x000030, "Wrong size on BP_VehicleSpawner_C_SetComponentsHealthByType");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsHealthByType, VehicleTarget) == 0x000000, "Member 'BP_VehicleSpawner_C_SetComponentsHealthByType::VehicleTarget' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsHealthByType, ClassToChangeHealth) == 0x000008, "Member 'BP_VehicleSpawner_C_SetComponentsHealthByType::ClassToChangeHealth' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsHealthByType, FractionHealth) == 0x000010, "Member 'BP_VehicleSpawner_C_SetComponentsHealthByType::FractionHealth' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsHealthByType, Success) == 0x000014, "Member 'BP_VehicleSpawner_C_SetComponentsHealthByType::Success' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsHealthByType, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000015, "Member 'BP_VehicleSpawner_C_SetComponentsHealthByType::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsHealthByType, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'BP_VehicleSpawner_C_SetComponentsHealthByType::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsHealthByType, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_VehicleSpawner_C_SetComponentsHealthByType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetComponentsHealthByType, CallFunc_Conv_IntToBool_ReturnValue) == 0x00002C, "Member 'BP_VehicleSpawner_C_SetComponentsHealthByType::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetWeaponInitialAmmo
// 0x0028 (0x0028 - 0x0000)
struct BP_VehicleSpawner_C_SetWeaponInitialAmmo final
{
public:
	class ASQVehicle*                             InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSQMagazineData>                TempMagsArray;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<class ASQVehicleSeat*>                 Seats;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
};
static_assert(alignof(BP_VehicleSpawner_C_SetWeaponInitialAmmo) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_SetWeaponInitialAmmo");
static_assert(sizeof(BP_VehicleSpawner_C_SetWeaponInitialAmmo) == 0x000028, "Wrong size on BP_VehicleSpawner_C_SetWeaponInitialAmmo");
static_assert(offsetof(BP_VehicleSpawner_C_SetWeaponInitialAmmo, InputPin) == 0x000000, "Member 'BP_VehicleSpawner_C_SetWeaponInitialAmmo::InputPin' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetWeaponInitialAmmo, TempMagsArray) == 0x000008, "Member 'BP_VehicleSpawner_C_SetWeaponInitialAmmo::TempMagsArray' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetWeaponInitialAmmo, Seats) == 0x000018, "Member 'BP_VehicleSpawner_C_SetWeaponInitialAmmo::Seats' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetDebugTeam
// 0x0005 (0x0005 - 0x0000)
struct BP_VehicleSpawner_C_GetDebugTeam final
{
public:
	ESQTeam                                       OutDebugTeam;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQTeam                                       CallFunc_GetTeam_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQTeam                                       K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_GetDebugTeam) == 0x000001, "Wrong alignment on BP_VehicleSpawner_C_GetDebugTeam");
static_assert(sizeof(BP_VehicleSpawner_C_GetDebugTeam) == 0x000005, "Wrong size on BP_VehicleSpawner_C_GetDebugTeam");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugTeam, OutDebugTeam) == 0x000000, "Member 'BP_VehicleSpawner_C_GetDebugTeam::OutDebugTeam' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugTeam, Temp_bool_Variable) == 0x000001, "Member 'BP_VehicleSpawner_C_GetDebugTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugTeam, CallFunc_GetTeam_ReturnValue) == 0x000002, "Member 'BP_VehicleSpawner_C_GetDebugTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BP_VehicleSpawner_C_GetDebugTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugTeam, K2Node_Select_Default) == 0x000004, "Member 'BP_VehicleSpawner_C_GetDebugTeam::K2Node_Select_Default' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.LoadPreviewMesh
// 0x0048 (0x0048 - 0x0000)
struct BP_VehicleSpawner_C_LoadPreviewMesh final
{
public:
	TSoftClassPtr<class UClass>                   AssetClass;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_LoadPreviewMesh) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_LoadPreviewMesh");
static_assert(sizeof(BP_VehicleSpawner_C_LoadPreviewMesh) == 0x000048, "Wrong size on BP_VehicleSpawner_C_LoadPreviewMesh");
static_assert(offsetof(BP_VehicleSpawner_C_LoadPreviewMesh, AssetClass) == 0x000000, "Member 'BP_VehicleSpawner_C_LoadPreviewMesh::AssetClass' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_LoadPreviewMesh, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000028, "Member 'BP_VehicleSpawner_C_LoadPreviewMesh::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_LoadPreviewMesh, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000030, "Member 'BP_VehicleSpawner_C_LoadPreviewMesh::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_LoadPreviewMesh, K2Node_DynamicCast_AsSQVehicle) == 0x000038, "Member 'BP_VehicleSpawner_C_LoadPreviewMesh::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_LoadPreviewMesh, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_VehicleSpawner_C_LoadPreviewMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.RefreshPreview
// 0x0003 (0x0003 - 0x0000)
struct BP_VehicleSpawner_C_RefreshPreview final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_RefreshPreview) == 0x000001, "Wrong alignment on BP_VehicleSpawner_C_RefreshPreview");
static_assert(sizeof(BP_VehicleSpawner_C_RefreshPreview) == 0x000003, "Wrong size on BP_VehicleSpawner_C_RefreshPreview");
static_assert(offsetof(BP_VehicleSpawner_C_RefreshPreview, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_VehicleSpawner_C_RefreshPreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_RefreshPreview, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000001, "Member 'BP_VehicleSpawner_C_RefreshPreview::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_RefreshPreview, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_VehicleSpawner_C_RefreshPreview::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.SetPreviewMesh
// 0x00B0 (0x00B0 - 0x0000)
struct BP_VehicleSpawner_C_SetPreviewMesh final
{
public:
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1F[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_SetPreviewMesh) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_SetPreviewMesh");
static_assert(sizeof(BP_VehicleSpawner_C_SetPreviewMesh) == 0x0000B0, "Wrong size on BP_VehicleSpawner_C_SetPreviewMesh");
static_assert(offsetof(BP_VehicleSpawner_C_SetPreviewMesh, Mesh) == 0x000000, "Member 'BP_VehicleSpawner_C_SetPreviewMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPreviewMesh, CallFunc_GetNumMaterials_ReturnValue) == 0x000008, "Member 'BP_VehicleSpawner_C_SetPreviewMesh::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPreviewMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_VehicleSpawner_C_SetPreviewMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPreviewMesh, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_VehicleSpawner_C_SetPreviewMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPreviewMesh, Temp_int_Variable) == 0x000014, "Member 'BP_VehicleSpawner_C_SetPreviewMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPreviewMesh, CallFunc_GetMaterial_ReturnValue) == 0x000018, "Member 'BP_VehicleSpawner_C_SetPreviewMesh::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPreviewMesh, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000020, "Member 'BP_VehicleSpawner_C_SetPreviewMesh::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPreviewMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_VehicleSpawner_C_SetPreviewMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_SetPreviewMesh, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_VehicleSpawner_C_SetPreviewMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetDebugPosition
// 0x00E0 (0x00E0 - 0x0000)
struct BP_VehicleSpawner_C_GetDebugPosition final
{
public:
	struct FTransform                             OutPosition;                                       // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSpawnerBound_OutBounds;                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B20[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_GetDebugPosition) == 0x000010, "Wrong alignment on BP_VehicleSpawner_C_GetDebugPosition");
static_assert(sizeof(BP_VehicleSpawner_C_GetDebugPosition) == 0x0000E0, "Wrong size on BP_VehicleSpawner_C_GetDebugPosition");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, OutPosition) == 0x000000, "Member 'BP_VehicleSpawner_C_GetDebugPosition::OutPosition' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_GetSpawnerBound_OutBounds) == 0x000030, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_GetSpawnerBound_OutBounds' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_BreakTransform_Location) == 0x000048, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_BreakTransform_Rotation) == 0x000054, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_BreakTransform_Scale) == 0x000060, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_GetAxes_X) == 0x000070, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_GetAxes_Y) == 0x00007C, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_GetAxes_Z) == 0x000088, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetDebugPosition, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_VehicleSpawner_C_GetDebugPosition::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.Set PreviewText
// 0x0200 (0x0200 - 0x0000)
struct BP_VehicleSpawner_C_Set_PreviewText final
{
public:
	struct FLinearColor                           InTextColor;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B21[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B22[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetDebugPosition_OutPosition;             // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B23[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSpawnerBound_OutBounds;                // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B24[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B25[0x8];                                     // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class USQVehicleSettings*                     K2Node_DynamicCast_AsSQVehicle_Settings;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B26[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetId_ReturnValue;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESQTeam                                       CallFunc_GetDebugTeam_OutDebugTeam;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B27[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01E8(0x0018)()
};
static_assert(alignof(BP_VehicleSpawner_C_Set_PreviewText) == 0x000010, "Wrong alignment on BP_VehicleSpawner_C_Set_PreviewText");
static_assert(sizeof(BP_VehicleSpawner_C_Set_PreviewText) == 0x000200, "Wrong size on BP_VehicleSpawner_C_Set_PreviewText");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, InTextColor) == 0x000000, "Member 'BP_VehicleSpawner_C_Set_PreviewText::InTextColor' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, Temp_bool_Variable) == 0x000010, "Member 'BP_VehicleSpawner_C_Set_PreviewText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000014, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_GetDebugPosition_OutPosition) == 0x000020, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_GetDebugPosition_OutPosition' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_GetSpawnerBound_OutBounds) == 0x000078, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_GetSpawnerBound_OutBounds' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000084, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000A0, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, K2Node_DynamicCast_AsSQVehicle_Settings) == 0x0000E0, "Member 'BP_VehicleSpawner_C_Set_PreviewText::K2Node_DynamicCast_AsSQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_VehicleSpawner_C_Set_PreviewText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000E9, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_GetDisplayName_ReturnValue) == 0x0000F0, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_GetId_ReturnValue) == 0x000100, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_GetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000108, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_Conv_NameToString_ReturnValue) == 0x000190, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_GetDebugTeam_OutDebugTeam) == 0x0001A0, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_GetDebugTeam_OutDebugTeam' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, K2Node_Select_Default) == 0x0001A8, "Member 'BP_VehicleSpawner_C_Set_PreviewText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001B8, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_Concat_StrStr_ReturnValue) == 0x0001C8, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001D8, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Set_PreviewText, CallFunc_Conv_StringToText_ReturnValue) == 0x0001E8, "Member 'BP_VehicleSpawner_C_Set_PreviewText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.Editor_GetVehicleToSpawn
// 0x0070 (0x0070 - 0x0000)
struct BP_VehicleSpawner_C_Editor_GetVehicleToSpawn final
{
public:
	TArray<class USQAvailability_Vehicle*>        In_Vehicles;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Out_Has_Something_To_Spawn;                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B28[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSettings*                     Out_Selected_Vehicle;                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQVehicleSettings_C*                L_Selected;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Priority;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_MaxPriority;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B29[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQAvailability_Vehicle*                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2B[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2C[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPriorityFor_Out_Priority;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVehicleMatching_ReturnValue;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_Editor_GetVehicleToSpawn");
static_assert(sizeof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn) == 0x000070, "Wrong size on BP_VehicleSpawner_C_Editor_GetVehicleToSpawn");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, In_Vehicles) == 0x000000, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::In_Vehicles' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, Out_Has_Something_To_Spawn) == 0x000010, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::Out_Has_Something_To_Spawn' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, Out_Selected_Vehicle) == 0x000018, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::Out_Selected_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, L_Selected) == 0x000020, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::L_Selected' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, L_Priority) == 0x000028, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::L_Priority' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, L_MaxPriority) == 0x00002C, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::L_MaxPriority' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000050, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, CallFunc_GetPriorityFor_Out_Priority) == 0x000064, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::CallFunc_GetPriorityFor_Out_Priority' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_Editor_GetVehicleToSpawn, CallFunc_IsVehicleMatching_ReturnValue) == 0x000069, "Member 'BP_VehicleSpawner_C_Editor_GetVehicleToSpawn::CallFunc_IsVehicleMatching_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.CanSpawnVehicle
// 0x0088 (0x0088 - 0x0000)
struct BP_VehicleSpawner_C_CanSpawnVehicle final
{
public:
	const class USQVehicleSettings*               InAvailableVehicle;                                // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          L_VehicleMatching;                                 // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2D[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B2F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<ESQVehicleTag>                           CallFunc_Set_Intersection_Result;                  // 0x0028(0x0050)()
	bool                                          CallFunc_IsVehicleMatching_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B30[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Set_Length_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_CanSpawnVehicle) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_CanSpawnVehicle");
static_assert(sizeof(BP_VehicleSpawner_C_CanSpawnVehicle) == 0x000088, "Wrong size on BP_VehicleSpawner_C_CanSpawnVehicle");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, InAvailableVehicle) == 0x000000, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::InAvailableVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, ReturnValue) == 0x000008, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, L_VehicleMatching) == 0x000009, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::L_VehicleMatching' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000010, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, CallFunc_Set_Length_ReturnValue) == 0x00001C, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, CallFunc_Set_Intersection_Result) == 0x000028, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::CallFunc_Set_Intersection_Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, CallFunc_IsVehicleMatching_ReturnValue) == 0x000078, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::CallFunc_IsVehicleMatching_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, CallFunc_Set_Length_ReturnValue_1) == 0x00007C, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::CallFunc_Set_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_CanSpawnVehicle, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_VehicleSpawner_C_CanSpawnVehicle::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetVehicleReference
// 0x00B0 (0x00B0 - 0x0000)
struct BP_VehicleSpawner_C_GetVehicleReference final
{
public:
	class USQVehicleSettings*                     InVehicleSettings;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   OutVehicleReference;                               // 0x0008(0x0028)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B31[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_TryGetVehicleWithBiome_OutVehicle;        // 0x0040(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_TryGetVehicleWithBiome_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B32[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQLayer*                               CallFunc_TryGetCurrentLayer_OutLayer;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetCurrentLayer_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B33[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_TryGetVehicleWithLayer_OutVehicle;        // 0x0080(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetVehicleWithLayer_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_GetVehicleReference) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_GetVehicleReference");
static_assert(sizeof(BP_VehicleSpawner_C_GetVehicleReference) == 0x0000B0, "Wrong size on BP_VehicleSpawner_C_GetVehicleReference");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, InVehicleSettings) == 0x000000, "Member 'BP_VehicleSpawner_C_GetVehicleReference::InVehicleSettings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, OutVehicleReference) == 0x000008, "Member 'BP_VehicleSpawner_C_GetVehicleReference::OutVehicleReference' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000030, "Member 'BP_VehicleSpawner_C_GetVehicleReference::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_VehicleSpawner_C_GetVehicleReference::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, CallFunc_TryGetVehicleWithBiome_OutVehicle) == 0x000040, "Member 'BP_VehicleSpawner_C_GetVehicleReference::CallFunc_TryGetVehicleWithBiome_OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, CallFunc_TryGetVehicleWithBiome_ReturnValue) == 0x000068, "Member 'BP_VehicleSpawner_C_GetVehicleReference::CallFunc_TryGetVehicleWithBiome_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, CallFunc_TryGetCurrentLayer_OutLayer) == 0x000070, "Member 'BP_VehicleSpawner_C_GetVehicleReference::CallFunc_TryGetCurrentLayer_OutLayer' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, CallFunc_TryGetCurrentLayer_ReturnValue) == 0x000078, "Member 'BP_VehicleSpawner_C_GetVehicleReference::CallFunc_TryGetCurrentLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, CallFunc_TryGetVehicleWithLayer_OutVehicle) == 0x000080, "Member 'BP_VehicleSpawner_C_GetVehicleReference::CallFunc_TryGetVehicleWithLayer_OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehicleReference, CallFunc_TryGetVehicleWithLayer_ReturnValue) == 0x0000A8, "Member 'BP_VehicleSpawner_C_GetVehicleReference::CallFunc_TryGetVehicleWithLayer_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.IsConfigurationValid
// 0x0038 (0x0038 - 0x0000)
struct BP_VehicleSpawner_C_IsConfigurationValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B34[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B35[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSettings*                     K2Node_DynamicCast_AsSQVehicle_Settings;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B36[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_IsConfigurationValid) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_IsConfigurationValid");
static_assert(sizeof(BP_VehicleSpawner_C_IsConfigurationValid) == 0x000038, "Wrong size on BP_VehicleSpawner_C_IsConfigurationValid");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, ReturnValue) == 0x000000, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, K2Node_DynamicCast_AsSQVehicle_Settings) == 0x000018, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::K2Node_DynamicCast_AsSQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000021, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000028, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsConfigurationValid, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'BP_VehicleSpawner_C_IsConfigurationValid::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetSpawnerBound
// 0x0050 (0x0050 - 0x0000)
struct BP_VehicleSpawner_C_GetSpawnerBound final
{
public:
	struct FVector                                OutBounds;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B37[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B38[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSettings*                     K2Node_DynamicCast_AsSQVehicle_Settings;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B39[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQVehicleSpawnerSize                         K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConfigurationValid_ReturnValue;         // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_GetSpawnerBound) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_GetSpawnerBound");
static_assert(sizeof(BP_VehicleSpawner_C_GetSpawnerBound) == 0x000050, "Wrong size on BP_VehicleSpawner_C_GetSpawnerBound");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, OutBounds) == 0x000000, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::OutBounds' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, Temp_bool_Variable) == 0x00000C, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000018, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, K2Node_DynamicCast_AsSQVehicle_Settings) == 0x000020, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::K2Node_DynamicCast_AsSQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000030, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, K2Node_Select_Default) == 0x00003A, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, CallFunc_IsConfigurationValid_ReturnValue) == 0x00003B, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::CallFunc_IsConfigurationValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, CallFunc_Map_Find_Value) == 0x00003C, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetSpawnerBound, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_VehicleSpawner_C_GetSpawnerBound::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.IsSpawnerAvailable
// 0x000F (0x000F - 0x0000)
struct BP_VehicleSpawner_C_IsSpawnerAvailable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	ESQTeam                                       CallFunc_GetTeam_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpawnerAvailable_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_IsSpawnerAvailable) == 0x000001, "Wrong alignment on BP_VehicleSpawner_C_IsSpawnerAvailable");
static_assert(sizeof(BP_VehicleSpawner_C_IsSpawnerAvailable) == 0x00000F, "Wrong size on BP_VehicleSpawner_C_IsSpawnerAvailable");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, ReturnValue) == 0x000000, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_GetTeam_ReturnValue) == 0x000001, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000003, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, Temp_bool_Variable) == 0x000004, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_Less_IntInt_ReturnValue) == 0x000005, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_Greater_IntInt_ReturnValue) == 0x000006, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, Temp_bool_Variable_1) == 0x000007, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, K2Node_Select_Default) == 0x000009, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_IsSpawnerAvailable_ReturnValue) == 0x00000B, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_IsSpawnerAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_BooleanOR_ReturnValue_1) == 0x00000C, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_IsSpawnerAvailable, CallFunc_BooleanAND_ReturnValue_1) == 0x00000E, "Member 'BP_VehicleSpawner_C_IsSpawnerAvailable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.GetVehiclePriority
// 0x0078 (0x0078 - 0x0000)
struct BP_VehicleSpawner_C_GetVehiclePriority final
{
public:
	struct FSQAvailabilityState_Vehicle           InAvailableVehicle;                                // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         ReturnValue;                                       // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_OutPriority;                                     // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B3A[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B3B[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPriorityFor_Out_Priority;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_GetVehiclePriority) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_GetVehiclePriority");
static_assert(sizeof(BP_VehicleSpawner_C_GetVehiclePriority) == 0x000078, "Wrong size on BP_VehicleSpawner_C_GetVehiclePriority");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, InAvailableVehicle) == 0x000000, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::InAvailableVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, ReturnValue) == 0x000050, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, L_OutPriority) == 0x000054, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::L_OutPriority' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000060, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, CallFunc_IsValid_ReturnValue_2) == 0x000069, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_GetVehiclePriority, CallFunc_GetPriorityFor_Out_Priority) == 0x000070, "Member 'BP_VehicleSpawner_C_GetVehiclePriority::CallFunc_GetPriorityFor_Out_Priority' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.ComputeInitialSpawnerDelay
// 0x0090 (0x0090 - 0x0000)
struct BP_VehicleSpawner_C_ComputeInitialSpawnerDelay final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              L_M_;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B3C[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue_1;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue_2;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPrioritarySpawner_Is_Prioritary_Spawner; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B3D[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B3E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue_3;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B3F[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_ComputeSpawnerDelay_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_Select_Default_2;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B40[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_Select_Default_3;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Add_TimespanTimespan_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Add_TimespanTimespan_ReturnValue_1;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Add_TimespanTimespan_ReturnValue_2;       // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_ComputeInitialSpawnerDelay");
static_assert(sizeof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay) == 0x000090, "Wrong size on BP_VehicleSpawner_C_ComputeInitialSpawnerDelay");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, ReturnValue) == 0x000000, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, L_M_) == 0x000008, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::L_M_' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, Temp_bool_Variable) == 0x000010, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, Temp_bool_Variable_1) == 0x000011, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, Temp_bool_Variable_2) == 0x000012, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, Temp_bool_Variable_3) == 0x000013, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, Temp_bool_Variable_4) == 0x000014, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000015, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_MakeTimespan_ReturnValue) == 0x000018, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_MakeTimespan_ReturnValue_1) == 0x000020, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_MakeTimespan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_MakeTimespan_ReturnValue_2) == 0x000028, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_MakeTimespan_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_IsPrioritarySpawner_Is_Prioritary_Spawner) == 0x000031, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_IsPrioritarySpawner_Is_Prioritary_Spawner' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, K2Node_Select_Default) == 0x000038, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_MakeTimespan_ReturnValue_3) == 0x000048, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_MakeTimespan_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, K2Node_Select_Default_1) == 0x000050, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_ComputeSpawnerDelay_ReturnValue) == 0x000058, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_ComputeSpawnerDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, K2Node_Select_Default_2) == 0x000060, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, K2Node_Select_Default_3) == 0x000070, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_Add_TimespanTimespan_ReturnValue) == 0x000078, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_Add_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_Add_TimespanTimespan_ReturnValue_1) == 0x000080, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_Add_TimespanTimespan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeInitialSpawnerDelay, CallFunc_Add_TimespanTimespan_ReturnValue_2) == 0x000088, "Member 'BP_VehicleSpawner_C_ComputeInitialSpawnerDelay::CallFunc_Add_TimespanTimespan_ReturnValue_2' has a wrong offset!");

// Function BP_VehicleSpawner.BP_VehicleSpawner_C.ComputeSpawnerDelay
// 0x0020 (0x0020 - 0x0000)
struct BP_VehicleSpawner_C_ComputeSpawnerDelay final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VehicleSpawner_C_ComputeSpawnerDelay) == 0x000008, "Wrong alignment on BP_VehicleSpawner_C_ComputeSpawnerDelay");
static_assert(sizeof(BP_VehicleSpawner_C_ComputeSpawnerDelay) == 0x000020, "Wrong size on BP_VehicleSpawner_C_ComputeSpawnerDelay");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeSpawnerDelay, ReturnValue) == 0x000000, "Member 'BP_VehicleSpawner_C_ComputeSpawnerDelay::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeSpawnerDelay, CallFunc_MakeTimespan_ReturnValue) == 0x000008, "Member 'BP_VehicleSpawner_C_ComputeSpawnerDelay::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeSpawnerDelay, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_VehicleSpawner_C_ComputeSpawnerDelay::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_VehicleSpawner_C_ComputeSpawnerDelay, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_VehicleSpawner_C_ComputeSpawnerDelay::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarkerWidget_Emplacement

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Squad_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.ExecuteUbergraph_BP_MarkerWidget_Emplacement
// 0x0080 (0x0080 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F87[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetWeaponAttachComponent_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F88[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement) == 0x000080, "Wrong size on BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, EntryPoint) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, K2Node_DynamicCast_AsSQVehicle) == 0x000048, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, CallFunc_GetWeaponAttachComponent_ReturnValue) == 0x000058, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::CallFunc_GetWeaponAttachComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000060, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'BP_MarkerWidget_Emplacement_C_ExecuteUbergraph_BP_MarkerWidget_Emplacement::CallFunc_BreakRotator_Yaw' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_MarkerWidget_Emplacement_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_Tick) == 0x000004, "Wrong alignment on BP_MarkerWidget_Emplacement_C_Tick");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_Tick) == 0x00003C, "Wrong size on BP_MarkerWidget_Emplacement_C_Tick");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Tick, MyGeometry) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_MarkerWidget_Emplacement_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.SetAngle
// 0x0008 (0x0008 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_SetAngle final
{
public:
	float                                         InAngle;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_SetAngle) == 0x000004, "Wrong alignment on BP_MarkerWidget_Emplacement_C_SetAngle");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_SetAngle) == 0x000008, "Wrong size on BP_MarkerWidget_Emplacement_C_SetAngle");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_SetAngle, InAngle) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_SetAngle::InAngle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_SetAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_MarkerWidget_Emplacement_C_SetAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.Get_PlayerImage_Brush
// 0x01C0 (0x01C0 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVehicleEmpty_Empty;                     // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_GetSquadColor_ReturnValue;                // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameSquad_SquadVehicle;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F89[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetNeutralColor_ReturnValue;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetFriendlyColor_ReturnValue;             // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetEnemyColor_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameTeam_SameTeam;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNeutralTeam_IsNeutral;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F8A[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8B[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_GetVehicleIcon_NewParam;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0110(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0138(0x0088)()
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush) == 0x0001C0, "Wrong size on BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, Temp_bool_Variable) == 0x000088, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, Temp_bool_Variable_1) == 0x000089, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, Temp_bool_Variable_2) == 0x00008A, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_IsVehicleEmpty_Empty) == 0x00008B, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_IsVehicleEmpty_Empty' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_GetSquadColor_ReturnValue) == 0x00008C, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_GetSquadColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_IsSameSquad_SquadVehicle) == 0x00009C, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_IsSameSquad_SquadVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_GetNeutralColor_ReturnValue) == 0x0000A0, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_GetNeutralColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_GetFriendlyColor_ReturnValue) == 0x0000B0, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_GetFriendlyColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_GetEnemyColor_ReturnValue) == 0x0000C0, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_GetEnemyColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_IsSameTeam_SameTeam) == 0x0000D0, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_IsSameTeam_SameTeam' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_IsNeutralTeam_IsNeutral) == 0x0000D1, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_IsNeutralTeam_IsNeutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_BooleanOR_ReturnValue) == 0x0000D2, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, K2Node_Select_Default) == 0x0000D4, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, K2Node_Select_Default_1) == 0x0000E4, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, CallFunc_GetVehicleIcon_NewParam) == 0x0000F8, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::CallFunc_GetVehicleIcon_NewParam' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, K2Node_Select_Default_2) == 0x000100, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, K2Node_MakeStruct_SlateColor) == 0x000110, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush, K2Node_MakeStruct_SlateBrush) == 0x000138, "Member 'BP_MarkerWidget_Emplacement_C_Get_PlayerImage_Brush::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.IsOwnOrNeutralTeam
// 0x0004 (0x0004 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam final
{
public:
	bool                                          OwnOrNeutral;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNeutralTeam_IsNeutral;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSameTeam_SameTeam;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam) == 0x000001, "Wrong alignment on BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam) == 0x000004, "Wrong size on BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam, OwnOrNeutral) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam::OwnOrNeutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam, CallFunc_IsNeutralTeam_IsNeutral) == 0x000001, "Member 'BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam::CallFunc_IsNeutralTeam_IsNeutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam, CallFunc_IsSameTeam_SameTeam) == 0x000002, "Member 'BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam::CallFunc_IsSameTeam_SameTeam' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_MarkerWidget_Emplacement_C_IsOwnOrNeutralTeam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.Get_Vehicle_Image_Visibility_0
// 0x0001 (0x0001 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_Get_Vehicle_Image_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_Get_Vehicle_Image_Visibility_0) == 0x000001, "Wrong alignment on BP_MarkerWidget_Emplacement_C_Get_Vehicle_Image_Visibility_0");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_Get_Vehicle_Image_Visibility_0) == 0x000001, "Wrong size on BP_MarkerWidget_Emplacement_C_Get_Vehicle_Image_Visibility_0");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_Get_Vehicle_Image_Visibility_0, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_Get_Vehicle_Image_Visibility_0::ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.GetVehicleIcon
// 0x0020 (0x0020 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_GetVehicleIcon final
{
public:
	class UTexture*                               NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F8C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQMapIconComponent*                    K2Node_DynamicCast_AsSQMap_Icon_Component;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_GetVehicleIcon) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_GetVehicleIcon");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_GetVehicleIcon) == 0x000020, "Wrong size on BP_MarkerWidget_Emplacement_C_GetVehicleIcon");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleIcon, NewParam) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleIcon::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleIcon, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleIcon, K2Node_DynamicCast_AsSQMap_Icon_Component) == 0x000010, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleIcon::K2Node_DynamicCast_AsSQMap_Icon_Component' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleIcon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.IsNeutralTeam
// 0x0020 (0x0020 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_IsNeutralTeam final
{
public:
	bool                                          IsNeutral;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F8D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQTeam                                       CallFunc_GetTeam_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_IsNeutralTeam) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_IsNeutralTeam");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_IsNeutralTeam) == 0x000020, "Wrong size on BP_MarkerWidget_Emplacement_C_IsNeutralTeam");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsNeutralTeam, IsNeutral) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_IsNeutralTeam::IsNeutral' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsNeutralTeam, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Emplacement_C_IsNeutralTeam::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsNeutralTeam, K2Node_DynamicCast_AsSQVehicle) == 0x000010, "Member 'BP_MarkerWidget_Emplacement_C_IsNeutralTeam::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsNeutralTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MarkerWidget_Emplacement_C_IsNeutralTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsNeutralTeam, CallFunc_GetTeam_ReturnValue) == 0x000019, "Member 'BP_MarkerWidget_Emplacement_C_IsNeutralTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsNeutralTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_MarkerWidget_Emplacement_C_IsNeutralTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.IsSameTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_IsSameTeam final
{
public:
	bool                                          SameTeam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F8E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F8F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       CallFunc_GetTeam_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_IsSameTeam) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_IsSameTeam");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_IsSameTeam) == 0x000038, "Wrong size on BP_MarkerWidget_Emplacement_C_IsSameTeam");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, SameTeam) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::SameTeam' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000010, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, K2Node_DynamicCast_AsSQVehicle) == 0x000028, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, CallFunc_Conv_IntToByte_ReturnValue) == 0x000031, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, CallFunc_GetTeam_ReturnValue) == 0x000032, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, CallFunc_IsValid_ReturnValue) == 0x000033, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BP_MarkerWidget_Emplacement_C_IsSameTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.IsSameSquad
// 0x0050 (0x0050 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_IsSameSquad final
{
public:
	bool                                          SquadVehicle;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSameTeam_SameTeam;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F90[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F91[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetVehicle_Vehicle;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSquadState*                          CallFunc_GetSquadState_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F92[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSquadState*                          CallFunc_GetSquadState_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_IsSameSquad) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_IsSameSquad");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_IsSameSquad) == 0x000050, "Wrong size on BP_MarkerWidget_Emplacement_C_IsSameSquad");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, SquadVehicle) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::SquadVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_IsSameTeam_SameTeam) == 0x000001, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_IsSameTeam_SameTeam' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, K2Node_DynamicCast_AsSQPlayer_State) == 0x000010, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_GetVehicle_Vehicle) == 0x000020, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_GetVehicle_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_GetSquadState_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_GetSquadState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_GetSquadState_ReturnValue_1) == 0x000040, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_GetSquadState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_IsValid_ReturnValue_3) == 0x000049, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsSameSquad, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004A, "Member 'BP_MarkerWidget_Emplacement_C_IsSameSquad::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.GetVehicle
// 0x0020 (0x0020 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_GetVehicle final
{
public:
	class ASQVehicle*                             Vehicle;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_GetVehicle) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_GetVehicle");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_GetVehicle) == 0x000020, "Wrong size on BP_MarkerWidget_Emplacement_C_GetVehicle");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicle, Vehicle) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicle::Vehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicle, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicle::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicle, K2Node_DynamicCast_AsSQVehicle) == 0x000010, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicle::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.IsVehicleEmpty
// 0x0018 (0x0018 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_IsVehicleEmpty final
{
public:
	bool                                          Empty;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F93[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetVehicle_Vehicle;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVehicleEmpty_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_IsVehicleEmpty) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_IsVehicleEmpty");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_IsVehicleEmpty) == 0x000018, "Wrong size on BP_MarkerWidget_Emplacement_C_IsVehicleEmpty");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsVehicleEmpty, Empty) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_IsVehicleEmpty::Empty' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsVehicleEmpty, CallFunc_GetVehicle_Vehicle) == 0x000008, "Member 'BP_MarkerWidget_Emplacement_C_IsVehicleEmpty::CallFunc_GetVehicle_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsVehicleEmpty, CallFunc_IsVehicleEmpty_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_Emplacement_C_IsVehicleEmpty::CallFunc_IsVehicleEmpty_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.GetVehicleConeVisbility
// 0x0006 (0x0006 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_InVehicle;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility) == 0x000001, "Wrong alignment on BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility) == 0x000006, "Wrong size on BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility, Temp_bool_Variable) == 0x000001, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility, Temp_byte_Variable) == 0x000002, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility, Temp_byte_Variable_1) == 0x000003, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility, CallFunc_IsInVehicle_InVehicle) == 0x000004, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility::CallFunc_IsInVehicle_InVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility, K2Node_Select_Default) == 0x000005, "Member 'BP_MarkerWidget_Emplacement_C_GetVehicleConeVisbility::K2Node_Select_Default' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.IsInVehicle
// 0x0048 (0x0048 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_IsInVehicle final
{
public:
	bool                                          InVehicle;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F94[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetVehicle_Vehicle;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F95[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F96[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_IsInVehicle) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_IsInVehicle");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_IsInVehicle) == 0x000048, "Wrong size on BP_MarkerWidget_Emplacement_C_IsInVehicle");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, InVehicle) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::InVehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, CallFunc_GetVehicle_Vehicle) == 0x000008, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::CallFunc_GetVehicle_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, K2Node_DynamicCast_AsSQPlayer_State) == 0x000018, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, CallFunc_GetSoldier_ReturnValue) == 0x000028, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000038, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsInVehicle, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'BP_MarkerWidget_Emplacement_C_IsInVehicle::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_Emplacement.BP_MarkerWidget_Emplacement_C.IsMarkerVisible
// 0x0050 (0x0050 - 0x0000)
struct BP_MarkerWidget_Emplacement_C_IsMarkerVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F97[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             CallFunc_GetVehicle_Vehicle;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQDeployableVehicle*                   K2Node_DynamicCast_AsSQDeployable_Vehicle;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F98[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F99[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployable*                          CallFunc_GetOwnerDeployable_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           CallFunc_GetTeamState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMarkerVisible_ReturnValue;              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible) == 0x000008, "Wrong alignment on BP_MarkerWidget_Emplacement_C_IsMarkerVisible");
static_assert(sizeof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible) == 0x000050, "Wrong size on BP_MarkerWidget_Emplacement_C_IsMarkerVisible");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, CallFunc_GetVehicle_Vehicle) == 0x000010, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::CallFunc_GetVehicle_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, K2Node_DynamicCast_AsSQDeployable_Vehicle) == 0x000018, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::K2Node_DynamicCast_AsSQDeployable_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, K2Node_DynamicCast_AsSQPlayer_State) == 0x000028, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, CallFunc_GetOwnerDeployable_ReturnValue) == 0x000038, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::CallFunc_GetOwnerDeployable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, CallFunc_GetTeamState_ReturnValue) == 0x000040, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::CallFunc_GetTeamState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, CallFunc_IsMarkerVisible_ReturnValue) == 0x00004A, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::CallFunc_IsMarkerVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_Emplacement_C_IsMarkerVisible, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004B, "Member 'BP_MarkerWidget_Emplacement_C_IsMarkerVisible::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}


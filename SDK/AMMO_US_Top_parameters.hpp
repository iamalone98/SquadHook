#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AMMO_US_Top

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AMMO_US_Top.AMMO_US_Top_C.ExecuteUbergraph_AMMO_US_Top
// 0x0488 (0x0488 - 0x0000)
struct AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C06[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C07[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C08[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_5;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C09[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_6;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent_2;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse_2;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit_2;                  // 0x0074(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0A[0x2];                                     // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent_1;         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse_1;        // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit_1;                  // 0x01AC(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X;                            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0B[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C0C[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue_1;       // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C0D[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x032C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0E[0x2];                                     // 0x03BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C0F[0x4];                                     // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue_2;       // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C10[0x3];                                     // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_2;         // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C11[0x3];                                     // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top) == 0x000008, "Wrong alignment on AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top");
static_assert(sizeof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top) == 0x000488, "Wrong size on AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, EntryPoint) == 0x000000, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::EntryPoint' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000004, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_IsClosed_Variable) == 0x000009, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_Has_Been_Initd_Variable_1) == 0x00000A, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_IsClosed_Variable_1) == 0x00000B, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_IsClosed_Variable_2) == 0x00000C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_Has_Been_Initd_Variable_2) == 0x00000D, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_Has_Been_Initd_Variable_3) == 0x00000E, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_int_Variable) == 0x000010, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_int_Variable_1) == 0x000018, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_int_Variable_2) == 0x000020, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomFloatInRange_ReturnValue) == 0x00002C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000030, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000034, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000038, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x00003C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_IsClosed_Variable_3) == 0x000040, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_Has_Been_Initd_Variable_4) == 0x000041, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomFloatInRange_ReturnValue_5) == 0x000044, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomFloatInRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_Has_Been_Initd_Variable_5) == 0x000048, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomFloatInRange_ReturnValue_6) == 0x00004C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomFloatInRange_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_HitComponent_2) == 0x000050, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_HitComponent_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000058, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000060, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_NormalImpulse_2) == 0x000068, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_NormalImpulse_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_Hit_2) == 0x000074, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_Hit_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_bBlockingHit) == 0x0000FC, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000FD, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Time) == 0x000100, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Distance) == 0x000104, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_ImpactPoint) == 0x000114, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Normal) == 0x000120, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_ImpactNormal) == 0x00012C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_ElementIndex) == 0x00015C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_FaceIndex) == 0x000160, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_TraceStart) == 0x000164, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_TraceEnd) == 0x000170, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_GetComponentVelocity_ReturnValue) == 0x00017C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_HitComponent_1) == 0x000188, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_HitComponent_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000190, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000198, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_NormalImpulse_1) == 0x0001A0, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_NormalImpulse_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_Hit_1) == 0x0001AC, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakVector_X) == 0x000234, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakVector_Y) == 0x000238, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakVector_Z) == 0x00023C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000240, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000241, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Time_1) == 0x000244, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Distance_1) == 0x000248, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Location_1) == 0x00024C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000258, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Normal_1) == 0x000264, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000270, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_PhysMat_1) == 0x000280, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitActor_1) == 0x000288, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitComponent_1) == 0x000290, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitBoneName_1) == 0x000298, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitItem_1) == 0x0002A0, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_ElementIndex_1) == 0x0002A4, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_FaceIndex_1) == 0x0002A8, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_TraceStart_1) == 0x0002AC, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_TraceEnd_1) == 0x0002B8, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0002C4, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_VSize_ReturnValue) == 0x0002D0, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_GetComponentVelocity_ReturnValue_1) == 0x0002D4, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_GetComponentVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0002E0, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakVector_X_1) == 0x0002E4, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakVector_Y_1) == 0x0002E8, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakVector_Z_1) == 0x0002EC, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_FClamp_ReturnValue) == 0x0002F0, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x0002F4, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_VSize_ReturnValue_1) == 0x000300, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_HitComponent) == 0x000308, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_OtherActor) == 0x000310, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_OtherComp) == 0x000318, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000320, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, K2Node_ComponentBoundEvent_Hit) == 0x00032C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0003B4, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0003B8, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0003B9, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Time_2) == 0x0003BC, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Distance_2) == 0x0003C0, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Location_2) == 0x0003C4, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_ImpactPoint_2) == 0x0003D0, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_Normal_2) == 0x0003DC, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0003E8, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_PhysMat_2) == 0x0003F8, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitActor_2) == 0x000400, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitComponent_2) == 0x000408, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitBoneName_2) == 0x000410, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_HitItem_2) == 0x000418, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_ElementIndex_2) == 0x00041C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_FaceIndex_2) == 0x000420, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_TraceStart_2) == 0x000424, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakHitResult_TraceEnd_2) == 0x000430, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_FClamp_ReturnValue_1) == 0x00043C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_GetComponentVelocity_ReturnValue_2) == 0x000440, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_GetComponentVelocity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x00044C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakVector_X_2) == 0x000450, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakVector_Y_2) == 0x000454, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_BreakVector_Z_2) == 0x000458, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Less_IntInt_ReturnValue_1) == 0x00045C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Conv_FloatToVector_ReturnValue_2) == 0x000460, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Conv_FloatToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_VSize_ReturnValue_2) == 0x00046C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_IsClosed_Variable_4) == 0x000470, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000474, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_FClamp_ReturnValue_2) == 0x000478, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x00047C, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, Temp_bool_IsClosed_Variable_5) == 0x000480, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top, CallFunc_Less_IntInt_ReturnValue_2) == 0x000481, "Member 'AMMO_US_Top_C_ExecuteUbergraph_AMMO_US_Top::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function AMMO_US_Top.AMMO_US_Top_C.BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'AMMO_US_Top_C_BndEvt__Piece4_K2Node_ComponentBoundEvent_20_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function AMMO_US_Top.AMMO_US_Top_C.BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'AMMO_US_Top_C_BndEvt__Piece3_K2Node_ComponentBoundEvent_9_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function AMMO_US_Top.AMMO_US_Top_C.BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'AMMO_US_Top_C_BndEvt__Piece2_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

}


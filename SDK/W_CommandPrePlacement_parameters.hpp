#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CommandPrePlacement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_CommandPrePlacement.W_CommandPrePlacement_C.Created Command Control Widget__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_CommandPrePlacement_C_Created_Command_Control_Widget__DelegateSignature final
{
public:
	class UW_Command_ActionControl_C*             Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandPrePlacement_C_Created_Command_Control_Widget__DelegateSignature) == 0x000008, "Wrong alignment on W_CommandPrePlacement_C_Created_Command_Control_Widget__DelegateSignature");
static_assert(sizeof(W_CommandPrePlacement_C_Created_Command_Control_Widget__DelegateSignature) == 0x000008, "Wrong size on W_CommandPrePlacement_C_Created_Command_Control_Widget__DelegateSignature");
static_assert(offsetof(W_CommandPrePlacement_C_Created_Command_Control_Widget__DelegateSignature, Widget) == 0x000000, "Member 'W_CommandPrePlacement_C_Created_Command_Control_Widget__DelegateSignature::Widget' has a wrong offset!");

// Function W_CommandPrePlacement.W_CommandPrePlacement_C.ExecuteUbergraph_W_CommandPrePlacement
// 0x0138 (0x0138 - 0x0000)
struct W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45A4[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45A5[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePositionScaledByDPI_LocationX;    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePositionScaledByDPI_LocationY;    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePositionScaledByDPI_ReturnValue;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45A6[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Traced_Map_Location_Zero;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Traced_Map_Location_Local;            // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45A7[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsW_Command_Action_Control; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45A8[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGridData_BaseOption*                 K2Node_DynamicCast_AsSQGrid_Data_Base_Option;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45A9[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Command_ActionControl_C*             CallFunc_Create_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_Mouse_Event;                          // 0x00B8(0x0070)()
	struct FVector                                K2Node_Event_World_Location;                       // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Validate_Action_Valid;                    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement) == 0x000008, "Wrong alignment on W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement");
static_assert(sizeof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement) == 0x000138, "Wrong size on W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, EntryPoint) == 0x000000, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000050, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_GetMousePositionScaledByDPI_LocationX) == 0x000058, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_GetMousePositionScaledByDPI_LocationX' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_GetMousePositionScaledByDPI_LocationY) == 0x00005C, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_GetMousePositionScaledByDPI_LocationY' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_GetMousePositionScaledByDPI_ReturnValue) == 0x000060, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_GetMousePositionScaledByDPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_Get_Traced_Map_Location_Zero) == 0x000064, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_Get_Traced_Map_Location_Zero' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_Get_Traced_Map_Location_Local) == 0x000070, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_Get_Traced_Map_Location_Local' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000088, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, K2Node_ClassDynamicCast_AsW_Command_Action_Control) == 0x000090, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::K2Node_ClassDynamicCast_AsW_Command_Action_Control' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, K2Node_ClassDynamicCast_bSuccess) == 0x000098, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, K2Node_DynamicCast_AsSQGrid_Data_Base_Option) == 0x0000A0, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::K2Node_DynamicCast_AsSQGrid_Data_Base_Option' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_Create_ReturnValue) == 0x0000B0, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, K2Node_Event_Mouse_Event) == 0x0000B8, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::K2Node_Event_Mouse_Event' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, K2Node_Event_World_Location) == 0x000128, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::K2Node_Event_World_Location' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement, CallFunc_Validate_Action_Valid) == 0x000134, "Member 'W_CommandPrePlacement_C_ExecuteUbergraph_W_CommandPrePlacement::CallFunc_Validate_Action_Valid' has a wrong offset!");

// Function W_CommandPrePlacement.W_CommandPrePlacement_C.On Map Mouse Down
// 0x0080 (0x0080 - 0x0000)
struct W_CommandPrePlacement_C_On_Map_Mouse_Down final
{
public:
	struct FPointerEvent                          Mouse_Event;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector                                World_Location;                                    // 0x0070(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandPrePlacement_C_On_Map_Mouse_Down) == 0x000008, "Wrong alignment on W_CommandPrePlacement_C_On_Map_Mouse_Down");
static_assert(sizeof(W_CommandPrePlacement_C_On_Map_Mouse_Down) == 0x000080, "Wrong size on W_CommandPrePlacement_C_On_Map_Mouse_Down");
static_assert(offsetof(W_CommandPrePlacement_C_On_Map_Mouse_Down, Mouse_Event) == 0x000000, "Member 'W_CommandPrePlacement_C_On_Map_Mouse_Down::Mouse_Event' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_On_Map_Mouse_Down, World_Location) == 0x000070, "Member 'W_CommandPrePlacement_C_On_Map_Mouse_Down::World_Location' has a wrong offset!");

// Function W_CommandPrePlacement.W_CommandPrePlacement_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_CommandPrePlacement_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandPrePlacement_C_Tick) == 0x000004, "Wrong alignment on W_CommandPrePlacement_C_Tick");
static_assert(sizeof(W_CommandPrePlacement_C_Tick) == 0x00003C, "Wrong size on W_CommandPrePlacement_C_Tick");
static_assert(offsetof(W_CommandPrePlacement_C_Tick, MyGeometry) == 0x000000, "Member 'W_CommandPrePlacement_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Tick, InDeltaTime) == 0x000038, "Member 'W_CommandPrePlacement_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_CommandPrePlacement.W_CommandPrePlacement_C.Set Action
// 0x0020 (0x0020 - 0x0000)
struct W_CommandPrePlacement_C_Set_Action final
{
public:
	class UClass*                                 Param_SQAction;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGridData_BaseOption*                 K2Node_DynamicCast_AsSQGrid_Data_Base_Option;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_CommandPrePlacement_C_Set_Action) == 0x000008, "Wrong alignment on W_CommandPrePlacement_C_Set_Action");
static_assert(sizeof(W_CommandPrePlacement_C_Set_Action) == 0x000020, "Wrong size on W_CommandPrePlacement_C_Set_Action");
static_assert(offsetof(W_CommandPrePlacement_C_Set_Action, Param_SQAction) == 0x000000, "Member 'W_CommandPrePlacement_C_Set_Action::Param_SQAction' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Set_Action, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000008, "Member 'W_CommandPrePlacement_C_Set_Action::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Set_Action, K2Node_DynamicCast_AsSQGrid_Data_Base_Option) == 0x000010, "Member 'W_CommandPrePlacement_C_Set_Action::K2Node_DynamicCast_AsSQGrid_Data_Base_Option' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Set_Action, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_CommandPrePlacement_C_Set_Action::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_CommandPrePlacement.W_CommandPrePlacement_C.Get Traced Map Location
// 0x01A8 (0x01A8 - 0x0000)
struct W_CommandPrePlacement_C_Get_Traced_Map_Location final
{
public:
	struct FVector                                Zero;                                              // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local;                                             // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseZeroOriginOntoLocal_ReturnValue;    // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseZeroOriginOntoLocal_ReturnValue_1;  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45AA[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45AB[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45AC[0x1];                                     // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45AD[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45AE[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscape*                             K2Node_DynamicCast_AsLandscape;                    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45AF[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandPrePlacement_C_Get_Traced_Map_Location) == 0x000008, "Wrong alignment on W_CommandPrePlacement_C_Get_Traced_Map_Location");
static_assert(sizeof(W_CommandPrePlacement_C_Get_Traced_Map_Location) == 0x0001A8, "Wrong size on W_CommandPrePlacement_C_Get_Traced_Map_Location");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, Zero) == 0x000000, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::Zero' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, Local) == 0x00000C, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::Local' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, Temp_int_Array_Index_Variable) == 0x000018, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_RebaseZeroOriginOntoLocal_ReturnValue) == 0x000024, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_RebaseZeroOriginOntoLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_RebaseZeroOriginOntoLocal_ReturnValue_1) == 0x000030, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_RebaseZeroOriginOntoLocal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, Temp_object_Variable) == 0x000040, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_LineTraceMulti_OutHits) == 0x000068, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_LineTraceMulti_ReturnValue) == 0x000078, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_Array_Get_Item) == 0x000080, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_bBlockingHit) == 0x000109, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010A, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_Location) == 0x000114, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_Normal) == 0x00012C, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_ImpactNormal) == 0x000138, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_PhysMat) == 0x000148, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_HitActor) == 0x000150, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_HitComponent) == 0x000158, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_HitBoneName) == 0x000160, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_HitItem) == 0x000168, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_ElementIndex) == 0x00016C, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_FaceIndex) == 0x000170, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_TraceStart) == 0x000174, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_BreakHitResult_TraceEnd) == 0x000180, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, K2Node_DynamicCast_AsLandscape) == 0x000190, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::K2Node_DynamicCast_AsLandscape' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Get_Traced_Map_Location, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x00019C, "Member 'W_CommandPrePlacement_C_Get_Traced_Map_Location::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");

// Function W_CommandPrePlacement.W_CommandPrePlacement_C.Cache Local World Location
// 0x0048 (0x0048 - 0x0000)
struct W_CommandPrePlacement_C_Cache_Local_World_Location final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45B0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Mouse_Position_to_World_Location_ReturnValue; // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CommandPrePlacement_C_Cache_Local_World_Location) == 0x000008, "Wrong alignment on W_CommandPrePlacement_C_Cache_Local_World_Location");
static_assert(sizeof(W_CommandPrePlacement_C_Cache_Local_World_Location) == 0x000048, "Wrong size on W_CommandPrePlacement_C_Cache_Local_World_Location");
static_assert(offsetof(W_CommandPrePlacement_C_Cache_Local_World_Location, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'W_CommandPrePlacement_C_Cache_Local_World_Location::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Cache_Local_World_Location, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'W_CommandPrePlacement_C_Cache_Local_World_Location::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Cache_Local_World_Location, K2Node_DynamicCast_AsBPI_HUD) == 0x000010, "Member 'W_CommandPrePlacement_C_Cache_Local_World_Location::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Cache_Local_World_Location, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_CommandPrePlacement_C_Cache_Local_World_Location::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Cache_Local_World_Location, CallFunc_Get_Map_Core_Map_Core) == 0x000028, "Member 'W_CommandPrePlacement_C_Cache_Local_World_Location::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Cache_Local_World_Location, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000030, "Member 'W_CommandPrePlacement_C_Cache_Local_World_Location::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CommandPrePlacement_C_Cache_Local_World_Location, CallFunc_Mouse_Position_to_World_Location_ReturnValue) == 0x000038, "Member 'W_CommandPrePlacement_C_Cache_Local_World_Location::CallFunc_Mouse_Position_to_World_Location_ReturnValue' has a wrong offset!");

}


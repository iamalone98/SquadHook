#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPA_Standard_Lighting

#include "Basic.hpp"

#include "TonemapperSettingsEnum_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ColorGradingSettingsEnum_structs.hpp"
#include "Vector4Struct_structs.hpp"


namespace SDK::Params
{

// Function BPA_Standard_Lighting.BPA_Standard_Lighting_C.ExecuteUbergraph_BPA_Standard_Lighting
// 0x00A0 (0x00A0 - 0x0000)
struct BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USQGameUserSettings* UserSettings)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_23CB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23CC[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ASQOcean*                               CallFunc_GetActorOfClass_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23CD[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Ocean_C*                            K2Node_DynamicCast_AsBP_Ocean;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23CE[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class USQGameUserSettings*              K2Node_CustomEvent_UserSettings;                   // 0x0078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23CF[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAntiAliasingQuality_ReturnValue;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D0[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting) == 0x000008, "Wrong alignment on BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting");
static_assert(sizeof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting) == 0x0000A0, "Wrong size on BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, EntryPoint) == 0x000000, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_GetSquadGameState_Return_Value) == 0x000018, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000020, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000024, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000030, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00003C, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_K2_SetTimer_ReturnValue) == 0x000050, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_GetActorOfClass_ReturnValue) == 0x000058, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, K2Node_DynamicCast_AsBP_Ocean) == 0x000068, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::K2Node_DynamicCast_AsBP_Ocean' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, K2Node_CustomEvent_UserSettings) == 0x000078, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::K2Node_CustomEvent_UserSettings' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000080, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_GetAntiAliasingQuality_ReturnValue) == 0x00008C, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_GetAntiAliasingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_BooleanOR_ReturnValue) == 0x000091, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000094, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000098, "Member 'BPA_Standard_Lighting_C_ExecuteUbergraph_BPA_Standard_Lighting::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");

// Function BPA_Standard_Lighting.BPA_Standard_Lighting_C.OnGameUserSettingsChanged
// 0x0008 (0x0008 - 0x0000)
struct BPA_Standard_Lighting_C_OnGameUserSettingsChanged final
{
public:
	const class USQGameUserSettings*              UserSettings;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPA_Standard_Lighting_C_OnGameUserSettingsChanged) == 0x000008, "Wrong alignment on BPA_Standard_Lighting_C_OnGameUserSettingsChanged");
static_assert(sizeof(BPA_Standard_Lighting_C_OnGameUserSettingsChanged) == 0x000008, "Wrong size on BPA_Standard_Lighting_C_OnGameUserSettingsChanged");
static_assert(offsetof(BPA_Standard_Lighting_C_OnGameUserSettingsChanged, UserSettings) == 0x000000, "Member 'BPA_Standard_Lighting_C_OnGameUserSettingsChanged::UserSettings' has a wrong offset!");

// Function BPA_Standard_Lighting.BPA_Standard_Lighting_C.Update Skysphere
// 0x01F0 (0x01F0 - 0x0000)
struct BPA_Standard_Lighting_C_Update_Skysphere final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D2[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0094(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x013C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x01D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D3[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPA_Standard_Lighting_C_Update_Skysphere) == 0x000008, "Wrong alignment on BPA_Standard_Lighting_C_Update_Skysphere");
static_assert(sizeof(BPA_Standard_Lighting_C_Update_Skysphere) == 0x0001F0, "Wrong size on BPA_Standard_Lighting_C_Update_Skysphere");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, Temp_bool_Variable) == 0x000000, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, Temp_object_Variable) == 0x000008, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, Temp_object_Variable_1) == 0x000010, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, K2Node_Select_Default) == 0x000018, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_DegreesToRadians_ReturnValue) == 0x000024, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Sin_ReturnValue) == 0x000028, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Cos_ReturnValue) == 0x00002C, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_SelectFloat_ReturnValue) == 0x00003C, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000040, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000060, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000074, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000078, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000084, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000094, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00011C, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000120, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_MakeRotator_ReturnValue) == 0x000130, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00013C, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x0001C4, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0001D4, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001E4, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_Abs_ReturnValue) == 0x0001E8, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Skysphere, CallFunc_SelectFloat_ReturnValue_1) == 0x0001EC, "Member 'BPA_Standard_Lighting_C_Update_Skysphere::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function BPA_Standard_Lighting.BPA_Standard_Lighting_C.Update Directional Light
// 0x00F4 (0x00F4 - 0x0000)
struct BPA_Standard_Lighting_C_Update_Directional_Light final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x006C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPA_Standard_Lighting_C_Update_Directional_Light) == 0x000004, "Wrong alignment on BPA_Standard_Lighting_C_Update_Directional_Light");
static_assert(sizeof(BPA_Standard_Lighting_C_Update_Directional_Light) == 0x0000F4, "Wrong size on BPA_Standard_Lighting_C_Update_Directional_Light");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_MapRangeUnclamped_ReturnValue) == 0x00001C, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_MakeRotator_ReturnValue_1) == 0x00002C, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000038, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000048, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000054, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000060, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Directional_Light, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00006C, "Member 'BPA_Standard_Lighting_C_Update_Directional_Light::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BPA_Standard_Lighting.BPA_Standard_Lighting_C.Update Fog
// 0x0094 (0x0094 - 0x0000)
struct BPA_Standard_Lighting_C_Update_Fog final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPA_Standard_Lighting_C_Update_Fog) == 0x000004, "Wrong alignment on BPA_Standard_Lighting_C_Update_Fog");
static_assert(sizeof(BPA_Standard_Lighting_C_Update_Fog) == 0x000094, "Wrong size on BPA_Standard_Lighting_C_Update_Fog");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Fog, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'BPA_Standard_Lighting_C_Update_Fog::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Fog, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00000C, "Member 'BPA_Standard_Lighting_C_Update_Fog::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BPA_Standard_Lighting.BPA_Standard_Lighting_C.Update Post Processing
// 0x0720 (0x0720 - 0x0000)
struct BPA_Standard_Lighting_C_Update_Post_Processing final
{
public:
	float                                         Temp_float_Variable;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETonemapperSettingsEnum                       Temp_byte_Variable;                                // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D4[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETonemapperSettingsEnum                       Temp_byte_Variable_1;                              // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D5[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETonemapperSettingsEnum                       Temp_byte_Variable_2;                              // 0x0014(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D6[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETonemapperSettingsEnum                       Temp_byte_Variable_3;                              // 0x001C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D7[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EColorGradingSettingsEnum                     Temp_byte_Variable_4;                              // 0x0034(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorGradingSettingsEnum                     Temp_byte_Variable_5;                              // 0x0035(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorGradingSettingsEnum                     Temp_byte_Variable_6;                              // 0x0036(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorGradingSettingsEnum                     Temp_byte_Variable_7;                              // 0x0037(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EColorGradingSettingsEnum                     Temp_byte_Variable_8;                              // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D8[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETonemapperSettingsEnum                       Temp_byte_Variable_9;                              // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D9[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DA[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_1;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DB[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value_2;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DC[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_3;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DD[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value_4;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DE[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4Struct                         CallFunc_Map_Find_Value_5;                         // 0x0094(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23DF[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4Struct                         CallFunc_Map_Find_Value_6;                         // 0x00AC(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E0[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E1[0xC];                                     // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4_1;                       // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4Struct                         CallFunc_Map_Find_Value_7;                         // 0x00F0(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E2[0xB];                                     // 0x0105(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_Select_Default_6;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4Struct                         CallFunc_Map_Find_Value_8;                         // 0x0120(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_8;                   // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E3[0xB];                                     // 0x0135(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4_2;                       // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_Select_Default_7;                           // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4Struct                         CallFunc_Map_Find_Value_9;                         // 0x0160(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_9;                   // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E4[0xB];                                     // 0x0175(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4_3;                       // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_Select_Default_8;                           // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_MakeStruct_Vector4_4;                       // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_Select_Default_9;                           // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x01C0(0x0560)()
};
static_assert(alignof(BPA_Standard_Lighting_C_Update_Post_Processing) == 0x000010, "Wrong alignment on BPA_Standard_Lighting_C_Update_Post_Processing");
static_assert(sizeof(BPA_Standard_Lighting_C_Update_Post_Processing) == 0x000720, "Wrong size on BPA_Standard_Lighting_C_Update_Post_Processing");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_float_Variable) == 0x000000, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable) == 0x000004, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable) == 0x000005, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_float_Variable_1) == 0x000008, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable_1) == 0x00000C, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable_1) == 0x00000D, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_float_Variable_2) == 0x000010, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable_2) == 0x000014, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable_2) == 0x000015, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_float_Variable_3) == 0x000018, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable_3) == 0x00001C, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable_3) == 0x00001D, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_struct_Variable) == 0x000020, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable_4) == 0x000030, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable_5) == 0x000031, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable_6) == 0x000032, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable_7) == 0x000033, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable_4) == 0x000034, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable_5) == 0x000035, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable_6) == 0x000036, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable_7) == 0x000037, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable_8) == 0x000038, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable_8) == 0x000039, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_float_Variable_4) == 0x00003C, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_byte_Variable_9) == 0x000040, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, Temp_bool_Variable_9) == 0x000041, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value) == 0x000044, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value_1) == 0x00004C, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue_1) == 0x000050, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default) == 0x000054, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default_1) == 0x000058, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value_2) == 0x00005C, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue_2) == 0x000060, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value_3) == 0x000064, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue_3) == 0x000068, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default_2) == 0x00006C, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default_3) == 0x000070, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value_4) == 0x000074, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue_4) == 0x000078, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_MakeStruct_Vector4) == 0x000080, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default_4) == 0x000090, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value_5) == 0x000094, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue_5) == 0x0000A8, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value_6) == 0x0000AC, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue_6) == 0x0000C0, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default_5) == 0x0000C4, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_MakeStruct_Vector4_1) == 0x0000E0, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_MakeStruct_Vector4_1' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value_7) == 0x0000F0, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue_7) == 0x000104, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default_6) == 0x000110, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value_8) == 0x000120, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value_8' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue_8) == 0x000134, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_MakeStruct_Vector4_2) == 0x000140, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_MakeStruct_Vector4_2' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default_7) == 0x000150, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_Value_9) == 0x000160, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_Value_9' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, CallFunc_Map_Find_ReturnValue_9) == 0x000174, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::CallFunc_Map_Find_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_MakeStruct_Vector4_3) == 0x000180, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_MakeStruct_Vector4_3' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default_8) == 0x000190, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_MakeStruct_Vector4_4) == 0x0001A0, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_MakeStruct_Vector4_4' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_Select_Default_9) == 0x0001B0, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BPA_Standard_Lighting_C_Update_Post_Processing, K2Node_MakeStruct_PostProcessSettings) == 0x0001C0, "Member 'BPA_Standard_Lighting_C_Update_Post_Processing::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");

}


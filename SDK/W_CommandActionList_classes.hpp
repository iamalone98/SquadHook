#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CommandActionList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CommandActionList.W_CommandActionList_C
// 0x0070 (0x02D0 - 0x0260)
class UW_CommandActionList_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                BorderMain;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           CategoryBox;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Requirements;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_1;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_TacticoolTimer;                                 // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_Strategic_Timer;                                // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tactical_Time_Remaining;                           // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Tactical_Locked;                                   // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4451[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Strategic_Time_Remaining;                          // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Strategic_Locked;                                  // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4452[0x3];                                     // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CommandPrePlacement_C*               Pre_Placement_Widget;                              // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    My_PC;                                             // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         Current_Commander;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Additional_Distance;                               // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Turn_Speed;                                        // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_CommandActionList(int32 EntryPoint);
	void Update_Requirements_Text();
	void Command_Changed(class ASQPlayerState* OldCommander, class ASQPlayerState* NewCommander);
	void Bind_Commander_Changed();
	void Parent_Closed();
	void Parent_Opened();
	void Bind_To_Menu_Open_Close(class UUMG_MenuBase_C* Menu);
	void Team_Changed(class ASQTeamState* OldTeam, class ASQTeamState* NewTeam);
	void Get_Player_State();
	void Construct();
	void Init_Actions_List();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CommandActionList_C">();
	}
	static class UW_CommandActionList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CommandActionList_C>();
	}
};
static_assert(alignof(UW_CommandActionList_C) == 0x000008, "Wrong alignment on UW_CommandActionList_C");
static_assert(sizeof(UW_CommandActionList_C) == 0x0002D0, "Wrong size on UW_CommandActionList_C");
static_assert(offsetof(UW_CommandActionList_C, UberGraphFrame) == 0x000260, "Member 'UW_CommandActionList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, BorderMain) == 0x000268, "Member 'UW_CommandActionList_C::BorderMain' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, CategoryBox) == 0x000270, "Member 'UW_CommandActionList_C::CategoryBox' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, Image_4) == 0x000278, "Member 'UW_CommandActionList_C::Image_4' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, TB_Requirements) == 0x000280, "Member 'UW_CommandActionList_C::TB_Requirements' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, TextBlock_1) == 0x000288, "Member 'UW_CommandActionList_C::TextBlock_1' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, MI_TacticoolTimer) == 0x000290, "Member 'UW_CommandActionList_C::MI_TacticoolTimer' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, MI_Strategic_Timer) == 0x000298, "Member 'UW_CommandActionList_C::MI_Strategic_Timer' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, Tactical_Time_Remaining) == 0x0002A0, "Member 'UW_CommandActionList_C::Tactical_Time_Remaining' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, Tactical_Locked) == 0x0002A4, "Member 'UW_CommandActionList_C::Tactical_Locked' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, Strategic_Time_Remaining) == 0x0002A8, "Member 'UW_CommandActionList_C::Strategic_Time_Remaining' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, Strategic_Locked) == 0x0002AC, "Member 'UW_CommandActionList_C::Strategic_Locked' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, Pre_Placement_Widget) == 0x0002B0, "Member 'UW_CommandActionList_C::Pre_Placement_Widget' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, My_PC) == 0x0002B8, "Member 'UW_CommandActionList_C::My_PC' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, Current_Commander) == 0x0002C0, "Member 'UW_CommandActionList_C::Current_Commander' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, Additional_Distance) == 0x0002C8, "Member 'UW_CommandActionList_C::Additional_Distance' has a wrong offset!");
static_assert(offsetof(UW_CommandActionList_C, Turn_Speed) == 0x0002CC, "Member 'UW_CommandActionList_C::Turn_Speed' has a wrong offset!");

}


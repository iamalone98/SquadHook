#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SteelSeriesGameSense

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "SteelSeriesGameSense_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class SteelSeriesGameSense.SSGS_ClientBPLibrary
// 0x0000 (0x0028 - 0x0028)
class USSGS_ClientBPLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BindEvent(const class FString& GameName, const class FString& EventName, int32 MinValue, int32 MaxValue, ESSGS_EventIconId IconId, class USSGS_HandlerCollection*& Handlers, bool ValueOptional);
	static void RegisterEvent(const class FString& GameName, const class FString& EventName, int32 MinValue, int32 MaxValue, ESSGS_EventIconId IconId, bool ValueOptional);
	static void RegisterGame(const class FString& GameName, const class FString& GameDisplayName, const class FString& Developer);
	static void RemoveEvent(const class FString& GameName, const class FString& EventName);
	static void RemoveGame(const class FString& GameName);
	static void SendEvent(const class FString& GameName, const class FString& EventName, const struct FSSGS_EventData& Data);
	static bool Start();
	static void Stop();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ClientBPLibrary">();
	}
	static class USSGS_ClientBPLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ClientBPLibrary>();
	}
};
static_assert(alignof(USSGS_ClientBPLibrary) == 0x000008, "Wrong alignment on USSGS_ClientBPLibrary");
static_assert(sizeof(USSGS_ClientBPLibrary) == 0x000028, "Wrong size on USSGS_ClientBPLibrary");

// Class SteelSeriesGameSense.SSGS_ColorEffectSpecification
// 0x0008 (0x0030 - 0x0028)
class USSGS_ColorEffectSpecification : public UObject
{
public:
	uint8                                         Pad_17EF[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ColorEffectSpecification">();
	}
	static class USSGS_ColorEffectSpecification* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ColorEffectSpecification>();
	}
};
static_assert(alignof(USSGS_ColorEffectSpecification) == 0x000008, "Wrong alignment on USSGS_ColorEffectSpecification");
static_assert(sizeof(USSGS_ColorEffectSpecification) == 0x000030, "Wrong size on USSGS_ColorEffectSpecification");

// Class SteelSeriesGameSense.SSGS_ColorEffectSpecificationGradient
// 0x0008 (0x0038 - 0x0030)
class USSGS_ColorEffectSpecificationGradient final : public USSGS_ColorEffectSpecification
{
public:
	struct FSSGS_ColorGradient                    Gradient;                                          // 0x0030(0x0006)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_17F0[0x2];                                     // 0x0036(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USSGS_ColorEffectSpecificationGradient* MakeGradientColorEffect(const struct FSSGS_RGB& Zero, const struct FSSGS_RGB& Hundred);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ColorEffectSpecificationGradient">();
	}
	static class USSGS_ColorEffectSpecificationGradient* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ColorEffectSpecificationGradient>();
	}
};
static_assert(alignof(USSGS_ColorEffectSpecificationGradient) == 0x000008, "Wrong alignment on USSGS_ColorEffectSpecificationGradient");
static_assert(sizeof(USSGS_ColorEffectSpecificationGradient) == 0x000038, "Wrong size on USSGS_ColorEffectSpecificationGradient");
static_assert(offsetof(USSGS_ColorEffectSpecificationGradient, Gradient) == 0x000030, "Member 'USSGS_ColorEffectSpecificationGradient::Gradient' has a wrong offset!");

// Class SteelSeriesGameSense.SSGS_ColorEffectSpecificationRanges
// 0x0010 (0x0040 - 0x0030)
class USSGS_ColorEffectSpecificationRanges final : public USSGS_ColorEffectSpecification
{
public:
	TArray<struct FSSGS_ColorRange>               Ranges;                                            // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static struct FSSGS_ColorRange MakeGradientColorRange(int32 Low, int32 High, const struct FSSGS_RGB& Zero, const struct FSSGS_RGB& Hundred);
	static class USSGS_ColorEffectSpecificationRanges* MakeRangeColorEffect(const TArray<struct FSSGS_ColorRange>& V);
	static struct FSSGS_ColorRange MakeStaticColorRange(int32 Low, int32 High, const struct FSSGS_RGB& Color);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ColorEffectSpecificationRanges">();
	}
	static class USSGS_ColorEffectSpecificationRanges* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ColorEffectSpecificationRanges>();
	}
};
static_assert(alignof(USSGS_ColorEffectSpecificationRanges) == 0x000008, "Wrong alignment on USSGS_ColorEffectSpecificationRanges");
static_assert(sizeof(USSGS_ColorEffectSpecificationRanges) == 0x000040, "Wrong size on USSGS_ColorEffectSpecificationRanges");
static_assert(offsetof(USSGS_ColorEffectSpecificationRanges, Ranges) == 0x000030, "Member 'USSGS_ColorEffectSpecificationRanges::Ranges' has a wrong offset!");

// Class SteelSeriesGameSense.SSGS_ColorEffectSpecificationStatic
// 0x0008 (0x0038 - 0x0030)
class USSGS_ColorEffectSpecificationStatic final : public USSGS_ColorEffectSpecification
{
public:
	struct FSSGS_RGB                              Color;                                             // 0x0030(0x0003)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_17F4[0x5];                                     // 0x0033(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USSGS_ColorEffectSpecificationStatic* MakeStaticColorEffect(const struct FSSGS_RGB& Param_Color);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ColorEffectSpecificationStatic">();
	}
	static class USSGS_ColorEffectSpecificationStatic* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ColorEffectSpecificationStatic>();
	}
};
static_assert(alignof(USSGS_ColorEffectSpecificationStatic) == 0x000008, "Wrong alignment on USSGS_ColorEffectSpecificationStatic");
static_assert(sizeof(USSGS_ColorEffectSpecificationStatic) == 0x000038, "Wrong size on USSGS_ColorEffectSpecificationStatic");
static_assert(offsetof(USSGS_ColorEffectSpecificationStatic, Color) == 0x000030, "Member 'USSGS_ColorEffectSpecificationStatic::Color' has a wrong offset!");

// Class SteelSeriesGameSense.SSGS_IlluminationDeviceZoneFactory
// 0x0000 (0x0028 - 0x0028)
class USSGS_IlluminationDeviceZoneFactory final : public UObject
{
public:
	static const struct FSSGS_IlluminationDeviceZone Make_headset_earcups();
	static const struct FSSGS_IlluminationDeviceZone Make_indicator_one();
	static const struct FSSGS_IlluminationDeviceZone Make_keyboad_function_keys();
	static const struct FSSGS_IlluminationDeviceZone Make_keyboad_keypad();
	static const struct FSSGS_IlluminationDeviceZone Make_keyboad_macro_keys();
	static const struct FSSGS_IlluminationDeviceZone Make_keyboad_main_keyboard();
	static const struct FSSGS_IlluminationDeviceZone Make_keyboad_number_keys();
	static const struct FSSGS_IlluminationDeviceZone Make_mouse_logo();
	static const struct FSSGS_IlluminationDeviceZone Make_mouse_wheel();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb1zone_one();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb2zone_one();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb2zone_two();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb3zone_one();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb3zone_three();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb3zone_two();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb4zone_four();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb4zone_one();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb4zone_three();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb4zone_two();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb5zone_five();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb5zone_four();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb5zone_one();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb5zone_three();
	static const struct FSSGS_IlluminationDeviceZone Make_rgb5zone_two();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_a_row();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_all();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_arrows();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_custom(const TArray<uint8>& V);
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_function_keys();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_keypad();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_keypad_nums();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_macro_keys();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_main_keyboard();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_nav_cluster();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_number_keys();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_q_row();
	static const struct FSSGS_IlluminationDeviceZone Make_rgbperkeyzones_z_row();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_IlluminationDeviceZoneFactory">();
	}
	static class USSGS_IlluminationDeviceZoneFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_IlluminationDeviceZoneFactory>();
	}
};
static_assert(alignof(USSGS_IlluminationDeviceZoneFactory) == 0x000008, "Wrong alignment on USSGS_IlluminationDeviceZoneFactory");
static_assert(sizeof(USSGS_IlluminationDeviceZoneFactory) == 0x000028, "Wrong size on USSGS_IlluminationDeviceZoneFactory");

// Class SteelSeriesGameSense.SSGS_TactileDeviceZoneFactory
// 0x0000 (0x0028 - 0x0028)
class USSGS_TactileDeviceZoneFactory final : public UObject
{
public:
	static const struct FSSGS_TactileDeviceZone Make_tactile_one();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_TactileDeviceZoneFactory">();
	}
	static class USSGS_TactileDeviceZoneFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_TactileDeviceZoneFactory>();
	}
};
static_assert(alignof(USSGS_TactileDeviceZoneFactory) == 0x000008, "Wrong alignment on USSGS_TactileDeviceZoneFactory");
static_assert(sizeof(USSGS_TactileDeviceZoneFactory) == 0x000028, "Wrong size on USSGS_TactileDeviceZoneFactory");

// Class SteelSeriesGameSense.SSGS_ScreenDeviceZoneFactory
// 0x0000 (0x0028 - 0x0028)
class USSGS_ScreenDeviceZoneFactory final : public UObject
{
public:
	static const struct FSSGS_ScreenDeviceZone Make_screened_128x36_one();
	static const struct FSSGS_ScreenDeviceZone Make_screened_128x40_one();
	static const struct FSSGS_ScreenDeviceZone Make_screened_128x48_one();
	static const struct FSSGS_ScreenDeviceZone Make_screened_128x52_one();
	static const struct FSSGS_ScreenDeviceZone Make_screened_one();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ScreenDeviceZoneFactory">();
	}
	static class USSGS_ScreenDeviceZoneFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ScreenDeviceZoneFactory>();
	}
};
static_assert(alignof(USSGS_ScreenDeviceZoneFactory) == 0x000008, "Wrong alignment on USSGS_ScreenDeviceZoneFactory");
static_assert(sizeof(USSGS_ScreenDeviceZoneFactory) == 0x000028, "Wrong size on USSGS_ScreenDeviceZoneFactory");

// Class SteelSeriesGameSense.SSGS_Frame
// 0x0008 (0x0030 - 0x0028)
class USSGS_Frame : public UObject
{
public:
	uint8                                         Pad_17F6[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_Frame">();
	}
	static class USSGS_Frame* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_Frame>();
	}
};
static_assert(alignof(USSGS_Frame) == 0x000008, "Wrong alignment on USSGS_Frame");
static_assert(sizeof(USSGS_Frame) == 0x000030, "Wrong size on USSGS_Frame");

// Class SteelSeriesGameSense.SSGS_ImageDataSource
// 0x0000 (0x0028 - 0x0028)
class USSGS_ImageDataSource : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ImageDataSource">();
	}
	static class USSGS_ImageDataSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ImageDataSource>();
	}
};
static_assert(alignof(USSGS_ImageDataSource) == 0x000008, "Wrong alignment on USSGS_ImageDataSource");
static_assert(sizeof(USSGS_ImageDataSource) == 0x000028, "Wrong size on USSGS_ImageDataSource");

// Class SteelSeriesGameSense.SSGS_ImageDataTexture2D
// 0x0008 (0x0030 - 0x0028)
class USSGS_ImageDataTexture2D final : public USSGS_ImageDataSource
{
public:
	uint8                                         Pad_17F7[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USSGS_ImageDataTexture2D* MakeImageDataFromTexture(class UTexture2D* Texture);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ImageDataTexture2D">();
	}
	static class USSGS_ImageDataTexture2D* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ImageDataTexture2D>();
	}
};
static_assert(alignof(USSGS_ImageDataTexture2D) == 0x000008, "Wrong alignment on USSGS_ImageDataTexture2D");
static_assert(sizeof(USSGS_ImageDataTexture2D) == 0x000030, "Wrong size on USSGS_ImageDataTexture2D");

// Class SteelSeriesGameSense.SSGS_ImageDataArray
// 0x0010 (0x0038 - 0x0028)
class USSGS_ImageDataArray final : public USSGS_ImageDataSource
{
public:
	uint8                                         Pad_17F8[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USSGS_ImageDataArray* MakeImageDataFromArray(const TArray<uint8>& PackedBinaryImage);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ImageDataArray">();
	}
	static class USSGS_ImageDataArray* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ImageDataArray>();
	}
};
static_assert(alignof(USSGS_ImageDataArray) == 0x000008, "Wrong alignment on USSGS_ImageDataArray");
static_assert(sizeof(USSGS_ImageDataArray) == 0x000038, "Wrong size on USSGS_ImageDataArray");

// Class SteelSeriesGameSense.SSGS_FrameObject
// 0x0010 (0x0040 - 0x0030)
class USSGS_FrameObject final : public USSGS_Frame
{
public:
	TArray<struct FSSGS_KeyValuePair>             Properties;                                        // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class USSGS_FrameObject* MakeFrameObject(const TArray<struct FSSGS_KeyValuePair>& Param_Properties);
	static struct FSSGS_KeyValuePair MakePropertyBool(const class FString& Param_Name, bool Value);
	static struct FSSGS_KeyValuePair MakePropertyBoolArray(const class FString& Param_Name, const TArray<bool>& Value);
	static struct FSSGS_KeyValuePair MakePropertyByte(const class FString& Param_Name, uint8 Value);
	static struct FSSGS_KeyValuePair MakePropertyByteArray(const class FString& Param_Name, const TArray<uint8>& Value);
	static struct FSSGS_KeyValuePair MakePropertyFloat(const class FString& Param_Name, float Value);
	static struct FSSGS_KeyValuePair MakePropertyFloatArray(const class FString& Param_Name, const TArray<float>& Value);
	static struct FSSGS_KeyValuePair MakePropertyInt(const class FString& Param_Name, int32 Value);
	static struct FSSGS_KeyValuePair MakePropertyIntArray(const class FString& Param_Name, const TArray<int32>& Value);
	static struct FSSGS_KeyValuePair MakePropertyObject(const class FString& Param_Name, const TArray<struct FSSGS_KeyValuePair>& ObjectProperties);
	static struct FSSGS_KeyValuePair MakePropertyObjectArray(const class FString& Param_Name, const TArray<struct FSSGS_PropertyContainer>& Value);
	static struct FSSGS_KeyValuePair MakePropertyString(const class FString& Param_Name, const class FString& Value);
	static struct FSSGS_KeyValuePair MakePropertyStringArray(const class FString& Param_Name, const TArray<class FString>& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_FrameObject">();
	}
	static class USSGS_FrameObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_FrameObject>();
	}
};
static_assert(alignof(USSGS_FrameObject) == 0x000008, "Wrong alignment on USSGS_FrameObject");
static_assert(sizeof(USSGS_FrameObject) == 0x000040, "Wrong size on USSGS_FrameObject");
static_assert(offsetof(USSGS_FrameObject, Properties) == 0x000030, "Member 'USSGS_FrameObject::Properties' has a wrong offset!");

// Class SteelSeriesGameSense.SSGS_HandlerCollection
// 0x0038 (0x0060 - 0x0028)
class USSGS_HandlerCollection final : public UObject
{
public:
	uint8                                         Pad_17FD[0x38];                                    // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USSGS_HandlerCollection* MakeHandlerCollection();

	void AddColorHandler(const struct FSSGS_IlluminationDeviceZone& DeviceZone, ESSGS_IlluminationMode Mode, class USSGS_ColorEffectSpecification*& ColorSpec, class USSGS_RateSpecification* RateSpec);
	void AddScreenHandler(const struct FSSGS_ScreenDeviceZone& DeviceZone, class USSGS_ScreenDataSpecification*& Pattern);
	void AddTactileHandler(const struct FSSGS_TactileDeviceZone& DeviceZone, class USSGS_TactilePatternSpecification*& Pattern, class USSGS_RateSpecification* Rate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_HandlerCollection">();
	}
	static class USSGS_HandlerCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_HandlerCollection>();
	}
};
static_assert(alignof(USSGS_HandlerCollection) == 0x000008, "Wrong alignment on USSGS_HandlerCollection");
static_assert(sizeof(USSGS_HandlerCollection) == 0x000060, "Wrong size on USSGS_HandlerCollection");

// Class SteelSeriesGameSense.SSGS_PredefinedTactilePatternFactory
// 0x0000 (0x0028 - 0x0028)
class USSGS_PredefinedTactilePatternFactory final : public UObject
{
public:
	static const struct FSSGS_PredefinedTactilePattern Pattern_buzz1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_buzz2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_buzz3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_buzz4_40();
	static const struct FSSGS_PredefinedTactilePattern Pattern_buzz5_20();
	static const struct FSSGS_PredefinedTactilePattern Pattern_buzzalert1000ms();
	static const struct FSSGS_PredefinedTactilePattern Pattern_buzzalert750ms();
	static const struct FSSGS_PredefinedTactilePattern Pattern_doubleclick_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_doubleclick_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longbuzzforprogrammaticstopping_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharpclickmedium1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharpclickmedium2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharpclickmedium3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharpclickstrong1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharpclickstrong2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharpclickstrong3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharpclickstrong4_30();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharptick1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharptick2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_longdoublesharptick3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_mediumclick1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_mediumclick2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_mediumclick3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_pulsingmedium1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_pulsingmedium2_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_pulsingsharp1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_pulsingsharp2_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_pulsingstrong1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_pulsingstrong2_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_sharpclick_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_sharpclick_30();
	static const struct FSSGS_PredefinedTactilePattern Pattern_sharpclick_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_sharptick1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_sharptick2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_sharptick3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoubleclickmedium1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoubleclickmedium2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoubleclickmedium3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoubleclickstrong1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoubleclickstrong2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoubleclickstrong3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoubleclickstrong4_30();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoublesharptick1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoublesharptick2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_shortdoublesharptick3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_smoothhum1nokickorbrakepulse_50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_smoothhum2nokickorbrakepulse_40();
	static const struct FSSGS_PredefinedTactilePattern Pattern_smoothhum3nokickorbrakepulse_30();
	static const struct FSSGS_PredefinedTactilePattern Pattern_smoothhum4nokickorbrakepulse_20();
	static const struct FSSGS_PredefinedTactilePattern Pattern_smoothhum5nokickorbrakepulse_10();
	static const struct FSSGS_PredefinedTactilePattern Pattern_softbump_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_softbump_30();
	static const struct FSSGS_PredefinedTactilePattern Pattern_softbump_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_softfuzz_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_strongbuzz_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_strongclick1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_strongclick2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_strongclick3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_strongclick4_30();
	static const struct FSSGS_PredefinedTactilePattern Pattern_strongclick_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_strongclick_30();
	static const struct FSSGS_PredefinedTactilePattern Pattern_strongclick_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionclick1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionclick2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionclick3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionclick4_40();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionclick5_20();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionclick6_10();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionhum1_100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionhum2_80();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionhum3_60();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionhum4_40();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionhum5_20();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionhum6_10();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownlongsharp1_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownlongsharp1_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownlongsharp2_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownlongsharp2_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownlongsmooth1_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownlongsmooth1_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownlongsmooth2_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownlongsmooth2_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownmediumsharp1_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownmediumsharp1_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownmediumsharp2_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownmediumsharp2_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownmediumsmooth1_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownmediumsmooth1_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownmediumsmooth2_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownmediumsmooth2_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownshortsharp1_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownshortsharp1_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownshortsharp2_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownshortsharp2_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownshortsmooth1_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownshortsmooth1_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownshortsmooth2_100to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampdownshortsmooth2_50to0();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampuplongsharp1_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampuplongsharp1_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampuplongsharp2_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampuplongsharp2_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampuplongsmooth1_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampuplongsmooth1_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampuplongsmooth2_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampuplongsmooth2_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupmediumsharp1_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupmediumsharp1_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupmediumsharp2_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupmediumsharp2_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupmediumsmooth1_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupmediumsmooth1_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupmediumsmooth2_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupmediumsmooth2_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupshortsharp1_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupshortsharp1_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupshortsharp2_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupshortsharp2_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupshortsmooth1_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupshortsmooth1_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupshortsmooth2_0to100();
	static const struct FSSGS_PredefinedTactilePattern Pattern_transitionrampupshortsmooth2_0to50();
	static const struct FSSGS_PredefinedTactilePattern Pattern_tripleclick_100();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_PredefinedTactilePatternFactory">();
	}
	static class USSGS_PredefinedTactilePatternFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_PredefinedTactilePatternFactory>();
	}
};
static_assert(alignof(USSGS_PredefinedTactilePatternFactory) == 0x000008, "Wrong alignment on USSGS_PredefinedTactilePatternFactory");
static_assert(sizeof(USSGS_PredefinedTactilePatternFactory) == 0x000028, "Wrong size on USSGS_PredefinedTactilePatternFactory");

// Class SteelSeriesGameSense.SSGS_RateSpecification
// 0x0038 (0x0060 - 0x0028)
class USSGS_RateSpecification final : public UObject
{
public:
	uint8                                         Pad_17FF[0x38];                                    // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USSGS_RateSpecification* MakeRangedRate(const TArray<struct FSSGS_FrequencyRepeatLimitPair>& V);
	static class USSGS_RateSpecification* MakeStaticRate(int32 Frequency, int32 Repeat_limit);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_RateSpecification">();
	}
	static class USSGS_RateSpecification* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_RateSpecification>();
	}
};
static_assert(alignof(USSGS_RateSpecification) == 0x000008, "Wrong alignment on USSGS_RateSpecification");
static_assert(sizeof(USSGS_RateSpecification) == 0x000060, "Wrong size on USSGS_RateSpecification");

// Class SteelSeriesGameSense.SSGS_ScreenDataSpecification
// 0x0008 (0x0030 - 0x0028)
class USSGS_ScreenDataSpecification : public UObject
{
public:
	uint8                                         Pad_1800[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static struct FSSGS_LineDataAccessor MakeContextFrameKeyAccessor(const class FString& Key);
	static struct FSSGS_FrameModifiers MakeFrameModifiers(int32 Length_millis, bool Repeats);
	static struct FSSGS_FrameModifiers MakeFrameModifiersWithNoRepeat(int32 Length_millis);
	static struct FSSGS_FrameModifiers MakeFrameModifiersWithRepeatCount(int32 Length_millis, int32 Repeat_count);
	static struct FSSGS_LineDataAccessor MakeGoLispExpressionAccessor(const class FString& Expression);
	static struct FSSGS_FrameData MakeImageFrameData(class USSGS_ImageDataSource*& Source, const struct FSSGS_ScreenDeviceZone& Dz, const struct FSSGS_FrameModifiers& FrameModifiers);
	static struct FSSGS_FrameData MakeMultiLineFrameData(const TArray<struct FSSGS_LineData>& Lines, const struct FSSGS_FrameModifiers& FrameModifiers, ESSGS_EventIconId Icon_id);
	static struct FSSGS_LineData MakeProgressBarLineData(const struct FSSGS_LineDataAccessor& Accessor);
	static struct FSSGS_FrameData MakeSingleLineFrameData(const struct FSSGS_LineData& LineData, const struct FSSGS_FrameModifiers& FrameModifiers, ESSGS_EventIconId Icon_id);
	static struct FSSGS_LineData MakeTextLineData(const struct FSSGS_LineDataText& TextModifiers, const struct FSSGS_LineDataAccessor& Accessor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ScreenDataSpecification">();
	}
	static class USSGS_ScreenDataSpecification* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ScreenDataSpecification>();
	}
};
static_assert(alignof(USSGS_ScreenDataSpecification) == 0x000008, "Wrong alignment on USSGS_ScreenDataSpecification");
static_assert(sizeof(USSGS_ScreenDataSpecification) == 0x000030, "Wrong size on USSGS_ScreenDataSpecification");

// Class SteelSeriesGameSense.SSGS_ScreenDataSpecificationRanges
// 0x0010 (0x0040 - 0x0030)
class USSGS_ScreenDataSpecificationRanges final : public USSGS_ScreenDataSpecification
{
public:
	TArray<struct FSSGS_FrameDataRange>           Datas;                                             // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class USSGS_ScreenDataSpecificationRanges* MakeScreenDataRanges(const TArray<struct FSSGS_FrameDataRange>& Param_Datas);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ScreenDataSpecificationRanges">();
	}
	static class USSGS_ScreenDataSpecificationRanges* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ScreenDataSpecificationRanges>();
	}
};
static_assert(alignof(USSGS_ScreenDataSpecificationRanges) == 0x000008, "Wrong alignment on USSGS_ScreenDataSpecificationRanges");
static_assert(sizeof(USSGS_ScreenDataSpecificationRanges) == 0x000040, "Wrong size on USSGS_ScreenDataSpecificationRanges");
static_assert(offsetof(USSGS_ScreenDataSpecificationRanges, Datas) == 0x000030, "Member 'USSGS_ScreenDataSpecificationRanges::Datas' has a wrong offset!");

// Class SteelSeriesGameSense.SSGS_ScreenDataSpecificationStatic
// 0x0010 (0x0040 - 0x0030)
class USSGS_ScreenDataSpecificationStatic final : public USSGS_ScreenDataSpecification
{
public:
	TArray<struct FSSGS_FrameData>                Datas;                                             // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class USSGS_ScreenDataSpecificationStatic* MakeStaticScreenData(const TArray<struct FSSGS_FrameData>& Param_Datas);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_ScreenDataSpecificationStatic">();
	}
	static class USSGS_ScreenDataSpecificationStatic* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_ScreenDataSpecificationStatic>();
	}
};
static_assert(alignof(USSGS_ScreenDataSpecificationStatic) == 0x000008, "Wrong alignment on USSGS_ScreenDataSpecificationStatic");
static_assert(sizeof(USSGS_ScreenDataSpecificationStatic) == 0x000040, "Wrong size on USSGS_ScreenDataSpecificationStatic");
static_assert(offsetof(USSGS_ScreenDataSpecificationStatic, Datas) == 0x000030, "Member 'USSGS_ScreenDataSpecificationStatic::Datas' has a wrong offset!");

// Class SteelSeriesGameSense.SSGS_TactilePatternSpecification
// 0x0008 (0x0030 - 0x0028)
class USSGS_TactilePatternSpecification : public UObject
{
public:
	uint8                                         Pad_1805[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_TactilePatternSpecification">();
	}
	static class USSGS_TactilePatternSpecification* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_TactilePatternSpecification>();
	}
};
static_assert(alignof(USSGS_TactilePatternSpecification) == 0x000008, "Wrong alignment on USSGS_TactilePatternSpecification");
static_assert(sizeof(USSGS_TactilePatternSpecification) == 0x000030, "Wrong size on USSGS_TactilePatternSpecification");

// Class SteelSeriesGameSense.SSGS_TactilePatternSpecificationRanges
// 0x0010 (0x0040 - 0x0030)
class USSGS_TactilePatternSpecificationRanges final : public USSGS_TactilePatternSpecification
{
public:
	uint8                                         Pad_1806[0x10];                                    // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USSGS_TactilePatternSpecificationRanges* MakeRangedTactilePattern(const TArray<struct FSSGS_TactilePatternRange>& Ranges);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_TactilePatternSpecificationRanges">();
	}
	static class USSGS_TactilePatternSpecificationRanges* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_TactilePatternSpecificationRanges>();
	}
};
static_assert(alignof(USSGS_TactilePatternSpecificationRanges) == 0x000008, "Wrong alignment on USSGS_TactilePatternSpecificationRanges");
static_assert(sizeof(USSGS_TactilePatternSpecificationRanges) == 0x000040, "Wrong size on USSGS_TactilePatternSpecificationRanges");

// Class SteelSeriesGameSense.SSGS_TactilePatternSpecificationStatic
// 0x0010 (0x0040 - 0x0030)
class USSGS_TactilePatternSpecificationStatic final : public USSGS_TactilePatternSpecification
{
public:
	uint8                                         Pad_1807[0x10];                                    // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static TArray<struct FSSGS_TactilePatternStatic> MakeStaticEmptyPattern();
	static class USSGS_TactilePatternSpecificationStatic* MakeStaticTactilePattern(const TArray<struct FSSGS_TactilePatternStatic>& Pattern);
	static struct FSSGS_TactilePatternStatic MakeStaticWithCustomEffect(int32 Length_ms, int32 Delay_ms);
	static struct FSSGS_TactilePatternStatic MakeStaticWithPredefinedEffect(const struct FSSGS_PredefinedTactilePattern& Type, int32 Delay_ms);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SSGS_TactilePatternSpecificationStatic">();
	}
	static class USSGS_TactilePatternSpecificationStatic* GetDefaultObj()
	{
		return GetDefaultObjImpl<USSGS_TactilePatternSpecificationStatic>();
	}
};
static_assert(alignof(USSGS_TactilePatternSpecificationStatic) == 0x000008, "Wrong alignment on USSGS_TactilePatternSpecificationStatic");
static_assert(sizeof(USSGS_TactilePatternSpecificationStatic) == 0x000040, "Wrong size on USSGS_TactilePatternSpecificationStatic");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD

#include "Basic.hpp"

#include "Squad_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UIZOrderStruct_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function BP_HUD.BP_HUD_C.Zoom Updated__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_C_Zoom_Updated__DelegateSignature final
{
public:
	float                                         Zoom_Amount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Zoom_Updated__DelegateSignature) == 0x000004, "Wrong alignment on BP_HUD_C_Zoom_Updated__DelegateSignature");
static_assert(sizeof(BP_HUD_C_Zoom_Updated__DelegateSignature) == 0x000004, "Wrong size on BP_HUD_C_Zoom_Updated__DelegateSignature");
static_assert(offsetof(BP_HUD_C_Zoom_Updated__DelegateSignature, Zoom_Amount) == 0x000000, "Member 'BP_HUD_C_Zoom_Updated__DelegateSignature::Zoom_Amount' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Menu Closed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Menu_Closed__DelegateSignature final
{
public:
	class UUMG_MenuBase_C*                        Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Menu_Closed__DelegateSignature) == 0x000008, "Wrong alignment on BP_HUD_C_Menu_Closed__DelegateSignature");
static_assert(sizeof(BP_HUD_C_Menu_Closed__DelegateSignature) == 0x000008, "Wrong size on BP_HUD_C_Menu_Closed__DelegateSignature");
static_assert(offsetof(BP_HUD_C_Menu_Closed__DelegateSignature, Menu) == 0x000000, "Member 'BP_HUD_C_Menu_Closed__DelegateSignature::Menu' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Menu Opened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Menu_Opened__DelegateSignature final
{
public:
	class UUMG_MenuBase_C*                        Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Menu_Opened__DelegateSignature) == 0x000008, "Wrong alignment on BP_HUD_C_Menu_Opened__DelegateSignature");
static_assert(sizeof(BP_HUD_C_Menu_Opened__DelegateSignature) == 0x000008, "Wrong size on BP_HUD_C_Menu_Opened__DelegateSignature");
static_assert(offsetof(BP_HUD_C_Menu_Opened__DelegateSignature, Menu) == 0x000000, "Member 'BP_HUD_C_Menu_Opened__DelegateSignature::Menu' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.ExecuteUbergraph_BP_HUD
// 0x03D0 (0x03D0 - 0x0000)
struct BP_HUD_C_ExecuteUbergraph_BP_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A0[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQCloudServicesSubsystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SizeX;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SizeY;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DamageTaken;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDamageEvent                           K2Node_Event_DamageEvent;                          // 0x0038(0x0010)(ConstParm)
	class APawn*                                  K2Node_Event_PawnInstigator;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class USQVehicleViewWidget>       K2Node_Event_WidgetClass;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A1[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleViewWidget*                   CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A2[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WorldMarker_C*                       CallFunc_Create_ReturnValue_1;                     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A3[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployableAmmoBag*                   K2Node_Event_AmmoBag_1;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCanPickup;                           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A4[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployableAmmoBag*                   K2Node_Event_AmmoBag;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Items_C>          K2Node_DynamicCast_AsBPI_Items;                    // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A5[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Items_C>          K2Node_DynamicCast_AsBPI_Items_1;                  // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A6[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Zoom_Amount;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_1;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_2;  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQBaseHudWidget*                       CallFunc_Create_ReturnValue_2;                     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bEnabled;                             // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A7[0x5];                                     // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVisible;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A8[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Winning_Team;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Losing_Team;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Winning_Tickets;                // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Losing_Tickets;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A9[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_3;  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44AA[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Scoreboard_C>     K2Node_DynamicCast_AsBPI_Scoreboard;               // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44AB[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_EndRound_Base_C*                     CallFunc_Create_ReturnValue_3;                     // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQMapMarker*                           K2Node_Event_Marker;                               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_Model;                                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Close_Command;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Event_Context;                              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBaseRadialMenu_C*                      CallFunc_CreateRadialMenu_OutputPin;               // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        K2Node_Event_Menu;                                 // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show;                                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Instant;                              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44AC[0x6];                                     // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        K2Node_Event_In_Menu;                              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show_Mouse;                           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44AD[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Winning_Team;                         // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Losing_Team;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Winning_Tickets;                      // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Loser_Tickets;                        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44AE[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Axis;                                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQMapMarkerVisualData                 K2Node_Event_MapMarkerVisualData;                  // 0x01A8(0x00C8)(NoDestructor)
	struct FSQMapMarkerVisualData                 K2Node_CustomEvent_MapMarkerVisualData;            // 0x0270(0x00C8)(NoDestructor)
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD;                 // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44AF[0x6];                                     // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B0[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0358(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HudWidgetsEnabled_ReturnValue;            // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B1[0x3];                                     // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0364(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44B2[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0378(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameStateValid_IsValid;                 // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B3[0x2];                                     // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0384(0x0010)(NoDestructor)
	bool                                          CallFunc_IsEndOfMatch_Out_Is_End_Of_Match;         // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0396(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0397(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingInEditor_ReturnValue;         // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B4[0x6];                                     // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      CallFunc_CreateEmoteMenu_OutputPin;                // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B5[0x3];                                     // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FPlayerData& PlayerData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x03AC(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B6[0x3];                                     // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD_1;               // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_ExecuteUbergraph_BP_HUD) == 0x000008, "Wrong alignment on BP_HUD_C_ExecuteUbergraph_BP_HUD");
static_assert(sizeof(BP_HUD_C_ExecuteUbergraph_BP_HUD) == 0x0003D0, "Wrong size on BP_HUD_C_ExecuteUbergraph_BP_HUD");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, EntryPoint) == 0x000000, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, Temp_byte_Variable) == 0x000004, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_SizeX) == 0x000028, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_SizeX' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_SizeY) == 0x00002C, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_SizeY' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_DamageTaken) == 0x000034, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_DamageTaken' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_DamageEvent) == 0x000038, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_DamageEvent' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_PawnInstigator) == 0x000048, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_PawnInstigator' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_FClamp_ReturnValue) == 0x000054, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_WidgetClass) == 0x000058, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_WidgetClass' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, Temp_bool_Variable) == 0x000060, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000068, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_Create_ReturnValue) == 0x000070, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_Create_ReturnValue_1) == 0x000080, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue_2) == 0x000088, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue_3) == 0x000089, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_AmmoBag_1) == 0x000090, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_AmmoBag_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_bCanPickup) == 0x000098, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_bCanPickup' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_AmmoBag) == 0x0000A0, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_AmmoBag' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_AsBPI_Items) == 0x0000A8, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_AsBPI_Items' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_AsBPI_Items_1) == 0x0000C0, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_AsBPI_Items_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_CustomEvent_Zoom_Amount) == 0x0000D4, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_CustomEvent_Zoom_Amount' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_GetOwningPlayerController_ReturnValue_1) == 0x0000D8, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_GetOwningPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_GetOwningPlayerController_ReturnValue_2) == 0x0000E0, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_GetOwningPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_Create_ReturnValue_2) == 0x0000E8, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_EndPlayReason) == 0x0000F0, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue_4) == 0x0000F1, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_bEnabled) == 0x0000F2, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Actor) == 0x0000F8, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_bIsVisible) == 0x000100, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_bIsVisible' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_CustomEvent_Winning_Team) == 0x000104, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_CustomEvent_Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_CustomEvent_Losing_Team) == 0x000108, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_CustomEvent_Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_CustomEvent_Winning_Tickets) == 0x00010C, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_CustomEvent_Winning_Tickets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_CustomEvent_Losing_Tickets) == 0x000110, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_CustomEvent_Losing_Tickets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_GetOwningPlayerController_ReturnValue_3) == 0x000118, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_GetOwningPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsVisible_ReturnValue) == 0x000120, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue_5) == 0x000121, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue_6) == 0x000122, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsVisible_ReturnValue_1) == 0x000123, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_AsBPI_Scoreboard) == 0x000128, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_AsBPI_Scoreboard' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_bSuccess_2) == 0x000138, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_Create_ReturnValue_3) == 0x000140, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Marker) == 0x000148, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Marker' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Model) == 0x000150, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Model' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Close_Command) == 0x000158, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Close_Command' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Context) == 0x000160, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Context' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_CreateRadialMenu_OutputPin) == 0x000168, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_CreateRadialMenu_OutputPin' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Menu) == 0x000170, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Menu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Show) == 0x000178, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Show' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Instant) == 0x000179, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Instant' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_In_Menu) == 0x000180, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_In_Menu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Show_Mouse) == 0x000188, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Show_Mouse' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Winning_Team) == 0x00018C, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Losing_Team) == 0x000190, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Winning_Tickets) == 0x000194, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Winning_Tickets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Loser_Tickets) == 0x000198, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Loser_Tickets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_GetDataTableRowFromName_OutRow) == 0x00019C, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001A0, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_Axis) == 0x0001A4, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_Axis' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Event_MapMarkerVisualData) == 0x0001A8, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Event_MapMarkerVisualData' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_CustomEvent_MapMarkerVisualData) == 0x000270, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_CustomEvent_MapMarkerVisualData' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_AsUMG_Base_HUD) == 0x000338, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_AsUMG_Base_HUD' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_bSuccess_3) == 0x000340, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue_7) == 0x000341, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_AddChildToCanvas_ReturnValue) == 0x000348, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue_8) == 0x000350, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000358, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_HudWidgetsEnabled_ReturnValue) == 0x000360, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_HudWidgetsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x000364, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000378, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsValid_ReturnValue_9) == 0x000380, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsGameStateValid_IsValid) == 0x000381, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsGameStateValid_IsValid' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_MakeStruct_Anchors) == 0x000384, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsEndOfMatch_Out_Is_End_Of_Match) == 0x000394, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsEndOfMatch_Out_Is_End_Of_Match' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_Not_PreBool_ReturnValue) == 0x000395, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsVisible_ReturnValue_2) == 0x000396, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_Not_PreBool_ReturnValue_1) == 0x000397, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_IsSimulatingInEditor_ReturnValue) == 0x000398, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_IsSimulatingInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_BooleanAND_ReturnValue) == 0x000399, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, CallFunc_CreateEmoteMenu_OutputPin) == 0x0003A0, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::CallFunc_CreateEmoteMenu_OutputPin' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, Temp_byte_Variable_1) == 0x0003A8, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_CreateDelegate_OutputDelegate_2) == 0x0003AC, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_Select_Default) == 0x0003BC, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_AsUMG_Base_HUD_1) == 0x0003C0, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_AsUMG_Base_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ExecuteUbergraph_BP_HUD, K2Node_DynamicCast_bSuccess_4) == 0x0003C8, "Member 'BP_HUD_C_ExecuteUbergraph_BP_HUD::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CreateMapMarker
// 0x00C8 (0x00C8 - 0x0000)
struct BP_HUD_C_CreateMapMarker final
{
public:
	struct FSQMapMarkerVisualData                 MapMarkerVisualData;                               // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_HUD_C_CreateMapMarker) == 0x000008, "Wrong alignment on BP_HUD_C_CreateMapMarker");
static_assert(sizeof(BP_HUD_C_CreateMapMarker) == 0x0000C8, "Wrong size on BP_HUD_C_CreateMapMarker");
static_assert(offsetof(BP_HUD_C_CreateMapMarker, MapMarkerVisualData) == 0x000000, "Member 'BP_HUD_C_CreateMapMarker::MapMarkerVisualData' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.ShowMarkerOnHUD
// 0x00C8 (0x00C8 - 0x0000)
struct BP_HUD_C_ShowMarkerOnHUD final
{
public:
	struct FSQMapMarkerVisualData                 MapMarkerVisualData;                               // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_HUD_C_ShowMarkerOnHUD) == 0x000008, "Wrong alignment on BP_HUD_C_ShowMarkerOnHUD");
static_assert(sizeof(BP_HUD_C_ShowMarkerOnHUD) == 0x0000C8, "Wrong size on BP_HUD_C_ShowMarkerOnHUD");
static_assert(offsetof(BP_HUD_C_ShowMarkerOnHUD, MapMarkerVisualData) == 0x000000, "Member 'BP_HUD_C_ShowMarkerOnHUD::MapMarkerVisualData' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Zoom In Map Wheel
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_C_Zoom_In_Map_Wheel final
{
public:
	float                                         Axis;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Zoom_In_Map_Wheel) == 0x000004, "Wrong alignment on BP_HUD_C_Zoom_In_Map_Wheel");
static_assert(sizeof(BP_HUD_C_Zoom_In_Map_Wheel) == 0x000004, "Wrong size on BP_HUD_C_Zoom_In_Map_Wheel");
static_assert(offsetof(BP_HUD_C_Zoom_In_Map_Wheel, Axis) == 0x000000, "Member 'BP_HUD_C_Zoom_In_Map_Wheel::Axis' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.End Match
// 0x0010 (0x0010 - 0x0000)
struct BP_HUD_C_End_Match final
{
public:
	int32                                         Winning_Team;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Losing_Team;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Winning_Tickets;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Loser_Tickets;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_End_Match) == 0x000004, "Wrong alignment on BP_HUD_C_End_Match");
static_assert(sizeof(BP_HUD_C_End_Match) == 0x000010, "Wrong size on BP_HUD_C_End_Match");
static_assert(offsetof(BP_HUD_C_End_Match, Winning_Team) == 0x000000, "Member 'BP_HUD_C_End_Match::Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_End_Match, Losing_Team) == 0x000004, "Member 'BP_HUD_C_End_Match::Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_End_Match, Winning_Tickets) == 0x000008, "Member 'BP_HUD_C_End_Match::Winning_Tickets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_End_Match, Loser_Tickets) == 0x00000C, "Member 'BP_HUD_C_End_Match::Loser_Tickets' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Menu Toggle
// 0x0018 (0x0018 - 0x0000)
struct BP_HUD_C_Menu_Toggle final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        In_Menu;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Mouse;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Menu_Toggle) == 0x000008, "Wrong alignment on BP_HUD_C_Menu_Toggle");
static_assert(sizeof(BP_HUD_C_Menu_Toggle) == 0x000018, "Wrong size on BP_HUD_C_Menu_Toggle");
static_assert(offsetof(BP_HUD_C_Menu_Toggle, Instant) == 0x000000, "Member 'BP_HUD_C_Menu_Toggle::Instant' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Menu_Toggle, In_Menu) == 0x000008, "Member 'BP_HUD_C_Menu_Toggle::In_Menu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Menu_Toggle, Show_Mouse) == 0x000010, "Member 'BP_HUD_C_Menu_Toggle::Show_Mouse' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Show Leaderboard
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_C_Show_Leaderboard final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Show_Leaderboard) == 0x000001, "Wrong alignment on BP_HUD_C_Show_Leaderboard");
static_assert(sizeof(BP_HUD_C_Show_Leaderboard) == 0x000001, "Wrong size on BP_HUD_C_Show_Leaderboard");
static_assert(offsetof(BP_HUD_C_Show_Leaderboard, Show) == 0x000000, "Member 'BP_HUD_C_Show_Leaderboard::Show' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Menu Close
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Menu_Close final
{
public:
	class UUMG_MenuBase_C*                        Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Menu_Close) == 0x000008, "Wrong alignment on BP_HUD_C_Menu_Close");
static_assert(sizeof(BP_HUD_C_Menu_Close) == 0x000008, "Wrong size on BP_HUD_C_Menu_Close");
static_assert(offsetof(BP_HUD_C_Menu_Close, Menu) == 0x000000, "Member 'BP_HUD_C_Menu_Close::Menu' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Create Radial Menu
// 0x0018 (0x0018 - 0x0000)
struct BP_HUD_C_Create_Radial_Menu final
{
public:
	class UClass*                                 Model;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Close_Command;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Context;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Create_Radial_Menu) == 0x000008, "Wrong alignment on BP_HUD_C_Create_Radial_Menu");
static_assert(sizeof(BP_HUD_C_Create_Radial_Menu) == 0x000018, "Wrong size on BP_HUD_C_Create_Radial_Menu");
static_assert(offsetof(BP_HUD_C_Create_Radial_Menu, Model) == 0x000000, "Member 'BP_HUD_C_Create_Radial_Menu::Model' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Radial_Menu, Close_Command) == 0x000008, "Member 'BP_HUD_C_Create_Radial_Menu::Close_Command' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Radial_Menu, Context) == 0x000010, "Member 'BP_HUD_C_Create_Radial_Menu::Context' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Show 3D Marker
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Show_3D_Marker final
{
public:
	class ASQMapMarker*                           Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Show_3D_Marker) == 0x000008, "Wrong alignment on BP_HUD_C_Show_3D_Marker");
static_assert(sizeof(BP_HUD_C_Show_3D_Marker) == 0x000008, "Wrong size on BP_HUD_C_Show_3D_Marker");
static_assert(offsetof(BP_HUD_C_Show_3D_Marker, Marker) == 0x000000, "Member 'BP_HUD_C_Show_3D_Marker::Marker' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Show End Round Widget
// 0x0010 (0x0010 - 0x0000)
struct BP_HUD_C_Show_End_Round_Widget final
{
public:
	int32                                         Winning_Team;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Losing_Team;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Winning_Tickets;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Losing_Tickets;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Show_End_Round_Widget) == 0x000004, "Wrong alignment on BP_HUD_C_Show_End_Round_Widget");
static_assert(sizeof(BP_HUD_C_Show_End_Round_Widget) == 0x000010, "Wrong size on BP_HUD_C_Show_End_Round_Widget");
static_assert(offsetof(BP_HUD_C_Show_End_Round_Widget, Winning_Team) == 0x000000, "Member 'BP_HUD_C_Show_End_Round_Widget::Winning_Team' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Show_End_Round_Widget, Losing_Team) == 0x000004, "Member 'BP_HUD_C_Show_End_Round_Widget::Losing_Team' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Show_End_Round_Widget, Winning_Tickets) == 0x000008, "Member 'BP_HUD_C_Show_End_Round_Widget::Winning_Tickets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Show_End_Round_Widget, Losing_Tickets) == 0x00000C, "Member 'BP_HUD_C_Show_End_Round_Widget::Losing_Tickets' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.BPOnUsableVisible
// 0x0010 (0x0010 - 0x0000)
struct BP_HUD_C_BPOnUsableVisible final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVisible;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_BPOnUsableVisible) == 0x000008, "Wrong alignment on BP_HUD_C_BPOnUsableVisible");
static_assert(sizeof(BP_HUD_C_BPOnUsableVisible) == 0x000010, "Wrong size on BP_HUD_C_BPOnUsableVisible");
static_assert(offsetof(BP_HUD_C_BPOnUsableVisible, Actor) == 0x000000, "Member 'BP_HUD_C_BPOnUsableVisible::Actor' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_BPOnUsableVisible, bIsVisible) == 0x000008, "Member 'BP_HUD_C_BPOnUsableVisible::bIsVisible' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.BPOnSetHudWidgetsEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_C_BPOnSetHudWidgetsEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_BPOnSetHudWidgetsEnabled) == 0x000001, "Wrong alignment on BP_HUD_C_BPOnSetHudWidgetsEnabled");
static_assert(sizeof(BP_HUD_C_BPOnSetHudWidgetsEnabled) == 0x000001, "Wrong size on BP_HUD_C_BPOnSetHudWidgetsEnabled");
static_assert(offsetof(BP_HUD_C_BPOnSetHudWidgetsEnabled, bEnabled) == 0x000000, "Member 'BP_HUD_C_BPOnSetHudWidgetsEnabled::bEnabled' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_HUD_C_ReceiveEndPlay");
static_assert(sizeof(BP_HUD_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_HUD_C_ReceiveEndPlay");
static_assert(offsetof(BP_HUD_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_HUD_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Force Update Zoom
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_C_Force_Update_Zoom final
{
public:
	float                                         Zoom_Amount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Force_Update_Zoom) == 0x000004, "Wrong alignment on BP_HUD_C_Force_Update_Zoom");
static_assert(sizeof(BP_HUD_C_Force_Update_Zoom) == 0x000004, "Wrong size on BP_HUD_C_Force_Update_Zoom");
static_assert(offsetof(BP_HUD_C_Force_Update_Zoom, Zoom_Amount) == 0x000000, "Member 'BP_HUD_C_Force_Update_Zoom::Zoom_Amount' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.HideAmmoBagOverlay
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_HideAmmoBagOverlay final
{
public:
	class ASQDeployableAmmoBag*                   Ammobag;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_HideAmmoBagOverlay) == 0x000008, "Wrong alignment on BP_HUD_C_HideAmmoBagOverlay");
static_assert(sizeof(BP_HUD_C_HideAmmoBagOverlay) == 0x000008, "Wrong size on BP_HUD_C_HideAmmoBagOverlay");
static_assert(offsetof(BP_HUD_C_HideAmmoBagOverlay, Ammobag) == 0x000000, "Member 'BP_HUD_C_HideAmmoBagOverlay::Ammobag' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DisplayAmmoBagOverlay
// 0x0010 (0x0010 - 0x0000)
struct BP_HUD_C_DisplayAmmoBagOverlay final
{
public:
	class ASQDeployableAmmoBag*                   Ammobag;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanPickup;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_DisplayAmmoBagOverlay) == 0x000008, "Wrong alignment on BP_HUD_C_DisplayAmmoBagOverlay");
static_assert(sizeof(BP_HUD_C_DisplayAmmoBagOverlay) == 0x000010, "Wrong size on BP_HUD_C_DisplayAmmoBagOverlay");
static_assert(offsetof(BP_HUD_C_DisplayAmmoBagOverlay, Ammobag) == 0x000000, "Member 'BP_HUD_C_DisplayAmmoBagOverlay::Ammobag' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DisplayAmmoBagOverlay, bCanPickup) == 0x000008, "Member 'BP_HUD_C_DisplayAmmoBagOverlay::bCanPickup' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.VehicleCreateOverlay
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_VehicleCreateOverlay final
{
public:
	TSubclassOf<class USQVehicleViewWidget>       WidgetClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_VehicleCreateOverlay) == 0x000008, "Wrong alignment on BP_HUD_C_VehicleCreateOverlay");
static_assert(sizeof(BP_HUD_C_VehicleCreateOverlay) == 0x000008, "Wrong size on BP_HUD_C_VehicleCreateOverlay");
static_assert(offsetof(BP_HUD_C_VehicleCreateOverlay, WidgetClass) == 0x000000, "Member 'BP_HUD_C_VehicleCreateOverlay::WidgetClass' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.BlueprintNotifyHit
// 0x0020 (0x0020 - 0x0000)
struct BP_HUD_C_BlueprintNotifyHit final
{
public:
	float                                         DamageTaken;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageEvent                           DamageEvent;                                       // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APawn*                                  PawnInstigator;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_BlueprintNotifyHit) == 0x000008, "Wrong alignment on BP_HUD_C_BlueprintNotifyHit");
static_assert(sizeof(BP_HUD_C_BlueprintNotifyHit) == 0x000020, "Wrong size on BP_HUD_C_BlueprintNotifyHit");
static_assert(offsetof(BP_HUD_C_BlueprintNotifyHit, DamageTaken) == 0x000000, "Member 'BP_HUD_C_BlueprintNotifyHit::DamageTaken' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_BlueprintNotifyHit, DamageEvent) == 0x000008, "Member 'BP_HUD_C_BlueprintNotifyHit::DamageEvent' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_BlueprintNotifyHit, PawnInstigator) == 0x000018, "Member 'BP_HUD_C_BlueprintNotifyHit::PawnInstigator' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_HUD_C_ReceiveTick");
static_assert(sizeof(BP_HUD_C_ReceiveTick) == 0x000004, "Wrong size on BP_HUD_C_ReceiveTick");
static_assert(offsetof(BP_HUD_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_HUD_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.ReceiveDrawHUD
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_ReceiveDrawHUD final
{
public:
	int32                                         SizeX;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeY;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_ReceiveDrawHUD) == 0x000004, "Wrong alignment on BP_HUD_C_ReceiveDrawHUD");
static_assert(sizeof(BP_HUD_C_ReceiveDrawHUD) == 0x000008, "Wrong size on BP_HUD_C_ReceiveDrawHUD");
static_assert(offsetof(BP_HUD_C_ReceiveDrawHUD, SizeX) == 0x000000, "Member 'BP_HUD_C_ReceiveDrawHUD::SizeX' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ReceiveDrawHUD, SizeY) == 0x000004, "Member 'BP_HUD_C_ReceiveDrawHUD::SizeY' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DrawTicketCount
// 0x0048 (0x0048 - 0x0000)
struct BP_HUD_C_DrawTicketCount final
{
public:
	float                                         Size_X;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44B9[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44BA[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTickets_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTextSize_OutWidth;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTextSize_OutHeight;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_DrawTicketCount) == 0x000008, "Wrong alignment on BP_HUD_C_DrawTicketCount");
static_assert(sizeof(BP_HUD_C_DrawTicketCount) == 0x000048, "Wrong size on BP_HUD_C_DrawTicketCount");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, Size_X) == 0x000000, "Member 'BP_HUD_C_DrawTicketCount::Size_X' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000004, "Member 'BP_HUD_C_DrawTicketCount::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_HUD_C_DrawTicketCount::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000010, "Member 'BP_HUD_C_DrawTicketCount::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000018, "Member 'BP_HUD_C_DrawTicketCount::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HUD_C_DrawTicketCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_HUD_C_DrawTicketCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, CallFunc_GetTickets_ReturnValue) == 0x000024, "Member 'BP_HUD_C_DrawTicketCount::CallFunc_GetTickets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_HUD_C_DrawTicketCount::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, CallFunc_GetTextSize_OutWidth) == 0x000038, "Member 'BP_HUD_C_DrawTicketCount::CallFunc_GetTextSize_OutWidth' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, CallFunc_GetTextSize_OutHeight) == 0x00003C, "Member 'BP_HUD_C_DrawTicketCount::CallFunc_GetTextSize_OutHeight' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawTicketCount, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_HUD_C_DrawTicketCount::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DrawHitIndicator
// 0x001C (0x001C - 0x0000)
struct BP_HUD_C_DrawHitIndicator final
{
public:
	float                                         Size_X;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size_Y;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44BB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_DrawHitIndicator) == 0x000004, "Wrong alignment on BP_HUD_C_DrawHitIndicator");
static_assert(sizeof(BP_HUD_C_DrawHitIndicator) == 0x00001C, "Wrong size on BP_HUD_C_DrawHitIndicator");
static_assert(offsetof(BP_HUD_C_DrawHitIndicator, Size_X) == 0x000000, "Member 'BP_HUD_C_DrawHitIndicator::Size_X' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHitIndicator, Size_Y) == 0x000004, "Member 'BP_HUD_C_DrawHitIndicator::Size_Y' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHitIndicator, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_HUD_C_DrawHitIndicator::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHitIndicator, CallFunc_MakeColor_ReturnValue) == 0x00000C, "Member 'BP_HUD_C_DrawHitIndicator::CallFunc_MakeColor_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CalculateHitIndicatorOpacity
// 0x0010 (0x0010 - 0x0000)
struct BP_HUD_C_CalculateHitIndicatorOpacity final
{
public:
	float                                         Delta_Time;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_CalculateHitIndicatorOpacity) == 0x000004, "Wrong alignment on BP_HUD_C_CalculateHitIndicatorOpacity");
static_assert(sizeof(BP_HUD_C_CalculateHitIndicatorOpacity) == 0x000010, "Wrong size on BP_HUD_C_CalculateHitIndicatorOpacity");
static_assert(offsetof(BP_HUD_C_CalculateHitIndicatorOpacity, Delta_Time) == 0x000000, "Member 'BP_HUD_C_CalculateHitIndicatorOpacity::Delta_Time' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CalculateHitIndicatorOpacity, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_HUD_C_CalculateHitIndicatorOpacity::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CalculateHitIndicatorOpacity, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_HUD_C_CalculateHitIndicatorOpacity::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CalculateHitIndicatorOpacity, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_HUD_C_CalculateHitIndicatorOpacity::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DrawHealthIcon
// 0x0038 (0x0038 - 0x0000)
struct BP_HUD_C_DrawHealthIcon final
{
public:
	float                                         Size_X;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size_Y;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44BC[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44BD[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44BE[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_DrawHealthIcon) == 0x000008, "Wrong alignment on BP_HUD_C_DrawHealthIcon");
static_assert(sizeof(BP_HUD_C_DrawHealthIcon) == 0x000038, "Wrong size on BP_HUD_C_DrawHealthIcon");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, Size_X) == 0x000000, "Member 'BP_HUD_C_DrawHealthIcon::Size_X' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, Size_Y) == 0x000004, "Member 'BP_HUD_C_DrawHealthIcon::Size_Y' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_HUD_C_DrawHealthIcon::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_HUD_C_DrawHealthIcon::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, K2Node_DynamicCast_AsSQSoldier) == 0x000018, "Member 'BP_HUD_C_DrawHealthIcon::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HUD_C_DrawHealthIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_HUD_C_DrawHealthIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'BP_HUD_C_DrawHealthIcon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, CallFunc_GetMaxHealth_ReturnValue) == 0x000024, "Member 'BP_HUD_C_DrawHealthIcon::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_HUD_C_DrawHealthIcon::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_HUD_C_DrawHealthIcon::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHealthIcon, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_HUD_C_DrawHealthIcon::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DrawHUD
// 0x0020 (0x0020 - 0x0000)
struct BP_HUD_C_DrawHUD final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size_Y;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size_X;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MapMarkersEnabledDefined_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44BF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchInProgress_ReturnValue;              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_DrawHUD) == 0x000004, "Wrong alignment on BP_HUD_C_DrawHUD");
static_assert(sizeof(BP_HUD_C_DrawHUD) == 0x000020, "Wrong size on BP_HUD_C_DrawHUD");
static_assert(offsetof(BP_HUD_C_DrawHUD, Width) == 0x000000, "Member 'BP_HUD_C_DrawHUD::Width' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHUD, Height) == 0x000004, "Member 'BP_HUD_C_DrawHUD::Height' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHUD, Size_Y) == 0x000008, "Member 'BP_HUD_C_DrawHUD::Size_Y' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHUD, Size_X) == 0x00000C, "Member 'BP_HUD_C_DrawHUD::Size_X' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHUD, CallFunc_MapMarkersEnabledDefined_ReturnValue) == 0x000010, "Member 'BP_HUD_C_DrawHUD::CallFunc_MapMarkersEnabledDefined_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHUD, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'BP_HUD_C_DrawHUD::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHUD, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000018, "Member 'BP_HUD_C_DrawHUD::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHUD, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_HUD_C_DrawHUD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawHUD, CallFunc_MatchInProgress_ReturnValue) == 0x00001D, "Member 'BP_HUD_C_DrawHUD::CallFunc_MatchInProgress_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Open Menu
// 0x0028 (0x0028 - 0x0000)
struct BP_HUD_C_Open_Menu final
{
public:
	class UUMG_MenuBase_C*                        Target_Menu;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Mouse;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C0[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Menus_C>          K2Node_DynamicCast_AsBPI_Menus;                    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Open_UI_Element_Success;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Open_Menu) == 0x000008, "Wrong alignment on BP_HUD_C_Open_Menu");
static_assert(sizeof(BP_HUD_C_Open_Menu) == 0x000028, "Wrong size on BP_HUD_C_Open_Menu");
static_assert(offsetof(BP_HUD_C_Open_Menu, Target_Menu) == 0x000000, "Member 'BP_HUD_C_Open_Menu::Target_Menu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Open_Menu, Show_Mouse) == 0x000008, "Member 'BP_HUD_C_Open_Menu::Show_Mouse' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Open_Menu, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_HUD_C_Open_Menu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Open_Menu, K2Node_DynamicCast_AsBPI_Menus) == 0x000010, "Member 'BP_HUD_C_Open_Menu::K2Node_DynamicCast_AsBPI_Menus' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Open_Menu, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HUD_C_Open_Menu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Open_Menu, CallFunc_Open_UI_Element_Success) == 0x000021, "Member 'BP_HUD_C_Open_Menu::CallFunc_Open_UI_Element_Success' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Close Menu
// 0x0028 (0x0028 - 0x0000)
struct BP_HUD_C_Close_Menu final
{
public:
	class UUMG_MenuBase_C*                        Target_Menu;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Menus_C>          K2Node_DynamicCast_AsBPI_Menus;                    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Close_UI_Element_Success;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Close_Menu) == 0x000008, "Wrong alignment on BP_HUD_C_Close_Menu");
static_assert(sizeof(BP_HUD_C_Close_Menu) == 0x000028, "Wrong size on BP_HUD_C_Close_Menu");
static_assert(offsetof(BP_HUD_C_Close_Menu, Target_Menu) == 0x000000, "Member 'BP_HUD_C_Close_Menu::Target_Menu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_Menu, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_HUD_C_Close_Menu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_Menu, K2Node_DynamicCast_AsBPI_Menus) == 0x000010, "Member 'BP_HUD_C_Close_Menu::K2Node_DynamicCast_AsBPI_Menus' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_Menu, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HUD_C_Close_Menu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_Menu, CallFunc_Close_UI_Element_Success) == 0x000021, "Member 'BP_HUD_C_Close_Menu::CallFunc_Close_UI_Element_Success' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.ZoomMap
// 0x0058 (0x0058 - 0x0000)
struct BP_HUD_C_ZoomMap final
{
public:
	class UUMG_MenuBase_C*                        L_Current_Menu;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Zoomed;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C2[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C3[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUMG_MenuBase_C*>                K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C4[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Open_Open;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Open_Transitioning;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C5[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IncrementMapZoomLevel_ReturnValue;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_ZoomMap) == 0x000008, "Wrong alignment on BP_HUD_C_ZoomMap");
static_assert(sizeof(BP_HUD_C_ZoomMap) == 0x000058, "Wrong size on BP_HUD_C_ZoomMap");
static_assert(offsetof(BP_HUD_C_ZoomMap, L_Current_Menu) == 0x000000, "Member 'BP_HUD_C_ZoomMap::L_Current_Menu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, Zoomed) == 0x000008, "Member 'BP_HUD_C_ZoomMap::Zoomed' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_HUD_C_ZoomMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_HUD_C_ZoomMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_HUD_C_ZoomMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_HUD_C_ZoomMap::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000019, "Member 'BP_HUD_C_ZoomMap::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'BP_HUD_C_ZoomMap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_HUD_C_ZoomMap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, Temp_bool_Variable) == 0x000030, "Member 'BP_HUD_C_ZoomMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_HUD_C_ZoomMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, K2Node_Select_Default) == 0x000040, "Member 'BP_HUD_C_ZoomMap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_Is_Open_Open) == 0x000048, "Member 'BP_HUD_C_ZoomMap::CallFunc_Is_Open_Open' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_Is_Open_Transitioning) == 0x000049, "Member 'BP_HUD_C_ZoomMap::CallFunc_Is_Open_Transitioning' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_HUD_C_ZoomMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_IncrementMapZoomLevel_ReturnValue) == 0x000050, "Member 'BP_HUD_C_ZoomMap::CallFunc_IncrementMapZoomLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMap, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_HUD_C_ZoomMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DrawNametag
// 0x00D8 (0x00D8 - 0x0000)
struct BP_HUD_C_DrawNametag final
{
public:
	class APawn*                                  Soldier;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Scale;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Location;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C6[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetPlayerStateFromSoldier_PlayerState;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C7[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFullPlayerName_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASQSquadState*                          CallFunc_GetSquadState_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTextSize_OutWidth;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTextSize_OutHeight;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44C8[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C9[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetCurrentRole_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMedic_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44CA[0x5];                                     // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFullPlayerName_ReturnValue_1;          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_DrawNametag) == 0x000008, "Wrong alignment on BP_HUD_C_DrawNametag");
static_assert(sizeof(BP_HUD_C_DrawNametag) == 0x0000D8, "Wrong size on BP_HUD_C_DrawNametag");
static_assert(offsetof(BP_HUD_C_DrawNametag, Soldier) == 0x000000, "Member 'BP_HUD_C_DrawNametag::Soldier' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, Scale) == 0x000008, "Member 'BP_HUD_C_DrawNametag::Scale' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, Color) == 0x000010, "Member 'BP_HUD_C_DrawNametag::Color' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, Location) == 0x000020, "Member 'BP_HUD_C_DrawNametag::Location' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_BreakVector2D_X) == 0x000028, "Member 'BP_HUD_C_DrawNametag::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'BP_HUD_C_DrawNametag::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000030, "Member 'BP_HUD_C_DrawNametag::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_HUD_C_DrawNametag::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'BP_HUD_C_DrawNametag::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_HUD_C_DrawNametag::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x000040, "Member 'BP_HUD_C_DrawNametag::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_BreakVector2D_X_1) == 0x000044, "Member 'BP_HUD_C_DrawNametag::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'BP_HUD_C_DrawNametag::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00004C, "Member 'BP_HUD_C_DrawNametag::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_HUD_C_DrawNametag::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_GetPlayerStateFromSoldier_PlayerState) == 0x000058, "Member 'BP_HUD_C_DrawNametag::CallFunc_GetPlayerStateFromSoldier_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, K2Node_DynamicCast_AsSQPlayer_State) == 0x000060, "Member 'BP_HUD_C_DrawNametag::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_HUD_C_DrawNametag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_GetFullPlayerName_ReturnValue) == 0x000070, "Member 'BP_HUD_C_DrawNametag::CallFunc_GetFullPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_GetSquadState_ReturnValue) == 0x000080, "Member 'BP_HUD_C_DrawNametag::CallFunc_GetSquadState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_GetTextSize_OutWidth) == 0x000088, "Member 'BP_HUD_C_DrawNametag::CallFunc_GetTextSize_OutWidth' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_GetTextSize_OutHeight) == 0x00008C, "Member 'BP_HUD_C_DrawNametag::CallFunc_GetTextSize_OutHeight' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_HUD_C_DrawNametag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_HUD_C_DrawNametag::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BP_HUD_C_DrawNametag::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00009C, "Member 'BP_HUD_C_DrawNametag::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A0, "Member 'BP_HUD_C_DrawNametag::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000B0, "Member 'BP_HUD_C_DrawNametag::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_GetCurrentRole_ReturnValue) == 0x0000B8, "Member 'BP_HUD_C_DrawNametag::CallFunc_GetCurrentRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C0, "Member 'BP_HUD_C_DrawNametag::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_IsMedic_ReturnValue) == 0x0000C1, "Member 'BP_HUD_C_DrawNametag::CallFunc_IsMedic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_IsValid_ReturnValue_1) == 0x0000C2, "Member 'BP_HUD_C_DrawNametag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawNametag, CallFunc_GetFullPlayerName_ReturnValue_1) == 0x0000C8, "Member 'BP_HUD_C_DrawNametag::CallFunc_GetFullPlayerName_ReturnValue_1' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CreateMainMenu
// 0x0070 (0x0070 - 0x0000)
struct BP_HUD_C_CreateMainMenu final
{
public:
	class USQMainMenuWidget*                      NewLocalVar_1;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQMainMenuWidget*                      NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44CB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMainMenuScreen_C*                      CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44CC[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMainMenuScreen_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44CD[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value_1;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_CreateMainMenu) == 0x000008, "Wrong alignment on BP_HUD_C_CreateMainMenu");
static_assert(sizeof(BP_HUD_C_CreateMainMenu) == 0x000070, "Wrong size on BP_HUD_C_CreateMainMenu");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, NewLocalVar_1) == 0x000000, "Member 'BP_HUD_C_CreateMainMenu::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, NewLocalVar_0) == 0x000008, "Member 'BP_HUD_C_CreateMainMenu::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_HUD_C_CreateMainMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_GetSquadPlayerController_Return_Value) == 0x000018, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_GetSquadPlayerController_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000020, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_Create_ReturnValue) == 0x000028, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_HUD_C_CreateMainMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00003C, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000040, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_GetSquadPlayerController_Return_Value_1) == 0x000060, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_GetSquadPlayerController_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateMainMenu, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_HUD_C_CreateMainMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.ShowHideMainMenu
// 0x0030 (0x0030 - 0x0000)
struct BP_HUD_C_ShowHideMainMenu final
{
public:
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44CE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44CF[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_ShowHideMainMenu) == 0x000008, "Wrong alignment on BP_HUD_C_ShowHideMainMenu");
static_assert(sizeof(BP_HUD_C_ShowHideMainMenu) == 0x000030, "Wrong size on BP_HUD_C_ShowHideMainMenu");
static_assert(offsetof(BP_HUD_C_ShowHideMainMenu, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000000, "Member 'BP_HUD_C_ShowHideMainMenu::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ShowHideMainMenu, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000008, "Member 'BP_HUD_C_ShowHideMainMenu::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ShowHideMainMenu, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_HUD_C_ShowHideMainMenu::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ShowHideMainMenu, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_HUD_C_ShowHideMainMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ShowHideMainMenu, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_HUD_C_ShowHideMainMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ShowHideMainMenu, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_HUD_C_ShowHideMainMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ShowHideMainMenu, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000020, "Member 'BP_HUD_C_ShowHideMainMenu::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ShowHideMainMenu, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'BP_HUD_C_ShowHideMainMenu::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CreateCommandMenu
// 0x0090 (0x0090 - 0x0000)
struct BP_HUD_C_CreateCommandMenu final
{
public:
	class UBP_TeamInfo_C*                         L_Info;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 L_PC;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 L_Model_To_Draw;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQRoleSettings*                        CallFunc_GetCurrentRole_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      CallFunc_CreateRadialMenu_OutputPin;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D1[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D2[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOfSoft_ReturnValue;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D3[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetCurrentRole_ReturnValue_1;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_1;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D4[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D5[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_CreateCommandMenu) == 0x000008, "Wrong alignment on BP_HUD_C_CreateCommandMenu");
static_assert(sizeof(BP_HUD_C_CreateCommandMenu) == 0x000090, "Wrong size on BP_HUD_C_CreateCommandMenu");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, L_Info) == 0x000000, "Member 'BP_HUD_C_CreateCommandMenu::L_Info' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, L_PC) == 0x000008, "Member 'BP_HUD_C_CreateCommandMenu::L_PC' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, L_Model_To_Draw) == 0x000010, "Member 'BP_HUD_C_CreateCommandMenu::L_Model_To_Draw' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_GetCurrentRole_ReturnValue) == 0x000018, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_GetCurrentRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_CreateRadialMenu_OutputPin) == 0x000028, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_CreateRadialMenu_OutputPin' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, K2Node_DynamicCast_AsSQPlayer_State) == 0x000030, "Member 'BP_HUD_C_CreateCommandMenu::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_HUD_C_CreateCommandMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_IsFireTeamLeader_ReturnValue) == 0x000048, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_GetObjectClass_ReturnValue) == 0x000050, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_IsSquadLeader_ReturnValue) == 0x000058, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_ClassIsChildOfSoft_ReturnValue) == 0x000059, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_ClassIsChildOfSoft_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_GetCurrentRole_ReturnValue_1) == 0x000060, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_GetCurrentRole_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_IsSquadLeader_ReturnValue_1) == 0x000068, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_IsSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_IsVisible_ReturnValue) == 0x00006A, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000070, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000078, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000080, "Member 'BP_HUD_C_CreateCommandMenu::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_HUD_C_CreateCommandMenu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateCommandMenu, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'BP_HUD_C_CreateCommandMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CreateRadialMenu
// 0x0048 (0x0048 - 0x0000)
struct BP_HUD_C_CreateRadialMenu final
{
public:
	class UClass*                                 Model;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CloseWindowCommand;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Context;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEditMode;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCenterMouse;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D6[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      OutputPin;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D7[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBaseRadialMenu_C*                      CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_CreateRadialMenu) == 0x000008, "Wrong alignment on BP_HUD_C_CreateRadialMenu");
static_assert(sizeof(BP_HUD_C_CreateRadialMenu) == 0x000048, "Wrong size on BP_HUD_C_CreateRadialMenu");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, Model) == 0x000000, "Member 'BP_HUD_C_CreateRadialMenu::Model' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, CloseWindowCommand) == 0x000008, "Member 'BP_HUD_C_CreateRadialMenu::CloseWindowCommand' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, Context) == 0x000010, "Member 'BP_HUD_C_CreateRadialMenu::Context' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, bEditMode) == 0x000018, "Member 'BP_HUD_C_CreateRadialMenu::bEditMode' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, bCenterMouse) == 0x000019, "Member 'BP_HUD_C_CreateRadialMenu::bCenterMouse' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, OutputPin) == 0x000020, "Member 'BP_HUD_C_CreateRadialMenu::OutputPin' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_HUD_C_CreateRadialMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, CallFunc_IsInViewport_ReturnValue) == 0x000029, "Member 'BP_HUD_C_CreateRadialMenu::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000030, "Member 'BP_HUD_C_CreateRadialMenu::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, CallFunc_Create_ReturnValue) == 0x000038, "Member 'BP_HUD_C_CreateRadialMenu::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_HUD_C_CreateRadialMenu::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateRadialMenu, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000044, "Member 'BP_HUD_C_CreateRadialMenu::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DestroyCommandMenu
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_C_DestroyCommandMenu final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_DestroyCommandMenu) == 0x000001, "Wrong alignment on BP_HUD_C_DestroyCommandMenu");
static_assert(sizeof(BP_HUD_C_DestroyCommandMenu) == 0x000004, "Wrong size on BP_HUD_C_DestroyCommandMenu");
static_assert(offsetof(BP_HUD_C_DestroyCommandMenu, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_HUD_C_DestroyCommandMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyCommandMenu, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'BP_HUD_C_DestroyCommandMenu::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyCommandMenu, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000002, "Member 'BP_HUD_C_DestroyCommandMenu::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyCommandMenu, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_HUD_C_DestroyCommandMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DestroyRadialMenu
// 0x0020 (0x0020 - 0x0000)
struct BP_HUD_C_DestroyRadialMenu final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_DestroyRadialMenu) == 0x000008, "Wrong alignment on BP_HUD_C_DestroyRadialMenu");
static_assert(sizeof(BP_HUD_C_DestroyRadialMenu) == 0x000020, "Wrong size on BP_HUD_C_DestroyRadialMenu");
static_assert(offsetof(BP_HUD_C_DestroyRadialMenu, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_HUD_C_DestroyRadialMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyRadialMenu, CallFunc_IsInViewport_ReturnValue) == 0x000001, "Member 'BP_HUD_C_DestroyRadialMenu::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyRadialMenu, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000008, "Member 'BP_HUD_C_DestroyRadialMenu::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyRadialMenu, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000010, "Member 'BP_HUD_C_DestroyRadialMenu::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyRadialMenu, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HUD_C_DestroyRadialMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.GetPlayerStateFromSoldier
// 0x0030 (0x0030 - 0x0000)
struct BP_HUD_C_GetPlayerStateFromSoldier final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerState;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D9[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetCurrentSeat_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_GetPlayerStateFromSoldier) == 0x000008, "Wrong alignment on BP_HUD_C_GetPlayerStateFromSoldier");
static_assert(sizeof(BP_HUD_C_GetPlayerStateFromSoldier) == 0x000030, "Wrong size on BP_HUD_C_GetPlayerStateFromSoldier");
static_assert(offsetof(BP_HUD_C_GetPlayerStateFromSoldier, Pawn) == 0x000000, "Member 'BP_HUD_C_GetPlayerStateFromSoldier::Pawn' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_GetPlayerStateFromSoldier, PlayerState) == 0x000008, "Member 'BP_HUD_C_GetPlayerStateFromSoldier::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_GetPlayerStateFromSoldier, K2Node_DynamicCast_AsSQSoldier) == 0x000010, "Member 'BP_HUD_C_GetPlayerStateFromSoldier::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_GetPlayerStateFromSoldier, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HUD_C_GetPlayerStateFromSoldier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_GetPlayerStateFromSoldier, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_HUD_C_GetPlayerStateFromSoldier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_GetPlayerStateFromSoldier, CallFunc_GetCurrentSeat_ReturnValue) == 0x000020, "Member 'BP_HUD_C_GetPlayerStateFromSoldier::CallFunc_GetCurrentSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_GetPlayerStateFromSoldier, CallFunc_IsInVehicle_ReturnValue) == 0x000028, "Member 'BP_HUD_C_GetPlayerStateFromSoldier::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DrawCurrentMapMarker
// 0x0068 (0x0068 - 0x0000)
struct BP_HUD_C_DrawCurrentMapMarker final
{
public:
	float                                         HudMarkerSize;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44DA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WorldMarker_C*                       CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44DB[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44DC[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GenericMapMarker_C*                 K2Node_DynamicCast_AsBP_Generic_Map_Marker;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44DD[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44DE[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_DrawCurrentMapMarker) == 0x000008, "Wrong alignment on BP_HUD_C_DrawCurrentMapMarker");
static_assert(sizeof(BP_HUD_C_DrawCurrentMapMarker) == 0x000068, "Wrong size on BP_HUD_C_DrawCurrentMapMarker");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, HudMarkerSize) == 0x000000, "Member 'BP_HUD_C_DrawCurrentMapMarker::HudMarkerSize' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_HUD_C_DrawCurrentMapMarker::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HUD_C_DrawCurrentMapMarker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, K2Node_DynamicCast_AsUMG_Base_HUD) == 0x000018, "Member 'BP_HUD_C_DrawCurrentMapMarker::K2Node_DynamicCast_AsUMG_Base_HUD' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HUD_C_DrawCurrentMapMarker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, CallFunc_AddChildToCanvas_ReturnValue) == 0x000028, "Member 'BP_HUD_C_DrawCurrentMapMarker::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, K2Node_DynamicCast_AsBP_Generic_Map_Marker) == 0x000030, "Member 'BP_HUD_C_DrawCurrentMapMarker::K2Node_DynamicCast_AsBP_Generic_Map_Marker' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_HUD_C_DrawCurrentMapMarker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_HUD_C_DrawCurrentMapMarker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, K2Node_DynamicCast_AsTexture_2D) == 0x000040, "Member 'BP_HUD_C_DrawCurrentMapMarker::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_HUD_C_DrawCurrentMapMarker::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'BP_HUD_C_DrawCurrentMapMarker::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x000058, "Member 'BP_HUD_C_DrawCurrentMapMarker::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DrawCurrentMapMarker, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000064, "Member 'BP_HUD_C_DrawCurrentMapMarker::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CreateScoreboard
// 0x0018 (0x0018 - 0x0000)
struct BP_HUD_C_CreateScoreboard final
{
public:
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44DF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Scoreboard_C*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_CreateScoreboard) == 0x000008, "Wrong alignment on BP_HUD_C_CreateScoreboard");
static_assert(sizeof(BP_HUD_C_CreateScoreboard) == 0x000018, "Wrong size on BP_HUD_C_CreateScoreboard");
static_assert(offsetof(BP_HUD_C_CreateScoreboard, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_HUD_C_CreateScoreboard::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateScoreboard, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000004, "Member 'BP_HUD_C_CreateScoreboard::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateScoreboard, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000008, "Member 'BP_HUD_C_CreateScoreboard::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateScoreboard, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_HUD_C_CreateScoreboard::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CreateChat
// 0x0018 (0x0018 - 0x0000)
struct BP_HUD_C_CreateChat final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44E0[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDrawChatWidget_C*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_CreateChat) == 0x000008, "Wrong alignment on BP_HUD_C_CreateChat");
static_assert(sizeof(BP_HUD_C_CreateChat) == 0x000018, "Wrong size on BP_HUD_C_CreateChat");
static_assert(offsetof(BP_HUD_C_CreateChat, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000000, "Member 'BP_HUD_C_CreateChat::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateChat, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_HUD_C_CreateChat::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateChat, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00000C, "Member 'BP_HUD_C_CreateChat::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateChat, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_HUD_C_CreateChat::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Toggle Menu
// 0x0018 (0x0018 - 0x0000)
struct BP_HUD_C_Toggle_Menu final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44E1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        In_Menu;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Mouse;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Toggle_Menu) == 0x000008, "Wrong alignment on BP_HUD_C_Toggle_Menu");
static_assert(sizeof(BP_HUD_C_Toggle_Menu) == 0x000018, "Wrong size on BP_HUD_C_Toggle_Menu");
static_assert(offsetof(BP_HUD_C_Toggle_Menu, Instant) == 0x000000, "Member 'BP_HUD_C_Toggle_Menu::Instant' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Toggle_Menu, In_Menu) == 0x000008, "Member 'BP_HUD_C_Toggle_Menu::In_Menu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Toggle_Menu, Show_Mouse) == 0x000010, "Member 'BP_HUD_C_Toggle_Menu::Show_Mouse' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Toggle_Menu, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_HUD_C_Toggle_Menu::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Clear Floating Widgets
// 0x0030 (0x0030 - 0x0000)
struct BP_HUD_C_Clear_Floating_Widgets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44E2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_FloatingWidget_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_FloatingWidget_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Clear_Floating_Widgets) == 0x000008, "Wrong alignment on BP_HUD_C_Clear_Floating_Widgets");
static_assert(sizeof(BP_HUD_C_Clear_Floating_Widgets) == 0x000030, "Wrong size on BP_HUD_C_Clear_Floating_Widgets");
static_assert(offsetof(BP_HUD_C_Clear_Floating_Widgets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HUD_C_Clear_Floating_Widgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Clear_Floating_Widgets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HUD_C_Clear_Floating_Widgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Clear_Floating_Widgets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HUD_C_Clear_Floating_Widgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Clear_Floating_Widgets, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'BP_HUD_C_Clear_Floating_Widgets::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Clear_Floating_Widgets, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_HUD_C_Clear_Floating_Widgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Clear_Floating_Widgets, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_HUD_C_Clear_Floating_Widgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Clear_Floating_Widgets, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_HUD_C_Clear_Floating_Widgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Create Command
// 0x0028 (0x0028 - 0x0000)
struct BP_HUD_C_Create_Command final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44E3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Create_Command) == 0x000008, "Wrong alignment on BP_HUD_C_Create_Command");
static_assert(sizeof(BP_HUD_C_Create_Command) == 0x000028, "Wrong size on BP_HUD_C_Create_Command");
static_assert(offsetof(BP_HUD_C_Create_Command, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_HUD_C_Create_Command::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Command, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_HUD_C_Create_Command::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Command, CallFunc_GetDataTableRowFromName_OutRow) == 0x00000C, "Member 'BP_HUD_C_Create_Command::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Command, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000010, "Member 'BP_HUD_C_Create_Command::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Command, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_HUD_C_Create_Command::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Command, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HUD_C_Create_Command::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Create RoamingMap
// 0x0028 (0x0028 - 0x0000)
struct BP_HUD_C_Create_RoamingMap final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44E4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Create_RoamingMap) == 0x000008, "Wrong alignment on BP_HUD_C_Create_RoamingMap");
static_assert(sizeof(BP_HUD_C_Create_RoamingMap) == 0x000028, "Wrong size on BP_HUD_C_Create_RoamingMap");
static_assert(offsetof(BP_HUD_C_Create_RoamingMap, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_HUD_C_Create_RoamingMap::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_RoamingMap, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_HUD_C_Create_RoamingMap::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_RoamingMap, CallFunc_GetDataTableRowFromName_OutRow) == 0x00000C, "Member 'BP_HUD_C_Create_RoamingMap::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_RoamingMap, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000010, "Member 'BP_HUD_C_Create_RoamingMap::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_RoamingMap, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_HUD_C_Create_RoamingMap::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_RoamingMap, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HUD_C_Create_RoamingMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Close All Menus
// 0x0020 (0x0020 - 0x0000)
struct BP_HUD_C_Close_All_Menus final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Close_All_Menus) == 0x000008, "Wrong alignment on BP_HUD_C_Close_All_Menus");
static_assert(sizeof(BP_HUD_C_Close_All_Menus) == 0x000020, "Wrong size on BP_HUD_C_Close_All_Menus");
static_assert(offsetof(BP_HUD_C_Close_All_Menus, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HUD_C_Close_All_Menus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_All_Menus, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HUD_C_Close_All_Menus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_All_Menus, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HUD_C_Close_All_Menus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_All_Menus, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_HUD_C_Close_All_Menus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_All_Menus, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_HUD_C_Close_All_Menus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_All_Menus, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_HUD_C_Close_All_Menus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Remove SL Menu
// 0x0038 (0x0038 - 0x0000)
struct BP_HUD_C_Remove_SL_Menu final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44E5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_GridMenu_C*>                  CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44E6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_GridMenu_C*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Remove_SL_Menu) == 0x000008, "Wrong alignment on BP_HUD_C_Remove_SL_Menu");
static_assert(sizeof(BP_HUD_C_Remove_SL_Menu) == 0x000038, "Wrong size on BP_HUD_C_Remove_SL_Menu");
static_assert(offsetof(BP_HUD_C_Remove_SL_Menu, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HUD_C_Remove_SL_Menu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_SL_Menu, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HUD_C_Remove_SL_Menu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_SL_Menu, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HUD_C_Remove_SL_Menu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_SL_Menu, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'BP_HUD_C_Remove_SL_Menu::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_SL_Menu, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_HUD_C_Remove_SL_Menu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_SL_Menu, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_HUD_C_Remove_SL_Menu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_SL_Menu, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_HUD_C_Remove_SL_Menu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Call Zoom Update
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_C_Call_Zoom_Update final
{
public:
	float                                         Zoom_Amount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Call_Zoom_Update) == 0x000004, "Wrong alignment on BP_HUD_C_Call_Zoom_Update");
static_assert(sizeof(BP_HUD_C_Call_Zoom_Update) == 0x000004, "Wrong size on BP_HUD_C_Call_Zoom_Update");
static_assert(offsetof(BP_HUD_C_Call_Zoom_Update, Zoom_Amount) == 0x000000, "Member 'BP_HUD_C_Call_Zoom_Update::Zoom_Amount' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Configure Map
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Configure_Map final
{
public:
	class UW_SQMapCore_C*                         Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Configure_Map) == 0x000008, "Wrong alignment on BP_HUD_C_Configure_Map");
static_assert(sizeof(BP_HUD_C_Configure_Map) == 0x000008, "Wrong size on BP_HUD_C_Configure_Map");
static_assert(offsetof(BP_HUD_C_Configure_Map, Target) == 0x000000, "Member 'BP_HUD_C_Configure_Map::Target' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Remove Menus
// 0x00C8 (0x00C8 - 0x0000)
struct BP_HUD_C_Remove_Menus final
{
public:
	bool                                          GameEnd;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44E7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44E8[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUMG_VoteScreen_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUMG_VoteScreen_C*                      CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44E9[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_SQRoamingMap_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_SQRoamingMap_C*                      CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44EA[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_CommandUI_C*>                 CallFunc_GetAllWidgetsOfClass_FoundWidgets_2;      // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_CommandUI_C*                         CallFunc_Array_Get_Item_2;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44EB[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_DeploymentMenu_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets_3;      // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44EC[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DeploymentMenu_C*                    CallFunc_Array_Get_Item_3;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Remove_Menus) == 0x000008, "Wrong alignment on BP_HUD_C_Remove_Menus");
static_assert(sizeof(BP_HUD_C_Remove_Menus) == 0x0000C8, "Wrong size on BP_HUD_C_Remove_Menus");
static_assert(offsetof(BP_HUD_C_Remove_Menus, GameEnd) == 0x000000, "Member 'BP_HUD_C_Remove_Menus::GameEnd' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_HUD_C_Remove_Menus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_HUD_C_Remove_Menus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_HUD_C_Remove_Menus::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_HUD_C_Remove_Menus::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, Temp_int_Array_Index_Variable_2) == 0x00001C, "Member 'BP_HUD_C_Remove_Menus::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'BP_HUD_C_Remove_Menus::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, Temp_int_Array_Index_Variable_3) == 0x000028, "Member 'BP_HUD_C_Remove_Menus::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, Temp_int_Loop_Counter_Variable_3) == 0x00002C, "Member 'BP_HUD_C_Remove_Menus::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_HUD_C_Remove_Menus::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000038, "Member 'BP_HUD_C_Remove_Menus::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_HUD_C_Remove_Menus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Max_ReturnValue) == 0x00005C, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000060, "Member 'BP_HUD_C_Remove_Menus::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_GetAllWidgetsOfClass_FoundWidgets_2) == 0x000080, "Member 'BP_HUD_C_Remove_Menus::CallFunc_GetAllWidgetsOfClass_FoundWidgets_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Array_Length_ReturnValue_2) == 0x000098, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_GetAllWidgetsOfClass_FoundWidgets_3) == 0x0000A0, "Member 'BP_HUD_C_Remove_Menus::CallFunc_GetAllWidgetsOfClass_FoundWidgets_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Array_Length_ReturnValue_3) == 0x0000B0, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Array_Get_Item_3) == 0x0000B8, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_Menus, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BP_HUD_C_Remove_Menus::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.ZoomMapWithWheel
// 0x00E0 (0x00E0 - 0x0000)
struct BP_HUD_C_ZoomMapWithWheel final
{
public:
	float                                         WheelAxis;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Open_Open;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Open_Transitioning;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44ED[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DeploymentMenu_C*                    K2Node_DynamicCast_AsW_Deployment_Menu;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Open_Open_1;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Open_Transitioning_1;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44EE[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_ReceiveMouseWheel_ReturnValue;            // 0x0020(0x00B8)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_ZoomMapWithWheel) == 0x000008, "Wrong alignment on BP_HUD_C_ZoomMapWithWheel");
static_assert(sizeof(BP_HUD_C_ZoomMapWithWheel) == 0x0000E0, "Wrong size on BP_HUD_C_ZoomMapWithWheel");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, WheelAxis) == 0x000000, "Member 'BP_HUD_C_ZoomMapWithWheel::WheelAxis' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_Is_Open_Open) == 0x000007, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_Is_Open_Open' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_Is_Open_Transitioning) == 0x000008, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_Is_Open_Transitioning' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, K2Node_DynamicCast_AsW_Deployment_Menu) == 0x000010, "Member 'BP_HUD_C_ZoomMapWithWheel::K2Node_DynamicCast_AsW_Deployment_Menu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HUD_C_ZoomMapWithWheel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_Is_Open_Open_1) == 0x000019, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_Is_Open_Open_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_Is_Open_Transitioning_1) == 0x00001A, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_Is_Open_Transitioning_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_GetRenderOpacity_ReturnValue) == 0x00001C, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_ReceiveMouseWheel_ReturnValue) == 0x000020, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_ReceiveMouseWheel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_ZoomMapWithWheel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_HUD_C_ZoomMapWithWheel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Create Deployment
// 0x0030 (0x0030 - 0x0000)
struct BP_HUD_C_Create_Deployment final
{
public:
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44EF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DeploymentMenu_C*                    K2Node_DynamicCast_AsW_Deployment_Menu;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F1[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Create_Deployment) == 0x000008, "Wrong alignment on BP_HUD_C_Create_Deployment");
static_assert(sizeof(BP_HUD_C_Create_Deployment) == 0x000030, "Wrong size on BP_HUD_C_Create_Deployment");
static_assert(offsetof(BP_HUD_C_Create_Deployment, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_HUD_C_Create_Deployment::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Deployment, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000004, "Member 'BP_HUD_C_Create_Deployment::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Deployment, K2Node_DynamicCast_AsW_Deployment_Menu) == 0x000008, "Member 'BP_HUD_C_Create_Deployment::K2Node_DynamicCast_AsW_Deployment_Menu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Deployment, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HUD_C_Create_Deployment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Deployment, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_HUD_C_Create_Deployment::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Deployment, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HUD_C_Create_Deployment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Deployment, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'BP_HUD_C_Create_Deployment::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Create_Deployment, CallFunc_Create_ReturnValue) == 0x000028, "Member 'BP_HUD_C_Create_Deployment::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Show Spawn Points
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Show_Spawn_Points final
{
public:
	class USaveData_UI_C*                         L_Save;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Show_Spawn_Points) == 0x000008, "Wrong alignment on BP_HUD_C_Show_Spawn_Points");
static_assert(sizeof(BP_HUD_C_Show_Spawn_Points) == 0x000008, "Wrong size on BP_HUD_C_Show_Spawn_Points");
static_assert(offsetof(BP_HUD_C_Show_Spawn_Points, L_Save) == 0x000000, "Member 'BP_HUD_C_Show_Spawn_Points::L_Save' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Load Icon Scale
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Load_Icon_Scale final
{
public:
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Load_Icon_Scale) == 0x000008, "Wrong alignment on BP_HUD_C_Load_Icon_Scale");
static_assert(sizeof(BP_HUD_C_Load_Icon_Scale) == 0x000008, "Wrong size on BP_HUD_C_Load_Icon_Scale");
static_assert(offsetof(BP_HUD_C_Load_Icon_Scale, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000000, "Member 'BP_HUD_C_Load_Icon_Scale::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Close Radial Menu
// 0x0002 (0x0002 - 0x0000)
struct BP_HUD_C_Close_Radial_Menu final
{
public:
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Close_Radial_Menu) == 0x000001, "Wrong alignment on BP_HUD_C_Close_Radial_Menu");
static_assert(sizeof(BP_HUD_C_Close_Radial_Menu) == 0x000002, "Wrong size on BP_HUD_C_Close_Radial_Menu");
static_assert(offsetof(BP_HUD_C_Close_Radial_Menu, CallFunc_IsInViewport_ReturnValue) == 0x000000, "Member 'BP_HUD_C_Close_Radial_Menu::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Close_Radial_Menu, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HUD_C_Close_Radial_Menu::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Draw Interact Widget
// 0x00E0 (0x00E0 - 0x0000)
struct BP_HUD_C_Draw_Interact_Widget final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F2[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F3[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISQUsable>             K2Node_DynamicCast_AsSQUsable;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F4[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQUsableData                          CallFunc_GetUsableData_ReturnValue;                // 0x0050(0x0040)()
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F5[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIWidget_Interactable_C> K2Node_DynamicCast_AsIWidget_Interactable;         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F6[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F7[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_1;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQInteractableWidgetList*              CallFunc_Create_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIWidget_Interactable_C> K2Node_DynamicCast_AsIWidget_Interactable_1;       // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Draw_Interact_Widget) == 0x000008, "Wrong alignment on BP_HUD_C_Draw_Interact_Widget");
static_assert(sizeof(BP_HUD_C_Draw_Interact_Widget) == 0x0000E0, "Wrong size on BP_HUD_C_Draw_Interact_Widget");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, Actor) == 0x000000, "Member 'BP_HUD_C_Draw_Interact_Widget::Actor' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, Add) == 0x000008, "Member 'BP_HUD_C_Draw_Interact_Widget::Add' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000018, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000020, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000028, "Member 'BP_HUD_C_Draw_Interact_Widget::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HUD_C_Draw_Interact_Widget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, K2Node_DynamicCast_AsSQUsable) == 0x000038, "Member 'BP_HUD_C_Draw_Interact_Widget::K2Node_DynamicCast_AsSQUsable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_HUD_C_Draw_Interact_Widget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_GetUsableData_ReturnValue) == 0x000050, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_GetUsableData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000090, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_IsValid_ReturnValue_2) == 0x000091, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_IsValidClass_ReturnValue) == 0x000092, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_IsInViewport_ReturnValue) == 0x000093, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, K2Node_DynamicCast_AsIWidget_Interactable) == 0x000098, "Member 'BP_HUD_C_Draw_Interact_Widget::K2Node_DynamicCast_AsIWidget_Interactable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_HUD_C_Draw_Interact_Widget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_IsValid_ReturnValue_3) == 0x0000A9, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000AC, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_GetOwningPlayerController_ReturnValue_1) == 0x0000B8, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_GetOwningPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, CallFunc_Create_ReturnValue) == 0x0000C0, "Member 'BP_HUD_C_Draw_Interact_Widget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, K2Node_DynamicCast_AsIWidget_Interactable_1) == 0x0000C8, "Member 'BP_HUD_C_Draw_Interact_Widget::K2Node_DynamicCast_AsIWidget_Interactable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Draw_Interact_Widget, K2Node_DynamicCast_bSuccess_3) == 0x0000D8, "Member 'BP_HUD_C_Draw_Interact_Widget::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get Interactor Display Name
// 0x00A8 (0x00A8 - 0x0000)
struct BP_HUD_C_Get_Interactor_Display_Name final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Param_Name;                                        // 0x0008(0x0018)(Parm, OutParm)
	class FText                                   L_Text;                                            // 0x0020(0x0018)(Edit, BlueprintVisible)
	class FText                                   L_Object_Name;                                     // 0x0038(0x0018)(Edit, BlueprintVisible)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
};
static_assert(alignof(BP_HUD_C_Get_Interactor_Display_Name) == 0x000008, "Wrong alignment on BP_HUD_C_Get_Interactor_Display_Name");
static_assert(sizeof(BP_HUD_C_Get_Interactor_Display_Name) == 0x0000A8, "Wrong size on BP_HUD_C_Get_Interactor_Display_Name");
static_assert(offsetof(BP_HUD_C_Get_Interactor_Display_Name, Actor) == 0x000000, "Member 'BP_HUD_C_Get_Interactor_Display_Name::Actor' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Interactor_Display_Name, Param_Name) == 0x000008, "Member 'BP_HUD_C_Get_Interactor_Display_Name::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Interactor_Display_Name, L_Text) == 0x000020, "Member 'BP_HUD_C_Get_Interactor_Display_Name::L_Text' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Interactor_Display_Name, L_Object_Name) == 0x000038, "Member 'BP_HUD_C_Get_Interactor_Display_Name::L_Object_Name' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Interactor_Display_Name, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'BP_HUD_C_Get_Interactor_Display_Name::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Interactor_Display_Name, CallFunc_Replace_ReturnValue) == 0x000060, "Member 'BP_HUD_C_Get_Interactor_Display_Name::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Interactor_Display_Name, CallFunc_Replace_ReturnValue_1) == 0x000070, "Member 'BP_HUD_C_Get_Interactor_Display_Name::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Interactor_Display_Name, CallFunc_Replace_ReturnValue_2) == 0x000080, "Member 'BP_HUD_C_Get_Interactor_Display_Name::CallFunc_Replace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Interactor_Display_Name, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BP_HUD_C_Get_Interactor_Display_Name::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CreateVoiceMenu
// 0x0048 (0x0048 - 0x0000)
struct BP_HUD_C_CreateVoiceMenu final
{
public:
	class ASQPlayerController*                    L_SQPC;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 L_Model_To_Draw;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F8[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44F9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanOpenRadialMenu_CanOpenRadialMenu;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44FA[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      CallFunc_CreateRadialMenu_OutputPin;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_CreateVoiceMenu) == 0x000008, "Wrong alignment on BP_HUD_C_CreateVoiceMenu");
static_assert(sizeof(BP_HUD_C_CreateVoiceMenu) == 0x000048, "Wrong size on BP_HUD_C_CreateVoiceMenu");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, L_SQPC) == 0x000000, "Member 'BP_HUD_C_CreateVoiceMenu::L_SQPC' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, L_Model_To_Draw) == 0x000008, "Member 'BP_HUD_C_CreateVoiceMenu::L_Model_To_Draw' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'BP_HUD_C_CreateVoiceMenu::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000018, "Member 'BP_HUD_C_CreateVoiceMenu::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HUD_C_CreateVoiceMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000028, "Member 'BP_HUD_C_CreateVoiceMenu::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HUD_C_CreateVoiceMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, CallFunc_CanOpenRadialMenu_CanOpenRadialMenu) == 0x000031, "Member 'BP_HUD_C_CreateVoiceMenu::CallFunc_CanOpenRadialMenu_CanOpenRadialMenu' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, CallFunc_CreateRadialMenu_OutputPin) == 0x000038, "Member 'BP_HUD_C_CreateVoiceMenu::CallFunc_CreateRadialMenu_OutputPin' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, CallFunc_IsVisible_ReturnValue) == 0x000040, "Member 'BP_HUD_C_CreateVoiceMenu::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000041, "Member 'BP_HUD_C_CreateVoiceMenu::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoiceMenu, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'BP_HUD_C_CreateVoiceMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Remove All Interactable Widgets
// 0x0038 (0x0038 - 0x0000)
struct BP_HUD_C_Remove_All_Interactable_Widgets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44FB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_InteractableWidgetList_Master_C*> CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44FC[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_InteractableWidgetList_Master_C*     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Remove_All_Interactable_Widgets) == 0x000008, "Wrong alignment on BP_HUD_C_Remove_All_Interactable_Widgets");
static_assert(sizeof(BP_HUD_C_Remove_All_Interactable_Widgets) == 0x000038, "Wrong size on BP_HUD_C_Remove_All_Interactable_Widgets");
static_assert(offsetof(BP_HUD_C_Remove_All_Interactable_Widgets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HUD_C_Remove_All_Interactable_Widgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_All_Interactable_Widgets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_HUD_C_Remove_All_Interactable_Widgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_All_Interactable_Widgets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_HUD_C_Remove_All_Interactable_Widgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_All_Interactable_Widgets, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'BP_HUD_C_Remove_All_Interactable_Widgets::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_All_Interactable_Widgets, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_HUD_C_Remove_All_Interactable_Widgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_All_Interactable_Widgets, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_HUD_C_Remove_All_Interactable_Widgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Remove_All_Interactable_Widgets, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_HUD_C_Remove_All_Interactable_Widgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.IsGameStateValid
// 0x0028 (0x0028 - 0x0000)
struct BP_HUD_C_IsGameStateValid final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44FD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           CallFunc_TryGetLocalPlayerTeamState_OutTeamState;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalPlayerTeamState_ReturnValue;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44FE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_TryGetGameState_OutGameState;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetGameState_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_IsGameStateValid) == 0x000008, "Wrong alignment on BP_HUD_C_IsGameStateValid");
static_assert(sizeof(BP_HUD_C_IsGameStateValid) == 0x000028, "Wrong size on BP_HUD_C_IsGameStateValid");
static_assert(offsetof(BP_HUD_C_IsGameStateValid, IsValid) == 0x000000, "Member 'BP_HUD_C_IsGameStateValid::IsValid' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_IsGameStateValid, CallFunc_TryGetLocalPlayerTeamState_OutTeamState) == 0x000008, "Member 'BP_HUD_C_IsGameStateValid::CallFunc_TryGetLocalPlayerTeamState_OutTeamState' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_IsGameStateValid, CallFunc_TryGetLocalPlayerTeamState_ReturnValue) == 0x000010, "Member 'BP_HUD_C_IsGameStateValid::CallFunc_TryGetLocalPlayerTeamState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_IsGameStateValid, CallFunc_TryGetGameState_OutGameState) == 0x000018, "Member 'BP_HUD_C_IsGameStateValid::CallFunc_TryGetGameState_OutGameState' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_IsGameStateValid, CallFunc_TryGetGameState_ReturnValue) == 0x000020, "Member 'BP_HUD_C_IsGameStateValid::CallFunc_TryGetGameState_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CreateVoteScreen
// 0x0028 (0x0028 - 0x0000)
struct BP_HUD_C_CreateVoteScreen final
{
public:
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44FF[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_VoteScreen_C*                      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_VoteScreen_C>     CallFunc_SetVoteScreenActive_self_CastInput;       // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_CreateVoteScreen) == 0x000008, "Wrong alignment on BP_HUD_C_CreateVoteScreen");
static_assert(sizeof(BP_HUD_C_CreateVoteScreen) == 0x000028, "Wrong size on BP_HUD_C_CreateVoteScreen");
static_assert(offsetof(BP_HUD_C_CreateVoteScreen, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_HUD_C_CreateVoteScreen::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoteScreen, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000004, "Member 'BP_HUD_C_CreateVoteScreen::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoteScreen, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_HUD_C_CreateVoteScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoteScreen, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000008, "Member 'BP_HUD_C_CreateVoteScreen::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoteScreen, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_HUD_C_CreateVoteScreen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateVoteScreen, CallFunc_SetVoteScreenActive_self_CastInput) == 0x000018, "Member 'BP_HUD_C_CreateVoteScreen::CallFunc_SetVoteScreenActive_self_CastInput' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.IsEndOfMatch
// 0x0003 (0x0003 - 0x0000)
struct BP_HUD_C_IsEndOfMatch final
{
public:
	bool                                          Out_Is_End_Of_Match;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchWaitingAfterCompletion_ReturnValue;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_IsEndOfMatch) == 0x000001, "Wrong alignment on BP_HUD_C_IsEndOfMatch");
static_assert(sizeof(BP_HUD_C_IsEndOfMatch) == 0x000003, "Wrong size on BP_HUD_C_IsEndOfMatch");
static_assert(offsetof(BP_HUD_C_IsEndOfMatch, Out_Is_End_Of_Match) == 0x000000, "Member 'BP_HUD_C_IsEndOfMatch::Out_Is_End_Of_Match' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_IsEndOfMatch, CallFunc_MatchWaitingAfterCompletion_ReturnValue) == 0x000001, "Member 'BP_HUD_C_IsEndOfMatch::CallFunc_MatchWaitingAfterCompletion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_IsEndOfMatch, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_HUD_C_IsEndOfMatch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.CreateEmoteMenu
// 0x0070 (0x0070 - 0x0000)
struct BP_HUD_C_CreateEmoteMenu final
{
public:
	class UBaseRadialMenu_C*                      OutputPin;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_TeamInfo_C*                         L_Info;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 L_PC;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 L_Model_To_Draw;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4500[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4501[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQEmotePlayer*                         CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanShowEmotesWheel_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4502[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4503[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4504[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBaseRadialMenu_C*                      CallFunc_CreateRadialMenu_OutputPin;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_CreateEmoteMenu) == 0x000008, "Wrong alignment on BP_HUD_C_CreateEmoteMenu");
static_assert(sizeof(BP_HUD_C_CreateEmoteMenu) == 0x000070, "Wrong size on BP_HUD_C_CreateEmoteMenu");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, OutputPin) == 0x000000, "Member 'BP_HUD_C_CreateEmoteMenu::OutputPin' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, L_Info) == 0x000008, "Member 'BP_HUD_C_CreateEmoteMenu::L_Info' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, L_PC) == 0x000010, "Member 'BP_HUD_C_CreateEmoteMenu::L_PC' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, L_Model_To_Draw) == 0x000018, "Member 'BP_HUD_C_CreateEmoteMenu::L_Model_To_Draw' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_IsVisible_ReturnValue) == 0x000021, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000022, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_IsValid_ReturnValue_1) == 0x000024, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_GetSoldier_ReturnValue) == 0x000028, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_IsValid_ReturnValue_3) == 0x000040, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_CanShowEmotesWheel_ReturnValue) == 0x000041, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_CanShowEmotesWheel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000048, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000058, "Member 'BP_HUD_C_CreateEmoteMenu::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_HUD_C_CreateEmoteMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_CreateEmoteMenu, CallFunc_CreateRadialMenu_OutputPin) == 0x000068, "Member 'BP_HUD_C_CreateEmoteMenu::CallFunc_CreateRadialMenu_OutputPin' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DestroyEmoteMenu
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_C_DestroyEmoteMenu final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_DestroyEmoteMenu) == 0x000001, "Wrong alignment on BP_HUD_C_DestroyEmoteMenu");
static_assert(sizeof(BP_HUD_C_DestroyEmoteMenu) == 0x000004, "Wrong size on BP_HUD_C_DestroyEmoteMenu");
static_assert(offsetof(BP_HUD_C_DestroyEmoteMenu, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_HUD_C_DestroyEmoteMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyEmoteMenu, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'BP_HUD_C_DestroyEmoteMenu::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyEmoteMenu, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000002, "Member 'BP_HUD_C_DestroyEmoteMenu::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DestroyEmoteMenu, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_HUD_C_DestroyEmoteMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DisplayPolicy
// 0x0010 (0x0010 - 0x0000)
struct BP_HUD_C_DisplayPolicy final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_PrivacyPolicy_C*                     CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_DisplayPolicy) == 0x000008, "Wrong alignment on BP_HUD_C_DisplayPolicy");
static_assert(sizeof(BP_HUD_C_DisplayPolicy) == 0x000010, "Wrong size on BP_HUD_C_DisplayPolicy");
static_assert(offsetof(BP_HUD_C_DisplayPolicy, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_HUD_C_DisplayPolicy::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DisplayPolicy, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_HUD_C_DisplayPolicy::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.OnPlayerDataReady
// 0x0002 (0x0002 - 0x0000)
struct BP_HUD_C_OnPlayerDataReady final
{
public:
	struct FPlayerData                            PlayerData;                                        // 0x0000(0x0002)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_HUD_C_OnPlayerDataReady) == 0x000001, "Wrong alignment on BP_HUD_C_OnPlayerDataReady");
static_assert(sizeof(BP_HUD_C_OnPlayerDataReady) == 0x000002, "Wrong size on BP_HUD_C_OnPlayerDataReady");
static_assert(offsetof(BP_HUD_C_OnPlayerDataReady, PlayerData) == 0x000000, "Member 'BP_HUD_C_OnPlayerDataReady::PlayerData' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.DisplayAndShowPolicy
// 0x0010 (0x0010 - 0x0000)
struct BP_HUD_C_DisplayAndShowPolicy final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_PrivacyPolicy_C*                     CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_DisplayAndShowPolicy) == 0x000008, "Wrong alignment on BP_HUD_C_DisplayAndShowPolicy");
static_assert(sizeof(BP_HUD_C_DisplayAndShowPolicy) == 0x000010, "Wrong size on BP_HUD_C_DisplayAndShowPolicy");
static_assert(offsetof(BP_HUD_C_DisplayAndShowPolicy, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_HUD_C_DisplayAndShowPolicy::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_DisplayAndShowPolicy, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_HUD_C_DisplayAndShowPolicy::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get Radial Menu
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Get_Radial_Menu final
{
public:
	class UBaseRadialMenu_C*                      Radial_Menu;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Get_Radial_Menu) == 0x000008, "Wrong alignment on BP_HUD_C_Get_Radial_Menu");
static_assert(sizeof(BP_HUD_C_Get_Radial_Menu) == 0x000008, "Wrong size on BP_HUD_C_Get_Radial_Menu");
static_assert(offsetof(BP_HUD_C_Get_Radial_Menu, Radial_Menu) == 0x000000, "Member 'BP_HUD_C_Get_Radial_Menu::Radial_Menu' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get Main Menus
// 0x0018 (0x0018 - 0x0000)
struct BP_HUD_C_Get_Main_Menus final
{
public:
	class UUMG_MenuBase_C*                        Param_Deployment;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        Param_Command;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        Roaming;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Get_Main_Menus) == 0x000008, "Wrong alignment on BP_HUD_C_Get_Main_Menus");
static_assert(sizeof(BP_HUD_C_Get_Main_Menus) == 0x000018, "Wrong size on BP_HUD_C_Get_Main_Menus");
static_assert(offsetof(BP_HUD_C_Get_Main_Menus, Param_Deployment) == 0x000000, "Member 'BP_HUD_C_Get_Main_Menus::Param_Deployment' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Main_Menus, Param_Command) == 0x000008, "Member 'BP_HUD_C_Get_Main_Menus::Param_Command' has a wrong offset!");
static_assert(offsetof(BP_HUD_C_Get_Main_Menus, Roaming) == 0x000010, "Member 'BP_HUD_C_Get_Main_Menus::Roaming' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get Is Showing Settings Menu
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_C_Get_Is_Showing_Settings_Menu final
{
public:
	bool                                          Showing_Main_Menu;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Get_Is_Showing_Settings_Menu) == 0x000001, "Wrong alignment on BP_HUD_C_Get_Is_Showing_Settings_Menu");
static_assert(sizeof(BP_HUD_C_Get_Is_Showing_Settings_Menu) == 0x000001, "Wrong size on BP_HUD_C_Get_Is_Showing_Settings_Menu");
static_assert(offsetof(BP_HUD_C_Get_Is_Showing_Settings_Menu, Showing_Main_Menu) == 0x000000, "Member 'BP_HUD_C_Get_Is_Showing_Settings_Menu::Showing_Main_Menu' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get Map Core
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Get_Map_Core final
{
public:
	class UW_SQMapCore_C*                         Map_Core;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Get_Map_Core) == 0x000008, "Wrong alignment on BP_HUD_C_Get_Map_Core");
static_assert(sizeof(BP_HUD_C_Get_Map_Core) == 0x000008, "Wrong size on BP_HUD_C_Get_Map_Core");
static_assert(offsetof(BP_HUD_C_Get_Map_Core, Map_Core) == 0x000000, "Member 'BP_HUD_C_Get_Map_Core::Map_Core' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get Map Component
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Get_Map_Component final
{
public:
	class USQCoreStateMapComponent*               Map_Component;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Get_Map_Component) == 0x000008, "Wrong alignment on BP_HUD_C_Get_Map_Component");
static_assert(sizeof(BP_HUD_C_Get_Map_Component) == 0x000008, "Wrong size on BP_HUD_C_Get_Map_Component");
static_assert(offsetof(BP_HUD_C_Get_Map_Component, Map_Component) == 0x000000, "Member 'BP_HUD_C_Get_Map_Component::Map_Component' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get Scoreboard
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Get_Scoreboard final
{
public:
	class USQScoreboard*                          Param_ScoreBoard;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Get_Scoreboard) == 0x000008, "Wrong alignment on BP_HUD_C_Get_Scoreboard");
static_assert(sizeof(BP_HUD_C_Get_Scoreboard) == 0x000008, "Wrong size on BP_HUD_C_Get_Scoreboard");
static_assert(offsetof(BP_HUD_C_Get_Scoreboard, Param_ScoreBoard) == 0x000000, "Member 'BP_HUD_C_Get_Scoreboard::Param_ScoreBoard' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get UI Input Stacks
// 0x0010 (0x0010 - 0x0000)
struct BP_HUD_C_Get_UI_Input_Stacks final
{
public:
	TArray<struct FSQInputState>                  Input_Stacks;                                      // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_HUD_C_Get_UI_Input_Stacks) == 0x000008, "Wrong alignment on BP_HUD_C_Get_UI_Input_Stacks");
static_assert(sizeof(BP_HUD_C_Get_UI_Input_Stacks) == 0x000010, "Wrong size on BP_HUD_C_Get_UI_Input_Stacks");
static_assert(offsetof(BP_HUD_C_Get_UI_Input_Stacks, Input_Stacks) == 0x000000, "Member 'BP_HUD_C_Get_UI_Input_Stacks::Input_Stacks' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get Interactable Widget
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_C_Get_Interactable_Widget final
{
public:
	class USQInteractableWidgetList*              Param_Interact_Widget;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_C_Get_Interactable_Widget) == 0x000008, "Wrong alignment on BP_HUD_C_Get_Interactable_Widget");
static_assert(sizeof(BP_HUD_C_Get_Interactable_Widget) == 0x000008, "Wrong size on BP_HUD_C_Get_Interactable_Widget");
static_assert(offsetof(BP_HUD_C_Get_Interactable_Widget, Param_Interact_Widget) == 0x000000, "Member 'BP_HUD_C_Get_Interactable_Widget::Param_Interact_Widget' has a wrong offset!");

// Function BP_HUD.BP_HUD_C.Get Showing Main Menu
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_C_Get_Showing_Main_Menu final
{
public:
	bool                                          Showing;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_C_Get_Showing_Main_Menu) == 0x000001, "Wrong alignment on BP_HUD_C_Get_Showing_Main_Menu");
static_assert(sizeof(BP_HUD_C_Get_Showing_Main_Menu) == 0x000001, "Wrong size on BP_HUD_C_Get_Showing_Main_Menu");
static_assert(offsetof(BP_HUD_C_Get_Showing_Main_Menu, Showing) == 0x000000, "Member 'BP_HUD_C_Get_Showing_Main_Menu::Showing' has a wrong offset!");

}


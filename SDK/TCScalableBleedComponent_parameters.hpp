#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TCScalableBleedComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TCScalableBleedComponent.TCScalableBleedComponent_C.ExecuteUbergraph_TCScalableBleedComponent
// 0x00B8 (0x00B8 - 0x0000)
struct TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4347[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4348[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4349[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASQTeamState*                           CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTickets_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent) == 0x000008, "Wrong alignment on TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent");
static_assert(sizeof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent) == 0x0000B8, "Wrong size on TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, EntryPoint) == 0x000000, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_HasAuthority_ReturnValue) == 0x000048, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_GetSquadGameState_Return_Value) == 0x000060, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Array_Get_Item) == 0x000070, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_GetTickets_ReturnValue) == 0x0000A8, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_GetTickets_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B0, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'TCScalableBleedComponent_C_ExecuteUbergraph_TCScalableBleedComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TCScalableBleedComponent.TCScalableBleedComponent_C.Update Bleed Count
// 0x0070 (0x0070 - 0x0000)
struct TCScalableBleedComponent_C_Update_Bleed_Count final
{
public:
	int32                                         Team_B_Num;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team_A_Num;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_434A[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ATC_HexZone_C*                          CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcBleedValue_Curve_Bleed_Value;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434B[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_434C[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TCScalableBleedComponent_C_Update_Bleed_Count) == 0x000008, "Wrong alignment on TCScalableBleedComponent_C_Update_Bleed_Count");
static_assert(sizeof(TCScalableBleedComponent_C_Update_Bleed_Count) == 0x000070, "Wrong size on TCScalableBleedComponent_C_Update_Bleed_Count");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Team_B_Num) == 0x000000, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Team_B_Num' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Team_A_Num) == 0x000004, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Team_A_Num' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Temp_int_Variable) == 0x00000C, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Temp_int_Variable_1) == 0x000010, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Temp_int_Variable_2) == 0x000028, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, Temp_int_Variable_3) == 0x00002C, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_GetSquadGameState_Return_Value) == 0x000030, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Array_Get_Item) == 0x000038, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, K2Node_Select_Default) == 0x000050, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_CalcBleedValue_Curve_Bleed_Value) == 0x000054, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_CalcBleedValue_Curve_Bleed_Value' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_GetValidValue_ReturnValue) == 0x000058, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, K2Node_SwitchEnum_CmpSuccess) == 0x000061, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Update_Bleed_Count, CallFunc_Add_IntInt_ReturnValue_3) == 0x000068, "Member 'TCScalableBleedComponent_C_Update_Bleed_Count::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function TCScalableBleedComponent.TCScalableBleedComponent_C.Initialise TC Bleed Component
// 0x0020 (0x0020 - 0x0000)
struct TCScalableBleedComponent_C_Initialise_TC_Bleed_Component final
{
public:
	TArray<class ATC_HexZone_C*>                  Param_All_TC_Zones;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TCScalableBleedComponent_C_Initialise_TC_Bleed_Component) == 0x000008, "Wrong alignment on TCScalableBleedComponent_C_Initialise_TC_Bleed_Component");
static_assert(sizeof(TCScalableBleedComponent_C_Initialise_TC_Bleed_Component) == 0x000020, "Wrong size on TCScalableBleedComponent_C_Initialise_TC_Bleed_Component");
static_assert(offsetof(TCScalableBleedComponent_C_Initialise_TC_Bleed_Component, Param_All_TC_Zones) == 0x000000, "Member 'TCScalableBleedComponent_C_Initialise_TC_Bleed_Component::Param_All_TC_Zones' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Initialise_TC_Bleed_Component, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'TCScalableBleedComponent_C_Initialise_TC_Bleed_Component::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Initialise_TC_Bleed_Component, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000014, "Member 'TCScalableBleedComponent_C_Initialise_TC_Bleed_Component::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Initialise_TC_Bleed_Component, CallFunc_Round_ReturnValue) == 0x000018, "Member 'TCScalableBleedComponent_C_Initialise_TC_Bleed_Component::CallFunc_Round_ReturnValue' has a wrong offset!");

// Function TCScalableBleedComponent.TCScalableBleedComponent_C.Get Current Bleed
// 0x0008 (0x0008 - 0x0000)
struct TCScalableBleedComponent_C_Get_Current_Bleed final
{
public:
	int32                                         Team_ID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Bleed_Per_Min;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TCScalableBleedComponent_C_Get_Current_Bleed) == 0x000004, "Wrong alignment on TCScalableBleedComponent_C_Get_Current_Bleed");
static_assert(sizeof(TCScalableBleedComponent_C_Get_Current_Bleed) == 0x000008, "Wrong size on TCScalableBleedComponent_C_Get_Current_Bleed");
static_assert(offsetof(TCScalableBleedComponent_C_Get_Current_Bleed, Team_ID) == 0x000000, "Member 'TCScalableBleedComponent_C_Get_Current_Bleed::Team_ID' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_Get_Current_Bleed, Bleed_Per_Min) == 0x000004, "Member 'TCScalableBleedComponent_C_Get_Current_Bleed::Bleed_Per_Min' has a wrong offset!");

// Function TCScalableBleedComponent.TCScalableBleedComponent_C.InitBleedThresholds
// 0x0048 (0x0048 - 0x0000)
struct TCScalableBleedComponent_C_InitBleedThresholds final
{
public:
	int32                                         _CachedArrayLength;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 BleedThresholdsUnsorted;                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_434E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(TCScalableBleedComponent_C_InitBleedThresholds) == 0x000008, "Wrong alignment on TCScalableBleedComponent_C_InitBleedThresholds");
static_assert(sizeof(TCScalableBleedComponent_C_InitBleedThresholds) == 0x000048, "Wrong size on TCScalableBleedComponent_C_InitBleedThresholds");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, _CachedArrayLength) == 0x000000, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::_CachedArrayLength' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, BleedThresholdsUnsorted) == 0x000008, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::BleedThresholdsUnsorted' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, Temp_int_Variable) == 0x00001C, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000024, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, CallFunc_MinOfFloatArray_MinValue) == 0x000028, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_InitBleedThresholds, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'TCScalableBleedComponent_C_InitBleedThresholds::CallFunc_Map_Keys_Keys' has a wrong offset!");

// Function TCScalableBleedComponent.TCScalableBleedComponent_C.CalcBleedValue
// 0x00AC (0x00AC - 0x0000)
struct TCScalableBleedComponent_C_CalcBleedValue final
{
public:
	int32                                         Zones_captured;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Bleed_Value;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_IntervalEnd;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_IntervalStart;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_CapPercentage;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_434F[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4350[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4351[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4352[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4353[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4354[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_3;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4355[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_4;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4356[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue_1;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4357[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TCScalableBleedComponent_C_CalcBleedValue) == 0x000004, "Wrong alignment on TCScalableBleedComponent_C_CalcBleedValue");
static_assert(sizeof(TCScalableBleedComponent_C_CalcBleedValue) == 0x0000AC, "Wrong size on TCScalableBleedComponent_C_CalcBleedValue");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, Zones_captured) == 0x000000, "Member 'TCScalableBleedComponent_C_CalcBleedValue::Zones_captured' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, Bleed_Value) == 0x000004, "Member 'TCScalableBleedComponent_C_CalcBleedValue::Bleed_Value' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, L_IntervalEnd) == 0x000008, "Member 'TCScalableBleedComponent_C_CalcBleedValue::L_IntervalEnd' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, L_IntervalStart) == 0x00000C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::L_IntervalStart' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, L_CapPercentage) == 0x000010, "Member 'TCScalableBleedComponent_C_CalcBleedValue::L_CapPercentage' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, Temp_bool_Variable) == 0x000014, "Member 'TCScalableBleedComponent_C_CalcBleedValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_Value) == 0x000024, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_Value_1) == 0x00002C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_ReturnValue_1) == 0x000030, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000034, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000038, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Lerp_ReturnValue) == 0x00003C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_Value_2) == 0x000040, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_ReturnValue_2) == 0x000044, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Round_ReturnValue) == 0x000048, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, Temp_int_Variable) == 0x00004C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Less_FloatFloat_ReturnValue) == 0x000059, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Array_LastIndex_ReturnValue) == 0x00005C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000064, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_Value_3) == 0x000068, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_ReturnValue_3) == 0x00006C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_BooleanAND_ReturnValue_1) == 0x00006D, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000070, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000078, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x00007C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_MaxOfFloatArray_MaxValue) == 0x000080, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000084, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_Value_4) == 0x000088, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Map_Find_ReturnValue_4) == 0x00008C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_MaxOfFloatArray_IndexOfMaxValue_1) == 0x000094, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_MaxOfFloatArray_IndexOfMaxValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_MaxOfFloatArray_MaxValue_1) == 0x000098, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_MaxOfFloatArray_MaxValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00009C, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Round_ReturnValue_1) == 0x0000A4, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'TCScalableBleedComponent_C_CalcBleedValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TCScalableBleedComponent.TCScalableBleedComponent_C.CalcBleedValue_Curve
// 0x0034 (0x0034 - 0x0000)
struct TCScalableBleedComponent_C_CalcBleedValue_Curve final
{
public:
	int32                                         Zones_captured;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Bleed_Value;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_IntervalEnd;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_IntervalStart;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_CapPercentage;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4358[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TCScalableBleedComponent_C_CalcBleedValue_Curve) == 0x000004, "Wrong alignment on TCScalableBleedComponent_C_CalcBleedValue_Curve");
static_assert(sizeof(TCScalableBleedComponent_C_CalcBleedValue_Curve) == 0x000034, "Wrong size on TCScalableBleedComponent_C_CalcBleedValue_Curve");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, Zones_captured) == 0x000000, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::Zones_captured' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, Bleed_Value) == 0x000004, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::Bleed_Value' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, L_IntervalEnd) == 0x000008, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::L_IntervalEnd' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, L_IntervalStart) == 0x00000C, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::L_IntervalStart' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, L_CapPercentage) == 0x000010, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::L_CapPercentage' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00001C, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, CallFunc_GetFloatValue_ReturnValue) == 0x00002C, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TCScalableBleedComponent_C_CalcBleedValue_Curve, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'TCScalableBleedComponent_C_CalcBleedValue_Curve::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

}


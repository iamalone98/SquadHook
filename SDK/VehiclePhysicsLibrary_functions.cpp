#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehiclePhysicsLibrary

#include "Basic.hpp"

#include "VehiclePhysicsLibrary_classes.hpp"
#include "VehiclePhysicsLibrary_parameters.hpp"


namespace SDK
{

// Function VehiclePhysicsLibrary.VehiclePhysicsLibrary_C.ApplyPhysicsFeedback
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ForceToApply                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehiclePhysicsLibrary_C::ApplyPhysicsFeedback(class AActor* Target, float ForceToApply, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("VehiclePhysicsLibrary_C", "ApplyPhysicsFeedback");

	Params::VehiclePhysicsLibrary_C_ApplyPhysicsFeedback Parms{};

	Parms.Target = Target;
	Parms.ForceToApply = ForceToApply;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}


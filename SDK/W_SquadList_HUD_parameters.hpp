#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SquadList_HUD

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_SquadList_HUD.W_SquadList_HUD_C.OnToggledOpen__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct W_SquadList_HUD_C_OnToggledOpen__DelegateSignature final
{
public:
	bool                                          Param_bIsOpen;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SquadList_HUD_C_OnToggledOpen__DelegateSignature) == 0x000001, "Wrong alignment on W_SquadList_HUD_C_OnToggledOpen__DelegateSignature");
static_assert(sizeof(W_SquadList_HUD_C_OnToggledOpen__DelegateSignature) == 0x000001, "Wrong size on W_SquadList_HUD_C_OnToggledOpen__DelegateSignature");
static_assert(offsetof(W_SquadList_HUD_C_OnToggledOpen__DelegateSignature, Param_bIsOpen) == 0x000000, "Member 'W_SquadList_HUD_C_OnToggledOpen__DelegateSignature::Param_bIsOpen' has a wrong offset!");

// Function W_SquadList_HUD.W_SquadList_HUD_C.ExecuteUbergraph_W_SquadList_HUD
// 0x0068 (0x0068 - 0x0000)
struct W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE5[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE6[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            K2Node_CustomEvent_Direction;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD) == 0x000008, "Wrong alignment on W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD");
static_assert(sizeof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD) == 0x000068, "Wrong size on W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, EntryPoint) == 0x000000, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, K2Node_DynamicCast_AsSQHUD) == 0x000028, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000038, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, CallFunc_GetHUD_ReturnValue_1) == 0x000040, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, K2Node_DynamicCast_AsBP_HUD) == 0x000048, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::K2Node_DynamicCast_AsBP_HUD' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, K2Node_CustomEvent_Direction) == 0x000060, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD, K2Node_SwitchEnum_CmpSuccess) == 0x000061, "Member 'W_SquadList_HUD_C_ExecuteUbergraph_W_SquadList_HUD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_SquadList_HUD.W_SquadList_HUD_C.PlayOpenCloseAnimation
// 0x0001 (0x0001 - 0x0000)
struct W_SquadList_HUD_C_PlayOpenCloseAnimation final
{
public:
	ETimelineDirection                            Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SquadList_HUD_C_PlayOpenCloseAnimation) == 0x000001, "Wrong alignment on W_SquadList_HUD_C_PlayOpenCloseAnimation");
static_assert(sizeof(W_SquadList_HUD_C_PlayOpenCloseAnimation) == 0x000001, "Wrong size on W_SquadList_HUD_C_PlayOpenCloseAnimation");
static_assert(offsetof(W_SquadList_HUD_C_PlayOpenCloseAnimation, Direction) == 0x000000, "Member 'W_SquadList_HUD_C_PlayOpenCloseAnimation::Direction' has a wrong offset!");

// Function W_SquadList_HUD.W_SquadList_HUD_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SquadList_HUD_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SquadList_HUD_C_PreConstruct) == 0x000001, "Wrong alignment on W_SquadList_HUD_C_PreConstruct");
static_assert(sizeof(W_SquadList_HUD_C_PreConstruct) == 0x000001, "Wrong size on W_SquadList_HUD_C_PreConstruct");
static_assert(offsetof(W_SquadList_HUD_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SquadList_HUD_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_SquadList_HUD.W_SquadList_HUD_C.ToggleOpen
// 0x0001 (0x0001 - 0x0000)
struct W_SquadList_HUD_C_ToggleOpen final
{
public:
	bool                                          Param_bIsOpen;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SquadList_HUD_C_ToggleOpen) == 0x000001, "Wrong alignment on W_SquadList_HUD_C_ToggleOpen");
static_assert(sizeof(W_SquadList_HUD_C_ToggleOpen) == 0x000001, "Wrong size on W_SquadList_HUD_C_ToggleOpen");
static_assert(offsetof(W_SquadList_HUD_C_ToggleOpen, Param_bIsOpen) == 0x000000, "Member 'W_SquadList_HUD_C_ToggleOpen::Param_bIsOpen' has a wrong offset!");

// Function W_SquadList_HUD.W_SquadList_HUD_C.UpdateDisplay
// 0x00A8 (0x00A8 - 0x0000)
struct W_SquadList_HUD_C_UpdateDisplay final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE8[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Temp_byte_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_3;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEA[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x0078(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEB[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_4;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SquadList_HUD_C_UpdateDisplay) == 0x000008, "Wrong alignment on W_SquadList_HUD_C_UpdateDisplay");
static_assert(sizeof(W_SquadList_HUD_C_UpdateDisplay) == 0x0000A8, "Wrong size on W_SquadList_HUD_C_UpdateDisplay");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_bool_Variable) == 0x000000, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_float_Variable) == 0x000004, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_float_Variable_1) == 0x000008, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_bool_Variable_1) == 0x00000C, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_float_Variable_2) == 0x000010, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_float_Variable_3) == 0x000014, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_bool_Variable_2) == 0x000018, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_text_Variable) == 0x000020, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_text_Variable_1) == 0x000038, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_bool_Variable_3) == 0x000050, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_byte_Variable) == 0x000051, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_byte_Variable_1) == 0x000052, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_bool_Variable_4) == 0x000053, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_byte_Variable_2) == 0x000054, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, Temp_byte_Variable_3) == 0x000055, "Member 'W_SquadList_HUD_C_UpdateDisplay::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, K2Node_Select_Default) == 0x000058, "Member 'W_SquadList_HUD_C_UpdateDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, K2Node_Select_Default_1) == 0x00005C, "Member 'W_SquadList_HUD_C_UpdateDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, K2Node_MakeStruct_Margin) == 0x000060, "Member 'W_SquadList_HUD_C_UpdateDisplay::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000070, "Member 'W_SquadList_HUD_C_UpdateDisplay::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, K2Node_Select_Default_2) == 0x000078, "Member 'W_SquadList_HUD_C_UpdateDisplay::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, K2Node_Select_Default_3) == 0x000090, "Member 'W_SquadList_HUD_C_UpdateDisplay::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000098, "Member 'W_SquadList_HUD_C_UpdateDisplay::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_UpdateDisplay, K2Node_Select_Default_4) == 0x0000A0, "Member 'W_SquadList_HUD_C_UpdateDisplay::K2Node_Select_Default_4' has a wrong offset!");

// Function W_SquadList_HUD.W_SquadList_HUD_C.Get_VerticalBox_SQList_Visibility_0
// 0x0020 (0x0020 - 0x0000)
struct W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0) == 0x000008, "Wrong alignment on W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0");
static_assert(sizeof(W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0) == 0x000020, "Wrong size on W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0");
static_assert(offsetof(W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0, ReturnValue) == 0x000000, "Member 'W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000010, "Member 'W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'W_SquadList_HUD_C_Get_VerticalBox_SQList_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


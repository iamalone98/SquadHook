#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CommanderActionCondition

#include "Basic.hpp"

#include "BP_CommanderActionCondition_classes.hpp"
#include "BP_CommanderActionCondition_parameters.hpp"


namespace SDK
{

// Function BP_CommanderActionCondition.BP_CommanderActionCondition_C.Can Use Actions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASQPlayerController*              Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Command_Option                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Require_Active                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Out_Reason                                             (Parm, OutParm)

void UBP_CommanderActionCondition_C::Can_Use_Actions(class ASQPlayerController* Player, class UClass* Command_Option, bool Require_Active, bool* Valid, class FText* Out_Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CommanderActionCondition_C", "Can Use Actions");

	Params::BP_CommanderActionCondition_C_Can_Use_Actions Parms{};

	Parms.Player = Player;
	Parms.Command_Option = Command_Option;
	Parms.Require_Active = Require_Active;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (Out_Reason != nullptr)
		*Out_Reason = std::move(Parms.Out_Reason);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteLevelEntry

#include "Basic.hpp"

#include "SQLevelEntry_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UMG_VoteLevelEntry.UMG_VoteLevelEntry_C.ExecuteUbergraph_UMG_VoteLevelEntry
// 0x0040 (0x0040 - 0x0000)
struct UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4193[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_VoteCount;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HasVotedFor;                          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsWinner;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4194[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry) == 0x000004, "Wrong alignment on UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry");
static_assert(sizeof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry) == 0x000040, "Wrong size on UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry");
static_assert(offsetof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry, EntryPoint) == 0x000000, "Member 'UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry, Temp_bool_Variable) == 0x000004, "Member 'UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry, Temp_struct_Variable) == 0x000008, "Member 'UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry, Temp_struct_Variable_1) == 0x000018, "Member 'UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry, K2Node_Event_VoteCount) == 0x000028, "Member 'UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry::K2Node_Event_VoteCount' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry, K2Node_Event_HasVotedFor) == 0x00002C, "Member 'UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry::K2Node_Event_HasVotedFor' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry, K2Node_Event_IsWinner) == 0x00002D, "Member 'UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry::K2Node_Event_IsWinner' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry, K2Node_Select_Default) == 0x000030, "Member 'UMG_VoteLevelEntry_C_ExecuteUbergraph_UMG_VoteLevelEntry::K2Node_Select_Default' has a wrong offset!");

// Function UMG_VoteLevelEntry.UMG_VoteLevelEntry_C.OnEndVote
// 0x0001 (0x0001 - 0x0000)
struct UMG_VoteLevelEntry_C_OnEndVote final
{
public:
	bool                                          IsWinner;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteLevelEntry_C_OnEndVote) == 0x000001, "Wrong alignment on UMG_VoteLevelEntry_C_OnEndVote");
static_assert(sizeof(UMG_VoteLevelEntry_C_OnEndVote) == 0x000001, "Wrong size on UMG_VoteLevelEntry_C_OnEndVote");
static_assert(offsetof(UMG_VoteLevelEntry_C_OnEndVote, IsWinner) == 0x000000, "Member 'UMG_VoteLevelEntry_C_OnEndVote::IsWinner' has a wrong offset!");

// Function UMG_VoteLevelEntry.UMG_VoteLevelEntry_C.OnUpdateVote
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteLevelEntry_C_OnUpdateVote final
{
public:
	int32                                         Param_VoteCount;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasVotedFor;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteLevelEntry_C_OnUpdateVote) == 0x000004, "Wrong alignment on UMG_VoteLevelEntry_C_OnUpdateVote");
static_assert(sizeof(UMG_VoteLevelEntry_C_OnUpdateVote) == 0x000008, "Wrong size on UMG_VoteLevelEntry_C_OnUpdateVote");
static_assert(offsetof(UMG_VoteLevelEntry_C_OnUpdateVote, Param_VoteCount) == 0x000000, "Member 'UMG_VoteLevelEntry_C_OnUpdateVote::Param_VoteCount' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_OnUpdateVote, HasVotedFor) == 0x000004, "Member 'UMG_VoteLevelEntry_C_OnUpdateVote::HasVotedFor' has a wrong offset!");

// Function UMG_VoteLevelEntry.UMG_VoteLevelEntry_C.UpdateStatus
// 0x0028 (0x0028 - 0x0000)
struct UMG_VoteLevelEntry_C_UpdateStatus final
{
public:
	int32                                         Vote_Count;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Voted_For;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4195[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteLevelEntry_C_UpdateStatus) == 0x000008, "Wrong alignment on UMG_VoteLevelEntry_C_UpdateStatus");
static_assert(sizeof(UMG_VoteLevelEntry_C_UpdateStatus) == 0x000028, "Wrong size on UMG_VoteLevelEntry_C_UpdateStatus");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, Vote_Count) == 0x000000, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::Vote_Count' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, Has_Voted_For) == 0x000004, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::Has_Voted_For' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, Temp_byte_Variable) == 0x000005, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, Temp_bool_Variable) == 0x000021, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, Temp_byte_Variable_1) == 0x000022, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, Temp_byte_Variable_2) == 0x000023, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, K2Node_Select_Default) == 0x000024, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, Temp_byte_Variable_3) == 0x000025, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, Temp_bool_Variable_1) == 0x000026, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_UpdateStatus, K2Node_Select_Default_1) == 0x000027, "Member 'UMG_VoteLevelEntry_C_UpdateStatus::K2Node_Select_Default_1' has a wrong offset!");

// Function UMG_VoteLevelEntry.UMG_VoteLevelEntry_C.InitDescription
// 0x0140 (0x0140 - 0x0000)
struct UMG_VoteLevelEntry_C_InitDescription final
{
public:
	struct FSQLevelEntry                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0138)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteLevelEntry_C_InitDescription) == 0x000008, "Wrong alignment on UMG_VoteLevelEntry_C_InitDescription");
static_assert(sizeof(UMG_VoteLevelEntry_C_InitDescription) == 0x000140, "Wrong size on UMG_VoteLevelEntry_C_InitDescription");
static_assert(offsetof(UMG_VoteLevelEntry_C_InitDescription, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'UMG_VoteLevelEntry_C_InitDescription::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UMG_VoteLevelEntry_C_InitDescription, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000138, "Member 'UMG_VoteLevelEntry_C_InitDescription::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InteractableItem_Master

#include "Basic.hpp"

#include "W_InteractableItem_Master_classes.hpp"
#include "W_InteractableItem_Master_parameters.hpp"


namespace SDK
{

// Function W_InteractableItem_Master.W_InteractableItem_Master_C.ExecuteUbergraph_W_InteractableItem_Master
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableItem_Master_C::ExecuteUbergraph_W_InteractableItem_Master(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_Master_C", "ExecuteUbergraph_W_InteractableItem_Master");

	Params::W_InteractableItem_Master_C_ExecuteUbergraph_W_InteractableItem_Master Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InteractableItem_Master.W_InteractableItem_Master_C.Set Interact Data
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSQUsableWidgetData              Interact_Data                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableItem_Master_C::Set_Interact_Data(const struct FSQUsableWidgetData& Interact_Data, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_Master_C", "Set Interact Data");

	Params::W_InteractableItem_Master_C_Set_Interact_Data Parms{};

	Parms.Interact_Data = std::move(Interact_Data);
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InteractableItem_Master.W_InteractableItem_Master_C.Clear Interactable
// (Public, BlueprintCallable, BlueprintEvent)

void UW_InteractableItem_Master_C::Clear_Interactable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_Master_C", "Clear Interactable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_InteractableItem_Master.W_InteractableItem_Master_C.Set Interactable Actor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableItem_Master_C::Set_Interactable_Actor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_Master_C", "Set Interactable Actor");

	Params::W_InteractableItem_Master_C_Set_Interactable_Actor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_InteractableItem_Master.W_InteractableItem_Master_C.Get Short Action Name
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           In_Action                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             Short_Name                                             (Parm, OutParm)

void UW_InteractableItem_Master_C::Get_Short_Action_Name(const class FString& In_Action, class FText* Short_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_Master_C", "Get Short Action Name");

	Params::W_InteractableItem_Master_C_Get_Short_Action_Name Parms{};

	Parms.In_Action = std::move(In_Action);

	UObject::ProcessEvent(Func, &Parms);

	if (Short_Name != nullptr)
		*Short_Name = std::move(Parms.Short_Name);
}


// Function W_InteractableItem_Master.W_InteractableItem_Master_C.Format Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_InteractableItem_Master_C::Format_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_Master_C", "Format Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_InteractableItem_Master.W_InteractableItem_Master_C.Get Format Box
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UHorizontalBox*                   FormatBox                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_InteractableItem_Master_C::Get_Format_Box(class UHorizontalBox** FormatBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_InteractableItem_Master_C", "Get Format Box");

	Params::W_InteractableItem_Master_C_Get_Format_Box Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FormatBox != nullptr)
		*FormatBox = Parms.FormatBox;
}

}


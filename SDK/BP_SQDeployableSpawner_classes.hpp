#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQDeployableSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ESQDeployable_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SQDeployableSpawner.BP_SQDeployableSpawner_C
// 0x00A0 (0x0370 - 0x02D0)
class ABP_SQDeployableSpawner_C final : public ASQDeployableSpawner
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   PreviewText;                                       // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SQDeployableSpawnerSettings_C*      Settings;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMap<ESQDeployable, struct FVector>           SizeMap;                                           // 0x02F8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                          DeployableAlive;                                   // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OverlappedAtStart;                                 // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQBuildState                                 SpawnState;                                        // 0x034A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          PreventUnbuilding;                                 // 0x034B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          PreventDamaging;                                   // 0x034C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          PreventRequireFOB;                                 // 0x034D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          PreventRequireSameTeam;                            // 0x034E(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_4AE4[0x1];                                     // 0x034F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnLifeSpawn;                                    // 0x0350(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         UniqueUsageDeployablePriorityBonus;                // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveDeployableWhenDestroyed;                     // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AE5[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployable*                          SpawnedDeployable;                                 // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQForwardBase*                         Override_Owning_FOB;                               // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SQDeployableSpawner(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void OnDeployableDestroyed(class AActor* DestroyedActor);
	void OnDeployableSpawned(class ASQDeployable* OutDeployable);
	void UserConstructionScript();
	void GenerateReservedAreaDisplay(bool Reset);
	void GeneratePreviewMesh();
	void RefreshPreview();
	void SetPreviewMesh(class UStaticMeshComponent* Mesh);
	void LoadPreviewMesh(TSoftClassPtr<class UClass> AssetClass);
	void GetDebugTeam(ESQTeam* Out_Debug_Team);
	void GetDebugPosition(struct FTransform* Out_Position);
	void SetPreviewText(const struct FLinearColor& InTextColor);
	void ApplyHealthSetting(class ASQDeployable* In_Deployable);
	void ApplyFlagsOverrides(class ASQDeployable* In_Deployable);
	void ApplyLifeSpan(class ASQDeployable* In_Deployable, bool* Out_KeepSpawnerAlive);

	void GetSpawnerBound(struct FVector* OutBounds) const;
	bool CanSpawnDeployable(const class USQDeployableSettings* InAvailableDeployable) const;
	bool IsConfigurationValid() const;
	void GetDeployableReference(class USQDeployableSettings* InDeployableSettings, TSoftClassPtr<class UClass>* OutDeployableReference) const;
	bool IsSpawnerAvailable() const;
	int32 GetDeployablePriority(const struct FSQAvailabilityState_Deployable& InAvailableDeployable) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SQDeployableSpawner_C">();
	}
	static class ABP_SQDeployableSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SQDeployableSpawner_C>();
	}
};
static_assert(alignof(ABP_SQDeployableSpawner_C) == 0x000010, "Wrong alignment on ABP_SQDeployableSpawner_C");
static_assert(sizeof(ABP_SQDeployableSpawner_C) == 0x000370, "Wrong size on ABP_SQDeployableSpawner_C");
static_assert(offsetof(ABP_SQDeployableSpawner_C, UberGraphFrame) == 0x0002D0, "Member 'ABP_SQDeployableSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, PreviewText) == 0x0002D8, "Member 'ABP_SQDeployableSpawner_C::PreviewText' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, Arrow) == 0x0002E0, "Member 'ABP_SQDeployableSpawner_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, DefaultSceneRoot) == 0x0002E8, "Member 'ABP_SQDeployableSpawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, Settings) == 0x0002F0, "Member 'ABP_SQDeployableSpawner_C::Settings' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, SizeMap) == 0x0002F8, "Member 'ABP_SQDeployableSpawner_C::SizeMap' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, DeployableAlive) == 0x000348, "Member 'ABP_SQDeployableSpawner_C::DeployableAlive' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, OverlappedAtStart) == 0x000349, "Member 'ABP_SQDeployableSpawner_C::OverlappedAtStart' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, SpawnState) == 0x00034A, "Member 'ABP_SQDeployableSpawner_C::SpawnState' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, PreventUnbuilding) == 0x00034B, "Member 'ABP_SQDeployableSpawner_C::PreventUnbuilding' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, PreventDamaging) == 0x00034C, "Member 'ABP_SQDeployableSpawner_C::PreventDamaging' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, PreventRequireFOB) == 0x00034D, "Member 'ABP_SQDeployableSpawner_C::PreventRequireFOB' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, PreventRequireSameTeam) == 0x00034E, "Member 'ABP_SQDeployableSpawner_C::PreventRequireSameTeam' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, SpawnLifeSpawn) == 0x000350, "Member 'ABP_SQDeployableSpawner_C::SpawnLifeSpawn' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, UniqueUsageDeployablePriorityBonus) == 0x000354, "Member 'ABP_SQDeployableSpawner_C::UniqueUsageDeployablePriorityBonus' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, RemoveDeployableWhenDestroyed) == 0x000358, "Member 'ABP_SQDeployableSpawner_C::RemoveDeployableWhenDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, SpawnedDeployable) == 0x000360, "Member 'ABP_SQDeployableSpawner_C::SpawnedDeployable' has a wrong offset!");
static_assert(offsetof(ABP_SQDeployableSpawner_C, Override_Owning_FOB) == 0x000368, "Member 'ABP_SQDeployableSpawner_C::Override_Owning_FOB' has a wrong offset!");

}


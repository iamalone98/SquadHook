#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HelicopterStatus

#include "Basic.hpp"

#include "W_HelicopterStatus_classes.hpp"
#include "W_HelicopterStatus_parameters.hpp"


namespace SDK
{

// Function W_HelicopterStatus.W_HelicopterStatus_C.ExecuteUbergraph_W_HelicopterStatus
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_HelicopterStatus_C::ExecuteUbergraph_W_HelicopterStatus(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "ExecuteUbergraph_W_HelicopterStatus");

	Params::W_HelicopterStatus_C_ExecuteUbergraph_W_HelicopterStatus Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_HelicopterStatus_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "Tick");

	Params::W_HelicopterStatus_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.Refresh Vehicle
// (BlueprintCallable, BlueprintEvent)

void UW_HelicopterStatus_C::Refresh_Vehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "Refresh Vehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_HelicopterStatus_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.Get Helicopter
// (Public, BlueprintCallable, BlueprintEvent)

void UW_HelicopterStatus_C::Get_Helicopter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "Get Helicopter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.Get_VehicleHealthPercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UW_HelicopterStatus_C::Get_VehicleHealthPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "Get_VehicleHealthPercent");

	Params::W_HelicopterStatus_C_Get_VehicleHealthPercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.Update Engine State
// (Public, BlueprintCallable, BlueprintEvent)

void UW_HelicopterStatus_C::Update_Engine_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "Update Engine State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.Update Main Rotor State
// (Public, BlueprintCallable, BlueprintEvent)

void UW_HelicopterStatus_C::Update_Main_Rotor_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "Update Main Rotor State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.VehicleHealthColor
// (Public, BlueprintCallable, BlueprintEvent)

void UW_HelicopterStatus_C::VehicleHealthColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "VehicleHealthColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.Get Specific Blades
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Main                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USQRotorBladesComponent*          Rotor                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_HelicopterStatus_C::Get_Specific_Blades(bool Main, class USQRotorBladesComponent** Rotor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "Get Specific Blades");

	Params::W_HelicopterStatus_C_Get_Specific_Blades Parms{};

	Parms.Main = Main;

	UObject::ProcessEvent(Func, &Parms);

	if (Rotor != nullptr)
		*Rotor = Parms.Rotor;
}


// Function W_HelicopterStatus.W_HelicopterStatus_C.Update Tail Rotor State
// (Public, BlueprintCallable, BlueprintEvent)

void UW_HelicopterStatus_C::Update_Tail_Rotor_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_HelicopterStatus_C", "Update Tail Rotor State");

	UObject::ProcessEvent(Func, nullptr);
}

}


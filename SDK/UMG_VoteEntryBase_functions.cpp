#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteEntryBase

#include "Basic.hpp"

#include "UMG_VoteEntryBase_classes.hpp"
#include "UMG_VoteEntryBase_parameters.hpp"


namespace SDK
{

// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.ExecuteUbergraph_UMG_VoteEntryBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteEntryBase_C::ExecuteUbergraph_UMG_VoteEntryBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "ExecuteUbergraph_UMG_VoteEntryBase");

	Params::UMG_VoteEntryBase_C_ExecuteUbergraph_UMG_VoteEntryBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.OnEndVote
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsWinner                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteEntryBase_C::OnEndVote(bool IsWinner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "OnEndVote");

	Params::UMG_VoteEntryBase_C_OnEndVote Parms{};

	Parms.IsWinner = IsWinner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.InitItem
// (BlueprintCallable, BlueprintEvent)

void UUMG_VoteEntryBase_C::InitItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "InitItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUMG_VoteEntryBase_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.OnUpdateVote
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VoteCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasVotedFor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteEntryBase_C::OnUpdateVote(int32 VoteCount, bool HasVotedFor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "OnUpdateVote");

	Params::UMG_VoteEntryBase_C_OnUpdateVote Parms{};

	Parms.VoteCount = VoteCount;
	Parms.HasVotedFor = HasVotedFor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteEntryBase_C::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "OnListItemObjectSet");

	Params::UMG_VoteEntryBase_C_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.BP_OnItemSelectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteEntryBase_C::BP_OnItemSelectionChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "BP_OnItemSelectionChanged");

	Params::UMG_VoteEntryBase_C_BP_OnItemSelectionChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.BP_OnItemExpansionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsExpanded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteEntryBase_C::BP_OnItemExpansionChanged(bool bIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "BP_OnItemExpansionChanged");

	Params::UMG_VoteEntryBase_C_BP_OnItemExpansionChanged Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.BP_OnEntryReleased
// (Event, Protected, BlueprintEvent)

void UUMG_VoteEntryBase_C::BP_OnEntryReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "BP_OnEntryReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.SubmitVote
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutVotedDisplayStatus                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteEntryBase_C::SubmitVote(bool* OutVotedDisplayStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "SubmitVote");

	Params::UMG_VoteEntryBase_C_SubmitVote Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutVotedDisplayStatus != nullptr)
		*OutVotedDisplayStatus = Parms.OutVotedDisplayStatus;
}


// Function UMG_VoteEntryBase.UMG_VoteEntryBase_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUMG_VoteEntryBase_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteEntryBase_C", "OnMouseButtonDown");

	Params::UMG_VoteEntryBase_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


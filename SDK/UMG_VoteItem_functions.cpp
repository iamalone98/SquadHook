#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteItem

#include "Basic.hpp"

#include "UMG_VoteItem_classes.hpp"
#include "UMG_VoteItem_parameters.hpp"


namespace SDK
{

// Function UMG_VoteItem.UMG_VoteItem_C.VoteItemSelected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Choice                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteItem_C::VoteItemSelected__DelegateSignature(class FName Choice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "VoteItemSelected__DelegateSignature");

	Params::UMG_VoteItem_C_VoteItemSelected__DelegateSignature Parms{};

	Parms.Choice = Choice;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteItem.UMG_VoteItem_C.InfoSelected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_ChoiceId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteItem_C::InfoSelected__DelegateSignature(class FName Param_ChoiceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "InfoSelected__DelegateSignature");

	Params::UMG_VoteItem_C_InfoSelected__DelegateSignature Parms{};

	Parms.Param_ChoiceId = Param_ChoiceId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteItem.UMG_VoteItem_C.ExecuteUbergraph_UMG_VoteItem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteItem_C::ExecuteUbergraph_UMG_VoteItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "ExecuteUbergraph_UMG_VoteItem");

	Params::UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteItem.UMG_VoteItem_C.BndEvt__UMG_VoteItem_InfoButton_K2Node_ComponentBoundEvent_6_InfoClicked__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteItem_C::BndEvt__UMG_VoteItem_InfoButton_K2Node_ComponentBoundEvent_6_InfoClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "BndEvt__UMG_VoteItem_InfoButton_K2Node_ComponentBoundEvent_6_InfoClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteItem.UMG_VoteItem_C.BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteItem_C::BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteItem.UMG_VoteItem_C.BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteItem_C::BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteItem.UMG_VoteItem_C.BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UUMG_VoteItem_C::BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "BndEvt__UMG_VoteItem_Button_Main_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteItem.UMG_VoteItem_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUMG_VoteItem_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UMG_VoteItem.UMG_VoteItem_C.FillFromTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FText                             TopName                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             BottomName                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UUMG_VoteItem_C::FillFromTexture(TSoftObjectPtr<class UTexture2D> Texture, const class FText& TopName, const class FText& BottomName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "FillFromTexture");

	Params::UMG_VoteItem_C_FillFromTexture Parms{};

	Parms.Texture = Texture;
	Parms.TopName = std::move(TopName);
	Parms.BottomName = std::move(BottomName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteItem.UMG_VoteItem_C.UpdateStatus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Vote_Count                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Has_Voted_For                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteItem_C::UpdateStatus(int32 Vote_Count, bool Has_Voted_For)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "UpdateStatus");

	Params::UMG_VoteItem_C_UpdateStatus Parms{};

	Parms.Vote_Count = Vote_Count;
	Parms.Has_Voted_For = Has_Voted_For;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteItem.UMG_VoteItem_C.MarkSelected
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUMG_VoteItem_C::MarkSelected(bool Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "MarkSelected");

	Params::UMG_VoteItem_C_MarkSelected Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteItem.UMG_VoteItem_C.OnVoteUpdated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVoteSessionClient*             VoteSession                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerCurrentVotes                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUMG_VoteItem_C::OnVoteUpdated(class USQVoteSessionClient* VoteSession, int32 PlayerCurrentVotes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "OnVoteUpdated");

	Params::UMG_VoteItem_C_OnVoteUpdated Parms{};

	Parms.VoteSession = VoteSession;
	Parms.PlayerCurrentVotes = PlayerCurrentVotes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteItem.UMG_VoteItem_C.UpdateFlagMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        FlagTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        TeamTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        BadgeTexture                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FText                             TopName                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             BottomName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// TSoftObjectPtr<class UTexture2D>        RoleIcon                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FText                             RoleName                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UUMG_VoteItem_C::UpdateFlagMaterial(TSoftObjectPtr<class UTexture2D> FlagTexture, TSoftObjectPtr<class UTexture2D> TeamTexture, TSoftObjectPtr<class UTexture2D> BadgeTexture, const class FText& TopName, const class FText& BottomName, TSoftObjectPtr<class UTexture2D> RoleIcon, const class FText& RoleName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "UpdateFlagMaterial");

	Params::UMG_VoteItem_C_UpdateFlagMaterial Parms{};

	Parms.FlagTexture = FlagTexture;
	Parms.TeamTexture = TeamTexture;
	Parms.BadgeTexture = BadgeTexture;
	Parms.TopName = std::move(TopName);
	Parms.BottomName = std::move(BottomName);
	Parms.RoleIcon = RoleIcon;
	Parms.RoleName = std::move(RoleName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UMG_VoteItem.UMG_VoteItem_C.GetVisualData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VoteVisible                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Selected                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             VoteCountText                                          (Parm, OutParm)

void UUMG_VoteItem_C::GetVisualData(bool* VoteVisible, bool* Selected, class FText* VoteCountText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "GetVisualData");

	Params::UMG_VoteItem_C_GetVisualData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VoteVisible != nullptr)
		*VoteVisible = Parms.VoteVisible;

	if (Selected != nullptr)
		*Selected = Parms.Selected;

	if (VoteCountText != nullptr)
		*VoteCountText = std::move(Parms.VoteCountText);
}


// Function UMG_VoteItem.UMG_VoteItem_C.SelectOption
// (Public, BlueprintCallable, BlueprintEvent)

void UUMG_VoteItem_C::SelectOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UMG_VoteItem_C", "SelectOption");

	UObject::ProcessEvent(Func, nullptr);
}

}


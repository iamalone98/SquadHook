#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_R2T_Weapon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.ExecuteUbergraph_BP_R2T_Weapon
// 0x0560 (0x0560 - 0x0000)
struct BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E9[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_32EA[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQItemSkinCollection*                  K2Node_DynamicCast_AsSQItem_Skin_Collection;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EB[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EC[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0154(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQItemSkinSlot                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x01E0(0x00F8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32ED[0x2];                                     // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_WheelAxis;                      // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EE[0x2];                                     // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Zoom;                           // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x02FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EF[0x3];                                     // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F0[0x3];                                     // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x039C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0434(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x04BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x04C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue_1;  // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F1[0x7];                                     // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0558(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon) == 0x000008, "Wrong alignment on BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon");
static_assert(sizeof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon) == 0x000560, "Wrong size on BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, EntryPoint) == 0x000000, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000014, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000019, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00001C, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000A4, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000130, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, K2Node_DynamicCast_AsSQItem_Skin_Collection) == 0x000138, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::K2Node_DynamicCast_AsSQItem_Skin_Collection' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_MakeVector_ReturnValue_1) == 0x000144, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000154, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001DC, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001E0, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002D8, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_IsValid_ReturnValue_1) == 0x0002D9, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, K2Node_CustomEvent_WheelAxis) == 0x0002DC, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::K2Node_CustomEvent_WheelAxis' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002E0, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002E1, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002E4, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0002E8, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002EC, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0002F0, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, K2Node_CustomEvent_Zoom) == 0x0002F4, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::K2Node_CustomEvent_Zoom' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_FClamp_ReturnValue) == 0x0002F8, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x0002FC, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, Temp_bool_IsClosed_Variable) == 0x000384, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000388, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_MakeVector_ReturnValue_2) == 0x00038C, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000398, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x00039C, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000424, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_RInterpTo_ReturnValue) == 0x000428, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000434, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_RInterpTo_ReturnValue_1) == 0x0004BC, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x0004C8, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_EqualEqual_RotatorRotator_ReturnValue_1) == 0x000550, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_EqualEqual_RotatorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon, CallFunc_K2_SetTimer_ReturnValue) == 0x000558, "Member 'BP_R2T_Weapon_C_ExecuteUbergraph_BP_R2T_Weapon::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.SetZoom
// 0x0004 (0x0004 - 0x0000)
struct BP_R2T_Weapon_C_SetZoom final
{
public:
	float                                         Zoom;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_R2T_Weapon_C_SetZoom) == 0x000004, "Wrong alignment on BP_R2T_Weapon_C_SetZoom");
static_assert(sizeof(BP_R2T_Weapon_C_SetZoom) == 0x000004, "Wrong size on BP_R2T_Weapon_C_SetZoom");
static_assert(offsetof(BP_R2T_Weapon_C_SetZoom, Zoom) == 0x000000, "Member 'BP_R2T_Weapon_C_SetZoom::Zoom' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.MouseWheel
// 0x0004 (0x0004 - 0x0000)
struct BP_R2T_Weapon_C_MouseWheel final
{
public:
	float                                         WheelAxis;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_R2T_Weapon_C_MouseWheel) == 0x000004, "Wrong alignment on BP_R2T_Weapon_C_MouseWheel");
static_assert(sizeof(BP_R2T_Weapon_C_MouseWheel) == 0x000004, "Wrong size on BP_R2T_Weapon_C_MouseWheel");
static_assert(offsetof(BP_R2T_Weapon_C_MouseWheel, WheelAxis) == 0x000000, "Member 'BP_R2T_Weapon_C_MouseWheel::WheelAxis' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_R2T_Weapon_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_R2T_Weapon_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_R2T_Weapon_C_ReceiveTick");
static_assert(sizeof(BP_R2T_Weapon_C_ReceiveTick) == 0x000004, "Wrong size on BP_R2T_Weapon_C_ReceiveTick");
static_assert(offsetof(BP_R2T_Weapon_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_R2T_Weapon_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_R2T_Weapon_C_UserConstructionScript final
{
public:
	float                                         Bias;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_R2T_Weapon_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_R2T_Weapon_C_UserConstructionScript");
static_assert(sizeof(BP_R2T_Weapon_C_UserConstructionScript) == 0x000018, "Wrong size on BP_R2T_Weapon_C_UserConstructionScript");
static_assert(offsetof(BP_R2T_Weapon_C_UserConstructionScript, Bias) == 0x000000, "Member 'BP_R2T_Weapon_C_UserConstructionScript::Bias' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_R2T_Weapon_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.Set Render Weapon Mesh
// 0x0058 (0x0058 - 0x0000)
struct BP_R2T_Weapon_C_Set_Render_Weapon_Mesh final
{
public:
	class UMaterialInstanceDynamic*               L_MI_Weap;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               L_MI_Soldier;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USQItemSkinCollection*                  K2Node_DynamicCast_AsSQItem_Skin_Collection;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsSQEquipable_Item;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh) == 0x000008, "Wrong alignment on BP_R2T_Weapon_C_Set_Render_Weapon_Mesh");
static_assert(sizeof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh) == 0x000058, "Wrong size on BP_R2T_Weapon_C_Set_Render_Weapon_Mesh");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, L_MI_Weap) == 0x000000, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::L_MI_Weap' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, L_MI_Soldier) == 0x000008, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::L_MI_Soldier' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000018, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, K2Node_DynamicCast_AsSQItem_Skin_Collection) == 0x000020, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::K2Node_DynamicCast_AsSQItem_Skin_Collection' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, K2Node_ClassDynamicCast_AsSQEquipable_Item) == 0x000030, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::K2Node_ClassDynamicCast_AsSQEquipable_Item' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000040, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, K2Node_DynamicCast_AsSQWeapon) == 0x000048, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Render_Weapon_Mesh, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_R2T_Weapon_C_Set_Render_Weapon_Mesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.Set Rendering
// 0x0030 (0x0030 - 0x0000)
struct BP_R2T_Weapon_C_Set_Rendering final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_R2T_Weapon_C_Set_Rendering) == 0x000008, "Wrong alignment on BP_R2T_Weapon_C_Set_Rendering");
static_assert(sizeof(BP_R2T_Weapon_C_Set_Rendering) == 0x000030, "Wrong size on BP_R2T_Weapon_C_Set_Rendering");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Rendering, Active) == 0x000000, "Member 'BP_R2T_Weapon_C_Set_Rendering::Active' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Rendering, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_R2T_Weapon_C_Set_Rendering::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Rendering, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_R2T_Weapon_C_Set_Rendering::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Rendering, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_R2T_Weapon_C_Set_Rendering::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Rendering, CallFunc_GetMaterials_ReturnValue) == 0x000010, "Member 'BP_R2T_Weapon_C_Set_Rendering::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Rendering, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_R2T_Weapon_C_Set_Rendering::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Rendering, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_R2T_Weapon_C_Set_Rendering::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Rendering, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_R2T_Weapon_C_Set_Rendering::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Set_Rendering, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'BP_R2T_Weapon_C_Set_Rendering::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.Get Role Info
// 0x0010 (0x0010 - 0x0000)
struct BP_R2T_Weapon_C_Get_Role_Info final
{
public:
	class USkeletalMeshComponent*                 Soldier_Mesh;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Weapon_Mesh;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_R2T_Weapon_C_Get_Role_Info) == 0x000008, "Wrong alignment on BP_R2T_Weapon_C_Get_Role_Info");
static_assert(sizeof(BP_R2T_Weapon_C_Get_Role_Info) == 0x000010, "Wrong size on BP_R2T_Weapon_C_Get_Role_Info");
static_assert(offsetof(BP_R2T_Weapon_C_Get_Role_Info, Soldier_Mesh) == 0x000000, "Member 'BP_R2T_Weapon_C_Get_Role_Info::Soldier_Mesh' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Get_Role_Info, Weapon_Mesh) == 0x000008, "Member 'BP_R2T_Weapon_C_Get_Role_Info::Weapon_Mesh' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.Manage Attachments
// 0x00E0 (0x00E0 - 0x0000)
struct BP_R2T_Weapon_C_Manage_Attachments final
{
public:
	bool                                          Create;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   L_Attach;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            L_Static_Mesh;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_Socket_Name;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F7[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSQEquipable_Item;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F8[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F9[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FA[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FB[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQWeaponAttachment*                    K2Node_DynamicCast_AsSQWeapon_Attachment;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FC[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQWeaponAttachment_Scope*              K2Node_DynamicCast_AsSQWeapon_Attachment_Scope;    // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_R2T_Weapon_C_Manage_Attachments) == 0x000010, "Wrong alignment on BP_R2T_Weapon_C_Manage_Attachments");
static_assert(sizeof(BP_R2T_Weapon_C_Manage_Attachments) == 0x0000E0, "Wrong size on BP_R2T_Weapon_C_Manage_Attachments");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, Create) == 0x000000, "Member 'BP_R2T_Weapon_C_Manage_Attachments::Create' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, L_Attach) == 0x000008, "Member 'BP_R2T_Weapon_C_Manage_Attachments::L_Attach' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, L_Static_Mesh) == 0x000010, "Member 'BP_R2T_Weapon_C_Manage_Attachments::L_Static_Mesh' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, L_Socket_Name) == 0x000018, "Member 'BP_R2T_Weapon_C_Manage_Attachments::L_Socket_Name' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_R2T_Weapon_C_Manage_Attachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_R2T_Weapon_C_Manage_Attachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000060, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_AddComponent_ReturnValue) == 0x000068, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, K2Node_ClassDynamicCast_AsSQEquipable_Item) == 0x000070, "Member 'BP_R2T_Weapon_C_Manage_Attachments::K2Node_ClassDynamicCast_AsSQEquipable_Item' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, K2Node_ClassDynamicCast_bSuccess) == 0x000078, "Member 'BP_R2T_Weapon_C_Manage_Attachments::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000079, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_SetStaticMesh_ReturnValue) == 0x00007A, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000080, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, K2Node_DynamicCast_AsSQWeapon) == 0x000088, "Member 'BP_R2T_Weapon_C_Manage_Attachments::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_R2T_Weapon_C_Manage_Attachments::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_GetDefaultObjectFor_ReturnValue_1) == 0x0000A8, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_GetDefaultObjectFor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, CallFunc_IsValidClass_ReturnValue) == 0x0000B0, "Member 'BP_R2T_Weapon_C_Manage_Attachments::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, K2Node_DynamicCast_AsSQWeapon_Attachment) == 0x0000B8, "Member 'BP_R2T_Weapon_C_Manage_Attachments::K2Node_DynamicCast_AsSQWeapon_Attachment' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BP_R2T_Weapon_C_Manage_Attachments::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, K2Node_DynamicCast_AsSQWeapon_Attachment_Scope) == 0x0000C8, "Member 'BP_R2T_Weapon_C_Manage_Attachments::K2Node_DynamicCast_AsSQWeapon_Attachment_Scope' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_Manage_Attachments, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'BP_R2T_Weapon_C_Manage_Attachments::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.UpdateRenderMesh
// 0x00A8 (0x00A8 - 0x0000)
struct BP_R2T_Weapon_C_UpdateRenderMesh final
{
public:
	TSoftClassPtr<class UClass>                   Weapon;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TSoftObjectPtr<class USQItemSkinCollection>   Skin;                                              // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               L_MI_Weap;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               L_MI_Soldier;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USQItemSkinCollection*                  K2Node_DynamicCast_AsSQItem_Skin_Collection;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FD[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsSQEquipable_Item;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32FE[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_R2T_Weapon_C_UpdateRenderMesh) == 0x000008, "Wrong alignment on BP_R2T_Weapon_C_UpdateRenderMesh");
static_assert(sizeof(BP_R2T_Weapon_C_UpdateRenderMesh) == 0x0000A8, "Wrong size on BP_R2T_Weapon_C_UpdateRenderMesh");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, Weapon) == 0x000000, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::Weapon' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, Skin) == 0x000028, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::Skin' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, L_MI_Weap) == 0x000050, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::L_MI_Weap' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, L_MI_Soldier) == 0x000058, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::L_MI_Soldier' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000060, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000068, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, K2Node_DynamicCast_AsSQItem_Skin_Collection) == 0x000070, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::K2Node_DynamicCast_AsSQItem_Skin_Collection' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, K2Node_ClassDynamicCast_AsSQEquipable_Item) == 0x000080, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::K2Node_ClassDynamicCast_AsSQEquipable_Item' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, K2Node_ClassDynamicCast_bSuccess) == 0x000088, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000090, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, K2Node_DynamicCast_AsSQWeapon) == 0x000098, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_UpdateRenderMesh, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_R2T_Weapon_C_UpdateRenderMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.ApplySkin
// 0x00A0 (0x00A0 - 0x0000)
struct BP_R2T_Weapon_C_ApplySkin final
{
public:
	class USQItemSkinCollection*                  SkinCollection;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQItemSkinCollection_MeshMerge*        MergeMesh;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQItemSkinCollection_MaterialSwap*     MaterialSwap;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32FF[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
	class USQItemSkinCollection_MeshMerge*        K2Node_DynamicCast_AsSQItem_Skin_Collection_Mesh_Merge; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3300[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3301[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQItemSkinCollection_MaterialSwap*     K2Node_DynamicCast_AsSQItem_Skin_Collection_Material_Swap; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3302[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue;                 // 0x0088(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_R2T_Weapon_C_ApplySkin) == 0x000008, "Wrong alignment on BP_R2T_Weapon_C_ApplySkin");
static_assert(sizeof(BP_R2T_Weapon_C_ApplySkin) == 0x0000A0, "Wrong size on BP_R2T_Weapon_C_ApplySkin");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, SkinCollection) == 0x000000, "Member 'BP_R2T_Weapon_C_ApplySkin::SkinCollection' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, MergeMesh) == 0x000008, "Member 'BP_R2T_Weapon_C_ApplySkin::MergeMesh' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, MaterialSwap) == 0x000010, "Member 'BP_R2T_Weapon_C_ApplySkin::MaterialSwap' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_R2T_Weapon_C_ApplySkin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_R2T_Weapon_C_ApplySkin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_R2T_Weapon_C_ApplySkin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_R2T_Weapon_C_ApplySkin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, K2Node_DynamicCast_AsSQItem_Skin_Collection_Mesh_Merge) == 0x000050, "Member 'BP_R2T_Weapon_C_ApplySkin::K2Node_DynamicCast_AsSQItem_Skin_Collection_Mesh_Merge' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_R2T_Weapon_C_ApplySkin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000060, "Member 'BP_R2T_Weapon_C_ApplySkin::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, K2Node_DynamicCast_AsMaterial_Interface) == 0x000068, "Member 'BP_R2T_Weapon_C_ApplySkin::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_R2T_Weapon_C_ApplySkin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, K2Node_DynamicCast_AsSQItem_Skin_Collection_Material_Swap) == 0x000078, "Member 'BP_R2T_Weapon_C_ApplySkin::K2Node_DynamicCast_AsSQItem_Skin_Collection_Material_Swap' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'BP_R2T_Weapon_C_ApplySkin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, CallFunc_GetMaterials_ReturnValue) == 0x000088, "Member 'BP_R2T_Weapon_C_ApplySkin::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_R2T_Weapon_C_ApplySkin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplySkin, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_R2T_Weapon_C_ApplySkin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.ApplyAttachmentSkins
// 0x0218 (0x0218 - 0x0000)
struct BP_R2T_Weapon_C_ApplyAttachmentSkins final
{
public:
	class USQItemSkinCollection*                  SkinCollection;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UStaticMesh>             LReplacementMesh;                                  // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          bRemoveMesh;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3303[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UMaterialInterface>> LAttachmentSkinMats;                               // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<TSoftClassPtr<class UClass>>           LAttachmentTypesAllowed;                           // 0x0048(0x0010)(Edit, BlueprintVisible)
	TSoftClassPtr<class UClass>                   LAttachmentClass;                                  // 0x0058(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LLocalMesh;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3304[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3305[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3306[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Array_Get_Item;                           // 0x00E0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3307[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3308[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3309[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0130(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330A[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0150(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330B[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Map_Find_Value;                           // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330C[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQAttachmentSkinBase*                  CallFunc_Array_Get_Item_2;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330D[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQAttachmentSkin_Combined*             K2Node_DynamicCast_AsSQAttachment_Skin_Combined;   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330E[0x5];                                     // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQAttachmentSkin_Combined_Entry       CallFunc_Array_Get_Item_3;                         // 0x01B0(0x0050)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_330F[0x3];                                     // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQAttachmentSkin*                      K2Node_DynamicCast_AsSQAttachment_Skin;            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_R2T_Weapon_C_ApplyAttachmentSkins) == 0x000008, "Wrong alignment on BP_R2T_Weapon_C_ApplyAttachmentSkins");
static_assert(sizeof(BP_R2T_Weapon_C_ApplyAttachmentSkins) == 0x000218, "Wrong size on BP_R2T_Weapon_C_ApplyAttachmentSkins");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, SkinCollection) == 0x000000, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::SkinCollection' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, LReplacementMesh) == 0x000008, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::LReplacementMesh' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, bRemoveMesh) == 0x000030, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::bRemoveMesh' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, LAttachmentSkinMats) == 0x000038, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::LAttachmentSkinMats' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, LAttachmentTypesAllowed) == 0x000048, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::LAttachmentTypesAllowed' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, LAttachmentClass) == 0x000058, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::LAttachmentClass' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, LLocalMesh) == 0x000080, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::LLocalMesh' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, Temp_int_Loop_Counter_Variable_2) == 0x000098, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, Temp_int_Loop_Counter_Variable_3) == 0x0000A8, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000AC, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, Temp_int_Array_Index_Variable_2) == 0x0000B0, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, Temp_int_Array_Index_Variable_3) == 0x0000B4, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, Temp_bool_True_if_break_was_hit_Variable) == 0x0000B8, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Array_Contains_ReturnValue) == 0x0000BA, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_SetStaticMesh_ReturnValue) == 0x0000BB, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000C0, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000C8, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, K2Node_DynamicCast_AsStatic_Mesh) == 0x0000D0, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0000D9, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000110, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, K2Node_DynamicCast_AsMaterial_Interface) == 0x000120, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Map_Keys_Keys) == 0x000130, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Array_Length_ReturnValue_1) == 0x000148, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000150, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Less_IntInt_ReturnValue_1) == 0x000178, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Map_Find_Value) == 0x000180, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Map_Find_ReturnValue) == 0x000188, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Array_Get_Item_2) == 0x000190, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Array_Length_ReturnValue_2) == 0x000198, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, K2Node_DynamicCast_AsSQAttachment_Skin_Combined) == 0x0001A0, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::K2Node_DynamicCast_AsSQAttachment_Skin_Combined' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, K2Node_DynamicCast_bSuccess_2) == 0x0001A8, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A9, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_BooleanAND_ReturnValue) == 0x0001AA, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Array_Get_Item_3) == 0x0001B0, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Array_Length_ReturnValue_3) == 0x000200, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, CallFunc_Less_IntInt_ReturnValue_3) == 0x000204, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, K2Node_DynamicCast_AsSQAttachment_Skin) == 0x000208, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::K2Node_DynamicCast_AsSQAttachment_Skin' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ApplyAttachmentSkins, K2Node_DynamicCast_bSuccess_3) == 0x000210, "Member 'BP_R2T_Weapon_C_ApplyAttachmentSkins::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.ClearAttachments
// 0x0040 (0x0040 - 0x0000)
struct BP_R2T_Weapon_C_ClearAttachments final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3310[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3311[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3312[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_R2T_Weapon_C_ClearAttachments) == 0x000008, "Wrong alignment on BP_R2T_Weapon_C_ClearAttachments");
static_assert(sizeof(BP_R2T_Weapon_C_ClearAttachments) == 0x000040, "Wrong size on BP_R2T_Weapon_C_ClearAttachments");
static_assert(offsetof(BP_R2T_Weapon_C_ClearAttachments, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_R2T_Weapon_C_ClearAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ClearAttachments, CallFunc_Map_Keys_Keys) == 0x000008, "Member 'BP_R2T_Weapon_C_ClearAttachments::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ClearAttachments, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_R2T_Weapon_C_ClearAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ClearAttachments, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_R2T_Weapon_C_ClearAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ClearAttachments, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_R2T_Weapon_C_ClearAttachments::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ClearAttachments, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_R2T_Weapon_C_ClearAttachments::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ClearAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_R2T_Weapon_C_ClearAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ClearAttachments, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_R2T_Weapon_C_ClearAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_ClearAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_R2T_Weapon_C_ClearAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_R2T_Weapon.BP_R2T_Weapon_C.MouseMoveAxis
// 0x004C (0x004C - 0x0000)
struct BP_R2T_Weapon_C_MouseMoveAxis final
{
public:
	float                                         XAxisValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YAxisValue;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3313[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_R2T_Weapon_C_MouseMoveAxis) == 0x000004, "Wrong alignment on BP_R2T_Weapon_C_MouseMoveAxis");
static_assert(sizeof(BP_R2T_Weapon_C_MouseMoveAxis) == 0x00004C, "Wrong size on BP_R2T_Weapon_C_MouseMoveAxis");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, XAxisValue) == 0x000000, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::XAxisValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, YAxisValue) == 0x000004, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::YAxisValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x00000D, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_ComposeRotators_ReturnValue) == 0x000020, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_FClamp_ReturnValue_1) == 0x00003C, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_R2T_Weapon_C_MouseMoveAxis, CallFunc_MakeRotator_ReturnValue_1) == 0x000040, "Member 'BP_R2T_Weapon_C_MouseMoveAxis::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");

}


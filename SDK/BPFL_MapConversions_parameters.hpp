#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_MapConversions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BPFL_MapConversions.BPFL_MapConversions_C.Get World Distance from Relative Origin
// 0x0028 (0x0028 - 0x0000)
struct BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin final
{
public:
	struct FVector2D                              Relative_Map_Position;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           Map_Body;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         World_Distance;                                    // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Pixel_Distance_from_Relative_Origin_Pixel_Distance; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Pixel_Distance_to_World_Distance_World_Distance; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin) == 0x000008, "Wrong alignment on BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin");
static_assert(sizeof(BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin) == 0x000028, "Wrong size on BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin, Relative_Map_Position) == 0x000000, "Member 'BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin::Relative_Map_Position' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin, Map_Body) == 0x000008, "Member 'BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin::Map_Body' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin, __WorldContext) == 0x000010, "Member 'BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin, World_Distance) == 0x000018, "Member 'BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin::World_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin, CallFunc_Get_Pixel_Distance_from_Relative_Origin_Pixel_Distance) == 0x00001C, "Member 'BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin::CallFunc_Get_Pixel_Distance_from_Relative_Origin_Pixel_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin, CallFunc_Get_Pixel_Distance_to_World_Distance_World_Distance) == 0x000020, "Member 'BPFL_MapConversions_C_Get_World_Distance_from_Relative_Origin::CallFunc_Get_Pixel_Distance_to_World_Distance_World_Distance' has a wrong offset!");

// Function BPFL_MapConversions.BPFL_MapConversions_C.Get Angle From Mouse Vector
// 0x00F0 (0x00F0 - 0x0000)
struct BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector final
{
public:
	struct FVector2D                              Relative_Map_Position;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           Map_Body;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               World_Rotation;                                    // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UW_SQMapCore_C*                         L_Map_Core;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D6[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45D7[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ScreenLocationToMapLocation_OutMapLocation; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ScreenLocationToMapLocation_ReturnValue;  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45D8[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector) == 0x000008, "Wrong alignment on BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector");
static_assert(sizeof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector) == 0x0000F0, "Wrong size on BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, Relative_Map_Position) == 0x000000, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::Relative_Map_Position' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, Map_Body) == 0x000008, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::Map_Body' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, __WorldContext) == 0x000010, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, Angle) == 0x000018, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::Angle' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, World_Rotation) == 0x00001C, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::World_Rotation' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, L_Map_Core) == 0x000028, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::L_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_BreakVector2D_X) == 0x000038, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_BreakVector2D_Y) == 0x00003C, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_GetHUD_ReturnValue) == 0x000040, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, K2Node_DynamicCast_AsBPI_HUD) == 0x000058, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_Get_Map_Core_Map_Core) == 0x000070, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000078, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_BreakVector2D_X_1) == 0x000080, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_BreakVector2D_Y_1) == 0x000084, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_MakeVector2D_ReturnValue) == 0x000088, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_ScreenLocationToMapLocation_OutMapLocation) == 0x000090, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_ScreenLocationToMapLocation_OutMapLocation' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_ScreenLocationToMapLocation_ReturnValue) == 0x000098, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_ScreenLocationToMapLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_BreakVector2D_X_2) == 0x00009C, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_BreakVector2D_Y_2) == 0x0000A0, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_MakeVector_ReturnValue_1) == 0x0000A4, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000B0, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_BreakRotator_Roll) == 0x0000BC, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_BreakRotator_Pitch) == 0x0000C0, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_BreakRotator_Yaw) == 0x0000C4, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_MakeRotator_ReturnValue) == 0x0000CC, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0000D8, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000E4, "Member 'BPFL_MapConversions_C_Get_Angle_From_Mouse_Vector::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");

// Function BPFL_MapConversions.BPFL_MapConversions_C.Get Pixel Distance from Relative Origin
// 0x00E8 (0x00E8 - 0x0000)
struct BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin final
{
public:
	struct FVector2D                              Relative_Map_Position;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           Map_Body;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pixel_Distance;                                    // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D9[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQWorldSettings*                       L_SQ_World_Settings;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         L_Map_Core;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWorldSettings*                         CallFunc_GetWorldSettings_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWorldSettings*                       K2Node_DynamicCast_AsSQWorld_Settings;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45DA[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45DB[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetElementRoot_Out_Root;                  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0080(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ScreenLocationToMapLocation_OutMapLocation; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ScreenLocationToMapLocation_ReturnValue;  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45DC[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin) == 0x000008, "Wrong alignment on BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin");
static_assert(sizeof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin) == 0x0000E8, "Wrong size on BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, Relative_Map_Position) == 0x000000, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::Relative_Map_Position' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, Map_Body) == 0x000008, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::Map_Body' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, __WorldContext) == 0x000010, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, Pixel_Distance) == 0x000018, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::Pixel_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, L_SQ_World_Settings) == 0x000020, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::L_SQ_World_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, L_Map_Core) == 0x000028, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::L_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_GetWorldSettings_ReturnValue) == 0x000030, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_GetWorldSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, K2Node_DynamicCast_AsSQWorld_Settings) == 0x000040, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::K2Node_DynamicCast_AsSQWorld_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_GetHUD_ReturnValue) == 0x000050, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, K2Node_DynamicCast_AsBPI_HUD) == 0x000058, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_Get_Map_Core_Map_Core) == 0x000070, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_GetElementRoot_Out_Root) == 0x000078, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_GetElementRoot_Out_Root' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_GetCachedGeometry_ReturnValue) == 0x000080, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_GetLocalSize_ReturnValue) == 0x0000B8, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0000C0, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_ScreenLocationToMapLocation_OutMapLocation) == 0x0000C8, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_ScreenLocationToMapLocation_OutMapLocation' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_ScreenLocationToMapLocation_ReturnValue) == 0x0000D0, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_ScreenLocationToMapLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000D4, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000DC, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin, CallFunc_VSize2D_ReturnValue) == 0x0000E4, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_from_Relative_Origin::CallFunc_VSize2D_ReturnValue' has a wrong offset!");

// Function BPFL_MapConversions.BPFL_MapConversions_C.Map Position to World Location
// 0x00D8 (0x00D8 - 0x0000)
struct BPFL_MapConversions_C_Map_Position_to_World_Location final
{
public:
	struct FVector2D                              Relative_Map_Position;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                World_Location__XY_;                               // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45DD[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQWorldSettings*                       L_SQ_World_Settings;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         L_Map_Core;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWorldSettings*                         CallFunc_GetWorldSettings_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWorldSettings*                       K2Node_DynamicCast_AsSQWorld_Settings;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45DE[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45DF[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E0[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E1[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45E2[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_MapConversions_C_Map_Position_to_World_Location) == 0x000008, "Wrong alignment on BPFL_MapConversions_C_Map_Position_to_World_Location");
static_assert(sizeof(BPFL_MapConversions_C_Map_Position_to_World_Location) == 0x0000D8, "Wrong size on BPFL_MapConversions_C_Map_Position_to_World_Location");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, Relative_Map_Position) == 0x000000, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::Relative_Map_Position' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, __WorldContext) == 0x000008, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, World_Location__XY_) == 0x000010, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::World_Location__XY_' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, L_SQ_World_Settings) == 0x000020, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::L_SQ_World_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, L_Map_Core) == 0x000028, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::L_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_GetWorldSettings_ReturnValue) == 0x000030, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_GetWorldSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, K2Node_DynamicCast_AsSQWorld_Settings) == 0x000038, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::K2Node_DynamicCast_AsSQWorld_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_BreakVector_X) == 0x000050, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_BreakVector_Y) == 0x000054, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_BreakVector_Z) == 0x000058, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000068, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_GetHUD_ReturnValue) == 0x000078, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_BreakVector_X_1) == 0x000080, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_BreakVector_Y_1) == 0x000084, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_BreakVector_Z_1) == 0x000088, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, K2Node_DynamicCast_AsBPI_HUD) == 0x000090, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_FMax_ReturnValue) == 0x0000A4, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_Get_Map_Core_Map_Core) == 0x0000A8, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_FMin_ReturnValue) == 0x0000B0, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_FMax_ReturnValue_1) == 0x0000B4, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_FMin_ReturnValue_1) == 0x0000B8, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_BreakVector2D_X) == 0x0000BC, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_BreakVector2D_Y) == 0x0000C0, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_MapRangeClamped_ReturnValue) == 0x0000C4, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000C8, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Map_Position_to_World_Location, CallFunc_MakeVector_ReturnValue) == 0x0000CC, "Member 'BPFL_MapConversions_C_Map_Position_to_World_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BPFL_MapConversions.BPFL_MapConversions_C.Mouse Position to World Location
// 0x0128 (0x0128 - 0x0000)
struct BPFL_MapConversions_C_Mouse_Position_to_World_Location final
{
public:
	struct FVector2D                              Mouse_Screen_Position;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E3[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         L_Map_Core;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetElementRoot_Out_Root;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0040(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45E4[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E5[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWorldSettings*                         CallFunc_GetWorldSettings_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWorldSettings*                       K2Node_DynamicCast_AsSQWorld_Settings;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45E6[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_MapConversions_C_Mouse_Position_to_World_Location) == 0x000008, "Wrong alignment on BPFL_MapConversions_C_Mouse_Position_to_World_Location");
static_assert(sizeof(BPFL_MapConversions_C_Mouse_Position_to_World_Location) == 0x000128, "Wrong size on BPFL_MapConversions_C_Mouse_Position_to_World_Location");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, Mouse_Screen_Position) == 0x000000, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::Mouse_Screen_Position' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, __WorldContext) == 0x000008, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, ReturnValue) == 0x000010, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, L_Map_Core) == 0x000020, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::L_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_GetElementRoot_Out_Root) == 0x000030, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_GetElementRoot_Out_Root' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_GetHUD_ReturnValue) == 0x000038, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_GetCachedGeometry_ReturnValue) == 0x000040, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, K2Node_DynamicCast_AsBPI_HUD) == 0x000078, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_GetLocalSize_ReturnValue) == 0x00008C, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_Get_Map_Core_Map_Core) == 0x000098, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector2D_Y) == 0x0000A4, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_AbsoluteToLocal_ReturnValue) == 0x0000A8, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_GetWorldSettings_ReturnValue) == 0x0000B0, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_GetWorldSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector2D_X_1) == 0x0000B8, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector2D_Y_1) == 0x0000BC, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, K2Node_DynamicCast_AsSQWorld_Settings) == 0x0000C0, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::K2Node_DynamicCast_AsSQWorld_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000CC, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D0, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000DC, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector_X) == 0x0000E8, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector_Y) == 0x0000EC, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector_X_1) == 0x0000F4, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector_Y_1) == 0x0000F8, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_BreakVector_Z_1) == 0x0000FC, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000100, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_FMax_ReturnValue) == 0x000104, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_FMin_ReturnValue) == 0x000108, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_FMax_ReturnValue_1) == 0x00010C, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_MapRangeClamped_ReturnValue) == 0x000110, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_FMin_ReturnValue_1) == 0x000114, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000118, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Mouse_Position_to_World_Location, CallFunc_MakeVector_ReturnValue) == 0x00011C, "Member 'BPFL_MapConversions_C_Mouse_Position_to_World_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BPFL_MapConversions.BPFL_MapConversions_C.Get Pixel Distance to World Distance
// 0x00E8 (0x00E8 - 0x0000)
struct BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance final
{
public:
	float                                         Pixel_Distance;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         World_Distance;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQWorldSettings*                       L_SQ_World_Settings;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         L_Map_Core;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWorldSettings*                         CallFunc_GetWorldSettings_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWorldSettings*                       K2Node_DynamicCast_AsSQWorld_Settings;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45E9[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45EA[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45EB[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45EC[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetElementRoot_Out_Root;                  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00A0(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance) == 0x000008, "Wrong alignment on BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance");
static_assert(sizeof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance) == 0x0000E8, "Wrong size on BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, Pixel_Distance) == 0x000000, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::Pixel_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, __WorldContext) == 0x000008, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, World_Distance) == 0x000010, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::World_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, L_SQ_World_Settings) == 0x000018, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::L_SQ_World_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, L_Map_Core) == 0x000020, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::L_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_GetWorldSettings_ReturnValue) == 0x000028, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_GetWorldSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, K2Node_DynamicCast_AsSQWorld_Settings) == 0x000030, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::K2Node_DynamicCast_AsSQWorld_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000050, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_GetHUD_ReturnValue) == 0x000060, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, K2Node_DynamicCast_AsBPI_HUD) == 0x000078, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_VSize_ReturnValue) == 0x00008C, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_Get_Map_Core_Map_Core) == 0x000090, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_GetElementRoot_Out_Root) == 0x000098, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_GetElementRoot_Out_Root' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000A0, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_GetLocalSize_ReturnValue) == 0x0000D8, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_VSize2D_ReturnValue) == 0x0000E0, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance, CallFunc_MapRangeClamped_ReturnValue) == 0x0000E4, "Member 'BPFL_MapConversions_C_Get_Pixel_Distance_to_World_Distance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BPFL_MapConversions.BPFL_MapConversions_C.Get Map Distance to Pixel Distance
// 0x00C0 (0x00C0 - 0x0000)
struct BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance final
{
public:
	float                                         Map_Distance;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45ED[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pixel_Distance;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45EE[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQWorldSettings*                       L_SQ_World_Settings;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         L_Map_Core;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWorldSettings*                         CallFunc_GetWorldSettings_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWorldSettings*                       K2Node_DynamicCast_AsSQWorld_Settings;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45EF[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F0[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetElementRoot_Out_Root;                  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0078(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance) == 0x000008, "Wrong alignment on BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance");
static_assert(sizeof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance) == 0x0000C0, "Wrong size on BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, Map_Distance) == 0x000000, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::Map_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, __WorldContext) == 0x000008, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, Pixel_Distance) == 0x000010, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::Pixel_Distance' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, L_SQ_World_Settings) == 0x000018, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::L_SQ_World_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, L_Map_Core) == 0x000020, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::L_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, CallFunc_GetWorldSettings_ReturnValue) == 0x000028, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::CallFunc_GetWorldSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, K2Node_DynamicCast_AsSQWorld_Settings) == 0x000038, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::K2Node_DynamicCast_AsSQWorld_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, CallFunc_GetHUD_ReturnValue) == 0x000048, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, K2Node_DynamicCast_AsBPI_HUD) == 0x000050, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, CallFunc_Get_Map_Core_Map_Core) == 0x000068, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, CallFunc_GetElementRoot_Out_Root) == 0x000070, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::CallFunc_GetElementRoot_Out_Root' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, CallFunc_GetCachedGeometry_ReturnValue) == 0x000078, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, CallFunc_GetLocalSize_ReturnValue) == 0x0000B0, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, CallFunc_VSize2D_ReturnValue) == 0x0000B8, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance, CallFunc_MapRangeClamped_ReturnValue) == 0x0000BC, "Member 'BPFL_MapConversions_C_Get_Map_Distance_to_Pixel_Distance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BPFL_MapConversions.BPFL_MapConversions_C.Get World Distance to Pixel Distance
// 0x0118 (0x0118 - 0x0000)
struct BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance final
{
public:
	float                                         In_Centimetres;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pixel;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQWorldSettings*                       L_SQ_World_Settings;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_SQMapCore_C*                         L_Map_Core;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWorldSettings*                         CallFunc_GetWorldSettings_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWorldSettings*                       K2Node_DynamicCast_AsSQWorld_Settings;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F4[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45F6[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetElementRoot_Out_Root;                  // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00B0(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F7[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue_1;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance) == 0x000008, "Wrong alignment on BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance");
static_assert(sizeof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance) == 0x000118, "Wrong size on BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, In_Centimetres) == 0x000000, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::In_Centimetres' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, __WorldContext) == 0x000008, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, Pixel) == 0x000010, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::Pixel' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, L_SQ_World_Settings) == 0x000018, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::L_SQ_World_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, L_Map_Core) == 0x000020, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::L_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, Temp_bool_Variable) == 0x000028, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_GetWorldSettings_ReturnValue) == 0x000030, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_GetWorldSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, K2Node_DynamicCast_AsSQWorld_Settings) == 0x000040, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::K2Node_DynamicCast_AsSQWorld_Settings' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_GetHUD_ReturnValue) == 0x000050, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, K2Node_DynamicCast_AsBPI_HUD) == 0x000058, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_Get_Map_Core_Map_Core) == 0x000070, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000084, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_VSize_ReturnValue) == 0x00009C, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_Abs_ReturnValue) == 0x0000A0, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_GetElementRoot_Out_Root) == 0x0000A8, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_GetElementRoot_Out_Root' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000B0, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_GetLocalSize_ReturnValue) == 0x0000E8, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_VSize2D_ReturnValue) == 0x0000F0, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_MakeVector2D_ReturnValue) == 0x0000F4, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000100, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_VSize2D_ReturnValue_1) == 0x000108, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, K2Node_Select_Default) == 0x00010C, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance, CallFunc_MapRangeClamped_ReturnValue) == 0x000110, "Member 'BPFL_MapConversions_C_Get_World_Distance_to_Pixel_Distance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

}


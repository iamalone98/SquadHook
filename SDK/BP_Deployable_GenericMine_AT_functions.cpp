#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Deployable_GenericMine_AT

#include "Basic.hpp"

#include "BP_Deployable_GenericMine_AT_classes.hpp"
#include "BP_Deployable_GenericMine_AT_parameters.hpp"


namespace SDK
{

// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.ExecuteUbergraph_BP_Deployable_GenericMine_AT
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_GenericMine_AT_C::ExecuteUbergraph_BP_Deployable_GenericMine_AT(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "ExecuteUbergraph_BP_Deployable_GenericMine_AT");

	Params::BP_Deployable_GenericMine_AT_C_ExecuteUbergraph_BP_Deployable_GenericMine_AT Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.OnOwningPlayerTeamStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQTeamState*                     OldTeam                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASQTeamState*                     NewTeam                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_GenericMine_AT_C::OnOwningPlayerTeamStateChanged(class ASQTeamState* OldTeam, class ASQTeamState* NewTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "OnOwningPlayerTeamStateChanged");

	Params::BP_Deployable_GenericMine_AT_C_OnOwningPlayerTeamStateChanged Parms{};

	Parms.OldTeam = OldTeam;
	Parms.NewTeam = NewTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Deployable_GenericMine_AT_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.Pickup Item
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_GenericMine_AT_C::Pickup_Item(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "Pickup Item");

	Params::BP_Deployable_GenericMine_AT_C_Pickup_Item Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.BPOnUsed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_GenericMine_AT_C::BPOnUsed(class AController* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "BPOnUsed");

	Params::BP_Deployable_GenericMine_AT_C_BPOnUsed Parms{};

	Parms.User = User;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.RemovedFromPlayersPlacedList
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Deployable_GenericMine_AT_C::RemovedFromPlayersPlacedList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "RemovedFromPlayersPlacedList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.OnDestroyEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_Deployable_GenericMine_AT_C::OnDestroyEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "OnDestroyEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Deployable_GenericMine_AT_C::BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Deployable_GenericMine_AT_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.Player Left Radius
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_GenericMine_AT_C::Player_Left_Radius(class APlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "Player Left Radius");

	Params::BP_Deployable_GenericMine_AT_C_Player_Left_Radius Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.Player Enter Radius
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Can_Pickup                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Deployable_GenericMine_AT_C::Player_Enter_Radius(class APlayerController* Player, bool Can_Pickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "Player Enter Radius");

	Params::BP_Deployable_GenericMine_AT_C_Player_Enter_Radius Parms{};

	Parms.Player = Player;
	Parms.Can_Pickup = Can_Pickup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.GetInterfaceTeam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Deployable_GenericMine_AT_C::GetInterfaceTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "GetInterfaceTeam");

	Params::BP_Deployable_GenericMine_AT_C_GetInterfaceTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.GetUsableData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSQUsableData                    ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSQUsableData ABP_Deployable_GenericMine_AT_C::GetUsableData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "GetUsableData");

	Params::BP_Deployable_GenericMine_AT_C_GetUsableData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.CanAddItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQEquipableItem*                 Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CountToAdd                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Can_Add                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Deployable_GenericMine_AT_C::CanAddItem(class ASQEquipableItem* Item, int32 CountToAdd, bool* Can_Add)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "CanAddItem");

	Params::BP_Deployable_GenericMine_AT_C_CanAddItem Parms{};

	Parms.Item = Item;
	Parms.CountToAdd = CountToAdd;

	UObject::ProcessEvent(Func, &Parms);

	if (Can_Add != nullptr)
		*Can_Add = Parms.Can_Add;
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.ShouldDisplayPrompt
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Deployable_GenericMine_AT_C::ShouldDisplayPrompt(class AController* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "ShouldDisplayPrompt");

	Params::BP_Deployable_GenericMine_AT_C_ShouldDisplayPrompt Parms{};

	Parms.User = User;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.ApplySuppression
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Deployable_GenericMine_AT_C::ApplySuppression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "ApplySuppression");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.GetTeamId
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Deployable_GenericMine_AT_C::GetTeamId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "GetTeamId");

	Params::BP_Deployable_GenericMine_AT_C_GetTeamId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.GetEquippableItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USQPawnInventoryComponent*        Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASQEquipableItem*                 Item                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Deployable_GenericMine_AT_C::GetEquippableItem(class USQPawnInventoryComponent* Inventory, class ASQEquipableItem** Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "GetEquippableItem");

	Params::BP_Deployable_GenericMine_AT_C_GetEquippableItem Parms{};

	Parms.Inventory = Inventory;

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = Parms.Item;
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.CanPlayerPickup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ASQPlayerController*              Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayerCanPickUpThis                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Deployable_GenericMine_AT_C::CanPlayerPickup(class ASQPlayerController* Player, bool* PlayerCanPickUpThis) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "CanPlayerPickup");

	Params::BP_Deployable_GenericMine_AT_C_CanPlayerPickup Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerCanPickUpThis != nullptr)
		*PlayerCanPickUpThis = Parms.PlayerCanPickUpThis;
}


// Function BP_Deployable_GenericMine_AT.BP_Deployable_GenericMine_AT_C.CanBePickedUp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Deployable_GenericMine_AT_C::CanBePickedUp(bool* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Deployable_GenericMine_AT_C", "CanBePickedUp");

	Params::BP_Deployable_GenericMine_AT_C_CanBePickedUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


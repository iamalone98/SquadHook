#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_NotificationPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_structs.hpp"
#include "S_MainNotification_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_NotificationPanel.W_NotificationPanel_C
// 0x0030 (0x0290 - 0x0260)
class UW_NotificationPanel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           VerticalBox_1;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FS_MainNotification>            Pending_Main_Notifications;                        // 0x0270(0x0010)(Edit, BlueprintVisible)
	class UW_MainNotification_C*                  Current_Notification;                              // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Main_Notification_Duration;                        // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxNotificationsInPanel;                           // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_NotificationPanel(int32 EntryPoint);
	void Draw_Next_Notification();
	void Draw_Main_Notification();
	void Add_New_Chat(const class FString& PlayerName, const class FString& Message, ESQChat Channel, const struct FLinearColor& Color, ESQNotificationTypes NotificationType);
	void Construct();
	void New_Notification(const class FText& Message, ESQNotificationTypes Type, class UTexture2D* Custom_Icon, const struct FLinearColor& CustomIconColor, bool PreventRepetition);
	void Draw_Notification(const class FText& Text, ESQNotificationTypes Type, class UTexture2D* Custom_Icon, const struct FLinearColor& CustomIconColor, bool PreventRepetition);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_NotificationPanel_C">();
	}
	static class UW_NotificationPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_NotificationPanel_C>();
	}
};
static_assert(alignof(UW_NotificationPanel_C) == 0x000008, "Wrong alignment on UW_NotificationPanel_C");
static_assert(sizeof(UW_NotificationPanel_C) == 0x000290, "Wrong size on UW_NotificationPanel_C");
static_assert(offsetof(UW_NotificationPanel_C, UberGraphFrame) == 0x000260, "Member 'UW_NotificationPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_NotificationPanel_C, VerticalBox_1) == 0x000268, "Member 'UW_NotificationPanel_C::VerticalBox_1' has a wrong offset!");
static_assert(offsetof(UW_NotificationPanel_C, Pending_Main_Notifications) == 0x000270, "Member 'UW_NotificationPanel_C::Pending_Main_Notifications' has a wrong offset!");
static_assert(offsetof(UW_NotificationPanel_C, Current_Notification) == 0x000280, "Member 'UW_NotificationPanel_C::Current_Notification' has a wrong offset!");
static_assert(offsetof(UW_NotificationPanel_C, Main_Notification_Duration) == 0x000288, "Member 'UW_NotificationPanel_C::Main_Notification_Duration' has a wrong offset!");
static_assert(offsetof(UW_NotificationPanel_C, MaxNotificationsInPanel) == 0x00028C, "Member 'UW_NotificationPanel_C::MaxNotificationsInPanel' has a wrong offset!");

}


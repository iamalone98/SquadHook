#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RoleGroup

#include "Basic.hpp"

#include "W_RoleGroup_classes.hpp"
#include "W_RoleGroup_parameters.hpp"


namespace SDK
{

// Function W_RoleGroup.W_RoleGroup_C.ExecuteUbergraph_W_RoleGroup
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleGroup_C::ExecuteUbergraph_W_RoleGroup(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "ExecuteUbergraph_W_RoleGroup");

	Params::W_RoleGroup_C_ExecuteUbergraph_W_RoleGroup Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RoleGroup.W_RoleGroup_C.OnRoleChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQRoleSettings*                  In_Current_Role                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleGroup_C::OnRoleChange(class USQRoleSettings* In_Current_Role)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "OnRoleChange");

	Params::W_RoleGroup_C_OnRoleChange Parms{};

	Parms.In_Current_Role = In_Current_Role;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RoleGroup.W_RoleGroup_C.OnTick
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSQAvailabilityState_Role>In_Player_Role_States                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UW_RoleGroup_C::OnTick(TArray<struct FSQAvailabilityState_Role>& In_Player_Role_States)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "OnTick");

	Params::W_RoleGroup_C_OnTick Parms{};

	Parms.In_Player_Role_States = std::move(In_Player_Role_States);

	UObject::ProcessEvent(Func, &Parms);

	In_Player_Role_States = std::move(Parms.In_Player_Role_States);
}


// Function W_RoleGroup.W_RoleGroup_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_RoleGroup_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleGroup.W_RoleGroup_C.Init Group Roles
// (BlueprintCallable, BlueprintEvent)

void UW_RoleGroup_C::Init_Group_Roles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "Init Group Roles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleGroup.W_RoleGroup_C.HasTagGrouping
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_SQRoleSettings_C*             InRoleSetting                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldBeGrouped                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSQRoleGroupingStrategy          OutTagGroupingStrategy                                 (Parm, OutParm, HasGetValueTypeHash)

void UW_RoleGroup_C::HasTagGrouping(class UBP_SQRoleSettings_C* InRoleSetting, bool* ShouldBeGrouped, struct FSQRoleGroupingStrategy* OutTagGroupingStrategy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "HasTagGrouping");

	Params::W_RoleGroup_C_HasTagGrouping Parms{};

	Parms.InRoleSetting = InRoleSetting;

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldBeGrouped != nullptr)
		*ShouldBeGrouped = Parms.ShouldBeGrouped;

	if (OutTagGroupingStrategy != nullptr)
		*OutTagGroupingStrategy = std::move(Parms.OutTagGroupingStrategy);
}


// Function W_RoleGroup.W_RoleGroup_C.Populate List
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_RoleGroup_C::Populate_List()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "Populate List");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleGroup.W_RoleGroup_C.Get Role Panel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPanelWidget*                     Param_RoleBox                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleGroup_C::Get_Role_Panel(class UPanelWidget** Param_RoleBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "Get Role Panel");

	Params::W_RoleGroup_C_Get_Role_Panel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_RoleBox != nullptr)
		*Param_RoleBox = Parms.Param_RoleBox;
}


// Function W_RoleGroup.W_RoleGroup_C.IsPartOfThisGroup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USQRoleSettings*                  InRoleSetting                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Out_Part_Of_this_Group                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_RoleGroup_C::IsPartOfThisGroup(class USQRoleSettings* InRoleSetting, bool* Out_Part_Of_this_Group)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "IsPartOfThisGroup");

	Params::W_RoleGroup_C_IsPartOfThisGroup Parms{};

	Parms.InRoleSetting = InRoleSetting;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Part_Of_this_Group != nullptr)
		*Out_Part_Of_this_Group = Parms.Out_Part_Of_this_Group;
}


// Function W_RoleGroup.W_RoleGroup_C.GetMatchingRoleItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQRoleSettings*                  In_Role_Setting                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Out_Success                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UW_RoleItem_C*                    Out_Role_Item                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleGroup_C::GetMatchingRoleItem(class USQRoleSettings* In_Role_Setting, bool* Out_Success, class UW_RoleItem_C** Out_Role_Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "GetMatchingRoleItem");

	Params::W_RoleGroup_C_GetMatchingRoleItem Parms{};

	Parms.In_Role_Setting = In_Role_Setting;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Success != nullptr)
		*Out_Success = Parms.Out_Success;

	if (Out_Role_Item != nullptr)
		*Out_Role_Item = Parms.Out_Role_Item;
}


// Function W_RoleGroup.W_RoleGroup_C.SetupUI
// (Public, BlueprintCallable, BlueprintEvent)

void UW_RoleGroup_C::SetupUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "SetupUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleGroup.W_RoleGroup_C.SearchTagGroup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSQRoleGroupingStrategy          In_Group_Strategy                                      (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Out_Success                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UW_RoleItem_C*                    Out_Item                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleGroup_C::SearchTagGroup(const struct FSQRoleGroupingStrategy& In_Group_Strategy, bool* Out_Success, class UW_RoleItem_C** Out_Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleGroup_C", "SearchTagGroup");

	Params::W_RoleGroup_C_SearchTagGroup Parms{};

	Parms.In_Group_Strategy = std::move(In_Group_Strategy);

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Success != nullptr)
		*Out_Success = Parms.Out_Success;

	if (Out_Item != nullptr)
		*Out_Item = Parms.Out_Item;
}

}


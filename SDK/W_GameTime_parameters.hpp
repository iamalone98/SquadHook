#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GameTime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_GameTime.W_GameTime_C.ExecuteUbergraph_W_GameTime
// 0x0080 (0x0080 - 0x0000)
struct W_GameTime_C_ExecuteUbergraph_W_GameTime final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASQTeamState* OldTeam, class ASQTeamState* NewTeam)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3DB7[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           K2Node_CustomEvent_OldTeam;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           K2Node_CustomEvent_NewTeam;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB8[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3DB9[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_GameTime_C_ExecuteUbergraph_W_GameTime) == 0x000008, "Wrong alignment on W_GameTime_C_ExecuteUbergraph_W_GameTime");
static_assert(sizeof(W_GameTime_C_ExecuteUbergraph_W_GameTime) == 0x000080, "Wrong size on W_GameTime_C_ExecuteUbergraph_W_GameTime");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, EntryPoint) == 0x000000, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, K2Node_CustomEvent_OldTeam) == 0x000038, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::K2Node_CustomEvent_OldTeam' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, K2Node_CustomEvent_NewTeam) == 0x000040, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::K2Node_CustomEvent_NewTeam' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000048, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000068, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, K2Node_DynamicCast_AsSQPlayer_State) == 0x000070, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_ExecuteUbergraph_W_GameTime, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'W_GameTime_C_ExecuteUbergraph_W_GameTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_GameTime.W_GameTime_C.OnTeamStateChangedEvent_Event_0
// 0x0010 (0x0010 - 0x0000)
struct W_GameTime_C_OnTeamStateChangedEvent_Event_0 final
{
public:
	class ASQTeamState*                           OldTeam;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           NewTeam;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_GameTime_C_OnTeamStateChangedEvent_Event_0) == 0x000008, "Wrong alignment on W_GameTime_C_OnTeamStateChangedEvent_Event_0");
static_assert(sizeof(W_GameTime_C_OnTeamStateChangedEvent_Event_0) == 0x000010, "Wrong size on W_GameTime_C_OnTeamStateChangedEvent_Event_0");
static_assert(offsetof(W_GameTime_C_OnTeamStateChangedEvent_Event_0, OldTeam) == 0x000000, "Member 'W_GameTime_C_OnTeamStateChangedEvent_Event_0::OldTeam' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_OnTeamStateChangedEvent_Event_0, NewTeam) == 0x000008, "Member 'W_GameTime_C_OnTeamStateChangedEvent_Event_0::NewTeam' has a wrong offset!");

// Function W_GameTime.W_GameTime_C.Set Staging Text Prefix
// 0x03F0 (0x03F0 - 0x0000)
struct W_GameTime_C_Set_Staging_Text_Prefix final
{
public:
	class ASQGameState*                           L_Game_State;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   L_Stage;                                           // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   L_Remaining_Time;                                  // 0x0020(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBA[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateSquad_Seed_C*              K2Node_DynamicCast_AsBP_Game_State_Squad_Seed;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBB[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSeedingTextPrefix_Stage;               // 0x0050(0x0018)()
	class FText                                   CallFunc_GetSeedingTextPrefix_RemainingTime;       // 0x0068(0x0018)()
	int32                                         CallFunc_GetStagingTimeRemaining_ReturnValue;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBC[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRemainingTime_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue_1;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B0(0x0018)()
	int32                                         CallFunc_BreakTimespan_Days_1;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours_1;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds_1;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBD[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0120(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0138(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0150(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0190(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x01D0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_4;             // 0x01E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0200(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0240(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0280(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_5;             // 0x0290(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0300(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBE[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0318(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0330(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_MatchWaitingToStart_ReturnValue;          // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DBF[0x7];                                     // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0378(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x03B8(0x0010)(ReferenceParm)
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03D0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_GameTime_C_Set_Staging_Text_Prefix) == 0x000008, "Wrong alignment on W_GameTime_C_Set_Staging_Text_Prefix");
static_assert(sizeof(W_GameTime_C_Set_Staging_Text_Prefix) == 0x0003F0, "Wrong size on W_GameTime_C_Set_Staging_Text_Prefix");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, L_Game_State) == 0x000000, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::L_Game_State' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, L_Stage) == 0x000008, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::L_Stage' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, L_Remaining_Time) == 0x000020, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::L_Remaining_Time' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_DynamicCast_AsBP_Game_State_Squad_Seed) == 0x000040, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_DynamicCast_AsBP_Game_State_Squad_Seed' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_GetSeedingTextPrefix_Stage) == 0x000050, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_GetSeedingTextPrefix_Stage' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_GetSeedingTextPrefix_RemainingTime) == 0x000068, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_GetSeedingTextPrefix_RemainingTime' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_GetStagingTimeRemaining_ReturnValue) == 0x000080, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_GetStagingTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_MakeTimespan_ReturnValue) == 0x000088, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_GetRemainingTime_ReturnValue) == 0x000090, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_GetRemainingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Days) == 0x000094, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Hours) == 0x000098, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Minutes) == 0x00009C, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Seconds) == 0x0000A0, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Milliseconds) == 0x0000A4, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_MakeTimespan_ReturnValue_1) == 0x0000A8, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_MakeTimespan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B0, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Days_1) == 0x0000C8, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Days_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Hours_1) == 0x0000CC, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Hours_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Minutes_1) == 0x0000D0, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Minutes_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Seconds_1) == 0x0000D4, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Seconds_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_BreakTimespan_Milliseconds_1) == 0x0000D8, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_BreakTimespan_Milliseconds_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeStruct_FormatArgumentData) == 0x0000E0, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000120, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000138, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeStruct_FormatArgumentData_1) == 0x000150, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeStruct_FormatArgumentData_2) == 0x000190, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Conv_IntToText_ReturnValue_3) == 0x0001D0, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Conv_IntToText_ReturnValue_4) == 0x0001E8, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Conv_IntToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeStruct_FormatArgumentData_3) == 0x000200, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeStruct_FormatArgumentData_4) == 0x000240, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeArray_Array) == 0x000280, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Conv_IntToText_ReturnValue_5) == 0x000290, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Conv_IntToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Format_ReturnValue) == 0x0002A8, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002C0, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeArray_Array_1) == 0x000300, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Greater_IntInt_ReturnValue) == 0x000310, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Format_ReturnValue_1) == 0x000318, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeStruct_FormatArgumentData_6) == 0x000330, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_MatchWaitingToStart_ReturnValue) == 0x000370, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_MatchWaitingToStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeStruct_FormatArgumentData_7) == 0x000378, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, K2Node_MakeArray_Array_2) == 0x0003B8, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_GetSquadGameState_Return_Value) == 0x0003C8, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_Format_ReturnValue_2) == 0x0003D0, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Set_Staging_Text_Prefix, CallFunc_IsValid_ReturnValue_1) == 0x0003E8, "Member 'W_GameTime_C_Set_Staging_Text_Prefix::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_GameTime.W_GameTime_C.Get Prep Zone
// 0x0050 (0x0050 - 0x0000)
struct W_GameTime_C_Get_Prep_Zone final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC1[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASQTeamPrep*>                    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC2[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamPrep*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_GameTime_C_Get_Prep_Zone) == 0x000008, "Wrong alignment on W_GameTime_C_Get_Prep_Zone");
static_assert(sizeof(W_GameTime_C_Get_Prep_Zone) == 0x000050, "Wrong size on W_GameTime_C_Get_Prep_Zone");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_GameTime_C_Get_Prep_Zone::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_GameTime_C_Get_Prep_Zone::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_GameTime_C_Get_Prep_Zone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'W_GameTime_C_Get_Prep_Zone::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000018, "Member 'W_GameTime_C_Get_Prep_Zone::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_GameTime_C_Get_Prep_Zone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, CallFunc_GetTeam_ReturnValue) == 0x000024, "Member 'W_GameTime_C_Get_Prep_Zone::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'W_GameTime_C_Get_Prep_Zone::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'W_GameTime_C_Get_Prep_Zone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_GameTime_C_Get_Prep_Zone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'W_GameTime_C_Get_Prep_Zone::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_Get_Prep_Zone, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000049, "Member 'W_GameTime_C_Get_Prep_Zone::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_GameTime.W_GameTime_C.GetSeedingTextPrefix
// 0x02B0 (0x02B0 - 0x0000)
struct W_GameTime_C_GetSeedingTextPrefix final
{
public:
	class ABP_GameStateSquad_Seed_C*              GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Stage;                                             // 0x0008(0x0018)(Parm, OutParm)
	class FText                                   RemainingTime;                                     // 0x0020(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC3[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerCountOnServer_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC4[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC5[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0100(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0130(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0170(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0188(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01E0(0x0040)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0220(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0238(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0248(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0260(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC6[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0280(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0298(0x0018)()
};
static_assert(alignof(W_GameTime_C_GetSeedingTextPrefix) == 0x000008, "Wrong alignment on W_GameTime_C_GetSeedingTextPrefix");
static_assert(sizeof(W_GameTime_C_GetSeedingTextPrefix) == 0x0002B0, "Wrong size on W_GameTime_C_GetSeedingTextPrefix");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, GameState) == 0x000000, "Member 'W_GameTime_C_GetSeedingTextPrefix::GameState' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, Stage) == 0x000008, "Member 'W_GameTime_C_GetSeedingTextPrefix::Stage' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, RemainingTime) == 0x000020, "Member 'W_GameTime_C_GetSeedingTextPrefix::RemainingTime' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, Temp_bool_Variable) == 0x000038, "Member 'W_GameTime_C_GetSeedingTextPrefix::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x00003C, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_GetPlayerCountOnServer_ReturnValue) == 0x000040, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_GetPlayerCountOnServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'W_GameTime_C_GetSeedingTextPrefix::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_FTrunc_ReturnValue) == 0x000088, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_MakeTimespan_ReturnValue) == 0x000090, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'W_GameTime_C_GetSeedingTextPrefix::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_BreakTimespan_Days) == 0x0000D8, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_BreakTimespan_Hours) == 0x0000DC, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_BreakTimespan_Minutes) == 0x0000E0, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_BreakTimespan_Seconds) == 0x0000E4, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_BreakTimespan_Milliseconds) == 0x0000E8, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, K2Node_MakeArray_Array) == 0x0000F0, "Member 'W_GameTime_C_GetSeedingTextPrefix::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_Conv_IntToText_ReturnValue) == 0x000100, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_Format_ReturnValue) == 0x000118, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, K2Node_MakeStruct_FormatArgumentData_2) == 0x000130, "Member 'W_GameTime_C_GetSeedingTextPrefix::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000170, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000188, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A0, "Member 'W_GameTime_C_GetSeedingTextPrefix::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001E0, "Member 'W_GameTime_C_GetSeedingTextPrefix::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, Temp_text_Variable) == 0x000220, "Member 'W_GameTime_C_GetSeedingTextPrefix::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, K2Node_MakeArray_Array_1) == 0x000238, "Member 'W_GameTime_C_GetSeedingTextPrefix::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, CallFunc_Format_ReturnValue_1) == 0x000248, "Member 'W_GameTime_C_GetSeedingTextPrefix::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, Temp_text_Variable_1) == 0x000260, "Member 'W_GameTime_C_GetSeedingTextPrefix::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, Temp_bool_Variable_1) == 0x000278, "Member 'W_GameTime_C_GetSeedingTextPrefix::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, K2Node_Select_Default) == 0x000280, "Member 'W_GameTime_C_GetSeedingTextPrefix::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_GameTime_C_GetSeedingTextPrefix, K2Node_Select_Default_1) == 0x000298, "Member 'W_GameTime_C_GetSeedingTextPrefix::K2Node_Select_Default_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SQOnlineServices

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetPlatform
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetPlatform final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetPlatform) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetPlatform");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetPlatform) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetPlatform");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetPlatform, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetPlatform::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetRelatedIds
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetRelatedIds final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetRelatedIds) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetRelatedIds");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetRelatedIds) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetRelatedIds");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetRelatedIds, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetRelatedIds::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetSteamID final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetSteamID) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetSteamID");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetSteamID) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetSteamID");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetSteamID, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetSteamID::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetUniqueID
// 0x0028 (0x0028 - 0x0000)
struct SQOnlineServicesOnlineUser_GetUniqueID final
{
public:
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetUniqueID) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetUniqueID");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetUniqueID) == 0x000028, "Wrong size on SQOnlineServicesOnlineUser_GetUniqueID");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetUniqueID, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetUniqueID::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetUserName
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetUserName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetUserName) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetUserName");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetUserName) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetUserName");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetUserName, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetUserName::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriends.AcceptFriendRequest
// 0x0028 (0x0028 - 0x0000)
struct SQOnlineServicesFriends_AcceptFriendRequest final
{
public:
	struct FUniqueNetIdRepl                       FriendId;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriends_AcceptFriendRequest) == 0x000008, "Wrong alignment on SQOnlineServicesFriends_AcceptFriendRequest");
static_assert(sizeof(SQOnlineServicesFriends_AcceptFriendRequest) == 0x000028, "Wrong size on SQOnlineServicesFriends_AcceptFriendRequest");
static_assert(offsetof(SQOnlineServicesFriends_AcceptFriendRequest, FriendId) == 0x000000, "Member 'SQOnlineServicesFriends_AcceptFriendRequest::FriendId' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriends.RejectFriendRequest
// 0x0028 (0x0028 - 0x0000)
struct SQOnlineServicesFriends_RejectFriendRequest final
{
public:
	struct FUniqueNetIdRepl                       FriendId;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriends_RejectFriendRequest) == 0x000008, "Wrong alignment on SQOnlineServicesFriends_RejectFriendRequest");
static_assert(sizeof(SQOnlineServicesFriends_RejectFriendRequest) == 0x000028, "Wrong size on SQOnlineServicesFriends_RejectFriendRequest");
static_assert(offsetof(SQOnlineServicesFriends_RejectFriendRequest, FriendId) == 0x000000, "Member 'SQOnlineServicesFriends_RejectFriendRequest::FriendId' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriends.SendFriendRequest
// 0x0028 (0x0028 - 0x0000)
struct SQOnlineServicesFriends_SendFriendRequest final
{
public:
	struct FUniqueNetIdRepl                       FriendId;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriends_SendFriendRequest) == 0x000008, "Wrong alignment on SQOnlineServicesFriends_SendFriendRequest");
static_assert(sizeof(SQOnlineServicesFriends_SendFriendRequest) == 0x000028, "Wrong size on SQOnlineServicesFriends_SendFriendRequest");
static_assert(offsetof(SQOnlineServicesFriends_SendFriendRequest, FriendId) == 0x000000, "Member 'SQOnlineServicesFriends_SendFriendRequest::FriendId' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.GetPartyLeader
// 0x0008 (0x0008 - 0x0000)
struct SQOnlineServicesParty_GetPartyLeader final
{
public:
	class USQOnlineServicesPartyUser*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesParty_GetPartyLeader) == 0x000008, "Wrong alignment on SQOnlineServicesParty_GetPartyLeader");
static_assert(sizeof(SQOnlineServicesParty_GetPartyLeader) == 0x000008, "Wrong size on SQOnlineServicesParty_GetPartyLeader");
static_assert(offsetof(SQOnlineServicesParty_GetPartyLeader, ReturnValue) == 0x000000, "Member 'SQOnlineServicesParty_GetPartyLeader::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.GetPartyMembers
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesParty_GetPartyMembers final
{
public:
	TArray<class USQOnlineServicesPartyUser*>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesParty_GetPartyMembers) == 0x000008, "Wrong alignment on SQOnlineServicesParty_GetPartyMembers");
static_assert(sizeof(SQOnlineServicesParty_GetPartyMembers) == 0x000010, "Wrong size on SQOnlineServicesParty_GetPartyMembers");
static_assert(offsetof(SQOnlineServicesParty_GetPartyMembers, ReturnValue) == 0x000000, "Member 'SQOnlineServicesParty_GetPartyMembers::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.IsPartyLeader
// 0x0030 (0x0030 - 0x0000)
struct SQOnlineServicesParty_IsPartyLeader final
{
public:
	struct FUniqueNetIdRepl                       PartyMember;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BF7[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQOnlineServicesParty_IsPartyLeader) == 0x000008, "Wrong alignment on SQOnlineServicesParty_IsPartyLeader");
static_assert(sizeof(SQOnlineServicesParty_IsPartyLeader) == 0x000030, "Wrong size on SQOnlineServicesParty_IsPartyLeader");
static_assert(offsetof(SQOnlineServicesParty_IsPartyLeader, PartyMember) == 0x000000, "Member 'SQOnlineServicesParty_IsPartyLeader::PartyMember' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesParty_IsPartyLeader, ReturnValue) == 0x000028, "Member 'SQOnlineServicesParty_IsPartyLeader::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.IsPartyUserLeader
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesParty_IsPartyUserLeader final
{
public:
	const class USQOnlineServicesPartyUser*       PartyMember;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BF8[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQOnlineServicesParty_IsPartyUserLeader) == 0x000008, "Wrong alignment on SQOnlineServicesParty_IsPartyUserLeader");
static_assert(sizeof(SQOnlineServicesParty_IsPartyUserLeader) == 0x000010, "Wrong size on SQOnlineServicesParty_IsPartyUserLeader");
static_assert(offsetof(SQOnlineServicesParty_IsPartyUserLeader, PartyMember) == 0x000000, "Member 'SQOnlineServicesParty_IsPartyUserLeader::PartyMember' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesParty_IsPartyUserLeader, ReturnValue) == 0x000008, "Member 'SQOnlineServicesParty_IsPartyUserLeader::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.KickPlayer
// 0x0028 (0x0028 - 0x0000)
struct SQOnlineServicesParty_KickPlayer final
{
public:
	struct FUniqueNetIdRepl                       Player;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesParty_KickPlayer) == 0x000008, "Wrong alignment on SQOnlineServicesParty_KickPlayer");
static_assert(sizeof(SQOnlineServicesParty_KickPlayer) == 0x000028, "Wrong size on SQOnlineServicesParty_KickPlayer");
static_assert(offsetof(SQOnlineServicesParty_KickPlayer, Player) == 0x000000, "Member 'SQOnlineServicesParty_KickPlayer::Player' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.PromoteLeader
// 0x0028 (0x0028 - 0x0000)
struct SQOnlineServicesParty_PromoteLeader final
{
public:
	struct FUniqueNetIdRepl                       Player;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesParty_PromoteLeader) == 0x000008, "Wrong alignment on SQOnlineServicesParty_PromoteLeader");
static_assert(sizeof(SQOnlineServicesParty_PromoteLeader) == 0x000028, "Wrong size on SQOnlineServicesParty_PromoteLeader");
static_assert(offsetof(SQOnlineServicesParty_PromoteLeader, Player) == 0x000000, "Member 'SQOnlineServicesParty_PromoteLeader::Player' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesRecentUser.GetLastSeenString
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesRecentUser_GetLastSeenString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesRecentUser_GetLastSeenString) == 0x000008, "Wrong alignment on SQOnlineServicesRecentUser_GetLastSeenString");
static_assert(sizeof(SQOnlineServicesRecentUser_GetLastSeenString) == 0x000010, "Wrong size on SQOnlineServicesRecentUser_GetLastSeenString");
static_assert(offsetof(SQOnlineServicesRecentUser_GetLastSeenString, ReturnValue) == 0x000000, "Member 'SQOnlineServicesRecentUser_GetLastSeenString::ReturnValue' has a wrong offset!");

}


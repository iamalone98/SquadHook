#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RotorListener

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RotorListener.BP_RotorListener_C
// 0x0020 (0x00E8 - 0x00C8)
class UBP_RotorListener_C final : public USQRotorWashEffectListener
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UBP_RotorWashSender_C*>          NonCulledEmitters;                                 // 0x00D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          Debug;                                             // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_RotorListener(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RotorListener_C">();
	}
	static class UBP_RotorListener_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_RotorListener_C>();
	}
};
static_assert(alignof(UBP_RotorListener_C) == 0x000008, "Wrong alignment on UBP_RotorListener_C");
static_assert(sizeof(UBP_RotorListener_C) == 0x0000E8, "Wrong size on UBP_RotorListener_C");
static_assert(offsetof(UBP_RotorListener_C, UberGraphFrame) == 0x0000C8, "Member 'UBP_RotorListener_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_RotorListener_C, NonCulledEmitters) == 0x0000D0, "Member 'UBP_RotorListener_C::NonCulledEmitters' has a wrong offset!");
static_assert(offsetof(UBP_RotorListener_C, Debug) == 0x0000E0, "Member 'UBP_RotorListener_C::Debug' has a wrong offset!");

}


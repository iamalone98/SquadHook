#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GenericDeployableMortarVehicle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GenericDeployableMortarVehicle.BP_GenericDeployableMortarVehicle_C
// 0x0040 (0x0980 - 0x0940)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_GenericDeployableMortarVehicle_C : public ASQDeployableMortarVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0940(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USQTurretMovementComponent*             SQTurretMovement;                                  // 0x0948(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USQRotationMovementAudioComponent*      SQRotationMovementAudio;                           // 0x0950(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractBox;                                       // 0x0958(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BPTurretOverlay;                                   // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPossessed;                                      // 0x0968(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9C[0x3];                                     // 0x0969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         KeyboardYawRotationMultiplier;                     // 0x096C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KeyboardPitchRotationMultiplier;                   // 0x0970(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GenericDeployableMortarVehicle(int32 EntryPoint);
	void OnPlayerExited_Event(class ASQVehicle* Vehicle, class APlayerController* Player, int32 Seat);
	void OnPlayerEntered_Event(class ASQVehicle* Vehicle, class APlayerController* Player, int32 Seat);
	void InpAxisEvt_LookUp_K2Node_InputAxisEvent_4(float AxisValue);
	void InpAxisEvt_Turn_K2Node_InputAxisEvent_3(float AxisValue);
	void InpAxisEvt_VehicleMoveForward_K2Node_InputAxisEvent_2(float AxisValue);
	void ReceiveUnpossessed(class AController* OldController);
	void InpAxisEvt_VehicleMoveRight_K2Node_InputAxisEvent_0(float AxisValue);
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue);
	void ReceiveBeginPlay();
	void LookUp(float Rate);
	void UserConstructionScript();

	class USceneComponent* GetADSCameraLocationComponent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GenericDeployableMortarVehicle_C">();
	}
	static class ABP_GenericDeployableMortarVehicle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GenericDeployableMortarVehicle_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_GenericDeployableMortarVehicle_C) == 0x000010, "Wrong alignment on ABP_GenericDeployableMortarVehicle_C");
static_assert(sizeof(ABP_GenericDeployableMortarVehicle_C) == 0x000980, "Wrong size on ABP_GenericDeployableMortarVehicle_C");
static_assert(offsetof(ABP_GenericDeployableMortarVehicle_C, UberGraphFrame) == 0x000940, "Member 'ABP_GenericDeployableMortarVehicle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableMortarVehicle_C, SQTurretMovement) == 0x000948, "Member 'ABP_GenericDeployableMortarVehicle_C::SQTurretMovement' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableMortarVehicle_C, SQRotationMovementAudio) == 0x000950, "Member 'ABP_GenericDeployableMortarVehicle_C::SQRotationMovementAudio' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableMortarVehicle_C, InteractBox) == 0x000958, "Member 'ABP_GenericDeployableMortarVehicle_C::InteractBox' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableMortarVehicle_C, BPTurretOverlay) == 0x000960, "Member 'ABP_GenericDeployableMortarVehicle_C::BPTurretOverlay' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableMortarVehicle_C, bIsPossessed) == 0x000968, "Member 'ABP_GenericDeployableMortarVehicle_C::bIsPossessed' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableMortarVehicle_C, KeyboardYawRotationMultiplier) == 0x00096C, "Member 'ABP_GenericDeployableMortarVehicle_C::KeyboardYawRotationMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_GenericDeployableMortarVehicle_C, KeyboardPitchRotationMultiplier) == 0x000970, "Member 'ABP_GenericDeployableMortarVehicle_C::KeyboardPitchRotationMultiplier' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQAvailability_Deployable

#include "Basic.hpp"

#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function BP_SQAvailability_Deployable.BP_SQAvailability_Deployable_C.GetRefundPercentage
// 0x0004 (0x0004 - 0x0000)
struct BP_SQAvailability_Deployable_C_GetRefundPercentage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SQAvailability_Deployable_C_GetRefundPercentage) == 0x000004, "Wrong alignment on BP_SQAvailability_Deployable_C_GetRefundPercentage");
static_assert(sizeof(BP_SQAvailability_Deployable_C_GetRefundPercentage) == 0x000004, "Wrong size on BP_SQAvailability_Deployable_C_GetRefundPercentage");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetRefundPercentage, ReturnValue) == 0x000000, "Member 'BP_SQAvailability_Deployable_C_GetRefundPercentage::ReturnValue' has a wrong offset!");

// Function BP_SQAvailability_Deployable.BP_SQAvailability_Deployable_C.GetAvailabilityForPlayer
// 0x01D8 (0x01D8 - 0x0000)
struct BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer final
{
public:
	class ASQPlayerController*                    InPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQAvailabilityState                   InTeamStatus;                                      // 0x0008(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FSQAvailabilityState                   OutPlayerStatus;                                   // 0x0050(0x0048)(Parm, OutParm)
	struct FSQAvailabilityState                   CallFunc_GetAvailabilityForPlayer_OutPlayerStatus; // 0x0098(0x0048)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAvailable_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA5[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRestriction_DeployableCount_C*    K2Node_DynamicCast_AsBP_SQRestriction_Deployable_Count; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA6[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLocalFobDeployableCount_Out_Used;      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQAvailabilityState                   CallFunc_SetUnavailable_OutState;                  // 0x00F8(0x0048)()
	struct FSQAvailabilityState                   CallFunc_SetUsage_OutState;                        // 0x0140(0x0048)()
	struct FSQAvailabilityState                   CallFunc_SetUsage_OutState_1;                      // 0x0188(0x0048)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer) == 0x000008, "Wrong alignment on BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer");
static_assert(sizeof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer) == 0x0001D8, "Wrong size on BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, InPlayer) == 0x000000, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::InPlayer' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, InTeamStatus) == 0x000008, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::InTeamStatus' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, OutPlayerStatus) == 0x000050, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::OutPlayerStatus' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_GetAvailabilityForPlayer_OutPlayerStatus) == 0x000098, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_GetAvailabilityForPlayer_OutPlayerStatus' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_IsAvailable_ReturnValue) == 0x0000E1, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_IsAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, K2Node_DynamicCast_AsBP_SQRestriction_Deployable_Count) == 0x0000E8, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::K2Node_DynamicCast_AsBP_SQRestriction_Deployable_Count' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F1, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_GetLocalFobDeployableCount_Out_Used) == 0x0000F4, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_GetLocalFobDeployableCount_Out_Used' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_SetUnavailable_OutState) == 0x0000F8, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_SetUnavailable_OutState' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_SetUsage_OutState) == 0x000140, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_SetUsage_OutState' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_SetUsage_OutState_1) == 0x000188, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_SetUsage_OutState_1' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001D0, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_BooleanAND_ReturnValue) == 0x0001D1, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer, CallFunc_BooleanAND_ReturnValue_1) == 0x0001D2, "Member 'BP_SQAvailability_Deployable_C_GetAvailabilityForPlayer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingsItem_TextBox

#include "Basic.hpp"

#include "SettingsItem_TextBox_classes.hpp"
#include "SettingsItem_TextBox_parameters.hpp"


namespace SDK
{

// Function SettingsItem_TextBox.SettingsItem_TextBox_C.OnValueChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewText                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void USettingsItem_TextBox_C::OnValueChanged__DelegateSignature(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsItem_TextBox_C", "OnValueChanged__DelegateSignature");

	Params::SettingsItem_TextBox_C_OnValueChanged__DelegateSignature Parms{};

	Parms.NewText = std::move(NewText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsItem_TextBox.SettingsItem_TextBox_C.ExecuteUbergraph_SettingsItem_TextBox
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingsItem_TextBox_C::ExecuteUbergraph_SettingsItem_TextBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsItem_TextBox_C", "ExecuteUbergraph_SettingsItem_TextBox");

	Params::SettingsItem_TextBox_C_ExecuteUbergraph_SettingsItem_TextBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsItem_TextBox.SettingsItem_TextBox_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USettingsItem_TextBox_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsItem_TextBox_C", "PreConstruct");

	Params::SettingsItem_TextBox_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsItem_TextBox.SettingsItem_TextBox_C.BndEvt__TextBox_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USettingsItem_TextBox_C::BndEvt__TextBox_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsItem_TextBox_C", "BndEvt__TextBox_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature");

	Params::SettingsItem_TextBox_C_BndEvt__TextBox_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsItem_TextBox.SettingsItem_TextBox_C.BndEvt__TextBox_K2Node_ComponentBoundEvent_27_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USettingsItem_TextBox_C::BndEvt__TextBox_K2Node_ComponentBoundEvent_27_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsItem_TextBox_C", "BndEvt__TextBox_K2Node_ComponentBoundEvent_27_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::SettingsItem_TextBox_C_BndEvt__TextBox_K2Node_ComponentBoundEvent_27_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SettingsItem_TextBox.SettingsItem_TextBox_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USettingsItem_TextBox_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsItem_TextBox_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SettingsItem_TextBox.SettingsItem_TextBox_C.Get_SpacerImg_Brush_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateBrush USettingsItem_TextBox_C::Get_SpacerImg_Brush_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsItem_TextBox_C", "Get_SpacerImg_Brush_0");

	Params::SettingsItem_TextBox_C_Get_SpacerImg_Brush_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SettingsItem_TextBox.SettingsItem_TextBox_C.SetTextBoxText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewTextBoxString                                       (BlueprintVisible, BlueprintReadOnly, Parm)

void USettingsItem_TextBox_C::SetTextBoxText(const class FText& NewTextBoxString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SettingsItem_TextBox_C", "SetTextBoxText");

	Params::SettingsItem_TextBox_C_SetTextBoxText Parms{};

	Parms.NewTextBoxString = std::move(NewTextBoxString);

	UObject::ProcessEvent(Func, &Parms);
}

}


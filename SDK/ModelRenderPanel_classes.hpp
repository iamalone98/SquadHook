#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModelRenderPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ModelRenderPanel.ModelRenderPanel_C
// 0x0080 (0x02E0 - 0x0260)
class UModelRenderPanel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_0;                                          // 0x0268(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ImageScaleBox;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SelectedItemImage;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AActor*                                 RenderModel;                                       // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASceneCapture2D*                        Capture;                                           // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ContinualUpdate;                                   // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AllowMouseRotation;                                // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3289[0x2];                                     // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ModelWorldCenterOffset;                            // 0x0294(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocationOffset;                              // 0x02A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContinualRotationSpeed;                            // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCustomOrthoWidth;                               // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328A[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CustomOrthoWidth;                                  // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsImage;                                           // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328B[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CameraRotation;                                    // 0x02BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector2D                              MouseLastLoc;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClickedOnModel;                                    // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCustomActor;                                     // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328C[0x2];                                     // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              OldSize;                                           // 0x02D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Margin;                                            // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ModelRenderPanel(int32 EntryPoint);
	void Destruct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void RendererSetup();
	void UpdateRender();
	void RotateCamera(float XDelta, float YDelta);
	struct FEventReply OnMouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void RemoveRenderActors();
	void ClearRender();
	void SetupAsImage(class UTexture2D* OverrideTexture);
	void SetupSkeletalMesh(class USkeletalMesh* SkeletalMesh, TArray<class UMaterialInterface*>& Materials);
	void SetupStaticMesh(class UStaticMesh* StaticMesh, TArray<class UMaterialInterface*>& Materials);
	void SetupCustomActor(class AActor* CustomActor);
	void SetCameraModelOffset();
	void SetCustomOrthoWidth(float Param_CustomOrthoWidth);
	void SetCustomPostProcess(const struct FPostProcessSettings& InPostProcessSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ModelRenderPanel_C">();
	}
	static class UModelRenderPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModelRenderPanel_C>();
	}
};
static_assert(alignof(UModelRenderPanel_C) == 0x000008, "Wrong alignment on UModelRenderPanel_C");
static_assert(sizeof(UModelRenderPanel_C) == 0x0002E0, "Wrong size on UModelRenderPanel_C");
static_assert(offsetof(UModelRenderPanel_C, UberGraphFrame) == 0x000260, "Member 'UModelRenderPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, Border_0) == 0x000268, "Member 'UModelRenderPanel_C::Border_0' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, ImageScaleBox) == 0x000270, "Member 'UModelRenderPanel_C::ImageScaleBox' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, SelectedItemImage) == 0x000278, "Member 'UModelRenderPanel_C::SelectedItemImage' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, RenderModel) == 0x000280, "Member 'UModelRenderPanel_C::RenderModel' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, Capture) == 0x000288, "Member 'UModelRenderPanel_C::Capture' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, ContinualUpdate) == 0x000290, "Member 'UModelRenderPanel_C::ContinualUpdate' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, AllowMouseRotation) == 0x000291, "Member 'UModelRenderPanel_C::AllowMouseRotation' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, ModelWorldCenterOffset) == 0x000294, "Member 'UModelRenderPanel_C::ModelWorldCenterOffset' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, CameraLocationOffset) == 0x0002A0, "Member 'UModelRenderPanel_C::CameraLocationOffset' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, ContinualRotationSpeed) == 0x0002AC, "Member 'UModelRenderPanel_C::ContinualRotationSpeed' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, UseCustomOrthoWidth) == 0x0002B0, "Member 'UModelRenderPanel_C::UseCustomOrthoWidth' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, CustomOrthoWidth) == 0x0002B4, "Member 'UModelRenderPanel_C::CustomOrthoWidth' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, IsImage) == 0x0002B8, "Member 'UModelRenderPanel_C::IsImage' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, CameraRotation) == 0x0002BC, "Member 'UModelRenderPanel_C::CameraRotation' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, MouseLastLoc) == 0x0002C8, "Member 'UModelRenderPanel_C::MouseLastLoc' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, ClickedOnModel) == 0x0002D0, "Member 'UModelRenderPanel_C::ClickedOnModel' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, IsCustomActor) == 0x0002D1, "Member 'UModelRenderPanel_C::IsCustomActor' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, OldSize) == 0x0002D4, "Member 'UModelRenderPanel_C::OldSize' has a wrong offset!");
static_assert(offsetof(UModelRenderPanel_C, Margin) == 0x0002DC, "Member 'UModelRenderPanel_C::Margin' has a wrong offset!");

}


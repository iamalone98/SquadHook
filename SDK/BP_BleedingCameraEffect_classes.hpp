#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BleedingCameraEffect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BleedingCameraEffect.BP_BleedingCameraEffect_C
// 0x0020 (0x05C0 - 0x05A0)
class UBP_BleedingCameraEffect_C final : public USQLocalCameraEffectHandler
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ASQPlayerController*                    PlayerController;                                  // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlendTarget;                                       // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4B[0x3];                                     // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendWeight;                                       // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BleedingCameraEffect(int32 EntryPoint);
	void BP_InitCameraEffect(class ASQPlayerController* InPlayerController);
	void BP_ApplyCameraEffect(float DeltaTime, class ASQSoldier* SoldierToApplyTo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BleedingCameraEffect_C">();
	}
	static class UBP_BleedingCameraEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BleedingCameraEffect_C>();
	}
};
static_assert(alignof(UBP_BleedingCameraEffect_C) == 0x000010, "Wrong alignment on UBP_BleedingCameraEffect_C");
static_assert(sizeof(UBP_BleedingCameraEffect_C) == 0x0005C0, "Wrong size on UBP_BleedingCameraEffect_C");
static_assert(offsetof(UBP_BleedingCameraEffect_C, UberGraphFrame) == 0x0005A0, "Member 'UBP_BleedingCameraEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BleedingCameraEffect_C, PlayerController) == 0x0005A8, "Member 'UBP_BleedingCameraEffect_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UBP_BleedingCameraEffect_C, Mid) == 0x0005B0, "Member 'UBP_BleedingCameraEffect_C::Mid' has a wrong offset!");
static_assert(offsetof(UBP_BleedingCameraEffect_C, BlendTarget) == 0x0005B8, "Member 'UBP_BleedingCameraEffect_C::BlendTarget' has a wrong offset!");
static_assert(offsetof(UBP_BleedingCameraEffect_C, BlendWeight) == 0x0005BC, "Member 'UBP_BleedingCameraEffect_C::BlendWeight' has a wrong offset!");

}


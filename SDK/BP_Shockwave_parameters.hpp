#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Shockwave

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function BP_Shockwave.BP_Shockwave_C.ExecuteUbergraph_BP_Shockwave
// 0x0004 (0x0004 - 0x0000)
struct BP_Shockwave_C_ExecuteUbergraph_BP_Shockwave final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Shockwave_C_ExecuteUbergraph_BP_Shockwave) == 0x000004, "Wrong alignment on BP_Shockwave_C_ExecuteUbergraph_BP_Shockwave");
static_assert(sizeof(BP_Shockwave_C_ExecuteUbergraph_BP_Shockwave) == 0x000004, "Wrong size on BP_Shockwave_C_ExecuteUbergraph_BP_Shockwave");
static_assert(offsetof(BP_Shockwave_C_ExecuteUbergraph_BP_Shockwave, EntryPoint) == 0x000000, "Member 'BP_Shockwave_C_ExecuteUbergraph_BP_Shockwave::EntryPoint' has a wrong offset!");

// Function BP_Shockwave.BP_Shockwave_C.Explode
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Shockwave_C_Explode final
{
public:
	class AActor*                                 Param_Instigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BAB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ConvertStepsToLoops_PositiveInt;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertStepsToLoops_NegativeInt;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BAC[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Shockwave_C_Explode) == 0x000008, "Wrong alignment on BP_Shockwave_C_Explode");
static_assert(sizeof(BP_Shockwave_C_Explode) == 0x0000A0, "Wrong size on BP_Shockwave_C_Explode");
static_assert(offsetof(BP_Shockwave_C_Explode, Param_Instigator) == 0x000000, "Member 'BP_Shockwave_C_Explode::Param_Instigator' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, Temp_int_Variable) == 0x000008, "Member 'BP_Shockwave_C_Explode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Shockwave_C_Explode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'BP_Shockwave_C_Explode::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Shockwave_C_Explode::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_Shockwave_C_Explode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'BP_Shockwave_C_Explode::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Divide_IntInt_ReturnValue) == 0x000020, "Member 'BP_Shockwave_C_Explode::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000024, "Member 'BP_Shockwave_C_Explode::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_Shockwave_C_Explode::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_ConvertStepsToLoops_PositiveInt) == 0x00002C, "Member 'BP_Shockwave_C_Explode::CallFunc_ConvertStepsToLoops_PositiveInt' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_ConvertStepsToLoops_NegativeInt) == 0x000030, "Member 'BP_Shockwave_C_Explode::CallFunc_ConvertStepsToLoops_NegativeInt' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, Temp_int_Variable_1) == 0x000034, "Member 'BP_Shockwave_C_Explode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_Shockwave_C_Explode::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000044, "Member 'BP_Shockwave_C_Explode::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'BP_Shockwave_C_Explode::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_Shockwave_C_Explode::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000058, "Member 'BP_Shockwave_C_Explode::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'BP_Shockwave_C_Explode::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_Shockwave_C_Explode::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_BreakVector_X) == 0x000074, "Member 'BP_Shockwave_C_Explode::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_BreakVector_Y) == 0x000078, "Member 'BP_Shockwave_C_Explode::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_BreakVector_Z) == 0x00007C, "Member 'BP_Shockwave_C_Explode::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Add_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_Shockwave_C_Explode::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_MakeVector_ReturnValue_1) == 0x000084, "Member 'BP_Shockwave_C_Explode::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_Explode, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BP_Shockwave_C_Explode::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_Shockwave.BP_Shockwave_C.ConvertStepsToLoops
// 0x0020 (0x0020 - 0x0000)
struct BP_Shockwave_C_ConvertStepsToLoops final
{
public:
	int32                                         Steps;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PositiveInt;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NegativeInt;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BAD[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Shockwave_C_ConvertStepsToLoops) == 0x000004, "Wrong alignment on BP_Shockwave_C_ConvertStepsToLoops");
static_assert(sizeof(BP_Shockwave_C_ConvertStepsToLoops) == 0x000020, "Wrong size on BP_Shockwave_C_ConvertStepsToLoops");
static_assert(offsetof(BP_Shockwave_C_ConvertStepsToLoops, Steps) == 0x000000, "Member 'BP_Shockwave_C_ConvertStepsToLoops::Steps' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_ConvertStepsToLoops, PositiveInt) == 0x000004, "Member 'BP_Shockwave_C_ConvertStepsToLoops::PositiveInt' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_ConvertStepsToLoops, NegativeInt) == 0x000008, "Member 'BP_Shockwave_C_ConvertStepsToLoops::NegativeInt' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_ConvertStepsToLoops, CallFunc_Percent_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Shockwave_C_ConvertStepsToLoops::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_ConvertStepsToLoops, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_Shockwave_C_ConvertStepsToLoops::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_ConvertStepsToLoops, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_Shockwave_C_ConvertStepsToLoops::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_ConvertStepsToLoops, CallFunc_Divide_IntInt_ReturnValue) == 0x000018, "Member 'BP_Shockwave_C_ConvertStepsToLoops::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_ConvertStepsToLoops, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_Shockwave_C_ConvertStepsToLoops::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Shockwave.BP_Shockwave_C.SpawnEmitterAtTraceIntersect
// 0x0248 (0x0248 - 0x0000)
struct BP_Shockwave_C_SpawnEmitterAtTraceIntersect final
{
public:
	struct FVector                                StartTrace;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndTrace;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_Instigator;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class UObject*                                CallFunc_GetDefaultObjectFor_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BAE[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQPhysicalMaterialEffects*             K2Node_DynamicCast_AsSQPhysical_Material_Effects;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BAF[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BB0[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BB1[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQPhysicalMaterial*                    CallFunc_GetSquadPhysMat_SquadPhysMat;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BB2[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQExplosionEffect                     CallFunc_GetExplosionEffect_ReturnValue;           // 0x0170(0x00C0)(ConstParm)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BB3[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect) == 0x000008, "Wrong alignment on BP_Shockwave_C_SpawnEmitterAtTraceIntersect");
static_assert(sizeof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect) == 0x000248, "Wrong size on BP_Shockwave_C_SpawnEmitterAtTraceIntersect");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, StartTrace) == 0x000000, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::StartTrace' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, EndTrace) == 0x00000C, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::EndTrace' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, Param_Instigator) == 0x000018, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::Param_Instigator' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_GetDefaultObjectFor_ReturnValue) == 0x000030, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_GetDefaultObjectFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_LineTraceSingle_OutHit) == 0x000038, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_LineTraceSingle_ReturnValue) == 0x0000C0, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, K2Node_DynamicCast_AsSQPhysical_Material_Effects) == 0x0000C8, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::K2Node_DynamicCast_AsSQPhysical_Material_Effects' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D1, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D2, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_ElementIndex) == 0x000134, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_FaceIndex) == 0x000138, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_TraceStart) == 0x00013C, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_BreakHitResult_TraceEnd) == 0x000148, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_GetSquadPhysMat_SquadPhysMat) == 0x000158, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_GetSquadPhysMat_SquadPhysMat' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000160, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_GetExplosionEffect_ReturnValue) == 0x000170, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_GetExplosionEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000230, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_IsValid_ReturnValue) == 0x000238, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shockwave_C_SpawnEmitterAtTraceIntersect, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000240, "Member 'BP_Shockwave_C_SpawnEmitterAtTraceIntersect::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

}


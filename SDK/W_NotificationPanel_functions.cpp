#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_NotificationPanel

#include "Basic.hpp"

#include "W_NotificationPanel_classes.hpp"
#include "W_NotificationPanel_parameters.hpp"


namespace SDK
{

// Function W_NotificationPanel.W_NotificationPanel_C.ExecuteUbergraph_W_NotificationPanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_NotificationPanel_C::ExecuteUbergraph_W_NotificationPanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_NotificationPanel_C", "ExecuteUbergraph_W_NotificationPanel");

	Params::W_NotificationPanel_C_ExecuteUbergraph_W_NotificationPanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_NotificationPanel.W_NotificationPanel_C.Draw Next Notification
// (BlueprintCallable, BlueprintEvent)

void UW_NotificationPanel_C::Draw_Next_Notification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_NotificationPanel_C", "Draw Next Notification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_NotificationPanel.W_NotificationPanel_C.Draw Main Notification
// (BlueprintCallable, BlueprintEvent)

void UW_NotificationPanel_C::Draw_Main_Notification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_NotificationPanel_C", "Draw Main Notification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_NotificationPanel.W_NotificationPanel_C.Add New Chat
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerName                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESQChat                                 Channel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESQNotificationTypes                    NotificationType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_NotificationPanel_C::Add_New_Chat(const class FString& PlayerName, const class FString& Message, ESQChat Channel, const struct FLinearColor& Color, ESQNotificationTypes NotificationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_NotificationPanel_C", "Add New Chat");

	Params::W_NotificationPanel_C_Add_New_Chat Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Message = std::move(Message);
	Parms.Channel = Channel;
	Parms.Color = std::move(Color);
	Parms.NotificationType = NotificationType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_NotificationPanel.W_NotificationPanel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_NotificationPanel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_NotificationPanel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_NotificationPanel.W_NotificationPanel_C.New Notification
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// ESQNotificationTypes                    Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Custom_Icon                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CustomIconColor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PreventRepetition                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_NotificationPanel_C::New_Notification(const class FText& Message, ESQNotificationTypes Type, class UTexture2D* Custom_Icon, const struct FLinearColor& CustomIconColor, bool PreventRepetition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_NotificationPanel_C", "New Notification");

	Params::W_NotificationPanel_C_New_Notification Parms{};

	Parms.Message = std::move(Message);
	Parms.Type = Type;
	Parms.Custom_Icon = Custom_Icon;
	Parms.CustomIconColor = std::move(CustomIconColor);
	Parms.PreventRepetition = PreventRepetition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_NotificationPanel.W_NotificationPanel_C.Draw Notification
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// ESQNotificationTypes                    Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Custom_Icon                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     CustomIconColor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PreventRepetition                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_NotificationPanel_C::Draw_Notification(const class FText& Text, ESQNotificationTypes Type, class UTexture2D* Custom_Icon, const struct FLinearColor& CustomIconColor, bool PreventRepetition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_NotificationPanel_C", "Draw Notification");

	Params::W_NotificationPanel_C_Draw_Notification Parms{};

	Parms.Text = std::move(Text);
	Parms.Type = Type;
	Parms.Custom_Icon = Custom_Icon;
	Parms.CustomIconColor = std::move(CustomIconColor);
	Parms.PreventRepetition = PreventRepetition;

	UObject::ProcessEvent(Func, &Parms);
}

}


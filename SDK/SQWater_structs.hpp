#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SQWater

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum SQWater.ESQWaterBodyType
// NumValues: 0x0006
enum class ESQWaterBodyType : uint8
{
	River                                    = 0,
	Lake                                     = 1,
	Ocean                                    = 2,
	Transition                               = 3,
	Num                                      = 4,
	ESQWaterBodyType_MAX                     = 5,
};

// ScriptStruct SQWater.ODKSphericalPontoon
// 0x0110 (0x0110 - 0x0000)
struct FODKSphericalPontoon final
{
public:
	class FName                                   CenterSocket;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RelativeLocation;                                  // 0x0008(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bShowPontoonVisualizer : 1;                        // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1735[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocalForce;                                        // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterLocation;                                    // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1736[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  SocketRotation;                                    // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Offset;                                            // 0x0050(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1737[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaterHeight;                                       // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImmersionDepth;                                    // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1738[0xA8];                                    // 0x0068(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FODKSphericalPontoon) == 0x000010, "Wrong alignment on FODKSphericalPontoon");
static_assert(sizeof(FODKSphericalPontoon) == 0x000110, "Wrong size on FODKSphericalPontoon");
static_assert(offsetof(FODKSphericalPontoon, CenterSocket) == 0x000000, "Member 'FODKSphericalPontoon::CenterSocket' has a wrong offset!");
static_assert(offsetof(FODKSphericalPontoon, RelativeLocation) == 0x000008, "Member 'FODKSphericalPontoon::RelativeLocation' has a wrong offset!");
static_assert(offsetof(FODKSphericalPontoon, Radius) == 0x000014, "Member 'FODKSphericalPontoon::Radius' has a wrong offset!");
static_assert(offsetof(FODKSphericalPontoon, LocalForce) == 0x00001C, "Member 'FODKSphericalPontoon::LocalForce' has a wrong offset!");
static_assert(offsetof(FODKSphericalPontoon, CenterLocation) == 0x000028, "Member 'FODKSphericalPontoon::CenterLocation' has a wrong offset!");
static_assert(offsetof(FODKSphericalPontoon, SocketRotation) == 0x000040, "Member 'FODKSphericalPontoon::SocketRotation' has a wrong offset!");
static_assert(offsetof(FODKSphericalPontoon, Offset) == 0x000050, "Member 'FODKSphericalPontoon::Offset' has a wrong offset!");
static_assert(offsetof(FODKSphericalPontoon, WaterHeight) == 0x000060, "Member 'FODKSphericalPontoon::WaterHeight' has a wrong offset!");
static_assert(offsetof(FODKSphericalPontoon, ImmersionDepth) == 0x000064, "Member 'FODKSphericalPontoon::ImmersionDepth' has a wrong offset!");

// ScriptStruct SQWater.ODKTextureChunk
// 0x0028 (0x0028 - 0x0000)
struct FODKTextureChunk final
{
public:
	TArray<uint8>                                 Intensities;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Clipmasks;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         AmountOfEntries;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeOfChunk;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FODKTextureChunk) == 0x000008, "Wrong alignment on FODKTextureChunk");
static_assert(sizeof(FODKTextureChunk) == 0x000028, "Wrong size on FODKTextureChunk");
static_assert(offsetof(FODKTextureChunk, Intensities) == 0x000000, "Member 'FODKTextureChunk::Intensities' has a wrong offset!");
static_assert(offsetof(FODKTextureChunk, Clipmasks) == 0x000010, "Member 'FODKTextureChunk::Clipmasks' has a wrong offset!");
static_assert(offsetof(FODKTextureChunk, AmountOfEntries) == 0x000020, "Member 'FODKTextureChunk::AmountOfEntries' has a wrong offset!");
static_assert(offsetof(FODKTextureChunk, SizeOfChunk) == 0x000024, "Member 'FODKTextureChunk::SizeOfChunk' has a wrong offset!");

// ScriptStruct SQWater.ODKDragItem
// 0x0010 (0x0010 - 0x0000)
struct FODKDragItem final
{
public:
	class UCurveFloat*                            Curve;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Multiplier;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActive;                                           // 0x000C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1739[0x3];                                     // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FODKDragItem) == 0x000008, "Wrong alignment on FODKDragItem");
static_assert(sizeof(FODKDragItem) == 0x000010, "Wrong size on FODKDragItem");
static_assert(offsetof(FODKDragItem, Curve) == 0x000000, "Member 'FODKDragItem::Curve' has a wrong offset!");
static_assert(offsetof(FODKDragItem, Multiplier) == 0x000008, "Member 'FODKDragItem::Multiplier' has a wrong offset!");
static_assert(offsetof(FODKDragItem, bActive) == 0x00000C, "Member 'FODKDragItem::bActive' has a wrong offset!");

// ScriptStruct SQWater.ODKDragSetup
// 0x0048 (0x0048 - 0x0000)
struct FODKDragSetup final
{
public:
	float                                         MaxDampeningDepth;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_173A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DepthDampeningCurve;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SurfaceArea;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_173B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FODKDragItem                           AlphaDrag;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FODKDragItem                           AlphaLift;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FODKDragItem                           SlipDrag;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FODKDragSetup) == 0x000008, "Wrong alignment on FODKDragSetup");
static_assert(sizeof(FODKDragSetup) == 0x000048, "Wrong size on FODKDragSetup");
static_assert(offsetof(FODKDragSetup, MaxDampeningDepth) == 0x000000, "Member 'FODKDragSetup::MaxDampeningDepth' has a wrong offset!");
static_assert(offsetof(FODKDragSetup, DepthDampeningCurve) == 0x000008, "Member 'FODKDragSetup::DepthDampeningCurve' has a wrong offset!");
static_assert(offsetof(FODKDragSetup, SurfaceArea) == 0x000010, "Member 'FODKDragSetup::SurfaceArea' has a wrong offset!");
static_assert(offsetof(FODKDragSetup, AlphaDrag) == 0x000018, "Member 'FODKDragSetup::AlphaDrag' has a wrong offset!");
static_assert(offsetof(FODKDragSetup, AlphaLift) == 0x000028, "Member 'FODKDragSetup::AlphaLift' has a wrong offset!");
static_assert(offsetof(FODKDragSetup, SlipDrag) == 0x000038, "Member 'FODKDragSetup::SlipDrag' has a wrong offset!");

// ScriptStruct SQWater.ODKBuoyancyData
// 0x00A8 (0x00A8 - 0x0000)
struct FODKBuoyancyData final
{
public:
	bool                                          bUseRelativePontoonRadius;                         // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_173C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FODKSphericalPontoon>           Pontoons;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         BuoyancyCoefficient;                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBuoyantForce;                                   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BuoyancyDamp;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BuoyancyDampExponential;                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBuoyancyRamp;                                  // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_173D[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BuoyancyRampMinVelocity;                           // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BuoyancyRampMaxVelocity;                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BuoyancyRampMax;                                   // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyWaterForces;                                 // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_173E[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaterShorePushFactor;                              // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaterVelocityStrength;                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxWaterForce;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyDragForcesInWater;                           // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_173F[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DampeningLocation;                                 // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FODKDragSetup                          DragSetup;                                         // 0x0058(0x0048)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                         AngularDampingCoefficient;                         // 0x00A0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1740[0x4];                                     // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FODKBuoyancyData) == 0x000008, "Wrong alignment on FODKBuoyancyData");
static_assert(sizeof(FODKBuoyancyData) == 0x0000A8, "Wrong size on FODKBuoyancyData");
static_assert(offsetof(FODKBuoyancyData, bUseRelativePontoonRadius) == 0x000000, "Member 'FODKBuoyancyData::bUseRelativePontoonRadius' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, Pontoons) == 0x000008, "Member 'FODKBuoyancyData::Pontoons' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, BuoyancyCoefficient) == 0x000018, "Member 'FODKBuoyancyData::BuoyancyCoefficient' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, MaxBuoyantForce) == 0x00001C, "Member 'FODKBuoyancyData::MaxBuoyantForce' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, BuoyancyDamp) == 0x000020, "Member 'FODKBuoyancyData::BuoyancyDamp' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, BuoyancyDampExponential) == 0x000024, "Member 'FODKBuoyancyData::BuoyancyDampExponential' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, bUseBuoyancyRamp) == 0x000028, "Member 'FODKBuoyancyData::bUseBuoyancyRamp' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, BuoyancyRampMinVelocity) == 0x00002C, "Member 'FODKBuoyancyData::BuoyancyRampMinVelocity' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, BuoyancyRampMaxVelocity) == 0x000030, "Member 'FODKBuoyancyData::BuoyancyRampMaxVelocity' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, BuoyancyRampMax) == 0x000034, "Member 'FODKBuoyancyData::BuoyancyRampMax' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, bApplyWaterForces) == 0x000038, "Member 'FODKBuoyancyData::bApplyWaterForces' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, WaterShorePushFactor) == 0x00003C, "Member 'FODKBuoyancyData::WaterShorePushFactor' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, WaterVelocityStrength) == 0x000040, "Member 'FODKBuoyancyData::WaterVelocityStrength' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, MaxWaterForce) == 0x000044, "Member 'FODKBuoyancyData::MaxWaterForce' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, bApplyDragForcesInWater) == 0x000048, "Member 'FODKBuoyancyData::bApplyDragForcesInWater' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, DampeningLocation) == 0x00004C, "Member 'FODKBuoyancyData::DampeningLocation' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, DragSetup) == 0x000058, "Member 'FODKBuoyancyData::DragSetup' has a wrong offset!");
static_assert(offsetof(FODKBuoyancyData, AngularDampingCoefficient) == 0x0000A0, "Member 'FODKBuoyancyData::AngularDampingCoefficient' has a wrong offset!");

// ScriptStruct SQWater.SQWaveSet
// 0x0014 (0x0014 - 0x0000)
struct FSQWaveSet final
{
public:
	struct FVector                                FlowDirRadialPosition;                             // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Lambda;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Amplitude;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSQWaveSet) == 0x000004, "Wrong alignment on FSQWaveSet");
static_assert(sizeof(FSQWaveSet) == 0x000014, "Wrong size on FSQWaveSet");
static_assert(offsetof(FSQWaveSet, FlowDirRadialPosition) == 0x000000, "Member 'FSQWaveSet::FlowDirRadialPosition' has a wrong offset!");
static_assert(offsetof(FSQWaveSet, Lambda) == 0x00000C, "Member 'FSQWaveSet::Lambda' has a wrong offset!");
static_assert(offsetof(FSQWaveSet, Amplitude) == 0x000010, "Member 'FSQWaveSet::Amplitude' has a wrong offset!");

// ScriptStruct SQWater.ODKMaskingVolume
// 0x0024 (0x0024 - 0x0000)
struct FODKMaskingVolume final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Size;                                              // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rotation;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinIntensity;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Falloff;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCullVolume;                                       // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1741[0x3];                                     // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FODKMaskingVolume) == 0x000004, "Wrong alignment on FODKMaskingVolume");
static_assert(sizeof(FODKMaskingVolume) == 0x000024, "Wrong size on FODKMaskingVolume");
static_assert(offsetof(FODKMaskingVolume, Location) == 0x000000, "Member 'FODKMaskingVolume::Location' has a wrong offset!");
static_assert(offsetof(FODKMaskingVolume, Size) == 0x00000C, "Member 'FODKMaskingVolume::Size' has a wrong offset!");
static_assert(offsetof(FODKMaskingVolume, Rotation) == 0x000014, "Member 'FODKMaskingVolume::Rotation' has a wrong offset!");
static_assert(offsetof(FODKMaskingVolume, MinIntensity) == 0x000018, "Member 'FODKMaskingVolume::MinIntensity' has a wrong offset!");
static_assert(offsetof(FODKMaskingVolume, Falloff) == 0x00001C, "Member 'FODKMaskingVolume::Falloff' has a wrong offset!");
static_assert(offsetof(FODKMaskingVolume, bCullVolume) == 0x000020, "Member 'FODKMaskingVolume::bCullVolume' has a wrong offset!");

}


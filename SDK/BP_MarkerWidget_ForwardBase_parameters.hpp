#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarkerWidget_ForwardBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MarkerWidget_ForwardBase.BP_MarkerWidget_ForwardBase_C.ExecuteUbergraph_BP_MarkerWidget_ForwardBase
// 0x00E8 (0x00E8 - 0x0000)
struct BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldMarkerUpdate_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E82[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FSlateBrush                            CallFunc_UpdateSpawnBrush_ReturnValue;             // 0x0018(0x0088)()
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E83[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00A4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase) == 0x000008, "Wrong alignment on BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase");
static_assert(sizeof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase) == 0x0000E8, "Wrong size on BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase, EntryPoint) == 0x000000, "Member 'BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase, CallFunc_ShouldMarkerUpdate_ReturnValue) == 0x000004, "Member 'BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase::CallFunc_ShouldMarkerUpdate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase, CallFunc_UpdateSpawnBrush_ReturnValue) == 0x000018, "Member 'BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase::CallFunc_UpdateSpawnBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase, CallFunc_IsVisible_ReturnValue) == 0x0000A0, "Member 'BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase, K2Node_Event_MyGeometry) == 0x0000A4, "Member 'BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase, K2Node_Event_InDeltaTime) == 0x0000DC, "Member 'BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000E0, "Member 'BP_MarkerWidget_ForwardBase_C_ExecuteUbergraph_BP_MarkerWidget_ForwardBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_ForwardBase.BP_MarkerWidget_ForwardBase_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_MarkerWidget_ForwardBase_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_ForwardBase_C_Tick) == 0x000004, "Wrong alignment on BP_MarkerWidget_ForwardBase_C_Tick");
static_assert(sizeof(BP_MarkerWidget_ForwardBase_C_Tick) == 0x00003C, "Wrong size on BP_MarkerWidget_ForwardBase_C_Tick");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_Tick, MyGeometry) == 0x000000, "Member 'BP_MarkerWidget_ForwardBase_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_MarkerWidget_ForwardBase_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_MarkerWidget_ForwardBase.BP_MarkerWidget_ForwardBase_C.UpdateSpawnBrush
// 0x0170 (0x0170 - 0x0000)
struct BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	bool                                          CanSpawn;                                          // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasValidSpawnPoint_CanSpawn;              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E84[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E85[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E86[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00C0(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00E8(0x0088)()
};
static_assert(alignof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush) == 0x000008, "Wrong alignment on BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush");
static_assert(sizeof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush) == 0x000170, "Wrong size on BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, ReturnValue) == 0x000000, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, CanSpawn) == 0x000088, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::CanSpawn' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, Temp_bool_Variable) == 0x000089, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, CallFunc_HasValidSpawnPoint_CanSpawn) == 0x00008A, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::CallFunc_HasValidSpawnPoint_CanSpawn' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, CallFunc_GetOwningPlayer_ReturnValue) == 0x000090, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, CallFunc_GetHUD_ReturnValue) == 0x000098, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, K2Node_DynamicCast_AsSQHUD) == 0x0000A0, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, K2Node_Select_Default) == 0x0000AC, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, K2Node_MakeStruct_SlateColor) == 0x0000C0, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush, K2Node_MakeStruct_SlateBrush) == 0x0000E8, "Member 'BP_MarkerWidget_ForwardBase_C_UpdateSpawnBrush::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function BP_MarkerWidget_ForwardBase.BP_MarkerWidget_ForwardBase_C.GetSpawn
// 0x0028 (0x0028 - 0x0000)
struct BP_MarkerWidget_ForwardBase_C_GetSpawn final
{
public:
	class ASQGameSpawn*                           Spawn;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQForwardBase*                         CallFunc_GetFOB_Forward_Base;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E87[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameSpawn*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_ForwardBase_C_GetSpawn) == 0x000008, "Wrong alignment on BP_MarkerWidget_ForwardBase_C_GetSpawn");
static_assert(sizeof(BP_MarkerWidget_ForwardBase_C_GetSpawn) == 0x000028, "Wrong size on BP_MarkerWidget_ForwardBase_C_GetSpawn");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_GetSpawn, Spawn) == 0x000000, "Member 'BP_MarkerWidget_ForwardBase_C_GetSpawn::Spawn' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_GetSpawn, CallFunc_GetFOB_Forward_Base) == 0x000008, "Member 'BP_MarkerWidget_ForwardBase_C_GetSpawn::CallFunc_GetFOB_Forward_Base' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_GetSpawn, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_ForwardBase_C_GetSpawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_GetSpawn, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_MarkerWidget_ForwardBase_C_GetSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_GetSpawn, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_MarkerWidget_ForwardBase_C_GetSpawn::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_MarkerWidget_ForwardBase.BP_MarkerWidget_ForwardBase_C.Update Radius Color
// 0x0044 (0x0044 - 0x0000)
struct BP_MarkerWidget_ForwardBase_C_Update_Radius_Color final
{
public:
	ESQBuildState                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E88[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarkerWidget_ForwardBase_C_Update_Radius_Color) == 0x000004, "Wrong alignment on BP_MarkerWidget_ForwardBase_C_Update_Radius_Color");
static_assert(sizeof(BP_MarkerWidget_ForwardBase_C_Update_Radius_Color) == 0x000044, "Wrong size on BP_MarkerWidget_ForwardBase_C_Update_Radius_Color");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_Update_Radius_Color, Temp_byte_Variable) == 0x000000, "Member 'BP_MarkerWidget_ForwardBase_C_Update_Radius_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_Update_Radius_Color, Temp_struct_Variable) == 0x000004, "Member 'BP_MarkerWidget_ForwardBase_C_Update_Radius_Color::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_Update_Radius_Color, Temp_struct_Variable_1) == 0x000014, "Member 'BP_MarkerWidget_ForwardBase_C_Update_Radius_Color::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_Update_Radius_Color, Temp_struct_Variable_2) == 0x000024, "Member 'BP_MarkerWidget_ForwardBase_C_Update_Radius_Color::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_Update_Radius_Color, K2Node_Select_Default) == 0x000034, "Member 'BP_MarkerWidget_ForwardBase_C_Update_Radius_Color::K2Node_Select_Default' has a wrong offset!");

// Function BP_MarkerWidget_ForwardBase.BP_MarkerWidget_ForwardBase_C.HasValidSpawnPoint
// 0x0020 (0x0020 - 0x0000)
struct BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint final
{
public:
	bool                                          CanSpawn;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Spawnable;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E89[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQForwardBase*                         CallFunc_GetFOB_Forward_Base;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E8A[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumActivatedSpawnPoints_ReturnValue;   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint) == 0x000008, "Wrong alignment on BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint");
static_assert(sizeof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint) == 0x000020, "Wrong size on BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint, CanSpawn) == 0x000000, "Member 'BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint::CanSpawn' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint, Spawnable) == 0x000001, "Member 'BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint::Spawnable' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint, CallFunc_GetFOB_Forward_Base) == 0x000008, "Member 'BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint::CallFunc_GetFOB_Forward_Base' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint, CallFunc_GetNumActivatedSpawnPoints_ReturnValue) == 0x000014, "Member 'BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint::CallFunc_GetNumActivatedSpawnPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'BP_MarkerWidget_ForwardBase_C_HasValidSpawnPoint::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_MarkerWidget_ForwardBase.BP_MarkerWidget_ForwardBase_C.GetFOB
// 0x0020 (0x0020 - 0x0000)
struct BP_MarkerWidget_ForwardBase_C_GetFOB final
{
public:
	class ASQForwardBase*                         Forward_Base;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQForwardBase*                         K2Node_DynamicCast_AsSQForward_Base;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarkerWidget_ForwardBase_C_GetFOB) == 0x000008, "Wrong alignment on BP_MarkerWidget_ForwardBase_C_GetFOB");
static_assert(sizeof(BP_MarkerWidget_ForwardBase_C_GetFOB) == 0x000020, "Wrong size on BP_MarkerWidget_ForwardBase_C_GetFOB");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_GetFOB, Forward_Base) == 0x000000, "Member 'BP_MarkerWidget_ForwardBase_C_GetFOB::Forward_Base' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_GetFOB, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_MarkerWidget_ForwardBase_C_GetFOB::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_GetFOB, K2Node_DynamicCast_AsSQForward_Base) == 0x000010, "Member 'BP_MarkerWidget_ForwardBase_C_GetFOB::K2Node_DynamicCast_AsSQForward_Base' has a wrong offset!");
static_assert(offsetof(BP_MarkerWidget_ForwardBase_C_GetFOB, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MarkerWidget_ForwardBase_C_GetFOB::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


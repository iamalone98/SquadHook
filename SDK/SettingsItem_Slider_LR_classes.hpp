#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingsItem_Slider_LR

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SettingsItem_Slider_LR.SettingsItem_Slider_LR_C
// 0x00E8 (0x0348 - 0x0260)
class USettingsItem_Slider_LR_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_0;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_0;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_4;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider;                                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          SliderText;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Title;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SettingName;                                       // 0x0298(0x0018)(Edit, BlueprintVisible)
	float                                         SliderMin;                                         // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SliderMax;                                         // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinValue;                                          // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinFractionDigits;                                 // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxFractionDigits;                                 // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3157[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CachedSliderText;                                  // 0x02D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnValueChanged;                                    // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bConstructed;                                      // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPercentage;                                     // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3158[0x2];                                     // 0x02FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Regular_Color;                                     // 0x02FC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Hovered_Color;                                     // 0x030C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Pressed_Color;                                     // 0x031C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3159[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnCaptureEnd;                                      // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         TextBoxSize;                                       // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnValueChanged__DelegateSignature(float Param_Value);
	void OnCaptureEnd__DelegateSignature(float Param_Value);
	void ExecuteUbergraph_SettingsItem_Slider_LR(int32 EntryPoint);
	void BndEvt__Slider_K2Node_ComponentBoundEvent_15_OnMouseCaptureEndEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void BndEvt__SliderText_K2Node_ComponentBoundEvent_275_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__SliderText_K2Node_ComponentBoundEvent_191_OnEditableTextChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__Slider_K2Node_ComponentBoundEvent_361_OnFloatValueChangedEvent__DelegateSignature(float Param_Value);
	void SetValue(float Param_Value);
	void UpdateSliderTextValue();
	void UpdateSliderValue();
	struct FSlateBrush Get_SpacerImg_Brush_0();

	void RemovePercentage(const class FText& InText, class FText* OutText) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SettingsItem_Slider_LR_C">();
	}
	static class USettingsItem_Slider_LR_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingsItem_Slider_LR_C>();
	}
};
static_assert(alignof(USettingsItem_Slider_LR_C) == 0x000008, "Wrong alignment on USettingsItem_Slider_LR_C");
static_assert(sizeof(USettingsItem_Slider_LR_C) == 0x000348, "Wrong size on USettingsItem_Slider_LR_C");
static_assert(offsetof(USettingsItem_Slider_LR_C, UberGraphFrame) == 0x000260, "Member 'USettingsItem_Slider_LR_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, Button_0) == 0x000268, "Member 'USettingsItem_Slider_LR_C::Button_0' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, HorizontalBox_0) == 0x000270, "Member 'USettingsItem_Slider_LR_C::HorizontalBox_0' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, SizeBox_4) == 0x000278, "Member 'USettingsItem_Slider_LR_C::SizeBox_4' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, Slider) == 0x000280, "Member 'USettingsItem_Slider_LR_C::Slider' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, SliderText) == 0x000288, "Member 'USettingsItem_Slider_LR_C::SliderText' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, TB_Title) == 0x000290, "Member 'USettingsItem_Slider_LR_C::TB_Title' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, SettingName) == 0x000298, "Member 'USettingsItem_Slider_LR_C::SettingName' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, SliderMin) == 0x0002B0, "Member 'USettingsItem_Slider_LR_C::SliderMin' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, SliderMax) == 0x0002B4, "Member 'USettingsItem_Slider_LR_C::SliderMax' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, MinValue) == 0x0002B8, "Member 'USettingsItem_Slider_LR_C::MinValue' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, MaxValue) == 0x0002BC, "Member 'USettingsItem_Slider_LR_C::MaxValue' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, Value) == 0x0002C0, "Member 'USettingsItem_Slider_LR_C::Value' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, MinFractionDigits) == 0x0002C4, "Member 'USettingsItem_Slider_LR_C::MinFractionDigits' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, MaxFractionDigits) == 0x0002C8, "Member 'USettingsItem_Slider_LR_C::MaxFractionDigits' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, CachedSliderText) == 0x0002D0, "Member 'USettingsItem_Slider_LR_C::CachedSliderText' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, OnValueChanged) == 0x0002E8, "Member 'USettingsItem_Slider_LR_C::OnValueChanged' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, bConstructed) == 0x0002F8, "Member 'USettingsItem_Slider_LR_C::bConstructed' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, bIsPercentage) == 0x0002F9, "Member 'USettingsItem_Slider_LR_C::bIsPercentage' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, Regular_Color) == 0x0002FC, "Member 'USettingsItem_Slider_LR_C::Regular_Color' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, Hovered_Color) == 0x00030C, "Member 'USettingsItem_Slider_LR_C::Hovered_Color' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, Pressed_Color) == 0x00031C, "Member 'USettingsItem_Slider_LR_C::Pressed_Color' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, OnCaptureEnd) == 0x000330, "Member 'USettingsItem_Slider_LR_C::OnCaptureEnd' has a wrong offset!");
static_assert(offsetof(USettingsItem_Slider_LR_C, TextBoxSize) == 0x000340, "Member 'USettingsItem_Slider_LR_C::TextBoxSize' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FOBStatusWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FOBStatusWidget.FOBStatusWidget_C.ExecuteUbergraph_FOBStatusWidget
// 0x0020 (0x0020 - 0x0000)
struct FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_397A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget) == 0x000008, "Wrong alignment on FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget");
static_assert(sizeof(FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget) == 0x000020, "Wrong size on FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget");
static_assert(offsetof(FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget, EntryPoint) == 0x000000, "Member 'FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'FOBStatusWidget_C_ExecuteUbergraph_FOBStatusWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.GetCapturePercent
// 0x000C (0x000C - 0x0000)
struct FOBStatusWidget_C_GetCapturePercent final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_397B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FOBStatusWidget_C_GetCapturePercent) == 0x000004, "Wrong alignment on FOBStatusWidget_C_GetCapturePercent");
static_assert(sizeof(FOBStatusWidget_C_GetCapturePercent) == 0x00000C, "Wrong size on FOBStatusWidget_C_GetCapturePercent");
static_assert(offsetof(FOBStatusWidget_C_GetCapturePercent, ReturnValue) == 0x000000, "Member 'FOBStatusWidget_C_GetCapturePercent::ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetCapturePercent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'FOBStatusWidget_C_GetCapturePercent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetCapturePercent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'FOBStatusWidget_C_GetCapturePercent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.GetConPoints
// 0x0038 (0x0038 - 0x0000)
struct FOBStatusWidget_C_GetConPoints final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_397C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
};
static_assert(alignof(FOBStatusWidget_C_GetConPoints) == 0x000008, "Wrong alignment on FOBStatusWidget_C_GetConPoints");
static_assert(sizeof(FOBStatusWidget_C_GetConPoints) == 0x000038, "Wrong size on FOBStatusWidget_C_GetConPoints");
static_assert(offsetof(FOBStatusWidget_C_GetConPoints, ReturnValue) == 0x000000, "Member 'FOBStatusWidget_C_GetConPoints::ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetConPoints, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'FOBStatusWidget_C_GetConPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetConPoints, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'FOBStatusWidget_C_GetConPoints::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.GetAmmoPoints
// 0x0038 (0x0038 - 0x0000)
struct FOBStatusWidget_C_GetAmmoPoints final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_397D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
};
static_assert(alignof(FOBStatusWidget_C_GetAmmoPoints) == 0x000008, "Wrong alignment on FOBStatusWidget_C_GetAmmoPoints");
static_assert(sizeof(FOBStatusWidget_C_GetAmmoPoints) == 0x000038, "Wrong size on FOBStatusWidget_C_GetAmmoPoints");
static_assert(offsetof(FOBStatusWidget_C_GetAmmoPoints, ReturnValue) == 0x000000, "Member 'FOBStatusWidget_C_GetAmmoPoints::ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetAmmoPoints, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'FOBStatusWidget_C_GetAmmoPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetAmmoPoints, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'FOBStatusWidget_C_GetAmmoPoints::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.GetEnemyVisibility
// 0x0020 (0x0020 - 0x0000)
struct FOBStatusWidget_C_GetEnemyVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Ret;                                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397E[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FOBStatusWidget_C_GetEnemyVisibility) == 0x000008, "Wrong alignment on FOBStatusWidget_C_GetEnemyVisibility");
static_assert(sizeof(FOBStatusWidget_C_GetEnemyVisibility) == 0x000020, "Wrong size on FOBStatusWidget_C_GetEnemyVisibility");
static_assert(offsetof(FOBStatusWidget_C_GetEnemyVisibility, ReturnValue) == 0x000000, "Member 'FOBStatusWidget_C_GetEnemyVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetEnemyVisibility, Ret) == 0x000001, "Member 'FOBStatusWidget_C_GetEnemyVisibility::Ret' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetEnemyVisibility, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'FOBStatusWidget_C_GetEnemyVisibility::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetEnemyVisibility, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000010, "Member 'FOBStatusWidget_C_GetEnemyVisibility::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetEnemyVisibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FOBStatusWidget_C_GetEnemyVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetEnemyVisibility, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'FOBStatusWidget_C_GetEnemyVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetEnemyVisibility, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'FOBStatusWidget_C_GetEnemyVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetEnemyVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001B, "Member 'FOBStatusWidget_C_GetEnemyVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.GetFobSpawnerText
// 0x0100 (0x0100 - 0x0000)
struct FOBStatusWidget_C_GetFobSpawnerText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0048(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0070(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0098(0x0028)()
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_397F[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3980[0x1];                                     // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetClientRemainingActivatingTime_ReturnValue; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3981[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3982[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FOBStatusWidget_C_GetFobSpawnerText) == 0x000008, "Wrong alignment on FOBStatusWidget_C_GetFobSpawnerText");
static_assert(sizeof(FOBStatusWidget_C_GetFobSpawnerText) == 0x000100, "Wrong size on FOBStatusWidget_C_GetFobSpawnerText");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, ReturnValue) == 0x000000, "Member 'FOBStatusWidget_C_GetFobSpawnerText::ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, Temp_text_Variable) == 0x000018, "Member 'FOBStatusWidget_C_GetFobSpawnerText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, Temp_text_Variable_1) == 0x000030, "Member 'FOBStatusWidget_C_GetFobSpawnerText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, K2Node_MakeStruct_SlateColor) == 0x000048, "Member 'FOBStatusWidget_C_GetFobSpawnerText::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, K2Node_MakeStruct_SlateColor_1) == 0x000070, "Member 'FOBStatusWidget_C_GetFobSpawnerText::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, K2Node_MakeStruct_SlateColor_2) == 0x000098, "Member 'FOBStatusWidget_C_GetFobSpawnerText::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, Temp_bool_Variable) == 0x0000C0, "Member 'FOBStatusWidget_C_GetFobSpawnerText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C8, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_BooleanAND_ReturnValue_1) == 0x0000CA, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_GetClientRemainingActivatingTime_ReturnValue) == 0x0000CC, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_GetClientRemainingActivatingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000D0, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, K2Node_Select_Default) == 0x0000D8, "Member 'FOBStatusWidget_C_GetFobSpawnerText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_BooleanAND_ReturnValue_2) == 0x0000F1, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000F8, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_IsValid_ReturnValue) == 0x0000F9, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetFobSpawnerText, CallFunc_BooleanAND_ReturnValue_3) == 0x0000FA, "Member 'FOBStatusWidget_C_GetFobSpawnerText::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.GetBrushFobIcon
// 0x0200 (0x0200 - 0x0000)
struct FOBStatusWidget_C_GetBrushFobIcon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0088)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0088(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00B0(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00D8(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0160(0x0088)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3983[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetClientRemainingActivatingTime_ReturnValue; // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3984[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FOBStatusWidget_C_GetBrushFobIcon) == 0x000008, "Wrong alignment on FOBStatusWidget_C_GetBrushFobIcon");
static_assert(sizeof(FOBStatusWidget_C_GetBrushFobIcon) == 0x000200, "Wrong size on FOBStatusWidget_C_GetBrushFobIcon");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, ReturnValue) == 0x000000, "Member 'FOBStatusWidget_C_GetBrushFobIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, K2Node_MakeStruct_SlateColor) == 0x000088, "Member 'FOBStatusWidget_C_GetBrushFobIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, K2Node_MakeStruct_SlateColor_1) == 0x0000B0, "Member 'FOBStatusWidget_C_GetBrushFobIcon::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, K2Node_MakeStruct_SlateBrush) == 0x0000D8, "Member 'FOBStatusWidget_C_GetBrushFobIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, K2Node_MakeStruct_SlateBrush_1) == 0x000160, "Member 'FOBStatusWidget_C_GetBrushFobIcon::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, CallFunc_IsValid_ReturnValue) == 0x0001E8, "Member 'FOBStatusWidget_C_GetBrushFobIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, CallFunc_GetClientRemainingActivatingTime_ReturnValue) == 0x0001EC, "Member 'FOBStatusWidget_C_GetBrushFobIcon::CallFunc_GetClientRemainingActivatingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001F0, "Member 'FOBStatusWidget_C_GetBrushFobIcon::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, CallFunc_Array_Length_ReturnValue) == 0x0001F4, "Member 'FOBStatusWidget_C_GetBrushFobIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F8, "Member 'FOBStatusWidget_C_GetBrushFobIcon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, CallFunc_Not_PreBool_ReturnValue) == 0x0001F9, "Member 'FOBStatusWidget_C_GetBrushFobIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, CallFunc_BooleanOR_ReturnValue) == 0x0001FA, "Member 'FOBStatusWidget_C_GetBrushFobIcon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, CallFunc_BooleanOR_ReturnValue_1) == 0x0001FB, "Member 'FOBStatusWidget_C_GetBrushFobIcon::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_GetBrushFobIcon, CallFunc_BooleanOR_ReturnValue_2) == 0x0001FC, "Member 'FOBStatusWidget_C_GetBrushFobIcon::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.UpdateState
// 0x00C0 (0x00C0 - 0x0000)
struct FOBStatusWidget_C_UpdateState final
{
public:
	class AActor*                                 L_Controlled_Actor;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3985[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0020(0x0010)(ReferenceParm)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQForwardBase*                         K2Node_DynamicCast_AsSQForward_Base;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3986[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleTurret*                       K2Node_DynamicCast_AsSQVehicle_Turret;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3987[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetVehicle_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFOBonSameTeam_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGhost_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3988[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3989[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_398A[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployableVehicle*                   K2Node_DynamicCast_AsSQDeployable_Vehicle;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_398B[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployable*                          CallFunc_GetOwnerDeployable_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFOBonSameTeam_ReturnValue_1;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_398C[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FOBStatusWidget_C_UpdateState) == 0x000008, "Wrong alignment on FOBStatusWidget_C_UpdateState");
static_assert(sizeof(FOBStatusWidget_C_UpdateState) == 0x0000C0, "Wrong size on FOBStatusWidget_C_UpdateState");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, L_Controlled_Actor) == 0x000000, "Member 'FOBStatusWidget_C_UpdateState::L_Controlled_Actor' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'FOBStatusWidget_C_UpdateState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'FOBStatusWidget_C_UpdateState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000020, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_Array_Get_Item) == 0x000038, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_AsSQForward_Base) == 0x000040, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_AsSQForward_Base' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_AsSQVehicle_Turret) == 0x000050, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_AsSQVehicle_Turret' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_GetVehicle_ReturnValue) == 0x000060, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_GetVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_IsFOBonSameTeam_ReturnValue) == 0x000068, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_IsFOBonSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_IsGhost_ReturnValue) == 0x000069, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_IsGhost_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_AsSQSoldier) == 0x000070, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000080, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_AsSQVehicle) == 0x000088, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_AsSQDeployable_Vehicle) == 0x000098, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_AsSQDeployable_Vehicle' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'FOBStatusWidget_C_UpdateState::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_IsValid_ReturnValue_1) == 0x0000A1, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_GetOwnerDeployable_ReturnValue) == 0x0000A8, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_GetOwnerDeployable_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_IsFOBonSameTeam_ReturnValue_1) == 0x0000B1, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_IsFOBonSameTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_IsValid_ReturnValue_3) == 0x0000B2, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateState, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'FOBStatusWidget_C_UpdateState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.Refresh Data
// 0x0108 (0x0108 - 0x0000)
struct FOBStatusWidget_C_Refresh_Data final
{
public:
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_398D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_398E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetBrushFobIcon_ReturnValue;              // 0x0030(0x0088)()
	class FText                                   CallFunc_GetFobSpawnerText_ReturnValue;            // 0x00B8(0x0018)()
	class FText                                   CallFunc_GetAmmoPoints_ReturnValue;                // 0x00D0(0x0018)()
	class FText                                   CallFunc_GetConPoints_ReturnValue;                 // 0x00E8(0x0018)()
	ESlateVisibility                              CallFunc_GetEnemyVisibility_ReturnValue;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FOBStatusWidget_C_Refresh_Data) == 0x000008, "Wrong alignment on FOBStatusWidget_C_Refresh_Data");
static_assert(sizeof(FOBStatusWidget_C_Refresh_Data) == 0x000108, "Wrong size on FOBStatusWidget_C_Refresh_Data");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_GetSquadGameState_Return_Value) == 0x000000, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000008, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_GetTimeSeconds_ReturnValue) == 0x00000C, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000014, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000018, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000028, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_GetBrushFobIcon_ReturnValue) == 0x000030, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_GetBrushFobIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_GetFobSpawnerText_ReturnValue) == 0x0000B8, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_GetFobSpawnerText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_GetAmmoPoints_ReturnValue) == 0x0000D0, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_GetAmmoPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_GetConPoints_ReturnValue) == 0x0000E8, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_GetConPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_Refresh_Data, CallFunc_GetEnemyVisibility_ReturnValue) == 0x000100, "Member 'FOBStatusWidget_C_Refresh_Data::CallFunc_GetEnemyVisibility_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.UpdateProgressBarColor
// 0x01E8 (0x01E8 - 0x0000)
struct FOBStatusWidget_C_UpdateProgressBarColor final
{
public:
	struct FLinearColor                           TargetColor;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisabledColor;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NormalColor;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BleedColor;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FProgressBarStyle                      TempStyle;                                         // 0x0040(0x01A0)(Edit, BlueprintVisible)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FOBStatusWidget_C_UpdateProgressBarColor) == 0x000008, "Wrong alignment on FOBStatusWidget_C_UpdateProgressBarColor");
static_assert(sizeof(FOBStatusWidget_C_UpdateProgressBarColor) == 0x0001E8, "Wrong size on FOBStatusWidget_C_UpdateProgressBarColor");
static_assert(offsetof(FOBStatusWidget_C_UpdateProgressBarColor, TargetColor) == 0x000000, "Member 'FOBStatusWidget_C_UpdateProgressBarColor::TargetColor' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateProgressBarColor, DisabledColor) == 0x000010, "Member 'FOBStatusWidget_C_UpdateProgressBarColor::DisabledColor' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateProgressBarColor, NormalColor) == 0x000020, "Member 'FOBStatusWidget_C_UpdateProgressBarColor::NormalColor' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateProgressBarColor, BleedColor) == 0x000030, "Member 'FOBStatusWidget_C_UpdateProgressBarColor::BleedColor' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateProgressBarColor, TempStyle) == 0x000040, "Member 'FOBStatusWidget_C_UpdateProgressBarColor::TempStyle' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateProgressBarColor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001E0, "Member 'FOBStatusWidget_C_UpdateProgressBarColor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateProgressBarColor, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001E4, "Member 'FOBStatusWidget_C_UpdateProgressBarColor::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.UpdateFobSpawnerProgress
// 0x0018 (0x0018 - 0x0000)
struct FOBStatusWidget_C_UpdateFobSpawnerProgress final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_398F[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3990[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetClientRemainingActivatingTime_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FOBStatusWidget_C_UpdateFobSpawnerProgress) == 0x000004, "Wrong alignment on FOBStatusWidget_C_UpdateFobSpawnerProgress");
static_assert(sizeof(FOBStatusWidget_C_UpdateFobSpawnerProgress) == 0x000018, "Wrong size on FOBStatusWidget_C_UpdateFobSpawnerProgress");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, RemainingTime) == 0x000000, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::RemainingTime' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_GetClientRemainingActivatingTime_ReturnValue) == 0x000010, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_GetClientRemainingActivatingTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_BooleanAND_ReturnValue_1) == 0x000015, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_BooleanAND_ReturnValue_2) == 0x000016, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UpdateFobSpawnerProgress, CallFunc_Not_PreBool_ReturnValue_1) == 0x000017, "Member 'FOBStatusWidget_C_UpdateFobSpawnerProgress::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.RegisterFOB
// 0x0014 (0x0014 - 0x0000)
struct FOBStatusWidget_C_RegisterFOB final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FOBStatusWidget_C_RegisterFOB) == 0x000004, "Wrong alignment on FOBStatusWidget_C_RegisterFOB");
static_assert(sizeof(FOBStatusWidget_C_RegisterFOB) == 0x000014, "Wrong size on FOBStatusWidget_C_RegisterFOB");
static_assert(offsetof(FOBStatusWidget_C_RegisterFOB, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'FOBStatusWidget_C_RegisterFOB::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_RegisterFOB, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'FOBStatusWidget_C_RegisterFOB::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.UnregisterFOB
// 0x0014 (0x0014 - 0x0000)
struct FOBStatusWidget_C_UnregisterFOB final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FOBStatusWidget_C_UnregisterFOB) == 0x000004, "Wrong alignment on FOBStatusWidget_C_UnregisterFOB");
static_assert(sizeof(FOBStatusWidget_C_UnregisterFOB) == 0x000014, "Wrong size on FOBStatusWidget_C_UnregisterFOB");
static_assert(offsetof(FOBStatusWidget_C_UnregisterFOB, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'FOBStatusWidget_C_UnregisterFOB::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_UnregisterFOB, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'FOBStatusWidget_C_UnregisterFOB::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FOBStatusWidget.FOBStatusWidget_C.IsFOBonSameTeam
// 0x0028 (0x0028 - 0x0000)
struct FOBStatusWidget_C_IsFOBonSameTeam final
{
public:
	class ASQDeployable*                          InFOB;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3991[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FOBStatusWidget_C_IsFOBonSameTeam) == 0x000008, "Wrong alignment on FOBStatusWidget_C_IsFOBonSameTeam");
static_assert(sizeof(FOBStatusWidget_C_IsFOBonSameTeam) == 0x000028, "Wrong size on FOBStatusWidget_C_IsFOBonSameTeam");
static_assert(offsetof(FOBStatusWidget_C_IsFOBonSameTeam, InFOB) == 0x000000, "Member 'FOBStatusWidget_C_IsFOBonSameTeam::InFOB' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_IsFOBonSameTeam, ReturnValue) == 0x000008, "Member 'FOBStatusWidget_C_IsFOBonSameTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_IsFOBonSameTeam, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'FOBStatusWidget_C_IsFOBonSameTeam::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_IsFOBonSameTeam, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000018, "Member 'FOBStatusWidget_C_IsFOBonSameTeam::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_IsFOBonSameTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FOBStatusWidget_C_IsFOBonSameTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FOBStatusWidget_C_IsFOBonSameTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000021, "Member 'FOBStatusWidget_C_IsFOBonSameTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}


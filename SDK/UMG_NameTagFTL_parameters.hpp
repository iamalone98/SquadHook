#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_NameTagFTL

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UMG_NameTagFTL.UMG_NameTagFTL_C.ExecuteUbergraph_UMG_NameTagFTL
// 0x0040 (0x0040 - 0x0000)
struct UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL) == 0x000004, "Wrong alignment on UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL");
static_assert(sizeof(UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL) == 0x000040, "Wrong size on UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL");
static_assert(offsetof(UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL, EntryPoint) == 0x000000, "Member 'UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL, K2Node_Event_MyGeometry) == 0x000004, "Member 'UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UMG_NameTagFTL_C_ExecuteUbergraph_UMG_NameTagFTL::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function UMG_NameTagFTL.UMG_NameTagFTL_C.Tick
// 0x003C (0x003C - 0x0000)
struct UMG_NameTagFTL_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_NameTagFTL_C_Tick) == 0x000004, "Wrong alignment on UMG_NameTagFTL_C_Tick");
static_assert(sizeof(UMG_NameTagFTL_C_Tick) == 0x00003C, "Wrong size on UMG_NameTagFTL_C_Tick");
static_assert(offsetof(UMG_NameTagFTL_C_Tick, MyGeometry) == 0x000000, "Member 'UMG_NameTagFTL_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Tick, InDeltaTime) == 0x000038, "Member 'UMG_NameTagFTL_C_Tick::InDeltaTime' has a wrong offset!");

// Function UMG_NameTagFTL.UMG_NameTagFTL_C.Find Target
// 0x0078 (0x0078 - 0x0000)
struct UMG_NameTagFTL_C_Find_Target final
{
public:
	struct FVector                                BestTargetLocation;                                // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3969[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Best_Target;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_396A[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetScreenLocation_NewParam;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_396B[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396C[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_396D[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_396E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_396F[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue_1;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_NameTagFTL_C_Find_Target) == 0x000008, "Wrong alignment on UMG_NameTagFTL_C_Find_Target");
static_assert(sizeof(UMG_NameTagFTL_C_Find_Target) == 0x000078, "Wrong size on UMG_NameTagFTL_C_Find_Target");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, BestTargetLocation) == 0x000000, "Member 'UMG_NameTagFTL_C_Find_Target::BestTargetLocation' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, Best_Target) == 0x000010, "Member 'UMG_NameTagFTL_C_Find_Target::Best_Target' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, Temp_int_Array_Index_Variable) == 0x000018, "Member 'UMG_NameTagFTL_C_Find_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'UMG_NameTagFTL_C_Find_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_GetScreenLocation_NewParam) == 0x000028, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_GetScreenLocation_NewParam' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'UMG_NameTagFTL_C_Find_Target::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000032, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_IsValid_ReturnValue_1) == 0x000033, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_IsValid_ReturnValue_2) == 0x000034, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_IsValid_ReturnValue_3) == 0x000035, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_Array_Get_Item) == 0x000038, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_GetSoldier_ReturnValue) == 0x000048, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000058, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_IsInVehicle_ReturnValue) == 0x000060, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_GetFireTeamIndex_ReturnValue) == 0x000064, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_IsFireTeamLeader_ReturnValue) == 0x000068, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_GetFireTeamIndex_ReturnValue_1) == 0x00006C, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_GetFireTeamIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000070, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_NameTagFTL_C_Find_Target, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000071, "Member 'UMG_NameTagFTL_C_Find_Target::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ForwardBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SQFOBDeployableCount_structs.hpp"
#include "Squad_classes.hpp"
#include "ESQDeployable_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ForwardBase.BP_ForwardBase_C
// 0x0020 (0x05A0 - 0x0580)
class ABP_ForwardBase_C : public ASQForwardBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0580(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USQMapIconComponent*                    SquadMapIcon;                                      // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSQFOBDeployableCount>          DeployableCount;                                   // 0x0590(0x0010)(Edit, BlueprintVisible, Net, Transient)

public:
	void ExecuteUbergraph_BP_ForwardBase(int32 EntryPoint);
	void BP_OnDeployableRemoved(class ASQDeployable* InDeployable);
	void BP_OnDeployableAdded(class ASQDeployable* InDeployable);
	void AddDeployable(ESQDeployable InType);
	void RemoveDeployable(ESQDeployable InType);

	void GetDeployableCount(const TSet<ESQDeployable>& InDeployableTypes, uint8* OutCount) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ForwardBase_C">();
	}
	static class ABP_ForwardBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ForwardBase_C>();
	}
};
static_assert(alignof(ABP_ForwardBase_C) == 0x000008, "Wrong alignment on ABP_ForwardBase_C");
static_assert(sizeof(ABP_ForwardBase_C) == 0x0005A0, "Wrong size on ABP_ForwardBase_C");
static_assert(offsetof(ABP_ForwardBase_C, UberGraphFrame) == 0x000580, "Member 'ABP_ForwardBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ForwardBase_C, SquadMapIcon) == 0x000588, "Member 'ABP_ForwardBase_C::SquadMapIcon' has a wrong offset!");
static_assert(offsetof(ABP_ForwardBase_C, DeployableCount) == 0x000590, "Member 'ABP_ForwardBase_C::DeployableCount' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Command_ActionControl

#include "Basic.hpp"

#include "W_Command_ActionControl_classes.hpp"
#include "W_Command_ActionControl_parameters.hpp"


namespace SDK
{

// Function W_Command_ActionControl.W_Command_ActionControl_C.Placement Complete__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UW_Command_ActionControl_C::Placement_Complete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "Placement Complete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.ExecuteUbergraph_W_Command_ActionControl
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Command_ActionControl_C::ExecuteUbergraph_W_Command_ActionControl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "ExecuteUbergraph_W_Command_ActionControl");

	Params::W_Command_ActionControl_C_ExecuteUbergraph_W_Command_ActionControl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.Add Self to Canvas
// (BlueprintCallable, BlueprintEvent)

void UW_Command_ActionControl_C::Add_Self_to_Canvas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "Add Self to Canvas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.On Map Mouse Down
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    Mouse_Event                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FVector                          World_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Command_ActionControl_C::On_Map_Mouse_Down(const struct FPointerEvent& Mouse_Event, const struct FVector& World_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "On Map Mouse Down");

	Params::W_Command_ActionControl_C_On_Map_Mouse_Down Parms{};

	Parms.Mouse_Event = std::move(Mouse_Event);
	Parms.World_Location = std::move(World_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Command_ActionControl_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.Remove
// (BlueprintCallable, BlueprintEvent)

void UW_Command_ActionControl_C::Remove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "Remove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Command_ActionControl_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.Get Angle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Widget_Angle                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         World_Rotation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_Command_ActionControl_C::Get_Angle(float* Widget_Angle, struct FRotator* World_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "Get Angle");

	Params::W_Command_ActionControl_C_Get_Angle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget_Angle != nullptr)
		*Widget_Angle = Parms.Widget_Angle;

	if (World_Rotation != nullptr)
		*World_Rotation = std::move(Parms.World_Rotation);
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.Get World Distance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   World_Distance                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Command_ActionControl_C::Get_World_Distance(float* World_Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "Get World Distance");

	Params::W_Command_ActionControl_C_Get_World_Distance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (World_Distance != nullptr)
		*World_Distance = Parms.World_Distance;
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.Get Pixel Distance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Command_ActionControl_C::Get_Pixel_Distance(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "Get Pixel Distance");

	Params::W_Command_ActionControl_C_Get_Pixel_Distance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function W_Command_ActionControl.W_Command_ActionControl_C.Create Accept Deny
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Command_ActionControl_C::Create_Accept_Deny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Command_ActionControl_C", "Create Accept Deny");

	UObject::ProcessEvent(Func, nullptr);
}

}


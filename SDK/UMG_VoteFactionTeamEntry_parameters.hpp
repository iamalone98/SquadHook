#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteFactionTeamEntry

#include "Basic.hpp"

#include "SQFactionEntry_structs.hpp"
#include "ESQFactionSetupTag_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SQFactionSetupEntry_structs.hpp"


namespace SDK::Params
{

// Function UMG_VoteFactionTeamEntry.UMG_VoteFactionTeamEntry_C.ExecuteUbergraph_UMG_VoteFactionTeamEntry
// 0x0040 (0x0040 - 0x0000)
struct UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4196[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_VoteCount;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HasVotedFor;                          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsWinner;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4197[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry) == 0x000004, "Wrong alignment on UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry");
static_assert(sizeof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry) == 0x000040, "Wrong size on UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry, EntryPoint) == 0x000000, "Member 'UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry, Temp_bool_Variable) == 0x000004, "Member 'UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry, Temp_struct_Variable) == 0x000008, "Member 'UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry, Temp_struct_Variable_1) == 0x000018, "Member 'UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry, K2Node_Event_VoteCount) == 0x000028, "Member 'UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry::K2Node_Event_VoteCount' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry, K2Node_Event_HasVotedFor) == 0x00002C, "Member 'UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry::K2Node_Event_HasVotedFor' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry, K2Node_Event_IsWinner) == 0x00002D, "Member 'UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry::K2Node_Event_IsWinner' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry, K2Node_Select_Default) == 0x000030, "Member 'UMG_VoteFactionTeamEntry_C_ExecuteUbergraph_UMG_VoteFactionTeamEntry::K2Node_Select_Default' has a wrong offset!");

// Function UMG_VoteFactionTeamEntry.UMG_VoteFactionTeamEntry_C.OnEndVote
// 0x0001 (0x0001 - 0x0000)
struct UMG_VoteFactionTeamEntry_C_OnEndVote final
{
public:
	bool                                          IsWinner;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteFactionTeamEntry_C_OnEndVote) == 0x000001, "Wrong alignment on UMG_VoteFactionTeamEntry_C_OnEndVote");
static_assert(sizeof(UMG_VoteFactionTeamEntry_C_OnEndVote) == 0x000001, "Wrong size on UMG_VoteFactionTeamEntry_C_OnEndVote");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_OnEndVote, IsWinner) == 0x000000, "Member 'UMG_VoteFactionTeamEntry_C_OnEndVote::IsWinner' has a wrong offset!");

// Function UMG_VoteFactionTeamEntry.UMG_VoteFactionTeamEntry_C.OnUpdateVote
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteFactionTeamEntry_C_OnUpdateVote final
{
public:
	int32                                         Param_VoteCount;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasVotedFor;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteFactionTeamEntry_C_OnUpdateVote) == 0x000004, "Wrong alignment on UMG_VoteFactionTeamEntry_C_OnUpdateVote");
static_assert(sizeof(UMG_VoteFactionTeamEntry_C_OnUpdateVote) == 0x000008, "Wrong size on UMG_VoteFactionTeamEntry_C_OnUpdateVote");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_OnUpdateVote, Param_VoteCount) == 0x000000, "Member 'UMG_VoteFactionTeamEntry_C_OnUpdateVote::Param_VoteCount' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_OnUpdateVote, HasVotedFor) == 0x000004, "Member 'UMG_VoteFactionTeamEntry_C_OnUpdateVote::HasVotedFor' has a wrong offset!");

// Function UMG_VoteFactionTeamEntry.UMG_VoteFactionTeamEntry_C.UpdateStatus
// 0x0028 (0x0028 - 0x0000)
struct UMG_VoteFactionTeamEntry_C_UpdateStatus final
{
public:
	int32                                         Vote_Count;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Voted_For;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4198[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeamEntry_C_UpdateStatus) == 0x000008, "Wrong alignment on UMG_VoteFactionTeamEntry_C_UpdateStatus");
static_assert(sizeof(UMG_VoteFactionTeamEntry_C_UpdateStatus) == 0x000028, "Wrong size on UMG_VoteFactionTeamEntry_C_UpdateStatus");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, Vote_Count) == 0x000000, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::Vote_Count' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, Has_Voted_For) == 0x000004, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::Has_Voted_For' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, Temp_byte_Variable) == 0x000005, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, Temp_bool_Variable) == 0x000021, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, Temp_byte_Variable_1) == 0x000022, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, Temp_byte_Variable_2) == 0x000023, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, K2Node_Select_Default) == 0x000024, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, Temp_byte_Variable_3) == 0x000025, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, Temp_bool_Variable_1) == 0x000026, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_UpdateStatus, K2Node_Select_Default_1) == 0x000027, "Member 'UMG_VoteFactionTeamEntry_C_UpdateStatus::K2Node_Select_Default_1' has a wrong offset!");

// Function UMG_VoteFactionTeamEntry.UMG_VoteFactionTeamEntry_C.InitDescription
// 0x0688 (0x0688 - 0x0000)
struct UMG_VoteFactionTeamEntry_C_InitDescription final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4199[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQFactionSetup_C*                   CallFunc_TryGetFactionSetup_OutFactionSetup;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetFactionSetup_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionSetupEntry                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x00A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419B[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQFaction_C*                        CallFunc_TryGetFaction_OutFaction;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetFaction_ReturnValue;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFactionEntry_Success;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419C[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry;          // 0x00E0(0x0580)(HasGetValueTypeHash)
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419D[0x4];                                     // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESQFactionSetupTag>                    CallFunc_Set_ToArray_Result;                       // 0x0668(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQFactionSetupTag                            CallFunc_Array_Get_Item;                           // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419E[0x2];                                     // 0x067A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteFactionTeamEntry_C_InitDescription) == 0x000008, "Wrong alignment on UMG_VoteFactionTeamEntry_C_InitDescription");
static_assert(sizeof(UMG_VoteFactionTeamEntry_C_InitDescription) == 0x000688, "Wrong size on UMG_VoteFactionTeamEntry_C_InitDescription");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_TryGetFactionSetup_OutFactionSetup) == 0x000010, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_TryGetFactionSetup_OutFactionSetup' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_TryGetFactionSetup_ReturnValue) == 0x000018, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_TryGetFactionSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C8, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_TryGetFaction_OutFaction) == 0x0000D0, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_TryGetFaction_OutFaction' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_TryGetFaction_ReturnValue) == 0x0000D8, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_TryGetFaction_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_TryGetFactionEntry_Success) == 0x0000D9, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_TryGetFactionEntry_Success' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_TryGetFactionEntry_FactionEntry) == 0x0000E0, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_TryGetFactionEntry_FactionEntry' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_Set_Length_ReturnValue) == 0x000660, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_Set_ToArray_Result) == 0x000668, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_Greater_IntInt_ReturnValue) == 0x000678, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_Array_Get_Item) == 0x000679, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_Array_Length_ReturnValue) == 0x00067C, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_InitDescription, CallFunc_Less_IntInt_ReturnValue) == 0x000680, "Member 'UMG_VoteFactionTeamEntry_C_InitDescription::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_VoteFactionTeamEntry.UMG_VoteFactionTeamEntry_C.AddTypeWidget
// 0x0098 (0x0098 - 0x0000)
struct UMG_VoteFactionTeamEntry_C_AddTypeWidget final
{
public:
	class UBP_SQFactionSetup_C*                   In_Faction_Setup;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetUnitSymbol_Out_Symbol;                 // 0x0018(0x0028)(HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScaleBox*                              CallFunc_SpawnObject_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0058(0x0008)(NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVoteTeamId_Out_TeamID;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerTeamId_Out_TeamID;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A0[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_VoteSubImage_C*                      CallFunc_SpawnObject_ReturnValue_1;                // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeamEntry_C_AddTypeWidget) == 0x000008, "Wrong alignment on UMG_VoteFactionTeamEntry_C_AddTypeWidget");
static_assert(sizeof(UMG_VoteFactionTeamEntry_C_AddTypeWidget) == 0x000098, "Wrong size on UMG_VoteFactionTeamEntry_C_AddTypeWidget");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, In_Faction_Setup) == 0x000000, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::In_Faction_Setup' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, Temp_struct_Variable) == 0x000008, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, CallFunc_GetUnitSymbol_Out_Symbol) == 0x000018, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::CallFunc_GetUnitSymbol_Out_Symbol' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, Temp_struct_Variable_1) == 0x000040, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, CallFunc_SpawnObject_ReturnValue) == 0x000050, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, K2Node_MakeStruct_SlateChildSize) == 0x000058, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, Temp_bool_Variable) == 0x000060, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, CallFunc_GetVoteTeamId_Out_TeamID) == 0x000064, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::CallFunc_GetVoteTeamId_Out_TeamID' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, CallFunc_GetPlayerTeamId_Out_TeamID) == 0x000068, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::CallFunc_GetPlayerTeamId_Out_TeamID' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006C, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000070, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, K2Node_Select_Default) == 0x000078, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, CallFunc_SpawnObject_ReturnValue_1) == 0x000088, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTypeWidget, CallFunc_AddChild_ReturnValue) == 0x000090, "Member 'UMG_VoteFactionTeamEntry_C_AddTypeWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function UMG_VoteFactionTeamEntry.UMG_VoteFactionTeamEntry_C.AddTagWidget
// 0x00C8 (0x00C8 - 0x0000)
struct UMG_VoteFactionTeamEntry_C_AddTagWidget final
{
public:
	ESQFactionSetupTag                            In_Tag;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0018)()
	ESQFactionSetupTag                            Temp_byte_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A2[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)()
	class UScaleBox*                              CallFunc_SpawnObject_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x00A8(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_VoteSubText_C*                       CallFunc_SpawnObject_ReturnValue_1;                // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeamEntry_C_AddTagWidget) == 0x000008, "Wrong alignment on UMG_VoteFactionTeamEntry_C_AddTagWidget");
static_assert(sizeof(UMG_VoteFactionTeamEntry_C_AddTagWidget) == 0x0000C8, "Wrong size on UMG_VoteFactionTeamEntry_C_AddTagWidget");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, In_Tag) == 0x000000, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::In_Tag' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, Temp_text_Variable) == 0x000008, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, Temp_text_Variable_1) == 0x000020, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, Temp_text_Variable_2) == 0x000038, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, Temp_text_Variable_3) == 0x000050, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, Temp_text_Variable_4) == 0x000068, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, Temp_byte_Variable) == 0x000080, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, K2Node_Select_Default) == 0x000088, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, CallFunc_SpawnObject_ReturnValue) == 0x0000A0, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, K2Node_MakeStruct_SlateChildSize) == 0x0000A8, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000B0, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, CallFunc_SpawnObject_ReturnValue_1) == 0x0000B8, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_AddTagWidget, CallFunc_AddChild_ReturnValue) == 0x0000C0, "Member 'UMG_VoteFactionTeamEntry_C_AddTagWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function UMG_VoteFactionTeamEntry.UMG_VoteFactionTeamEntry_C.GetPlayerTeamId
// 0x0020 (0x0020 - 0x0000)
struct UMG_VoteFactionTeamEntry_C_GetPlayerTeamId final
{
public:
	int32                                         Out_TeamID;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A4[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteFactionTeamEntry_C_GetPlayerTeamId) == 0x000008, "Wrong alignment on UMG_VoteFactionTeamEntry_C_GetPlayerTeamId");
static_assert(sizeof(UMG_VoteFactionTeamEntry_C_GetPlayerTeamId) == 0x000020, "Wrong size on UMG_VoteFactionTeamEntry_C_GetPlayerTeamId");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetPlayerTeamId, Out_TeamID) == 0x000000, "Member 'UMG_VoteFactionTeamEntry_C_GetPlayerTeamId::Out_TeamID' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetPlayerTeamId, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UMG_VoteFactionTeamEntry_C_GetPlayerTeamId::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetPlayerTeamId, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000010, "Member 'UMG_VoteFactionTeamEntry_C_GetPlayerTeamId::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetPlayerTeamId, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UMG_VoteFactionTeamEntry_C_GetPlayerTeamId::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetPlayerTeamId, CallFunc_GetTeam_ReturnValue) == 0x00001C, "Member 'UMG_VoteFactionTeamEntry_C_GetPlayerTeamId::CallFunc_GetTeam_ReturnValue' has a wrong offset!");

// Function UMG_VoteFactionTeamEntry.UMG_VoteFactionTeamEntry_C.GetVoteTeamId
// 0x0018 (0x0018 - 0x0000)
struct UMG_VoteFactionTeamEntry_C_GetVoteTeamId final
{
public:
	int32                                         Out_TeamID;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41A5[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetId_ReturnValue;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IsFactionVoteId_OutTeamId;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFactionVoteId_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VoteFactionTeamEntry_C_GetVoteTeamId) == 0x000004, "Wrong alignment on UMG_VoteFactionTeamEntry_C_GetVoteTeamId");
static_assert(sizeof(UMG_VoteFactionTeamEntry_C_GetVoteTeamId) == 0x000018, "Wrong size on UMG_VoteFactionTeamEntry_C_GetVoteTeamId");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetVoteTeamId, Out_TeamID) == 0x000000, "Member 'UMG_VoteFactionTeamEntry_C_GetVoteTeamId::Out_TeamID' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetVoteTeamId, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UMG_VoteFactionTeamEntry_C_GetVoteTeamId::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetVoteTeamId, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'UMG_VoteFactionTeamEntry_C_GetVoteTeamId::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetVoteTeamId, CallFunc_GetId_ReturnValue) == 0x000008, "Member 'UMG_VoteFactionTeamEntry_C_GetVoteTeamId::CallFunc_GetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetVoteTeamId, CallFunc_IsFactionVoteId_OutTeamId) == 0x000010, "Member 'UMG_VoteFactionTeamEntry_C_GetVoteTeamId::CallFunc_IsFactionVoteId_OutTeamId' has a wrong offset!");
static_assert(offsetof(UMG_VoteFactionTeamEntry_C_GetVoteTeamId, CallFunc_IsFactionVoteId_ReturnValue) == 0x000014, "Member 'UMG_VoteFactionTeamEntry_C_GetVoteTeamId::CallFunc_IsFactionVoteId_ReturnValue' has a wrong offset!");

}


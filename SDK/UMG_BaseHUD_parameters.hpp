#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_BaseHUD

#include "Basic.hpp"

#include "UIZOrderStruct_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function UMG_BaseHUD.UMG_BaseHUD_C.ExecuteUbergraph_UMG_BaseHUD
// 0x0070 (0x0070 - 0x0000)
struct UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsOpen;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue;                   // 0x0010(0x0010)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue_1;                 // 0x0028(0x0010)(NoDestructor)
	struct FVector2D                              CallFunc_GetAlignment_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAlignment_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue_1;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD) == 0x000008, "Wrong alignment on UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD");
static_assert(sizeof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD) == 0x000070, "Wrong size on UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, EntryPoint) == 0x000000, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, K2Node_ComponentBoundEvent_bIsOpen) == 0x000005, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::K2Node_ComponentBoundEvent_bIsOpen' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_IsValid_ReturnValue_1) == 0x000006, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_IsValid_ReturnValue_2) == 0x000007, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_GetAnchors_ReturnValue) == 0x000010, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_GetAnchors_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000020, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_GetAnchors_ReturnValue_1) == 0x000028, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_GetAnchors_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_GetAlignment_ReturnValue) == 0x000038, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_GetAlignment_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_GetPosition_ReturnValue) == 0x000040, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_GetAlignment_ReturnValue_1) == 0x000048, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_GetAlignment_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_GetPosition_ReturnValue_1) == 0x000050, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_GetSize_ReturnValue) == 0x000058, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000060, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD, CallFunc_GetSize_ReturnValue_1) == 0x000068, "Member 'UMG_BaseHUD_C_ExecuteUbergraph_UMG_BaseHUD::CallFunc_GetSize_ReturnValue_1' has a wrong offset!");

// Function UMG_BaseHUD.UMG_BaseHUD_C.BndEvt__SquadList_K2Node_ComponentBoundEvent_0_OnToggledOpen__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct UMG_BaseHUD_C_BndEvt__SquadList_K2Node_ComponentBoundEvent_0_OnToggledOpen__DelegateSignature final
{
public:
	bool                                          bIsOpen;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_BaseHUD_C_BndEvt__SquadList_K2Node_ComponentBoundEvent_0_OnToggledOpen__DelegateSignature) == 0x000001, "Wrong alignment on UMG_BaseHUD_C_BndEvt__SquadList_K2Node_ComponentBoundEvent_0_OnToggledOpen__DelegateSignature");
static_assert(sizeof(UMG_BaseHUD_C_BndEvt__SquadList_K2Node_ComponentBoundEvent_0_OnToggledOpen__DelegateSignature) == 0x000001, "Wrong size on UMG_BaseHUD_C_BndEvt__SquadList_K2Node_ComponentBoundEvent_0_OnToggledOpen__DelegateSignature");
static_assert(offsetof(UMG_BaseHUD_C_BndEvt__SquadList_K2Node_ComponentBoundEvent_0_OnToggledOpen__DelegateSignature, bIsOpen) == 0x000000, "Member 'UMG_BaseHUD_C_BndEvt__SquadList_K2Node_ComponentBoundEvent_0_OnToggledOpen__DelegateSignature::bIsOpen' has a wrong offset!");

// Function UMG_BaseHUD.UMG_BaseHUD_C.Create Approval
// 0x0028 (0x0028 - 0x0000)
struct UMG_BaseHUD_C_Create_Approval final
{
public:
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0000(0x0010)(NoDestructor)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1B[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_ApprovalQueueWidget_C*             CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_BaseHUD_C_Create_Approval) == 0x000008, "Wrong alignment on UMG_BaseHUD_C_Create_Approval");
static_assert(sizeof(UMG_BaseHUD_C_Create_Approval) == 0x000028, "Wrong size on UMG_BaseHUD_C_Create_Approval");
static_assert(offsetof(UMG_BaseHUD_C_Create_Approval, K2Node_MakeStruct_Anchors) == 0x000000, "Member 'UMG_BaseHUD_C_Create_Approval::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Approval, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'UMG_BaseHUD_C_Create_Approval::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Approval, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000014, "Member 'UMG_BaseHUD_C_Create_Approval::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Approval, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'UMG_BaseHUD_C_Create_Approval::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Approval, CallFunc_Create_ReturnValue) == 0x000020, "Member 'UMG_BaseHUD_C_Create_Approval::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function UMG_BaseHUD.UMG_BaseHUD_C.Create Notifications
// 0x0028 (0x0028 - 0x0000)
struct UMG_BaseHUD_C_Create_Notifications final
{
public:
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0000(0x0010)(NoDestructor)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_NotificationPanel_C*                 CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_BaseHUD_C_Create_Notifications) == 0x000008, "Wrong alignment on UMG_BaseHUD_C_Create_Notifications");
static_assert(sizeof(UMG_BaseHUD_C_Create_Notifications) == 0x000028, "Wrong size on UMG_BaseHUD_C_Create_Notifications");
static_assert(offsetof(UMG_BaseHUD_C_Create_Notifications, K2Node_MakeStruct_Anchors) == 0x000000, "Member 'UMG_BaseHUD_C_Create_Notifications::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Notifications, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'UMG_BaseHUD_C_Create_Notifications::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Notifications, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000014, "Member 'UMG_BaseHUD_C_Create_Notifications::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Notifications, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'UMG_BaseHUD_C_Create_Notifications::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Notifications, CallFunc_Create_ReturnValue) == 0x000020, "Member 'UMG_BaseHUD_C_Create_Notifications::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function UMG_BaseHUD.UMG_BaseHUD_C.Create Voip
// 0x0020 (0x0020 - 0x0000)
struct UMG_BaseHUD_C_Create_Voip final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_VoipList_C*                          CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_BaseHUD_C_Create_Voip) == 0x000008, "Wrong alignment on UMG_BaseHUD_C_Create_Voip");
static_assert(sizeof(UMG_BaseHUD_C_Create_Voip) == 0x000020, "Wrong size on UMG_BaseHUD_C_Create_Voip");
static_assert(offsetof(UMG_BaseHUD_C_Create_Voip, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UMG_BaseHUD_C_Create_Voip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Voip, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UMG_BaseHUD_C_Create_Voip::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Voip, CallFunc_Create_ReturnValue) == 0x000010, "Member 'UMG_BaseHUD_C_Create_Voip::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Voip, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'UMG_BaseHUD_C_Create_Voip::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Voip, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00001C, "Member 'UMG_BaseHUD_C_Create_Voip::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function UMG_BaseHUD.UMG_BaseHUD_C.Create Heal Prompt
// 0x0028 (0x0028 - 0x0000)
struct UMG_BaseHUD_C_Create_Heal_Prompt final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_HealPrompt_C*                        CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0018(0x0010)(NoDestructor)
};
static_assert(alignof(UMG_BaseHUD_C_Create_Heal_Prompt) == 0x000008, "Wrong alignment on UMG_BaseHUD_C_Create_Heal_Prompt");
static_assert(sizeof(UMG_BaseHUD_C_Create_Heal_Prompt) == 0x000028, "Wrong size on UMG_BaseHUD_C_Create_Heal_Prompt");
static_assert(offsetof(UMG_BaseHUD_C_Create_Heal_Prompt, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'UMG_BaseHUD_C_Create_Heal_Prompt::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Heal_Prompt, CallFunc_AddChildToCanvas_ReturnValue) == 0x000008, "Member 'UMG_BaseHUD_C_Create_Heal_Prompt::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Heal_Prompt, CallFunc_Create_ReturnValue) == 0x000010, "Member 'UMG_BaseHUD_C_Create_Heal_Prompt::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_Create_Heal_Prompt, K2Node_MakeStruct_Anchors) == 0x000018, "Member 'UMG_BaseHUD_C_Create_Heal_Prompt::K2Node_MakeStruct_Anchors' has a wrong offset!");

// Function UMG_BaseHUD.UMG_BaseHUD_C.BIND_VehicleTutorial_Opacity
// 0x0024 (0x0024 - 0x0000)
struct UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity) == 0x000004, "Wrong alignment on UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity");
static_assert(sizeof(UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity) == 0x000024, "Wrong size on UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity");
static_assert(offsetof(UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity, ReturnValue) == 0x000000, "Member 'UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity, K2Node_MakeStruct_LinearColor) == 0x000014, "Member 'UMG_BaseHUD_C_BIND_VehicleTutorial_Opacity::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function UMG_BaseHUD.UMG_BaseHUD_C.Get Capture Event Widget
// 0x0008 (0x0008 - 0x0000)
struct UMG_BaseHUD_C_Get_Capture_Event_Widget final
{
public:
	class UW_FlagCapturedEvent_C*                 Capture_Event_Widget;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_BaseHUD_C_Get_Capture_Event_Widget) == 0x000008, "Wrong alignment on UMG_BaseHUD_C_Get_Capture_Event_Widget");
static_assert(sizeof(UMG_BaseHUD_C_Get_Capture_Event_Widget) == 0x000008, "Wrong size on UMG_BaseHUD_C_Get_Capture_Event_Widget");
static_assert(offsetof(UMG_BaseHUD_C_Get_Capture_Event_Widget, Capture_Event_Widget) == 0x000000, "Member 'UMG_BaseHUD_C_Get_Capture_Event_Widget::Capture_Event_Widget' has a wrong offset!");

// Function UMG_BaseHUD.UMG_BaseHUD_C.Get Destruction Event Widget
// 0x0008 (0x0008 - 0x0000)
struct UMG_BaseHUD_C_Get_Destruction_Event_Widget final
{
public:
	class UW_DestructionObjectiveEvent_C*         Destruction_Event_Widget;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_BaseHUD_C_Get_Destruction_Event_Widget) == 0x000008, "Wrong alignment on UMG_BaseHUD_C_Get_Destruction_Event_Widget");
static_assert(sizeof(UMG_BaseHUD_C_Get_Destruction_Event_Widget) == 0x000008, "Wrong size on UMG_BaseHUD_C_Get_Destruction_Event_Widget");
static_assert(offsetof(UMG_BaseHUD_C_Get_Destruction_Event_Widget, Destruction_Event_Widget) == 0x000000, "Member 'UMG_BaseHUD_C_Get_Destruction_Event_Widget::Destruction_Event_Widget' has a wrong offset!");

// Function UMG_BaseHUD.UMG_BaseHUD_C.Get Seeding Phase Widget
// 0x0008 (0x0008 - 0x0000)
struct UMG_BaseHUD_C_Get_Seeding_Phase_Widget final
{
public:
	class UUMG_SeedingPhaseStatusText_C*          SeedingPhaseWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_BaseHUD_C_Get_Seeding_Phase_Widget) == 0x000008, "Wrong alignment on UMG_BaseHUD_C_Get_Seeding_Phase_Widget");
static_assert(sizeof(UMG_BaseHUD_C_Get_Seeding_Phase_Widget) == 0x000008, "Wrong size on UMG_BaseHUD_C_Get_Seeding_Phase_Widget");
static_assert(offsetof(UMG_BaseHUD_C_Get_Seeding_Phase_Widget, SeedingPhaseWidget) == 0x000000, "Member 'UMG_BaseHUD_C_Get_Seeding_Phase_Widget::SeedingPhaseWidget' has a wrong offset!");

}


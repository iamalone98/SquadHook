#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Medic_GiveUp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Medic_GiveUp.W_Medic_GiveUp_C
// 0x00B0 (0x0310 - 0x0260)
class UW_Medic_GiveUp_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                BottomBorder;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UChallengeWindow_C*                     ChallengeGiveUp;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                SettingsItem_TickBox;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SkipBorder;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Bleed;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_MedicDistance;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopBorder;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MainMenuButton_C*                    W_CallMedic;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MainMenuButton_C*                    W_GiveUp;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ASQPlayerController*                    My_PC;                                             // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQInputState                          Wounded_Stack;                                     // 0x02C8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class USaveData_UI_C*                         Current_Save;                                      // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Incrementing_Medic_Call_Delay;                     // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Medic_Call;                                    // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E0[0x3];                                     // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Medic_Cooldown;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Initial_Delay_Time;                                // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSinceWounded;                                  // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RefreshPaused;                                     // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37E1[0x3];                                     // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayOnWounded;                                    // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_Medic_GiveUp(int32 EntryPoint);
	void BndEvt__W_Medic_GiveUp_W_CallMedic_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(bool bSelected, class UW_MainMenuButton_C* Button);
	void BndEvt__W_Medic_GiveUp_W_MainMenuButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, class UW_MainMenuButton_C* Button);
	void StartDelayOnWounded();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Initial_Delay_for_Medic_Call();
	void Enable_Medic_Button();
	void GiveUp();
	void BndEvt__SettingsItem_TickBox_K2Node_ComponentBoundEvent_51_OnClicked__DelegateSignature(bool bSelected, class USettingsItem_TickBox_C* Button);
	void BndEvt__ChallengeSwitchTeam_K2Node_ComponentBoundEvent_0_OnRightButtonClicked__DelegateSignature();
	void BndEvt__ChallengeSwitchTeam_K2Node_ComponentBoundEvent_24_OnLeftButtonClicked__DelegateSignature();
	void Refresh();
	void Construct();
	void OnLoaded_AFF1CC584BBDF1233D1C2888084E5A4D(class UObject* Loaded);
	void Get_Teammate_Distance(class ASQSoldier** Teammate, float* Distance);
	void Get_Visibility_if_Dead(bool* Is_visible);
	void GetMedicCall(bool* ValidMedicCall, TSoftObjectPtr<class USoundCue>* MedicCall);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Medic_GiveUp_C">();
	}
	static class UW_Medic_GiveUp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Medic_GiveUp_C>();
	}
};
static_assert(alignof(UW_Medic_GiveUp_C) == 0x000008, "Wrong alignment on UW_Medic_GiveUp_C");
static_assert(sizeof(UW_Medic_GiveUp_C) == 0x000310, "Wrong size on UW_Medic_GiveUp_C");
static_assert(offsetof(UW_Medic_GiveUp_C, UberGraphFrame) == 0x000260, "Member 'UW_Medic_GiveUp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, BottomBorder) == 0x000268, "Member 'UW_Medic_GiveUp_C::BottomBorder' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, ChallengeGiveUp) == 0x000270, "Member 'UW_Medic_GiveUp_C::ChallengeGiveUp' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, Image_0) == 0x000278, "Member 'UW_Medic_GiveUp_C::Image_0' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, SettingsItem_TickBox) == 0x000280, "Member 'UW_Medic_GiveUp_C::SettingsItem_TickBox' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, SkipBorder) == 0x000288, "Member 'UW_Medic_GiveUp_C::SkipBorder' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, TB_Bleed) == 0x000290, "Member 'UW_Medic_GiveUp_C::TB_Bleed' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, TB_MedicDistance) == 0x000298, "Member 'UW_Medic_GiveUp_C::TB_MedicDistance' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, TopBorder) == 0x0002A0, "Member 'UW_Medic_GiveUp_C::TopBorder' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, W_CallMedic) == 0x0002A8, "Member 'UW_Medic_GiveUp_C::W_CallMedic' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, W_GiveUp) == 0x0002B0, "Member 'UW_Medic_GiveUp_C::W_GiveUp' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, WidgetSwitcher_0) == 0x0002B8, "Member 'UW_Medic_GiveUp_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, My_PC) == 0x0002C0, "Member 'UW_Medic_GiveUp_C::My_PC' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, Wounded_Stack) == 0x0002C8, "Member 'UW_Medic_GiveUp_C::Wounded_Stack' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, Current_Save) == 0x0002E8, "Member 'UW_Medic_GiveUp_C::Current_Save' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, Incrementing_Medic_Call_Delay) == 0x0002F0, "Member 'UW_Medic_GiveUp_C::Incrementing_Medic_Call_Delay' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, Can_Medic_Call) == 0x0002F4, "Member 'UW_Medic_GiveUp_C::Can_Medic_Call' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, Medic_Cooldown) == 0x0002F8, "Member 'UW_Medic_GiveUp_C::Medic_Cooldown' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, Initial_Delay_Time) == 0x000300, "Member 'UW_Medic_GiveUp_C::Initial_Delay_Time' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, TimeSinceWounded) == 0x000304, "Member 'UW_Medic_GiveUp_C::TimeSinceWounded' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, RefreshPaused) == 0x000308, "Member 'UW_Medic_GiveUp_C::RefreshPaused' has a wrong offset!");
static_assert(offsetof(UW_Medic_GiveUp_C, DelayOnWounded) == 0x00030C, "Member 'UW_Medic_GiveUp_C::DelayOnWounded' has a wrong offset!");

}


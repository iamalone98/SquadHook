#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GraphTicketComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GraphTicketComponent.GraphTicketComponent_C
// 0x0030 (0x00E0 - 0x00B0)
class UGraphTicketComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class USQGraphNodeComponent*>          Nodes;                                             // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         TicketLoss;                                        // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TicketGain;                                        // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InitialNeutralFlagTicketLoss;                      // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InitialNeutralFlagTicketGain;                      // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTicketLogicEnabled;                               // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GraphTicketComponent(int32 EntryPoint);
	void CaptureStateChangeEvent_Event_0(class USQCaptureZoneComponent* CaptureZone, uint8 Team);
	void OnLatticeUpdated_Event_0();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GraphTicketComponent_C">();
	}
	static class UGraphTicketComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGraphTicketComponent_C>();
	}
};
static_assert(alignof(UGraphTicketComponent_C) == 0x000008, "Wrong alignment on UGraphTicketComponent_C");
static_assert(sizeof(UGraphTicketComponent_C) == 0x0000E0, "Wrong size on UGraphTicketComponent_C");
static_assert(offsetof(UGraphTicketComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UGraphTicketComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGraphTicketComponent_C, Nodes) == 0x0000B8, "Member 'UGraphTicketComponent_C::Nodes' has a wrong offset!");
static_assert(offsetof(UGraphTicketComponent_C, TicketLoss) == 0x0000C8, "Member 'UGraphTicketComponent_C::TicketLoss' has a wrong offset!");
static_assert(offsetof(UGraphTicketComponent_C, TicketGain) == 0x0000CC, "Member 'UGraphTicketComponent_C::TicketGain' has a wrong offset!");
static_assert(offsetof(UGraphTicketComponent_C, InitialNeutralFlagTicketLoss) == 0x0000D0, "Member 'UGraphTicketComponent_C::InitialNeutralFlagTicketLoss' has a wrong offset!");
static_assert(offsetof(UGraphTicketComponent_C, InitialNeutralFlagTicketGain) == 0x0000D4, "Member 'UGraphTicketComponent_C::InitialNeutralFlagTicketGain' has a wrong offset!");
static_assert(offsetof(UGraphTicketComponent_C, bTicketLogicEnabled) == 0x0000D8, "Member 'UGraphTicketComponent_C::bTicketLogicEnabled' has a wrong offset!");

}


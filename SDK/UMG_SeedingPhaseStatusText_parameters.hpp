#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_SeedingPhaseStatusText

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UMG_SeedingPhaseStatusText.UMG_SeedingPhaseStatusText_C.ExecuteUbergraph_UMG_SeedingPhaseStatusText
// 0x0040 (0x0040 - 0x0000)
struct UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameStateSquad_Seed_C*              CallFunc_TryGetGameState_OutGameState;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetGameState_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Is_Active;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC9[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Time_Left;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCA[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerCountOnServer_ReturnValue;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_Player;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText) == 0x000008, "Wrong alignment on UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText");
static_assert(sizeof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText) == 0x000040, "Wrong size on UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, EntryPoint) == 0x000000, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, CallFunc_TryGetGameState_OutGameState) == 0x000008, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::CallFunc_TryGetGameState_OutGameState' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, CallFunc_TryGetGameState_ReturnValue) == 0x000010, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::CallFunc_TryGetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, K2Node_CustomEvent_Is_Active) == 0x000011, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::K2Node_CustomEvent_Is_Active' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, K2Node_CustomEvent_Time_Left) == 0x000014, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::K2Node_CustomEvent_Time_Left' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, CallFunc_GetPlayerCountOnServer_ReturnValue) == 0x00001C, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::CallFunc_GetPlayerCountOnServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, K2Node_CustomEvent_Player) == 0x000020, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'UMG_SeedingPhaseStatusText_C_ExecuteUbergraph_UMG_SeedingPhaseStatusText::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function UMG_SeedingPhaseStatusText.UMG_SeedingPhaseStatusText_C.PlayerJoinedOrLeft
// 0x0008 (0x0008 - 0x0000)
struct UMG_SeedingPhaseStatusText_C_PlayerJoinedOrLeft final
{
public:
	class APlayerState*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_SeedingPhaseStatusText_C_PlayerJoinedOrLeft) == 0x000008, "Wrong alignment on UMG_SeedingPhaseStatusText_C_PlayerJoinedOrLeft");
static_assert(sizeof(UMG_SeedingPhaseStatusText_C_PlayerJoinedOrLeft) == 0x000008, "Wrong size on UMG_SeedingPhaseStatusText_C_PlayerJoinedOrLeft");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_PlayerJoinedOrLeft, Player) == 0x000000, "Member 'UMG_SeedingPhaseStatusText_C_PlayerJoinedOrLeft::Player' has a wrong offset!");

// Function UMG_SeedingPhaseStatusText.UMG_SeedingPhaseStatusText_C.CountdownStateUpdated
// 0x0008 (0x0008 - 0x0000)
struct UMG_SeedingPhaseStatusText_C_CountdownStateUpdated final
{
public:
	bool                                          Is_Active;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_Left;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_SeedingPhaseStatusText_C_CountdownStateUpdated) == 0x000004, "Wrong alignment on UMG_SeedingPhaseStatusText_C_CountdownStateUpdated");
static_assert(sizeof(UMG_SeedingPhaseStatusText_C_CountdownStateUpdated) == 0x000008, "Wrong size on UMG_SeedingPhaseStatusText_C_CountdownStateUpdated");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_CountdownStateUpdated, Is_Active) == 0x000000, "Member 'UMG_SeedingPhaseStatusText_C_CountdownStateUpdated::Is_Active' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_CountdownStateUpdated, Time_Left) == 0x000004, "Member 'UMG_SeedingPhaseStatusText_C_CountdownStateUpdated::Time_Left' has a wrong offset!");

// Function UMG_SeedingPhaseStatusText.UMG_SeedingPhaseStatusText_C.UpdatePlayersCount
// 0x00B0 (0x00B0 - 0x0000)
struct UMG_SeedingPhaseStatusText_C_UpdatePlayersCount final
{
public:
	int32                                         CurrentPlayers;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPlayers;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
};
static_assert(alignof(UMG_SeedingPhaseStatusText_C_UpdatePlayersCount) == 0x000008, "Wrong alignment on UMG_SeedingPhaseStatusText_C_UpdatePlayersCount");
static_assert(sizeof(UMG_SeedingPhaseStatusText_C_UpdatePlayersCount) == 0x0000B0, "Wrong size on UMG_SeedingPhaseStatusText_C_UpdatePlayersCount");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdatePlayersCount, CurrentPlayers) == 0x000000, "Member 'UMG_SeedingPhaseStatusText_C_UpdatePlayersCount::CurrentPlayers' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdatePlayersCount, MaxPlayers) == 0x000004, "Member 'UMG_SeedingPhaseStatusText_C_UpdatePlayersCount::MaxPlayers' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdatePlayersCount, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'UMG_SeedingPhaseStatusText_C_UpdatePlayersCount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdatePlayersCount, K2Node_MakeStruct_FormatArgumentData_1) == 0x000048, "Member 'UMG_SeedingPhaseStatusText_C_UpdatePlayersCount::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdatePlayersCount, K2Node_MakeArray_Array) == 0x000088, "Member 'UMG_SeedingPhaseStatusText_C_UpdatePlayersCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdatePlayersCount, CallFunc_Format_ReturnValue) == 0x000098, "Member 'UMG_SeedingPhaseStatusText_C_UpdatePlayersCount::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UMG_SeedingPhaseStatusText.UMG_SeedingPhaseStatusText_C.UpdateCountdownTimer
// 0x0098 (0x0098 - 0x0000)
struct UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer final
{
public:
	float                                         TimeLeft;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCC[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCD[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer) == 0x000008, "Wrong alignment on UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer");
static_assert(sizeof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer) == 0x000098, "Wrong size on UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, TimeLeft) == 0x000000, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::TimeLeft' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, Temp_float_Variable) == 0x000004, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, Temp_bool_Variable) == 0x000010, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000011, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000013, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, K2Node_Select_Default) == 0x000018, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000060, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, K2Node_MakeArray_Array) == 0x000068, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_Format_ReturnValue) == 0x000078, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'UMG_SeedingPhaseStatusText_C_UpdateCountdownTimer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function UMG_SeedingPhaseStatusText.UMG_SeedingPhaseStatusText_C.BindToGameState
// 0x0050 (0x0050 - 0x0000)
struct UMG_SeedingPhaseStatusText_C_BindToGameState final
{
public:
	TDelegate<void(class APlayerState* Player)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APlayerState* Player)>   K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsActive, float TimeLeft)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UMG_SeedingPhaseStatusText_C_BindToGameState) == 0x000004, "Wrong alignment on UMG_SeedingPhaseStatusText_C_BindToGameState");
static_assert(sizeof(UMG_SeedingPhaseStatusText_C_BindToGameState) == 0x000050, "Wrong size on UMG_SeedingPhaseStatusText_C_BindToGameState");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_BindToGameState, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UMG_SeedingPhaseStatusText_C_BindToGameState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_BindToGameState, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'UMG_SeedingPhaseStatusText_C_BindToGameState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_BindToGameState, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'UMG_SeedingPhaseStatusText_C_BindToGameState::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_BindToGameState, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'UMG_SeedingPhaseStatusText_C_BindToGameState::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_BindToGameState, K2Node_CreateDelegate_OutputDelegate_4) == 0x000040, "Member 'UMG_SeedingPhaseStatusText_C_BindToGameState::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function UMG_SeedingPhaseStatusText.UMG_SeedingPhaseStatusText_C.UnbindFromGameState
// 0x0040 (0x0040 - 0x0000)
struct UMG_SeedingPhaseStatusText_C_UnbindFromGameState final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APlayerState* Player)>   K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsActive, float TimeLeft)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UMG_SeedingPhaseStatusText_C_UnbindFromGameState) == 0x000004, "Wrong alignment on UMG_SeedingPhaseStatusText_C_UnbindFromGameState");
static_assert(sizeof(UMG_SeedingPhaseStatusText_C_UnbindFromGameState) == 0x000040, "Wrong size on UMG_SeedingPhaseStatusText_C_UnbindFromGameState");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UnbindFromGameState, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UMG_SeedingPhaseStatusText_C_UnbindFromGameState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UnbindFromGameState, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'UMG_SeedingPhaseStatusText_C_UnbindFromGameState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UnbindFromGameState, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'UMG_SeedingPhaseStatusText_C_UnbindFromGameState::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UMG_SeedingPhaseStatusText_C_UnbindFromGameState, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'UMG_SeedingPhaseStatusText_C_UnbindFromGameState::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetVehicle

#include "Basic.hpp"

#include "BP_MapWidgetVehicle_classes.hpp"
#include "BP_MapWidgetVehicle_parameters.hpp"


namespace SDK
{

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.ExecuteUbergraph_BP_MapWidgetVehicle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetVehicle_C::ExecuteUbergraph_BP_MapWidgetVehicle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "ExecuteUbergraph_BP_MapWidgetVehicle");

	Params::BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnHoldsCommanderChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnHoldsCommanderChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnHoldsCommanderChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnCommanderChangedEvent_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQPlayerState*                   OldCommander                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASQPlayerState*                   NewCommander                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetVehicle_C::OnCommanderChangedEvent_Event_0(class ASQPlayerState* OldCommander, class ASQPlayerState* NewCommander)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnCommanderChangedEvent_Event_0");

	Params::BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0 Parms{};

	Parms.OldCommander = OldCommander;
	Parms.NewCommander = NewCommander;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnScaleChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   UniformScale                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetVehicle_C::OnScaleChanged(float UniformScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnScaleChanged");

	Params::BP_MapWidgetVehicle_C_OnScaleChanged Parms{};

	Parms.UniformScale = UniformScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_MapWidgetVehicle_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnSelectionStateChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnSelectionStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnSelectionStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnIsInSelfTeam
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnIsInSelfTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnIsInSelfTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnSelfInVehicleSeatChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnSelfInVehicleSeatChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnSelfInVehicleSeatChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnVehicleOccupantInfoChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   AtIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetVehicle_C::OnVehicleOccupantInfoChanged(int32 AtIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnVehicleOccupantInfoChanged");

	Params::BP_MapWidgetVehicle_C_OnVehicleOccupantInfoChanged Parms{};

	Parms.AtIndex = AtIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnHoldsSquadLeaderChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnHoldsSquadLeaderChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnHoldsSquadLeaderChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnClaimingSquadIDChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnClaimingSquadIDChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnClaimingSquadIDChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnStaticUIDataChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnStaticUIDataChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnStaticUIDataChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnCameraRotationYawChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnCameraRotationYawChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnCameraRotationYawChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnAngleChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnAngleChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnAngleChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnIsOwnedBySelfChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnIsOwnedBySelfChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnIsOwnedBySelfChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnTintValueChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetVehicle_C::OnTintValueChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "OnTintValueChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.Tooltip
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UBP_MapWidgetVehicle_C::Tooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "Tooltip");

	Params::BP_MapWidgetVehicle_C_Tooltip Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.Update Tooltip
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetVehicle_C::Update_Tooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "Update Tooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.On_TooltipHitBox_MouseButtonDown_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_MapWidgetVehicle_C::On_TooltipHitBox_MouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "On_TooltipHitBox_MouseButtonDown_0");

	Params::BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.On_TooltipHitBox_MouseButtonUp_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_MapWidgetVehicle_C::On_TooltipHitBox_MouseButtonUp_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "On_TooltipHitBox_MouseButtonUp_0");

	Params::BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.ShowHideCommanderStar
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetVehicle_C::ShowHideCommanderStar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetVehicle_C", "ShowHideCommanderStar");

	UObject::ProcessEvent(Func, nullptr);
}

}


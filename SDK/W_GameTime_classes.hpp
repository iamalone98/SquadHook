#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_GameTime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_GameTime.W_GameTime_C
// 0x0028 (0x0288 - 0x0260)
class UW_GameTime_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 IconTimer;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Time;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ASQTeamPrep*                            Team_Prep;                                         // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    My_PC;                                             // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_GameTime(int32 EntryPoint);
	void Get_Player_State();
	void OnTeamStateChangedEvent_Event_0(class ASQTeamState* OldTeam, class ASQTeamState* NewTeam);
	void Construct();
	void Set_Staging_Text_Prefix();
	void Get_Prep_Zone();
	void GetSeedingTextPrefix(class ABP_GameStateSquad_Seed_C* GameState, class FText* Stage, class FText* RemainingTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_GameTime_C">();
	}
	static class UW_GameTime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_GameTime_C>();
	}
};
static_assert(alignof(UW_GameTime_C) == 0x000008, "Wrong alignment on UW_GameTime_C");
static_assert(sizeof(UW_GameTime_C) == 0x000288, "Wrong size on UW_GameTime_C");
static_assert(offsetof(UW_GameTime_C, UberGraphFrame) == 0x000260, "Member 'UW_GameTime_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_GameTime_C, IconTimer) == 0x000268, "Member 'UW_GameTime_C::IconTimer' has a wrong offset!");
static_assert(offsetof(UW_GameTime_C, TB_Time) == 0x000270, "Member 'UW_GameTime_C::TB_Time' has a wrong offset!");
static_assert(offsetof(UW_GameTime_C, Team_Prep) == 0x000278, "Member 'UW_GameTime_C::Team_Prep' has a wrong offset!");
static_assert(offsetof(UW_GameTime_C, My_PC) == 0x000280, "Member 'UW_GameTime_C::My_PC' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SortableColumnButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "E_SortType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SortableColumnButton.SortableColumnButton_C
// 0x0138 (0x0398 - 0x0260)
class USortableColumnButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button;                                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Main;                                // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IconScaleBox;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SortingArrow;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Main;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonText;                                        // 0x0298(0x0018)(Edit, BlueprintVisible)
	struct FLinearColor                           RegularColor;                                      // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLinearColor                           SelectedColor;                                     // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredColor;                                      // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedHoveredColor;                              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSelected;                                         // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsToggle;                                         // 0x0302(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bScaleGlowByResolution;                            // 0x0303(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5C[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 TextSampleClass;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHover;                                           // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bShowShadow;                                       // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bConstructed;                                      // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ESQSortStates                                 SortState;                                         // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5D[0x1];                                     // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Text_Size;                                         // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Sort_Arrow;                                    // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5E[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Text_Padding_Amount;                               // 0x032C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Use_Icon;                                          // 0x033C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5F[0x3];                                     // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Icon_Color;                                        // 0x0340(0x0028)(Edit, BlueprintVisible)
	float                                         Icon_Size;                                         // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B60[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon_Image;                                        // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Fill_Style;                                        // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B61[0x3];                                     // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Button_Padding;                                    // 0x037C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ArrowSize;                                         // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSortStates                                 First_Click_Unsorted;                              // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SortType                                    Sort_Type;                                         // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnClicked__DelegateSignature(bool bIsAscending, E_SortType Param_Sort_Type);
	void OnHover__DelegateSignature(bool Param_bHovered);
	void ExecuteUbergraph_SortableColumnButton(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Button_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void Set_Selected(bool Param_bSelected);
	void Update_Widget();
	void Set_Text(const class FText& Text);
	ESlateVisibility Set_Arrow();
	void Set_Sort_State(ESQSortStates Param_SortState, bool Param_bSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SortableColumnButton_C">();
	}
	static class USortableColumnButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USortableColumnButton_C>();
	}
};
static_assert(alignof(USortableColumnButton_C) == 0x000008, "Wrong alignment on USortableColumnButton_C");
static_assert(sizeof(USortableColumnButton_C) == 0x000398, "Wrong size on USortableColumnButton_C");
static_assert(offsetof(USortableColumnButton_C, UberGraphFrame) == 0x000260, "Member 'USortableColumnButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Button) == 0x000268, "Member 'USortableColumnButton_C::Button' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, HorizontalBox_Main) == 0x000270, "Member 'USortableColumnButton_C::HorizontalBox_Main' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Icon) == 0x000278, "Member 'USortableColumnButton_C::Icon' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, IconScaleBox) == 0x000280, "Member 'USortableColumnButton_C::IconScaleBox' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, SortingArrow) == 0x000288, "Member 'USortableColumnButton_C::SortingArrow' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, TB_Main) == 0x000290, "Member 'USortableColumnButton_C::TB_Main' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, ButtonText) == 0x000298, "Member 'USortableColumnButton_C::ButtonText' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, RegularColor) == 0x0002B0, "Member 'USortableColumnButton_C::RegularColor' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, OnClicked) == 0x0002C0, "Member 'USortableColumnButton_C::OnClicked' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, SelectedColor) == 0x0002D0, "Member 'USortableColumnButton_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, HoveredColor) == 0x0002E0, "Member 'USortableColumnButton_C::HoveredColor' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, SelectedHoveredColor) == 0x0002F0, "Member 'USortableColumnButton_C::SelectedHoveredColor' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, bHovered) == 0x000300, "Member 'USortableColumnButton_C::bHovered' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, bSelected) == 0x000301, "Member 'USortableColumnButton_C::bSelected' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, bIsToggle) == 0x000302, "Member 'USortableColumnButton_C::bIsToggle' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, bScaleGlowByResolution) == 0x000303, "Member 'USortableColumnButton_C::bScaleGlowByResolution' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, TextSampleClass) == 0x000308, "Member 'USortableColumnButton_C::TextSampleClass' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, OnHover) == 0x000310, "Member 'USortableColumnButton_C::OnHover' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, bShowShadow) == 0x000320, "Member 'USortableColumnButton_C::bShowShadow' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, bConstructed) == 0x000321, "Member 'USortableColumnButton_C::bConstructed' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, SortState) == 0x000322, "Member 'USortableColumnButton_C::SortState' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Text_Size) == 0x000324, "Member 'USortableColumnButton_C::Text_Size' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Use_Sort_Arrow) == 0x000328, "Member 'USortableColumnButton_C::Use_Sort_Arrow' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Text_Padding_Amount) == 0x00032C, "Member 'USortableColumnButton_C::Text_Padding_Amount' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Use_Icon) == 0x00033C, "Member 'USortableColumnButton_C::Use_Icon' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Icon_Color) == 0x000340, "Member 'USortableColumnButton_C::Icon_Color' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Icon_Size) == 0x000368, "Member 'USortableColumnButton_C::Icon_Size' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Icon_Image) == 0x000370, "Member 'USortableColumnButton_C::Icon_Image' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Fill_Style) == 0x000378, "Member 'USortableColumnButton_C::Fill_Style' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Button_Padding) == 0x00037C, "Member 'USortableColumnButton_C::Button_Padding' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, ArrowSize) == 0x00038C, "Member 'USortableColumnButton_C::ArrowSize' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, First_Click_Unsorted) == 0x000390, "Member 'USortableColumnButton_C::First_Click_Unsorted' has a wrong offset!");
static_assert(offsetof(USortableColumnButton_C, Sort_Type) == 0x000391, "Member 'USortableColumnButton_C::Sort_Type' has a wrong offset!");

}


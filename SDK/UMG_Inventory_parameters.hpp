#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_Inventory

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UMG_Inventory.UMG_Inventory_C.ExecuteUbergraph_UMG_Inventory
// 0x00F0 (0x00F0 - 0x0000)
struct UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3970[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3971[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3972[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	class UUMG_InventoryGroup_C*                  K2Node_DynamicCast_AsUMG_Inventory_Group;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3973[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3974[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3975[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQInventoryGroupWidget*                K2Node_DynamicCast_AsSQInventory_Group_Widget;     // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3976[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory) == 0x000008, "Wrong alignment on UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory");
static_assert(sizeof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory) == 0x0000F0, "Wrong size on UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, EntryPoint) == 0x000000, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, Temp_int_Variable) == 0x000004, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_GetChildrenCount_ReturnValue) == 0x000010, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, Temp_int_Variable_1) == 0x000014, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001C, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001D, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_GetChildAt_ReturnValue) == 0x000028, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, K2Node_DynamicCast_AsUMG_Inventory_Group) == 0x000048, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::K2Node_DynamicCast_AsUMG_Inventory_Group' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, K2Node_MakeArray_Array) == 0x000098, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_GetChildAt_ReturnValue_1) == 0x0000C8, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_GetChildrenCount_ReturnValue_1) == 0x0000D0, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, K2Node_DynamicCast_AsSQInventory_Group_Widget) == 0x0000D8, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::K2Node_DynamicCast_AsSQInventory_Group_Widget' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E4, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_Array_Add_ReturnValue) == 0x0000E8, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000EC, "Member 'UMG_Inventory_C_ExecuteUbergraph_UMG_Inventory::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function UMG_Inventory.UMG_Inventory_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_Inventory_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_Inventory_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_Inventory_C_PreConstruct");
static_assert(sizeof(UMG_Inventory_C_PreConstruct) == 0x000001, "Wrong size on UMG_Inventory_C_PreConstruct");
static_assert(offsetof(UMG_Inventory_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_Inventory_C_PreConstruct::IsDesignTime' has a wrong offset!");

}


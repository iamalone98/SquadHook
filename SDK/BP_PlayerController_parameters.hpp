#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController

#include "Basic.hpp"

#include "Squad_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "SQUnavailabilityReason_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerController.BP_PlayerController_C.Opened Chat__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_C_Opened_Chat__DelegateSignature final
{
public:
	ESQChat                                       Channel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Opened_Chat__DelegateSignature) == 0x000001, "Wrong alignment on BP_PlayerController_C_Opened_Chat__DelegateSignature");
static_assert(sizeof(BP_PlayerController_C_Opened_Chat__DelegateSignature) == 0x000001, "Wrong size on BP_PlayerController_C_Opened_Chat__DelegateSignature");
static_assert(offsetof(BP_PlayerController_C_Opened_Chat__DelegateSignature, Channel) == 0x000000, "Member 'BP_PlayerController_C_Opened_Chat__DelegateSignature::Channel' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Marker Created__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerController_C_Marker_Created__DelegateSignature final
{
public:
	int32                                         Squad_ID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQMapMarker*                           Marker;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Marker_Created__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerController_C_Marker_Created__DelegateSignature");
static_assert(sizeof(BP_PlayerController_C_Marker_Created__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerController_C_Marker_Created__DelegateSignature");
static_assert(offsetof(BP_PlayerController_C_Marker_Created__DelegateSignature, Squad_ID) == 0x000000, "Member 'BP_PlayerController_C_Marker_Created__DelegateSignature::Squad_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Marker_Created__DelegateSignature, Marker) == 0x000008, "Member 'BP_PlayerController_C_Marker_Created__DelegateSignature::Marker' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.ExecuteUbergraph_BP_PlayerController
// 0x0EB0 (0x0EB0 - 0x0000)
struct BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39DD[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0028(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0040(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0058(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_GetOutOfMapBoundsKillTimestamp_ReturnValue; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCameraMan_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39DE[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39DF[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E0[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQPawnInventoryComponent*              CallFunc_GetInventory_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E1[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E2[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_WinningTeam;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_LosingTeam;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_WinnerTickets;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_LoserTickets;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E3[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_2;                    // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E4[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_2;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_3;                    // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E5[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Deployment;                // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Command;                   // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Roaming;                   // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E6[0x5];                                     // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_MarkerClass;                    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_FireteamID;                     // 0x015C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Emote;                          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E7[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RebaseZeroOriginOntoLocal_ReturnValue;    // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x01B0(0x0018)(HasGetValueTypeHash)
	class ASQMapMarker*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCameraMan_ReturnValue_1;                // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E8[0x6];                                     // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_3;                     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_4;                     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_4;                    // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E9[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_5;                    // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EA[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0218(0x0018)(HasGetValueTypeHash)
	class USQMapItemComponent*                    K2Node_CustomEvent_MarkerItem;                     // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EB[0x6];                                     // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EC[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQMapMarker*                           K2Node_DynamicCast_AsSQMap_Marker;                 // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39ED[0x2];                                     // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQSquadState* NewSquad, class ASQSquadState* OldSquad, class ASQPlayerState* Player)> K2Node_CreateDelegate_OutputDelegate;              // 0x025C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x026F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_4;           // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EE[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class ASQMapMarker>               K2Node_Event_MarkerClass_1;                        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Start_1;                              // 0x0288(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_End_1;                                // 0x0294(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39EF[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQMapWidgetMapMarkerSelectable*        K2Node_CustomEvent_Marker_Ref;                     // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F0[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x02B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_39F1[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x02C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisKeyEvent_AxisValue;                // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Text;                           // 0x02D8(0x0018)()
	ESQNotificationTypes                          K2Node_CustomEvent_Type;                           // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F2[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_Custom_Icon;                    // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F3[0x6];                                     // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Action_1;                       // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_T_1;                            // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Distance_1;                     // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F4[0x4];                                     // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Action;                         // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_T;                              // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Distance;                       // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Squad;                          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_5;                     // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_6;                    // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F5[0x7];                                     // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_6;                     // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_7;                    // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F6[0x3];                                     // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Start;                                // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_End;                                  // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F7[0x4];                                     // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQMapMarkerDataAsset*                  K2Node_Event_Marker_1;                             // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Hotkey;                               // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Emote_2;                              // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F8[0x6];                                     // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_MarkerClass;                          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceMarkerLocation_ValidPosition;        // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceMarkerLocation_StillInCooldown;      // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39F9[0x6];                                     // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQMapWidgetMapMarkerSelectable*        K2Node_Event_Marker_Ref;                           // 0x0400(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x040B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FA[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_7;                     // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0418(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_8;                    // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FB[0x7];                                     // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0448(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x0460(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x0478(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FC[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_8;                     // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_9;                    // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FD[0x7];                                     // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x04B8(0x0018)(HasGetValueTypeHash)
	class USQScoreboard*                          CallFunc_Get_Scoreboard_Scoreboard;                // 0x04D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FE[0x6];                                     // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_9;                     // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39FF[0x7];                                     // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_10;                   // 0x04F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAllowAdminCam;                       // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQEmotes                                     K2Node_Event_Emote_1;                              // 0x0503(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Name;                                 // 0x0504(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_KillTimestamp_1;                      // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsOutOfBounds;                       // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A00[0x3];                                     // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A01[0x3];                                     // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A02[0x7];                                     // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAdminCamera_ReturnValue;                // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A03[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A04[0x6];                                     // 0x054A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHelicopter2*                         K2Node_DynamicCast_AsSQHelicopter_2;               // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A05[0x7];                                     // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Helicopter_C>     K2Node_DynamicCast_AsBPI_Helicopter;               // 0x0560(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A06[0x3];                                     // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0574(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera; // 0x0584(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A07[0x3];                                     // 0x0585(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Helicopter_C>     K2Node_DynamicCast_AsBPI_Helicopter_1;             // 0x0588(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A08[0x6];                                     // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USQVehicleSeatComponent*>        CallFunc_GetSeats_ReturnValue;                     // 0x05A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item;                           // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A09[0x7];                                     // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetCurrentSeat_ReturnValue;               // 0x05C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0A[0x7];                                     // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetCurrentSeat_ReturnValue_1;             // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0B[0x3];                                     // 0x05D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Squad_ID_1;                           // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       K2Node_Event_Team_ID;                              // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0C[0x3];                                     // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Fire_Team_ID_1;                       // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_Event_Location_2;                           // 0x05E8(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_Event_DistanceRotation;                     // 0x05F4(0x000C)(NoDestructor, HasGetValueTypeHash)
	class USQMapMarkerDataAsset*                  K2Node_Event_Map_Marker_Data;                      // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0D[0x7];                                     // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQMapMarkerGameplayData               K2Node_MakeStruct_SQMapMarkerGameplayData;         // 0x0610(0x0038)(NoDestructor)
	bool                                          CallFunc_MapMarkersEnabledDefined_ReturnValue;     // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0E[0x7];                                     // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_Marker_Class;                         // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location_1;                           // 0x0658(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Fire_Team_ID;                         // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Emote;                                // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A0F[0x7];                                     // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_Director_Marker;                      // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x0678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_Rotation;                             // 0x0684(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Event_Scale;                                // 0x0690(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Distance_1;                           // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Squad_ID;                             // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A10[0x4];                                     // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_Command_Marker;                       // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_Event_Transform;                            // 0x06B0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Distance;                             // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A11[0xC];                                     // 0x06E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x06F0(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_MapMarker_Command_Request_C*        K2Node_Event_Marker;                               // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Accepted;                             // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A12[0x7];                                     // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapMarker_Command_Request_C*        K2Node_CustomEvent_Marker;                         // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Accepted;                       // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A13[0x3];                                     // 0x0739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_MapMarkerID;                          // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOpenRadialMenu_CanOpenRadialMenu;      // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A14[0x6];                                     // 0x0742(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x0748(0x0018)(HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_10;                    // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0768(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_11;                   // 0x0780(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A15[0x7];                                     // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x0798(0x0018)(HasGetValueTypeHash)
	class ASQDeployableItem*                      K2Node_Event_DeployableItem;                       // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQEquipableItem*                       K2Node_Event_Equippable_1;                         // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQEquipableItem*                       K2Node_Event_Equippable;                           // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIDeployableEvents_C>  K2Node_DynamicCast_AsIDeployable_Events;           // 0x07C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A16[0x7];                                     // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIDeployableEvents_C>  K2Node_DynamicCast_AsIDeployable_Events_1;         // 0x07E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A17[0x7];                                     // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x07F8(0x0018)(HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_Event_InReason;                             // 0x0810(0x0010)(ConstParm, NoDestructor)
	TSoftObjectPtr<class USoundBase>              K2Node_CustomEvent_In_Music;                       // 0x0820(0x0028)(HasGetValueTypeHash)
	struct FSQUnavailabilityReason                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0848(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A18[0x7];                                     // 0x08A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x08B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x08BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A19[0x5];                                     // 0x08BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x08C0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x08D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1A[0x2];                                     // 0x08DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_FireteamNumber;                 // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsFTL;                          // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1B[0x7];                                     // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_CustomEvent_Target_1;                       // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x08F0(0x0018)()
	class FString                                 CallFunc_GetFullPlayerName_ReturnValue;            // 0x0908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0918(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0958(0x0018)()
	bool                                          K2Node_CustomEvent_Commander;                      // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1C[0x7];                                     // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0978(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x09B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x09C8(0x0018)()
	class ASQPlayerState*                         K2Node_CustomEvent_Target;                         // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x09E8(0x0018)()
	class FString                                 CallFunc_GetFullPlayerName_ReturnValue_1;          // 0x0A00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0A10(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0A50(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0A68(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0AA8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0AB8(0x0018)()
	bool                                          CallFunc_MapMarkersEnabledDefined_ReturnValue_1;   // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1D[0x7];                                     // 0x0AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State_1;             // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1E[0x7];                                     // 0x0AE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x0AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1F[0x7];                                     // 0x0AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0B00(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_13;                    // 0x0B18(0x0018)(HasGetValueTypeHash)
	class ASQPlayerState*                         CallFunc_GetSquadPlayerState_ReturnValue;          // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_PlayerName;                     // 0x0B38(0x0018)()
	int32                                         K2Node_CustomEvent_FireTeamIndex;                  // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0B54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A20[0x3];                                     // 0x0B55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0B58(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0B98(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0BA8(0x0018)()
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue_1;           // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A21[0x7];                                     // 0x0BC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x0BD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0BE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A22[0x4];                                     // 0x0BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0BE8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A23[0x7];                                     // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_2;                            // 0x0BF8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_14;                    // 0x0C10(0x0018)(HasGetValueTypeHash)
	class ASQPlayerState*                         CallFunc_GetSquadPlayerState_ReturnValue_1;        // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0C31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A24[0x6];                                     // 0x0C32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSquadState*                          K2Node_CustomEvent_NewSquad;                       // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSquadState*                          K2Node_CustomEvent_OldSquad;                       // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_CustomEvent_Player;                         // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A25[0x7];                                     // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQMapMarkerDataAsset*                  CallFunc_Map_Find_Value;                           // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A26[0x7];                                     // 0x0C61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQMapMarkerDataAsset*                  CallFunc_Map_Find_Value_1;                         // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A27[0x6];                                     // 0x0C72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQMapMarkerDataAsset*                  K2Node_Select_Default_1;                           // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceMarkerLocation_ValidPosition_1;      // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceMarkerLocation_StillInCooldown_1;    // 0x0C81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A28[0x2];                                     // 0x0C82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_KillTimestamp;                        // 0x0C84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDeathIsPending;                      // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0C89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0C8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0C8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAdminCamera_ReturnValue_1;              // 0x0C8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0C8D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0C8E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A29[0x1];                                     // 0x0C8F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_11;                    // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewState;                       // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2A[0x7];                                     // 0x0C99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0CA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2B[0x6];                                     // 0x0CAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD;                 // 0x0CB0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0CB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2C[0x7];                                     // 0x0CB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_12;                    // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD_1;                      // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2D[0x7];                                     // 0x0CD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD_1;               // 0x0CD8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2E[0x7];                                     // 0x0CE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Item_Object;                    // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Items_C>          K2Node_DynamicCast_AsBPI_Items;                    // 0x0CF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0D01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2F[0x6];                                     // 0x0D02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_15;                    // 0x0D08(0x0018)(HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_2;   // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_13;                    // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_12;                   // 0x0D40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanOpenRadialMenu_CanOpenRadialMenu_1;    // 0x0D51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A30[0x6];                                     // 0x0D52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_14;                    // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_16;                    // 0x0D60(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_13;                   // 0x0D78(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x0D88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A31[0x7];                                     // 0x0D89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_17;                    // 0x0D90(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsAimingDownSights_ReturnValue;           // 0x0DA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A32[0x7];                                     // 0x0DA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue_1;                 // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A33[0x7];                                     // 0x0DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0DC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingUsed_ReturnValue;                  // 0x0DC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A34[0x6];                                     // 0x0DCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue_2;                 // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0DD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A35[0x7];                                     // 0x0DD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       CallFunc_GetCurrentWeapon_ReturnValue_1;           // 0x0DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingUsed_ReturnValue_1;                // 0x0DE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0DEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAimingDownSights_ReturnValue_1;         // 0x0DEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0DEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A36[0x3];                                     // 0x0DED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_18;                    // 0x0DF0(0x0018)(HasGetValueTypeHash)
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue_3;                 // 0x0E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQEmotePlayer*                         CallFunc_GetComponentByClass_ReturnValue;          // 0x0E10(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmotePlaying_ReturnValue;               // 0x0E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A37[0x7];                                     // 0x0E19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_3;   // 0x0E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USQEmotesData>           CallFunc_GetEmoteAtIndex_ReturnValue;              // 0x0E28(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A38[0x7];                                     // 0x0E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQEmotesData*                          K2Node_DynamicCast_AsSQEmotes_Data;                // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A39[0x3];                                     // 0x0E69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0E6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x0E70(0x0010)(ZeroConstructor, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_15;                    // 0x0E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD;                       // 0x0E88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x0E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3A[0x7];                                     // 0x0E91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD_2;               // 0x0E98(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x0EA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0EA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController) == 0x000010, "Wrong alignment on BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController");
static_assert(sizeof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController) == 0x000EB0, "Wrong size on BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, EntryPoint) == 0x000000, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_4) == 0x000008, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_1) == 0x000028, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key) == 0x000040, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_struct_Variable) == 0x000058, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetOutOfMapBoundsKillTimestamp_ReturnValue) == 0x000070, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetOutOfMapBoundsKillTimestamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000074, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsCameraMan_ReturnValue) == 0x000075, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsCameraMan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsSQPlayer_State) == 0x000078, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue) == 0x000088, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSoldier_ReturnValue) == 0x000090, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD) == 0x000098, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_1) == 0x0000A9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetInventory_ReturnValue) == 0x0000B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_2) == 0x0000B8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_3) == 0x0000B9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_1) == 0x0000C0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_WinningTeam) == 0x0000D4, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_WinningTeam' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_LosingTeam) == 0x0000D8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_LosingTeam' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_WinnerTickets) == 0x0000DC, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_WinnerTickets' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_LoserTickets) == 0x0000E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_LoserTickets' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_1) == 0x0000E8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_2) == 0x0000F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_3) == 0x000100, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_2) == 0x000108, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_3) == 0x000110, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_4) == 0x000120, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Get_Main_Menus_Deployment) == 0x000128, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Get_Main_Menus_Deployment' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Get_Main_Menus_Command) == 0x000130, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Get_Main_Menus_Command' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Get_Main_Menus_Roaming) == 0x000138, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Get_Main_Menus_Roaming' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_4) == 0x000140, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsVisible_ReturnValue) == 0x000141, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_5) == 0x000142, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_MarkerClass) == 0x000148, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_MarkerClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Location) == 0x000150, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_FireteamID) == 0x00015C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_FireteamID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Emote) == 0x000160, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Emote' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_RebaseZeroOriginOntoLocal_ReturnValue) == 0x000164, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_RebaseZeroOriginOntoLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_K2_GetPawn_ReturnValue) == 0x0001A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_2) == 0x0001B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001C8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_6) == 0x0001D0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsCameraMan_ReturnValue_1) == 0x0001D1, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsCameraMan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_3) == 0x0001D8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_4) == 0x0001E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_4) == 0x0001E8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_5) == 0x0001F8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_5) == 0x000200, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_6) == 0x000210, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_3) == 0x000218, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_MarkerItem) == 0x000230, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_MarkerItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_7) == 0x000238, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_SwitchEnum_CmpSuccess) == 0x000239, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetOwner_ReturnValue) == 0x000240, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_bool_Variable) == 0x000248, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsSQMap_Marker) == 0x000250, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsSQMap_Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_7) == 0x000258, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_8) == 0x000259, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CreateDelegate_OutputDelegate) == 0x00025C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Array_RemoveItem_ReturnValue) == 0x00026C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00026D, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x00026E, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x00026F, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Array_RemoveItem_ReturnValue_4) == 0x000270, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Array_RemoveItem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000278, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_MarkerClass_1) == 0x000280, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_MarkerClass_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Start_1) == 0x000288, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Start_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_End_1) == 0x000294, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_End_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue) == 0x0002A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Marker_Ref) == 0x0002A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Marker_Ref' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_9) == 0x0002B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002B4, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0002C8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputAxisKeyEvent_AxisValue) == 0x0002D0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputAxisKeyEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetTeam_ReturnValue) == 0x0002D4, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Text) == 0x0002D8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Type) == 0x0002F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Custom_Icon) == 0x0002F8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Custom_Icon' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Conv_IntToByte_ReturnValue) == 0x000300, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetValidValue_ReturnValue) == 0x000301, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Action_1) == 0x000308, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Action_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_T_1) == 0x000310, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_T_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Distance_1) == 0x000340, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Action) == 0x000348, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_T) == 0x000350, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_T' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Distance) == 0x000380, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Squad) == 0x000384, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Squad' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_5) == 0x000388, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_6) == 0x000390, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_8) == 0x0003A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_6) == 0x0003A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_7) == 0x0003B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_9) == 0x0003C0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Start) == 0x0003C4, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Start' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_End) == 0x0003D0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_End' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Marker_1) == 0x0003E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Marker_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Hotkey) == 0x0003E8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Hotkey' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Emote_2) == 0x0003E9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Emote_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_MarkerClass) == 0x0003F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_MarkerClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_TraceMarkerLocation_ValidPosition) == 0x0003F8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_TraceMarkerLocation_ValidPosition' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_TraceMarkerLocation_StillInCooldown) == 0x0003F9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_TraceMarkerLocation_StillInCooldown' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Marker_Ref) == 0x000400, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Marker_Ref' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_1) == 0x000408, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_10) == 0x000409, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BooleanAND_ReturnValue) == 0x00040A, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BooleanAND_ReturnValue_1) == 0x00040B, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_7) == 0x000410, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_5) == 0x000418, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_8) == 0x000430, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_10) == 0x000440, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_6) == 0x000448, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_7) == 0x000460, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_8) == 0x000478, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_11) == 0x000490, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_8) == 0x000498, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_9) == 0x0004A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_11) == 0x0004B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_9) == 0x0004B8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Get_Scoreboard_Scoreboard) == 0x0004D0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Get_Scoreboard_Scoreboard' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_12) == 0x0004D8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_13) == 0x0004D9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_9) == 0x0004E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_14) == 0x0004E8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_10) == 0x0004F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_12) == 0x000500, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_bAllowAdminCam) == 0x000501, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_bAllowAdminCam' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BooleanAND_ReturnValue_2) == 0x000502, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Emote_1) == 0x000503, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Emote_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Name) == 0x000504, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_KillTimestamp_1) == 0x00050C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_KillTimestamp_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_bIsOutOfBounds) == 0x000510, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_bIsOutOfBounds' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetTimeSeconds_ReturnValue) == 0x000514, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_bool_Variable_1) == 0x000518, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00051C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Less_FloatFloat_ReturnValue) == 0x000520, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Conv_FloatToString_ReturnValue) == 0x000528, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsAdminCamera_ReturnValue) == 0x000538, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsAdminCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000540, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_2) == 0x000548, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_15) == 0x000549, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsSQHelicopter_2) == 0x000550, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsSQHelicopter_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_13) == 0x000558, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_Helicopter) == 0x000560, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_Helicopter' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_14) == 0x000570, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CreateDelegate_OutputDelegate_2) == 0x000574, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera) == 0x000584, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Is_Using_Landing_Camera_Using_Landing_Camera' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_Helicopter_1) == 0x000588, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_Helicopter_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_15) == 0x000598, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_3) == 0x000599, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSeats_ReturnValue) == 0x0005A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSeats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Array_Get_Item) == 0x0005B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0005B8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetCurrentSeat_ReturnValue) == 0x0005C0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetCurrentSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0005C8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetCurrentSeat_ReturnValue_1) == 0x0005D0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetCurrentSeat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_16) == 0x0005D8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Squad_ID_1) == 0x0005DC, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Squad_ID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Team_ID) == 0x0005E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Team_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Fire_Team_ID_1) == 0x0005E4, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Fire_Team_ID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Location_2) == 0x0005E8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Location_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_DistanceRotation) == 0x0005F4, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_DistanceRotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Map_Marker_Data) == 0x000600, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Map_Marker_Data' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_17) == 0x000608, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeStruct_SQMapMarkerGameplayData) == 0x000610, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeStruct_SQMapMarkerGameplayData' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_MapMarkersEnabledDefined_ReturnValue) == 0x000648, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_MapMarkersEnabledDefined_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Marker_Class) == 0x000650, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Marker_Class' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Location_1) == 0x000658, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Fire_Team_ID) == 0x000664, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Fire_Team_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Emote) == 0x000668, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Emote' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Director_Marker) == 0x000670, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Director_Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Location) == 0x000678, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Rotation) == 0x000684, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Scale) == 0x000690, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Scale' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Distance_1) == 0x00069C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Squad_ID) == 0x0006A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Squad_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Command_Marker) == 0x0006A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Command_Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Transform) == 0x0006B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Transform' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Distance) == 0x0006E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_MakeTransform_ReturnValue_1) == 0x0006F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Marker) == 0x000720, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Accepted) == 0x000728, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Accepted' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Marker) == 0x000730, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Accepted) == 0x000738, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Accepted' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00073C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_MapMarkerID) == 0x000740, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_MapMarkerID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_CanOpenRadialMenu_CanOpenRadialMenu) == 0x000741, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_CanOpenRadialMenu_CanOpenRadialMenu' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_10) == 0x000748, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_10) == 0x000760, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_struct_Variable_1) == 0x000768, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_11) == 0x000780, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_16) == 0x000790, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_11) == 0x000798, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_DeployableItem) == 0x0007B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_DeployableItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Equippable_1) == 0x0007B8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Equippable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_Equippable) == 0x0007C0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_Equippable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsIDeployable_Events) == 0x0007C8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsIDeployable_Events' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_17) == 0x0007D8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsIDeployable_Events_1) == 0x0007E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsIDeployable_Events_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_18) == 0x0007F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_12) == 0x0007F8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_InReason) == 0x000810, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_InReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_In_Music) == 0x000820, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_In_Music' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetDataTableRowFromName_OutRow) == 0x000848, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0008A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0008A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsSound_Base) == 0x0008B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_19) == 0x0008B8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_18) == 0x0008B9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0008BA, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Conv_NameToText_ReturnValue) == 0x0008C0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_19) == 0x0008D8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_bool_Has_Been_Initd_Variable) == 0x0008D9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_FireteamNumber) == 0x0008DC, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_FireteamNumber' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_IsFTL) == 0x0008E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_IsFTL' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Target_1) == 0x0008E8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_MakeLiteralText_ReturnValue) == 0x0008F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFullPlayerName_ReturnValue) == 0x000908, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFullPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeStruct_FormatArgumentData) == 0x000918, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Conv_StringToText_ReturnValue) == 0x000958, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Commander) == 0x000970, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Commander' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeStruct_FormatArgumentData_1) == 0x000978, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeArray_Array) == 0x0009B8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Format_ReturnValue) == 0x0009C8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Target) == 0x0009E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0009E8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFullPlayerName_ReturnValue_1) == 0x000A00, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFullPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeStruct_FormatArgumentData_2) == 0x000A10, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000A50, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeStruct_FormatArgumentData_3) == 0x000A68, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeArray_Array_1) == 0x000AA8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Format_ReturnValue_1) == 0x000AB8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_MapMarkersEnabledDefined_ReturnValue_1) == 0x000AD0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_MapMarkersEnabledDefined_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_object_Variable) == 0x000AD8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsSQPlayer_State_1) == 0x000AE0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsSQPlayer_State_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_20) == 0x000AE8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Loaded) == 0x000AF0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsFireTeamLeader_ReturnValue) == 0x000AF8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key) == 0x000B00, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_13) == 0x000B18, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSquadPlayerState_ReturnValue) == 0x000B30, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSquadPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_PlayerName) == 0x000B38, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_FireTeamIndex) == 0x000B50, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_FireTeamIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_20) == 0x000B54, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeStruct_FormatArgumentData_4) == 0x000B58, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeArray_Array_2) == 0x000B98, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Format_ReturnValue_2) == 0x000BA8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsFireTeamLeader_ReturnValue_1) == 0x000BC0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsFireTeamLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x000BC8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetColor_ReturnValue) == 0x000BD0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Select_Default) == 0x000BE0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000BE8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_NotEqual_TextText_ReturnValue) == 0x000BF0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_struct_Variable_2) == 0x000BF8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_14) == 0x000C10, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSquadPlayerState_ReturnValue_1) == 0x000C28, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSquadPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_bool_IsClosed_Variable) == 0x000C30, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_21) == 0x000C31, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_NewSquad) == 0x000C38, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_NewSquad' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_OldSquad) == 0x000C40, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_OldSquad' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Player) == 0x000C48, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000C50, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Map_Find_Value) == 0x000C58, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Map_Find_ReturnValue) == 0x000C60, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Map_Find_Value_1) == 0x000C68, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Map_Find_ReturnValue_1) == 0x000C70, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_22) == 0x000C71, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Select_Default_1) == 0x000C78, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_TraceMarkerLocation_ValidPosition_1) == 0x000C80, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_TraceMarkerLocation_ValidPosition_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_TraceMarkerLocation_StillInCooldown_1) == 0x000C81, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_TraceMarkerLocation_StillInCooldown_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_KillTimestamp) == 0x000C84, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_KillTimestamp' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_bDeathIsPending) == 0x000C88, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_bDeathIsPending' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_4) == 0x000C89, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BooleanAND_ReturnValue_3) == 0x000C8A, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BooleanAND_ReturnValue_4) == 0x000C8B, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsAdminCamera_ReturnValue_1) == 0x000C8C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsAdminCamera_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_5) == 0x000C8D, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_23) == 0x000C8E, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_11) == 0x000C90, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_NewState) == 0x000C98, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsSQHUD) == 0x000CA0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_21) == 0x000CA8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000CA9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsUMG_Base_HUD) == 0x000CB0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsUMG_Base_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_22) == 0x000CB8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_12) == 0x000CC0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsSQHUD_1) == 0x000CC8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsSQHUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_23) == 0x000CD0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsUMG_Base_HUD_1) == 0x000CD8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsUMG_Base_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_24) == 0x000CE0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Item_Object) == 0x000CE8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Item_Object' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_Items) == 0x000CF0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_Items' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_25) == 0x000D00, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_DoesImplementInterface_ReturnValue) == 0x000D01, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_15) == 0x000D08, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000D20, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000D28, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSquadGameUserSettings_ReturnValue_2) == 0x000D30, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSquadGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_13) == 0x000D38, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_12) == 0x000D40, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_26) == 0x000D50, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_CanOpenRadialMenu_CanOpenRadialMenu_1) == 0x000D51, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_CanOpenRadialMenu_CanOpenRadialMenu_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_14) == 0x000D58, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_16) == 0x000D60, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBPI_HUD_13) == 0x000D78, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBPI_HUD_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_27) == 0x000D88, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_17) == 0x000D90, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsAimingDownSights_ReturnValue) == 0x000DA8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsAimingDownSights_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSoldier_ReturnValue_1) == 0x000DB0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSoldier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_6) == 0x000DB8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000DC0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BooleanAND_ReturnValue_5) == 0x000DC8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsBeingUsed_ReturnValue) == 0x000DC9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsBeingUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSoldier_ReturnValue_2) == 0x000DD0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSoldier_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_7) == 0x000DD8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetCurrentWeapon_ReturnValue_1) == 0x000DE0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetCurrentWeapon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BooleanAND_ReturnValue_6) == 0x000DE8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsBeingUsed_ReturnValue_1) == 0x000DE9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsBeingUsed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_8) == 0x000DEA, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsAimingDownSights_ReturnValue_1) == 0x000DEB, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsAimingDownSights_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_9) == 0x000DEC, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_18) == 0x000DF0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSoldier_ReturnValue_3) == 0x000E08, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSoldier_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetComponentByClass_ReturnValue) == 0x000E10, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsEmotePlaying_ReturnValue) == 0x000E18, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsEmotePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSquadGameUserSettings_ReturnValue_3) == 0x000E20, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSquadGameUserSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetEmoteAtIndex_ReturnValue) == 0x000E28, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetEmoteAtIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000E50, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000E58, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsSQEmotes_Data) == 0x000E60, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsSQEmotes_Data' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_28) == 0x000E68, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputAxisEvent_AxisValue) == 0x000E6C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CreateDelegate_OutputDelegate_3) == 0x000E70, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetHUD_ReturnValue_15) == 0x000E80, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetHUD_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsBP_HUD) == 0x000E88, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsBP_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_29) == 0x000E90, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsUMG_Base_HUD_2) == 0x000E98, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsUMG_Base_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_30) == 0x000EA0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Not_PreBool_ReturnValue_10) == 0x000EA1, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpAxisEvt_MapZoom_GP_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_C_InpAxisEvt_MapZoom_GP_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpAxisEvt_MapZoom_GP_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_PlayerController_C_InpAxisEvt_MapZoom_GP_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_PlayerController_C_InpAxisEvt_MapZoom_GP_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_PlayerController_C_InpAxisEvt_MapZoom_GP_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_PlayerController_C_InpAxisEvt_MapZoom_GP_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_PlayerController_C_InpAxisEvt_MapZoom_GP_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.ServerPickupItem
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_ServerPickupItem final
{
public:
	class AActor*                                 Item_Object;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_ServerPickupItem) == 0x000008, "Wrong alignment on BP_PlayerController_C_ServerPickupItem");
static_assert(sizeof(BP_PlayerController_C_ServerPickupItem) == 0x000008, "Wrong size on BP_PlayerController_C_ServerPickupItem");
static_assert(offsetof(BP_PlayerController_C_ServerPickupItem, Item_Object) == 0x000000, "Member 'BP_PlayerController_C_ServerPickupItem::Item_Object' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.ToggleHighPrecisionBearing
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_C_ToggleHighPrecisionBearing final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_ToggleHighPrecisionBearing) == 0x000001, "Wrong alignment on BP_PlayerController_C_ToggleHighPrecisionBearing");
static_assert(sizeof(BP_PlayerController_C_ToggleHighPrecisionBearing) == 0x000001, "Wrong size on BP_PlayerController_C_ToggleHighPrecisionBearing");
static_assert(offsetof(BP_PlayerController_C_ToggleHighPrecisionBearing, NewState) == 0x000000, "Member 'BP_PlayerController_C_ToggleHighPrecisionBearing::NewState' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.OnPendingDeathChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_OnPendingDeathChanged final
{
public:
	float                                         KillTimestamp;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDeathIsPending;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_OnPendingDeathChanged) == 0x000004, "Wrong alignment on BP_PlayerController_C_OnPendingDeathChanged");
static_assert(sizeof(BP_PlayerController_C_OnPendingDeathChanged) == 0x000008, "Wrong size on BP_PlayerController_C_OnPendingDeathChanged");
static_assert(offsetof(BP_PlayerController_C_OnPendingDeathChanged, KillTimestamp) == 0x000000, "Member 'BP_PlayerController_C_OnPendingDeathChanged::KillTimestamp' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_OnPendingDeathChanged, bDeathIsPending) == 0x000004, "Member 'BP_PlayerController_C_OnPendingDeathChanged::bDeathIsPending' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.OnSquadChanged
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_OnSquadChanged final
{
public:
	class ASQSquadState*                          NewSquad;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSquadState*                          OldSquad;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         Param_Player;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_OnSquadChanged) == 0x000008, "Wrong alignment on BP_PlayerController_C_OnSquadChanged");
static_assert(sizeof(BP_PlayerController_C_OnSquadChanged) == 0x000018, "Wrong size on BP_PlayerController_C_OnSquadChanged");
static_assert(offsetof(BP_PlayerController_C_OnSquadChanged, NewSquad) == 0x000000, "Member 'BP_PlayerController_C_OnSquadChanged::NewSquad' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_OnSquadChanged, OldSquad) == 0x000008, "Member 'BP_PlayerController_C_OnSquadChanged::OldSquad' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_OnSquadChanged, Param_Player) == 0x000010, "Member 'BP_PlayerController_C_OnSquadChanged::Param_Player' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.FireteamLeaderChanged
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerController_C_FireteamLeaderChanged final
{
public:
	class FText                                   PlayerName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         FireTeamIndex;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_FireteamLeaderChanged) == 0x000008, "Wrong alignment on BP_PlayerController_C_FireteamLeaderChanged");
static_assert(sizeof(BP_PlayerController_C_FireteamLeaderChanged) == 0x000020, "Wrong size on BP_PlayerController_C_FireteamLeaderChanged");
static_assert(offsetof(BP_PlayerController_C_FireteamLeaderChanged, PlayerName) == 0x000000, "Member 'BP_PlayerController_C_FireteamLeaderChanged::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_FireteamLeaderChanged, FireTeamIndex) == 0x000018, "Member 'BP_PlayerController_C_FireteamLeaderChanged::FireTeamIndex' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.JoinedSquadNotification
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_JoinedSquadNotification final
{
public:
	class ASQPlayerState*                         Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_JoinedSquadNotification) == 0x000008, "Wrong alignment on BP_PlayerController_C_JoinedSquadNotification");
static_assert(sizeof(BP_PlayerController_C_JoinedSquadNotification) == 0x000008, "Wrong size on BP_PlayerController_C_JoinedSquadNotification");
static_assert(offsetof(BP_PlayerController_C_JoinedSquadNotification, Target) == 0x000000, "Member 'BP_PlayerController_C_JoinedSquadNotification::Target' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.PromotedNotification
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_C_PromotedNotification final
{
public:
	bool                                          Commander;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_PromotedNotification) == 0x000001, "Wrong alignment on BP_PlayerController_C_PromotedNotification");
static_assert(sizeof(BP_PlayerController_C_PromotedNotification) == 0x000001, "Wrong size on BP_PlayerController_C_PromotedNotification");
static_assert(offsetof(BP_PlayerController_C_PromotedNotification, Commander) == 0x000000, "Member 'BP_PlayerController_C_PromotedNotification::Commander' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.LeftSquadNotification
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_LeftSquadNotification final
{
public:
	class ASQPlayerState*                         Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_LeftSquadNotification) == 0x000008, "Wrong alignment on BP_PlayerController_C_LeftSquadNotification");
static_assert(sizeof(BP_PlayerController_C_LeftSquadNotification) == 0x000008, "Wrong size on BP_PlayerController_C_LeftSquadNotification");
static_assert(offsetof(BP_PlayerController_C_LeftSquadNotification, Target) == 0x000000, "Member 'BP_PlayerController_C_LeftSquadNotification::Target' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.FireteamUpdatedNotification
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_FireteamUpdatedNotification final
{
public:
	int32                                         FireteamNumber;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFTL;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_FireteamUpdatedNotification) == 0x000004, "Wrong alignment on BP_PlayerController_C_FireteamUpdatedNotification");
static_assert(sizeof(BP_PlayerController_C_FireteamUpdatedNotification) == 0x000008, "Wrong size on BP_PlayerController_C_FireteamUpdatedNotification");
static_assert(offsetof(BP_PlayerController_C_FireteamUpdatedNotification, FireteamNumber) == 0x000000, "Member 'BP_PlayerController_C_FireteamUpdatedNotification::FireteamNumber' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_FireteamUpdatedNotification, IsFTL) == 0x000004, "Member 'BP_PlayerController_C_FireteamUpdatedNotification::IsFTL' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Override Music
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerController_C_Override_Music final
{
public:
	TSoftObjectPtr<class USoundBase>              In_Music;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Override_Music) == 0x000008, "Wrong alignment on BP_PlayerController_C_Override_Music");
static_assert(sizeof(BP_PlayerController_C_Override_Music) == 0x000028, "Wrong size on BP_PlayerController_C_Override_Music");
static_assert(offsetof(BP_PlayerController_C_Override_Music, In_Music) == 0x000000, "Member 'BP_PlayerController_C_Override_Music::In_Music' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.BP_ExposeUnavailabilityReason
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerController_C_BP_ExposeUnavailabilityReason final
{
public:
	struct FDataTableRowHandle                    InReason;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_BP_ExposeUnavailabilityReason) == 0x000008, "Wrong alignment on BP_PlayerController_C_BP_ExposeUnavailabilityReason");
static_assert(sizeof(BP_PlayerController_C_BP_ExposeUnavailabilityReason) == 0x000010, "Wrong size on BP_PlayerController_C_BP_ExposeUnavailabilityReason");
static_assert(offsetof(BP_PlayerController_C_BP_ExposeUnavailabilityReason, InReason) == 0x000000, "Member 'BP_PlayerController_C_BP_ExposeUnavailabilityReason::InReason' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.BP_FailPlaceDeployableFromEquippable
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_BP_FailPlaceDeployableFromEquippable final
{
public:
	class ASQEquipableItem*                       Equippable;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_BP_FailPlaceDeployableFromEquippable) == 0x000008, "Wrong alignment on BP_PlayerController_C_BP_FailPlaceDeployableFromEquippable");
static_assert(sizeof(BP_PlayerController_C_BP_FailPlaceDeployableFromEquippable) == 0x000008, "Wrong size on BP_PlayerController_C_BP_FailPlaceDeployableFromEquippable");
static_assert(offsetof(BP_PlayerController_C_BP_FailPlaceDeployableFromEquippable, Equippable) == 0x000000, "Member 'BP_PlayerController_C_BP_FailPlaceDeployableFromEquippable::Equippable' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.BP_InitializeDeployableFromEquippable
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerController_C_BP_InitializeDeployableFromEquippable final
{
public:
	class ASQDeployableItem*                      DeployableItem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQEquipableItem*                       Equippable;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_BP_InitializeDeployableFromEquippable) == 0x000008, "Wrong alignment on BP_PlayerController_C_BP_InitializeDeployableFromEquippable");
static_assert(sizeof(BP_PlayerController_C_BP_InitializeDeployableFromEquippable) == 0x000010, "Wrong size on BP_PlayerController_C_BP_InitializeDeployableFromEquippable");
static_assert(offsetof(BP_PlayerController_C_BP_InitializeDeployableFromEquippable, DeployableItem) == 0x000000, "Member 'BP_PlayerController_C_BP_InitializeDeployableFromEquippable::DeployableItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_BP_InitializeDeployableFromEquippable, Equippable) == 0x000008, "Member 'BP_PlayerController_C_BP_InitializeDeployableFromEquippable::Equippable' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Remove Map Marker New
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_C_Remove_Map_Marker_New final
{
public:
	uint8                                         MapMarkerID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Remove_Map_Marker_New) == 0x000001, "Wrong alignment on BP_PlayerController_C_Remove_Map_Marker_New");
static_assert(sizeof(BP_PlayerController_C_Remove_Map_Marker_New) == 0x000001, "Wrong size on BP_PlayerController_C_Remove_Map_Marker_New");
static_assert(offsetof(BP_PlayerController_C_Remove_Map_Marker_New, MapMarkerID) == 0x000000, "Member 'BP_PlayerController_C_Remove_Map_Marker_New::MapMarkerID' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Server Accept Deny Command
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerController_C_Server_Accept_Deny_Command final
{
public:
	class ABP_MapMarker_Command_Request_C*        Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Accepted;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Server_Accept_Deny_Command) == 0x000008, "Wrong alignment on BP_PlayerController_C_Server_Accept_Deny_Command");
static_assert(sizeof(BP_PlayerController_C_Server_Accept_Deny_Command) == 0x000010, "Wrong size on BP_PlayerController_C_Server_Accept_Deny_Command");
static_assert(offsetof(BP_PlayerController_C_Server_Accept_Deny_Command, Marker) == 0x000000, "Member 'BP_PlayerController_C_Server_Accept_Deny_Command::Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Server_Accept_Deny_Command, Accepted) == 0x000008, "Member 'BP_PlayerController_C_Server_Accept_Deny_Command::Accepted' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Accept Deny Command Request
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerController_C_Accept_Deny_Command_Request final
{
public:
	class ABP_MapMarker_Command_Request_C*        Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Accepted;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Accept_Deny_Command_Request) == 0x000008, "Wrong alignment on BP_PlayerController_C_Accept_Deny_Command_Request");
static_assert(sizeof(BP_PlayerController_C_Accept_Deny_Command_Request) == 0x000010, "Wrong size on BP_PlayerController_C_Accept_Deny_Command_Request");
static_assert(offsetof(BP_PlayerController_C_Accept_Deny_Command_Request, Marker) == 0x000000, "Member 'BP_PlayerController_C_Accept_Deny_Command_Request::Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Accept_Deny_Command_Request, Accepted) == 0x000008, "Member 'BP_PlayerController_C_Accept_Deny_Command_Request::Accepted' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Request Command Marker
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerController_C_Request_Command_Marker final
{
public:
	class UClass*                                 Command_Marker;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3B[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Distance;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Request_Command_Marker) == 0x000010, "Wrong alignment on BP_PlayerController_C_Request_Command_Marker");
static_assert(sizeof(BP_PlayerController_C_Request_Command_Marker) == 0x000050, "Wrong size on BP_PlayerController_C_Request_Command_Marker");
static_assert(offsetof(BP_PlayerController_C_Request_Command_Marker, Command_Marker) == 0x000000, "Member 'BP_PlayerController_C_Request_Command_Marker::Command_Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Command_Marker, Transform) == 0x000010, "Member 'BP_PlayerController_C_Request_Command_Marker::Transform' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Command_Marker, Distance) == 0x000040, "Member 'BP_PlayerController_C_Request_Command_Marker::Distance' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Request Director Marker
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerController_C_Request_Director_Marker final
{
public:
	class UClass*                                 Director_Marker;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Scale;                                             // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Squad_ID;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Request_Director_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_Request_Director_Marker");
static_assert(sizeof(BP_PlayerController_C_Request_Director_Marker) == 0x000038, "Wrong size on BP_PlayerController_C_Request_Director_Marker");
static_assert(offsetof(BP_PlayerController_C_Request_Director_Marker, Director_Marker) == 0x000000, "Member 'BP_PlayerController_C_Request_Director_Marker::Director_Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Director_Marker, Location) == 0x000008, "Member 'BP_PlayerController_C_Request_Director_Marker::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Director_Marker, Rotation) == 0x000014, "Member 'BP_PlayerController_C_Request_Director_Marker::Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Director_Marker, Scale) == 0x000020, "Member 'BP_PlayerController_C_Request_Director_Marker::Scale' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Director_Marker, Distance) == 0x00002C, "Member 'BP_PlayerController_C_Request_Director_Marker::Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Director_Marker, Squad_ID) == 0x000030, "Member 'BP_PlayerController_C_Request_Director_Marker::Squad_ID' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Request Marker
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerController_C_Request_Marker final
{
public:
	class UClass*                                 Marker_Class;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Fire_Team_ID;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Emote;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Request_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_Request_Marker");
static_assert(sizeof(BP_PlayerController_C_Request_Marker) == 0x000020, "Wrong size on BP_PlayerController_C_Request_Marker");
static_assert(offsetof(BP_PlayerController_C_Request_Marker, Marker_Class) == 0x000000, "Member 'BP_PlayerController_C_Request_Marker::Marker_Class' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Marker, Location) == 0x000008, "Member 'BP_PlayerController_C_Request_Marker::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Marker, Fire_Team_ID) == 0x000014, "Member 'BP_PlayerController_C_Request_Marker::Fire_Team_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Marker, Emote) == 0x000018, "Member 'BP_PlayerController_C_Request_Marker::Emote' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Request Map Marker
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerController_C_Request_Map_Marker final
{
public:
	int32                                         Squad_ID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       Team_ID;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Fire_Team_ID;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    DistanceRotation;                                  // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3D[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQMapMarkerDataAsset*                  Map_Marker_Data;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Request_Map_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_Request_Map_Marker");
static_assert(sizeof(BP_PlayerController_C_Request_Map_Marker) == 0x000030, "Wrong size on BP_PlayerController_C_Request_Map_Marker");
static_assert(offsetof(BP_PlayerController_C_Request_Map_Marker, Squad_ID) == 0x000000, "Member 'BP_PlayerController_C_Request_Map_Marker::Squad_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Map_Marker, Team_ID) == 0x000004, "Member 'BP_PlayerController_C_Request_Map_Marker::Team_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Map_Marker, Fire_Team_ID) == 0x000008, "Member 'BP_PlayerController_C_Request_Map_Marker::Fire_Team_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Map_Marker, Location) == 0x00000C, "Member 'BP_PlayerController_C_Request_Map_Marker::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Map_Marker, DistanceRotation) == 0x000018, "Member 'BP_PlayerController_C_Request_Map_Marker::DistanceRotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Map_Marker, Map_Marker_Data) == 0x000028, "Member 'BP_PlayerController_C_Request_Map_Marker::Map_Marker_Data' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.OnOutOfMapBoundsChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_OnOutOfMapBoundsChanged final
{
public:
	float                                         KillTimestamp;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOutOfBounds;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_OnOutOfMapBoundsChanged) == 0x000004, "Wrong alignment on BP_PlayerController_C_OnOutOfMapBoundsChanged");
static_assert(sizeof(BP_PlayerController_C_OnOutOfMapBoundsChanged) == 0x000008, "Wrong size on BP_PlayerController_C_OnOutOfMapBoundsChanged");
static_assert(offsetof(BP_PlayerController_C_OnOutOfMapBoundsChanged, KillTimestamp) == 0x000000, "Member 'BP_PlayerController_C_OnOutOfMapBoundsChanged::KillTimestamp' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_OnOutOfMapBoundsChanged, bIsOutOfBounds) == 0x000004, "Member 'BP_PlayerController_C_OnOutOfMapBoundsChanged::bIsOutOfBounds' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Play Emote
// 0x000C (0x000C - 0x0000)
struct BP_PlayerController_C_Play_Emote final
{
public:
	ESQEmotes                                     Emote;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param_Name;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Play_Emote) == 0x000004, "Wrong alignment on BP_PlayerController_C_Play_Emote");
static_assert(sizeof(BP_PlayerController_C_Play_Emote) == 0x00000C, "Wrong size on BP_PlayerController_C_Play_Emote");
static_assert(offsetof(BP_PlayerController_C_Play_Emote, Emote) == 0x000000, "Member 'BP_PlayerController_C_Play_Emote::Emote' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Play_Emote, Param_Name) == 0x000004, "Member 'BP_PlayerController_C_Play_Emote::Param_Name' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.SetAllowAdminCam
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_C_SetAllowAdminCam final
{
public:
	bool                                          Param_bAllowAdminCam;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_SetAllowAdminCam) == 0x000001, "Wrong alignment on BP_PlayerController_C_SetAllowAdminCam");
static_assert(sizeof(BP_PlayerController_C_SetAllowAdminCam) == 0x000001, "Wrong size on BP_PlayerController_C_SetAllowAdminCam");
static_assert(offsetof(BP_PlayerController_C_SetAllowAdminCam, Param_bAllowAdminCam) == 0x000000, "Member 'BP_PlayerController_C_SetAllowAdminCam::Param_bAllowAdminCam' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Set Selected Marker
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_Set_Selected_Marker final
{
public:
	class USQMapWidgetMapMarkerSelectable*        Marker_Ref;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Set_Selected_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_Set_Selected_Marker");
static_assert(sizeof(BP_PlayerController_C_Set_Selected_Marker) == 0x000008, "Wrong size on BP_PlayerController_C_Set_Selected_Marker");
static_assert(offsetof(BP_PlayerController_C_Set_Selected_Marker, Marker_Ref) == 0x000000, "Member 'BP_PlayerController_C_Set_Selected_Marker::Marker_Ref' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Trace Marker
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerController_C_Trace_Marker final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQMapMarkerDataAsset*                  Marker;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hotkey;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Emote;                                             // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3F[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 MarkerClass;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Trace_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_Trace_Marker");
static_assert(sizeof(BP_PlayerController_C_Trace_Marker) == 0x000030, "Wrong size on BP_PlayerController_C_Trace_Marker");
static_assert(offsetof(BP_PlayerController_C_Trace_Marker, Start) == 0x000000, "Member 'BP_PlayerController_C_Trace_Marker::Start' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Trace_Marker, End) == 0x00000C, "Member 'BP_PlayerController_C_Trace_Marker::End' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Trace_Marker, Marker) == 0x000018, "Member 'BP_PlayerController_C_Trace_Marker::Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Trace_Marker, Hotkey) == 0x000020, "Member 'BP_PlayerController_C_Trace_Marker::Hotkey' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Trace_Marker, Emote) == 0x000021, "Member 'BP_PlayerController_C_Trace_Marker::Emote' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Trace_Marker, MarkerClass) == 0x000028, "Member 'BP_PlayerController_C_Trace_Marker::MarkerClass' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Request Place Director Marker
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerController_C_Request_Place_Director_Marker final
{
public:
	class UClass*                                 Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A40[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             T;                                                 // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Distance;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Squad;                                             // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Request_Place_Director_Marker) == 0x000010, "Wrong alignment on BP_PlayerController_C_Request_Place_Director_Marker");
static_assert(sizeof(BP_PlayerController_C_Request_Place_Director_Marker) == 0x000050, "Wrong size on BP_PlayerController_C_Request_Place_Director_Marker");
static_assert(offsetof(BP_PlayerController_C_Request_Place_Director_Marker, Action) == 0x000000, "Member 'BP_PlayerController_C_Request_Place_Director_Marker::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Place_Director_Marker, T) == 0x000010, "Member 'BP_PlayerController_C_Request_Place_Director_Marker::T' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Place_Director_Marker, Distance) == 0x000040, "Member 'BP_PlayerController_C_Request_Place_Director_Marker::Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Place_Director_Marker, Squad) == 0x000044, "Member 'BP_PlayerController_C_Request_Place_Director_Marker::Squad' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Request Place Command Map Marker
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerController_C_Request_Place_Command_Map_Marker final
{
public:
	class UClass*                                 Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A41[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             T;                                                 // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Distance;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Request_Place_Command_Map_Marker) == 0x000010, "Wrong alignment on BP_PlayerController_C_Request_Place_Command_Map_Marker");
static_assert(sizeof(BP_PlayerController_C_Request_Place_Command_Map_Marker) == 0x000050, "Wrong size on BP_PlayerController_C_Request_Place_Command_Map_Marker");
static_assert(offsetof(BP_PlayerController_C_Request_Place_Command_Map_Marker, Action) == 0x000000, "Member 'BP_PlayerController_C_Request_Place_Command_Map_Marker::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Place_Command_Map_Marker, T) == 0x000010, "Member 'BP_PlayerController_C_Request_Place_Command_Map_Marker::T' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Request_Place_Command_Map_Marker, Distance) == 0x000040, "Member 'BP_PlayerController_C_Request_Place_Command_Map_Marker::Distance' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Client Notification
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerController_C_Client_Notification final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESQNotificationTypes                          Type;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A42[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Custom_Icon;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Client_Notification) == 0x000008, "Wrong alignment on BP_PlayerController_C_Client_Notification");
static_assert(sizeof(BP_PlayerController_C_Client_Notification) == 0x000028, "Wrong size on BP_PlayerController_C_Client_Notification");
static_assert(offsetof(BP_PlayerController_C_Client_Notification, Text) == 0x000000, "Member 'BP_PlayerController_C_Client_Notification::Text' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Client_Notification, Type) == 0x000018, "Member 'BP_PlayerController_C_Client_Notification::Type' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Client_Notification, Custom_Icon) == 0x000020, "Member 'BP_PlayerController_C_Client_Notification::Custom_Icon' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong alignment on BP_PlayerController_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");
static_assert(sizeof(BP_PlayerController_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong size on BP_PlayerController_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");
static_assert(offsetof(BP_PlayerController_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0, AxisValue) == 0x000000, "Member 'BP_PlayerController_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0::AxisValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.SERVER Set Selected Marker
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_SERVER_Set_Selected_Marker final
{
public:
	class USQMapWidgetMapMarkerSelectable*        Marker_Ref;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_SERVER_Set_Selected_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_SERVER_Set_Selected_Marker");
static_assert(sizeof(BP_PlayerController_C_SERVER_Set_Selected_Marker) == 0x000008, "Wrong size on BP_PlayerController_C_SERVER_Set_Selected_Marker");
static_assert(offsetof(BP_PlayerController_C_SERVER_Set_Selected_Marker, Marker_Ref) == 0x000000, "Member 'BP_PlayerController_C_SERVER_Set_Selected_Marker::Marker_Ref' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.BPTraceMarkerLocation
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerController_C_BPTraceMarkerLocation final
{
public:
	TSubclassOf<class ASQMapMarker>               MarkerClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_BPTraceMarkerLocation) == 0x000008, "Wrong alignment on BP_PlayerController_C_BPTraceMarkerLocation");
static_assert(sizeof(BP_PlayerController_C_BPTraceMarkerLocation) == 0x000020, "Wrong size on BP_PlayerController_C_BPTraceMarkerLocation");
static_assert(offsetof(BP_PlayerController_C_BPTraceMarkerLocation, MarkerClass) == 0x000000, "Member 'BP_PlayerController_C_BPTraceMarkerLocation::MarkerClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_BPTraceMarkerLocation, Start) == 0x000008, "Member 'BP_PlayerController_C_BPTraceMarkerLocation::Start' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_BPTraceMarkerLocation, End) == 0x000014, "Member 'BP_PlayerController_C_BPTraceMarkerLocation::End' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.RequestRemoveMarker
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_RequestRemoveMarker final
{
public:
	class USQMapItemComponent*                    MarkerItem;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_RequestRemoveMarker) == 0x000008, "Wrong alignment on BP_PlayerController_C_RequestRemoveMarker");
static_assert(sizeof(BP_PlayerController_C_RequestRemoveMarker) == 0x000008, "Wrong size on BP_PlayerController_C_RequestRemoveMarker");
static_assert(offsetof(BP_PlayerController_C_RequestRemoveMarker, MarkerItem) == 0x000000, "Member 'BP_PlayerController_C_RequestRemoveMarker::MarkerItem' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.RequestPlaceMarker
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerController_C_RequestPlaceMarker final
{
public:
	class UClass*                                 MarkerClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FireTeamId;                                        // 0x0014(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Emote;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_RequestPlaceMarker) == 0x000008, "Wrong alignment on BP_PlayerController_C_RequestPlaceMarker");
static_assert(sizeof(BP_PlayerController_C_RequestPlaceMarker) == 0x000020, "Wrong size on BP_PlayerController_C_RequestPlaceMarker");
static_assert(offsetof(BP_PlayerController_C_RequestPlaceMarker, MarkerClass) == 0x000000, "Member 'BP_PlayerController_C_RequestPlaceMarker::MarkerClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RequestPlaceMarker, Location) == 0x000008, "Member 'BP_PlayerController_C_RequestPlaceMarker::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RequestPlaceMarker, FireTeamId) == 0x000014, "Member 'BP_PlayerController_C_RequestPlaceMarker::FireTeamId' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RequestPlaceMarker, Emote) == 0x000018, "Member 'BP_PlayerController_C_RequestPlaceMarker::Emote' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.BlueprintOnMatchEnded
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerController_C_BlueprintOnMatchEnded final
{
public:
	int32                                         WinningTeam;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LosingTeam;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WinnerTickets;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoserTickets;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_BlueprintOnMatchEnded) == 0x000004, "Wrong alignment on BP_PlayerController_C_BlueprintOnMatchEnded");
static_assert(sizeof(BP_PlayerController_C_BlueprintOnMatchEnded) == 0x000010, "Wrong size on BP_PlayerController_C_BlueprintOnMatchEnded");
static_assert(offsetof(BP_PlayerController_C_BlueprintOnMatchEnded, WinningTeam) == 0x000000, "Member 'BP_PlayerController_C_BlueprintOnMatchEnded::WinningTeam' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_BlueprintOnMatchEnded, LosingTeam) == 0x000004, "Member 'BP_PlayerController_C_BlueprintOnMatchEnded::LosingTeam' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_BlueprintOnMatchEnded, WinnerTickets) == 0x000008, "Member 'BP_PlayerController_C_BlueprintOnMatchEnded::WinnerTickets' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_BlueprintOnMatchEnded, LoserTickets) == 0x00000C, "Member 'BP_PlayerController_C_BlueprintOnMatchEnded::LoserTickets' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_ModifyZeroing_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_ModifyZeroing_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_ModifyZeroing_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_ToggleSquadList_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_ToggleSquadList_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_ToggleSquadList_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_ToggleSquadList_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_ToggleSquadList_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_ToggleSquadList_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_ToggleSquadList_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_ToggleSquadList_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_ToggleCompassView_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_ToggleCompassView_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_ToggleCompassView_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_ToggleCompassView_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_ToggleCompassView_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_ToggleCompassView_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_ToggleCompassView_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_ToggleCompassView_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.OnLoaded_3D0EA11243E739CDAFB9A48F64F98F7F
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_OnLoaded_3D0EA11243E739CDAFB9A48F64F98F7F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_OnLoaded_3D0EA11243E739CDAFB9A48F64F98F7F) == 0x000008, "Wrong alignment on BP_PlayerController_C_OnLoaded_3D0EA11243E739CDAFB9A48F64F98F7F");
static_assert(sizeof(BP_PlayerController_C_OnLoaded_3D0EA11243E739CDAFB9A48F64F98F7F) == 0x000008, "Wrong size on BP_PlayerController_C_OnLoaded_3D0EA11243E739CDAFB9A48F64F98F7F");
static_assert(offsetof(BP_PlayerController_C_OnLoaded_3D0EA11243E739CDAFB9A48F64F98F7F, Loaded) == 0x000000, "Member 'BP_PlayerController_C_OnLoaded_3D0EA11243E739CDAFB9A48F64F98F7F::Loaded' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Interact_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Interact_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Interact_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Interact_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Interact_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Interact_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Interact_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Interact_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_ChatToTeam_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_ChatToTeam_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_ChatToTeam_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_ChatToTeam_K2Node_InputActionEvent_6");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_ChatToTeam_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_ChatToTeam_K2Node_InputActionEvent_6");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_ChatToTeam_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_ChatToTeam_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_ChatToSquad_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_ChatToSquad_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_ChatToSquad_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_ChatToSquad_K2Node_InputActionEvent_7");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_ChatToSquad_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_ChatToSquad_K2Node_InputActionEvent_7");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_ChatToSquad_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_ChatToSquad_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_ChatToAll_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_ChatToAll_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_ChatToAll_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_ChatToAll_K2Node_InputActionEvent_8");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_ChatToAll_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_ChatToAll_K2Node_InputActionEvent_8");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_ChatToAll_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_ChatToAll_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_CommandMap_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_CommandMap_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_CommandMap_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_CommandMap_K2Node_InputActionEvent_9");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_CommandMap_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_CommandMap_K2Node_InputActionEvent_9");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_CommandMap_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_CommandMap_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_MapZoom_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_MapZoom_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_MapZoom_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_MapZoom_K2Node_InputActionEvent_10");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_MapZoom_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_MapZoom_K2Node_InputActionEvent_10");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_MapZoom_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_MapZoom_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_CommandMenu_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_11");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_11");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_CommandMenu_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_12");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_12");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_CommandMenu_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Shift_P_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Shift_P_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Shift_P_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Shift_P_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Shift_P_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Shift_P_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Shift_P_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Shift_P_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_ToggleScoreboard_K2Node_InputActionEvent_13
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_ToggleScoreboard_K2Node_InputActionEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_ToggleScoreboard_K2Node_InputActionEvent_13) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_ToggleScoreboard_K2Node_InputActionEvent_13");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_ToggleScoreboard_K2Node_InputActionEvent_13) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_ToggleScoreboard_K2Node_InputActionEvent_13");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_ToggleScoreboard_K2Node_InputActionEvent_13, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_ToggleScoreboard_K2Node_InputActionEvent_13::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Scoreboard_K2Node_InputActionEvent_14
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_14) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_14");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_14) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_14");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_14, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_14::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Scoreboard_K2Node_InputActionEvent_15
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_15) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_15");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_15) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_15");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_15, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_15::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Map_K2Node_InputActionEvent_16
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Map_K2Node_InputActionEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Map_K2Node_InputActionEvent_16) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Map_K2Node_InputActionEvent_16");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Map_K2Node_InputActionEvent_16) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Map_K2Node_InputActionEvent_16");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Map_K2Node_InputActionEvent_16, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Map_K2Node_InputActionEvent_16::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_SpawnMenu_K2Node_InputActionEvent_17
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_SpawnMenu_K2Node_InputActionEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_SpawnMenu_K2Node_InputActionEvent_17) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_SpawnMenu_K2Node_InputActionEvent_17");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_SpawnMenu_K2Node_InputActionEvent_17) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_SpawnMenu_K2Node_InputActionEvent_17");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_SpawnMenu_K2Node_InputActionEvent_17, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_SpawnMenu_K2Node_InputActionEvent_17::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_InGameMenu_K2Node_InputActionEvent_18
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_InGameMenu_K2Node_InputActionEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_InGameMenu_K2Node_InputActionEvent_18) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_InGameMenu_K2Node_InputActionEvent_18");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_InGameMenu_K2Node_InputActionEvent_18) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_InGameMenu_K2Node_InputActionEvent_18");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_InGameMenu_K2Node_InputActionEvent_18, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_InGameMenu_K2Node_InputActionEvent_18::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.HideGameMenus
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerController_C_HideGameMenus final
{
public:
	bool                                          CallFunc_MatchWaitingAfterCompletion_ReturnValue;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A43[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A44[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A45[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_HideGameMenus) == 0x000008, "Wrong alignment on BP_PlayerController_C_HideGameMenus");
static_assert(sizeof(BP_PlayerController_C_HideGameMenus) == 0x000048, "Wrong size on BP_PlayerController_C_HideGameMenus");
static_assert(offsetof(BP_PlayerController_C_HideGameMenus, CallFunc_MatchWaitingAfterCompletion_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_HideGameMenus::CallFunc_MatchWaitingAfterCompletion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HideGameMenus, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_HideGameMenus::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HideGameMenus, K2Node_DynamicCast_AsSQHUD) == 0x000010, "Member 'BP_PlayerController_C_HideGameMenus::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HideGameMenus, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerController_C_HideGameMenus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HideGameMenus, K2Node_DynamicCast_AsBPI_HUD) == 0x000020, "Member 'BP_PlayerController_C_HideGameMenus::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HideGameMenus, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PlayerController_C_HideGameMenus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HideGameMenus, K2Node_DynamicCast_AsBP_HUD) == 0x000038, "Member 'BP_PlayerController_C_HideGameMenus::K2Node_DynamicCast_AsBP_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HideGameMenus, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_PlayerController_C_HideGameMenus::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.OnFireWeaponOverride
// 0x0003 (0x0003 - 0x0000)
struct BP_PlayerController_C_OnFireWeaponOverride final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FinalizePendingDeployable_OutSuccess;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_OnFireWeaponOverride) == 0x000001, "Wrong alignment on BP_PlayerController_C_OnFireWeaponOverride");
static_assert(sizeof(BP_PlayerController_C_OnFireWeaponOverride) == 0x000003, "Wrong size on BP_PlayerController_C_OnFireWeaponOverride");
static_assert(offsetof(BP_PlayerController_C_OnFireWeaponOverride, ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_OnFireWeaponOverride::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_OnFireWeaponOverride, CallFunc_FinalizePendingDeployable_OutSuccess) == 0x000001, "Member 'BP_PlayerController_C_OnFireWeaponOverride::CallFunc_FinalizePendingDeployable_OutSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_OnFireWeaponOverride, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PlayerController_C_OnFireWeaponOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.OnAltFireWeaponOverride
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerController_C_OnAltFireWeaponOverride final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_OnAltFireWeaponOverride) == 0x000001, "Wrong alignment on BP_PlayerController_C_OnAltFireWeaponOverride");
static_assert(sizeof(BP_PlayerController_C_OnAltFireWeaponOverride) == 0x000002, "Wrong size on BP_PlayerController_C_OnAltFireWeaponOverride");
static_assert(offsetof(BP_PlayerController_C_OnAltFireWeaponOverride, ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_OnAltFireWeaponOverride::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_OnAltFireWeaponOverride, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PlayerController_C_OnAltFireWeaponOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.DeploymentKeyAction
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerController_C_DeploymentKeyAction final
{
public:
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A46[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A47[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A48[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_2;                    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A49[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Deployment;                // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Command;                   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Roaming;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Menus_C>          K2Node_DynamicCast_AsBPI_Menus;                    // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_DeploymentKeyAction) == 0x000008, "Wrong alignment on BP_PlayerController_C_DeploymentKeyAction");
static_assert(sizeof(BP_PlayerController_C_DeploymentKeyAction) == 0x000090, "Wrong size on BP_PlayerController_C_DeploymentKeyAction");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, CallFunc_K2_GetPawn_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_DeploymentKeyAction::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_DeploymentKeyAction::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_DeploymentKeyAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, K2Node_DynamicCast_AsBPI_HUD) == 0x000018, "Member 'BP_PlayerController_C_DeploymentKeyAction::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerController_C_DeploymentKeyAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000030, "Member 'BP_PlayerController_C_DeploymentKeyAction::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerController_C_DeploymentKeyAction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, K2Node_DynamicCast_AsBPI_HUD_2) == 0x000048, "Member 'BP_PlayerController_C_DeploymentKeyAction::K2Node_DynamicCast_AsBPI_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_PlayerController_C_DeploymentKeyAction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, CallFunc_Get_Main_Menus_Deployment) == 0x000060, "Member 'BP_PlayerController_C_DeploymentKeyAction::CallFunc_Get_Main_Menus_Deployment' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, CallFunc_Get_Main_Menus_Command) == 0x000068, "Member 'BP_PlayerController_C_DeploymentKeyAction::CallFunc_Get_Main_Menus_Command' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, CallFunc_Get_Main_Menus_Roaming) == 0x000070, "Member 'BP_PlayerController_C_DeploymentKeyAction::CallFunc_Get_Main_Menus_Roaming' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, K2Node_DynamicCast_AsBPI_Menus) == 0x000078, "Member 'BP_PlayerController_C_DeploymentKeyAction::K2Node_DynamicCast_AsBPI_Menus' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_PlayerController_C_DeploymentKeyAction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DeploymentKeyAction, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'BP_PlayerController_C_DeploymentKeyAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.RoamingMapKeyAction
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerController_C_RoamingMapKeyAction final
{
public:
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4C[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Deployment;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Command;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Roaming;                   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_RoamingMapKeyAction) == 0x000008, "Wrong alignment on BP_PlayerController_C_RoamingMapKeyAction");
static_assert(sizeof(BP_PlayerController_C_RoamingMapKeyAction) == 0x000060, "Wrong size on BP_PlayerController_C_RoamingMapKeyAction");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, CallFunc_K2_GetPawn_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_RoamingMapKeyAction::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_RoamingMapKeyAction::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_RoamingMapKeyAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, K2Node_DynamicCast_AsBPI_HUD) == 0x000018, "Member 'BP_PlayerController_C_RoamingMapKeyAction::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerController_C_RoamingMapKeyAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000030, "Member 'BP_PlayerController_C_RoamingMapKeyAction::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerController_C_RoamingMapKeyAction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, CallFunc_Get_Main_Menus_Deployment) == 0x000048, "Member 'BP_PlayerController_C_RoamingMapKeyAction::CallFunc_Get_Main_Menus_Deployment' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, CallFunc_Get_Main_Menus_Command) == 0x000050, "Member 'BP_PlayerController_C_RoamingMapKeyAction::CallFunc_Get_Main_Menus_Command' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RoamingMapKeyAction, CallFunc_Get_Main_Menus_Roaming) == 0x000058, "Member 'BP_PlayerController_C_RoamingMapKeyAction::CallFunc_Get_Main_Menus_Roaming' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.ZoomKeyAction
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerController_C_ZoomKeyAction final
{
public:
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_ZoomKeyAction) == 0x000008, "Wrong alignment on BP_PlayerController_C_ZoomKeyAction");
static_assert(sizeof(BP_PlayerController_C_ZoomKeyAction) == 0x000020, "Wrong size on BP_PlayerController_C_ZoomKeyAction");
static_assert(offsetof(BP_PlayerController_C_ZoomKeyAction, CallFunc_GetHUD_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_ZoomKeyAction::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ZoomKeyAction, K2Node_DynamicCast_AsBPI_HUD) == 0x000008, "Member 'BP_PlayerController_C_ZoomKeyAction::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ZoomKeyAction, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerController_C_ZoomKeyAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.IsSoldierInAVehicle
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerController_C_IsSoldierInAVehicle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_IsSoldierInAVehicle) == 0x000008, "Wrong alignment on BP_PlayerController_C_IsSoldierInAVehicle");
static_assert(sizeof(BP_PlayerController_C_IsSoldierInAVehicle) == 0x000028, "Wrong size on BP_PlayerController_C_IsSoldierInAVehicle");
static_assert(offsetof(BP_PlayerController_C_IsSoldierInAVehicle, ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_IsSoldierInAVehicle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsSoldierInAVehicle, K2Node_DynamicCast_AsSQPlayer_State) == 0x000008, "Member 'BP_PlayerController_C_IsSoldierInAVehicle::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsSoldierInAVehicle, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PlayerController_C_IsSoldierInAVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsSoldierInAVehicle, CallFunc_GetSoldier_ReturnValue) == 0x000018, "Member 'BP_PlayerController_C_IsSoldierInAVehicle::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsSoldierInAVehicle, CallFunc_IsInVehicle_ReturnValue) == 0x000020, "Member 'BP_PlayerController_C_IsSoldierInAVehicle::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsSoldierInAVehicle, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PlayerController_C_IsSoldierInAVehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.TraceMarkerLocation
// 0x0238 (0x0238 - 0x0000)
struct BP_PlayerController_C_TraceMarkerLocation final
{
public:
	class UClass*                                 MarkerClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQMapMarkerDataAsset*                  In_Marker;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hotkeyed;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Emote;                                             // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ValidPosition;                                     // 0x002A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          StillInCooldown;                                   // 0x002B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LStillInCooldown;                                  // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LValidPosition;                                    // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4F[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         L_PState;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A50[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MapMarkersEnabledDefined_ReturnValue;     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A51[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_1;              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A52[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A53[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_2;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A54[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue_1;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x007C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A55[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A56[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A57[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSeat*                         CallFunc_GetCurrentSeatPawn_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_3;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A58[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A59[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5A[0x1];                                     // 0x015F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseLocalOriginOntoZero_ReturnValue;    // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x01F4(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FSQMapMarkerGameplayData               K2Node_MakeStruct_SQMapMarkerGameplayData;         // 0x0200(0x0038)(NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_TraceMarkerLocation) == 0x000008, "Wrong alignment on BP_PlayerController_C_TraceMarkerLocation");
static_assert(sizeof(BP_PlayerController_C_TraceMarkerLocation) == 0x000238, "Wrong size on BP_PlayerController_C_TraceMarkerLocation");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, MarkerClass) == 0x000000, "Member 'BP_PlayerController_C_TraceMarkerLocation::MarkerClass' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, Start) == 0x000008, "Member 'BP_PlayerController_C_TraceMarkerLocation::Start' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, End) == 0x000014, "Member 'BP_PlayerController_C_TraceMarkerLocation::End' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, In_Marker) == 0x000020, "Member 'BP_PlayerController_C_TraceMarkerLocation::In_Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, Hotkeyed) == 0x000028, "Member 'BP_PlayerController_C_TraceMarkerLocation::Hotkeyed' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, Emote) == 0x000029, "Member 'BP_PlayerController_C_TraceMarkerLocation::Emote' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, ValidPosition) == 0x00002A, "Member 'BP_PlayerController_C_TraceMarkerLocation::ValidPosition' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, StillInCooldown) == 0x00002B, "Member 'BP_PlayerController_C_TraceMarkerLocation::StillInCooldown' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, LStillInCooldown) == 0x00002C, "Member 'BP_PlayerController_C_TraceMarkerLocation::LStillInCooldown' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, LValidPosition) == 0x00002D, "Member 'BP_PlayerController_C_TraceMarkerLocation::LValidPosition' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, L_PState) == 0x000030, "Member 'BP_PlayerController_C_TraceMarkerLocation::L_PState' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, Temp_bool_Variable) == 0x000038, "Member 'BP_PlayerController_C_TraceMarkerLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, Temp_bool_Variable_1) == 0x000039, "Member 'BP_PlayerController_C_TraceMarkerLocation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x00003C, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_ClassIsChildOf_ReturnValue) == 0x000041, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, Temp_bool_Variable_2) == 0x000043, "Member 'BP_PlayerController_C_TraceMarkerLocation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_MapMarkersEnabledDefined_ReturnValue) == 0x000044, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_MapMarkersEnabledDefined_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_MakeLiteralInt_ReturnValue) == 0x000048, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_IsSquadLeader_ReturnValue) == 0x00004C, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_IsSquadLeader_ReturnValue_1) == 0x00004D, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_IsSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_GetFireTeamIndex_ReturnValue) == 0x000050, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_Array_Find_ReturnValue) == 0x000054, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, K2Node_Select_Default) == 0x000058, "Member 'BP_PlayerController_C_TraceMarkerLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BooleanOR_ReturnValue) == 0x00005D, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, K2Node_Select_Default_1) == 0x000068, "Member 'BP_PlayerController_C_TraceMarkerLocation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000070, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_IsSquadLeader_ReturnValue_2) == 0x000074, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_IsSquadLeader_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_GetFireTeamIndex_ReturnValue_1) == 0x000078, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_GetFireTeamIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, K2Node_Select_Default_2) == 0x00007C, "Member 'BP_PlayerController_C_TraceMarkerLocation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_Conv_IntToByte_ReturnValue) == 0x000080, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_GetValidValue_ReturnValue) == 0x000081, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, K2Node_DynamicCast_AsSQPlayer_State) == 0x000088, "Member 'BP_PlayerController_C_TraceMarkerLocation::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_PlayerController_C_TraceMarkerLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_GetSoldier_ReturnValue) == 0x000098, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_IsFireTeamLeader_ReturnValue) == 0x0000A0, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_GetCurrentSeatPawn_ReturnValue) == 0x0000A8, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_GetCurrentSeatPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_GetCurrentVehicle_ReturnValue) == 0x0000B0, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_IsSquadLeader_ReturnValue_3) == 0x0000B8, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_IsSquadLeader_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_PlayerController_C_TraceMarkerLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D0, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_LineTraceSingle_OutHit) == 0x0000D4, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x00015C, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x00015D, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x00015E, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_Time) == 0x000160, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_Distance) == 0x000164, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_Location) == 0x000168, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000174, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_Normal) == 0x000180, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x00018C, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_PhysMat) == 0x000198, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_HitActor) == 0x0001A0, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_HitComponent) == 0x0001A8, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_HitBoneName) == 0x0001B0, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_ElementIndex) == 0x0001BC, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_FaceIndex) == 0x0001C0, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_TraceStart) == 0x0001C4, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_RebaseLocalOriginOntoZero_ReturnValue) == 0x0001DC, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_RebaseLocalOriginOntoZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakVector_X) == 0x0001E8, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakVector_Y) == 0x0001EC, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, CallFunc_BreakVector_Z) == 0x0001F0, "Member 'BP_PlayerController_C_TraceMarkerLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, K2Node_MakeStruct_Vector_NetQuantize) == 0x0001F4, "Member 'BP_PlayerController_C_TraceMarkerLocation::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_TraceMarkerLocation, K2Node_MakeStruct_SQMapMarkerGameplayData) == 0x000200, "Member 'BP_PlayerController_C_TraceMarkerLocation::K2Node_MakeStruct_SQMapMarkerGameplayData' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.ManageMarkers
// 0x0160 (0x0160 - 0x0000)
struct BP_PlayerController_C_ManageMarkers final
{
public:
	class ASQMapMarker*                           NewMarker;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapMarkerType                              New_Marker_Type;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASQMapMarker*>                   Current_Marker_List;                               // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         L_Marker_FT;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpotMarkerCount;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASQMapMarker*>                   Temp_object_Variable;                              // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapMarkerType                              Temp_byte_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5C[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASQMapMarker*>                   Temp_object_Variable_1;                            // 0x0040(0x0010)(ReferenceParm)
	TArray<class ASQMapMarker*>                   Temp_object_Variable_2;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<class ASQMapMarker*>                   Temp_object_Variable_3;                            // 0x0060(0x0010)(ReferenceParm)
	ESQMapMarkerType                              Temp_byte_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5D[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASQMapMarker*>                   Temp_object_Variable_4;                            // 0x0090(0x0010)(ReferenceParm)
	ESQMapMarkerType                              Temp_byte_Variable_2;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5E[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASQMapMarker*>                   Temp_object_Variable_5;                            // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapMarkerType                              Temp_byte_Variable_3;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCommander_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5F[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASQMapMarker*>                   K2Node_Select_Default;                             // 0x00C8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_4;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A60[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQMapMarker*                           CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A61[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireteamId_ReturnValue;                // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapMarkerType                              CallFunc_GetMarkerType_ReturnValue;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapMarkerType                              CallFunc_GetMarkerType_ReturnValue_1;              // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A62[0x2];                                     // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A63[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASQMapMarker*>                   K2Node_Select_Default_1;                           // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A64[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MarkerPing_C*                       K2Node_DynamicCast_AsBP_Marker_Ping;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A65[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQMapMarker*                           CallFunc_Array_Get_Item_1;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A66[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQMapMarker*                           CallFunc_Array_Get_Item_2;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A67[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFireteamId_ReturnValue_1;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_ManageMarkers) == 0x000008, "Wrong alignment on BP_PlayerController_C_ManageMarkers");
static_assert(sizeof(BP_PlayerController_C_ManageMarkers) == 0x000160, "Wrong size on BP_PlayerController_C_ManageMarkers");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, NewMarker) == 0x000000, "Member 'BP_PlayerController_C_ManageMarkers::NewMarker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, New_Marker_Type) == 0x000008, "Member 'BP_PlayerController_C_ManageMarkers::New_Marker_Type' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Current_Marker_List) == 0x000010, "Member 'BP_PlayerController_C_ManageMarkers::Current_Marker_List' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, L_Marker_FT) == 0x000020, "Member 'BP_PlayerController_C_ManageMarkers::L_Marker_FT' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, SpotMarkerCount) == 0x000024, "Member 'BP_PlayerController_C_ManageMarkers::SpotMarkerCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_object_Variable) == 0x000028, "Member 'BP_PlayerController_C_ManageMarkers::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_byte_Variable) == 0x00003A, "Member 'BP_PlayerController_C_ManageMarkers::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_object_Variable_1) == 0x000040, "Member 'BP_PlayerController_C_ManageMarkers::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_object_Variable_2) == 0x000050, "Member 'BP_PlayerController_C_ManageMarkers::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_object_Variable_3) == 0x000060, "Member 'BP_PlayerController_C_ManageMarkers::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_byte_Variable_1) == 0x000070, "Member 'BP_PlayerController_C_ManageMarkers::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Variable) == 0x000074, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Variable_1) == 0x000078, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Variable_2) == 0x00007C, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Variable_3) == 0x000080, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_object_Variable_4) == 0x000090, "Member 'BP_PlayerController_C_ManageMarkers::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_byte_Variable_2) == 0x0000A0, "Member 'BP_PlayerController_C_ManageMarkers::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Loop_Counter_Variable_1) == 0x0000A4, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_object_Variable_5) == 0x0000A8, "Member 'BP_PlayerController_C_ManageMarkers::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000BC, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_byte_Variable_3) == 0x0000BD, "Member 'BP_PlayerController_C_ManageMarkers::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_bool_Variable) == 0x0000BE, "Member 'BP_PlayerController_C_ManageMarkers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, K2Node_SwitchEnum_CmpSuccess) == 0x0000BF, "Member 'BP_PlayerController_C_ManageMarkers::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_IsCommander_ReturnValue) == 0x0000C0, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_IsCommander_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, K2Node_Select_Default) == 0x0000C8, "Member 'BP_PlayerController_C_ManageMarkers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Variable_4) == 0x0000D8, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Variable_5) == 0x0000E0, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_GetFireteamId_ReturnValue) == 0x0000F4, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_GetFireteamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_GetMarkerType_ReturnValue) == 0x0000F9, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_GetMarkerType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000FA, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_GetMarkerType_ReturnValue_1) == 0x0000FB, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_GetMarkerType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000FC, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_IsValid_ReturnValue_2) == 0x0000FD, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Less_IntInt_ReturnValue_1) == 0x000104, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, K2Node_Select_Default_1) == 0x000108, "Member 'BP_PlayerController_C_ManageMarkers::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, K2Node_DynamicCast_AsBP_Marker_Ping) == 0x000120, "Member 'BP_PlayerController_C_ManageMarkers::K2Node_DynamicCast_AsBP_Marker_Ping' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'BP_PlayerController_C_ManageMarkers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, Temp_int_Array_Index_Variable_1) == 0x00012C, "Member 'BP_PlayerController_C_ManageMarkers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Array_Length_ReturnValue_2) == 0x000138, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_IsValid_ReturnValue_3) == 0x00013C, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_Array_Get_Item_2) == 0x000140, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, K2Node_Select_Default_2) == 0x000148, "Member 'BP_PlayerController_C_ManageMarkers::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_IsValid_ReturnValue_4) == 0x00014C, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, K2Node_Select_Default_3) == 0x000150, "Member 'BP_PlayerController_C_ManageMarkers::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_GetFireteamId_ReturnValue_1) == 0x000154, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_GetFireteamId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, K2Node_Select_Default_4) == 0x000158, "Member 'BP_PlayerController_C_ManageMarkers::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00015C, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ManageMarkers, CallFunc_IsValid_ReturnValue_5) == 0x00015D, "Member 'BP_PlayerController_C_ManageMarkers::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.ClearFiring
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerController_C_ClearFiring final
{
public:
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A68[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A69[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleSeat*                         CallFunc_GetCurrentSeatPawn_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleInventoryComponent*           CallFunc_GetVehicleInventory_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6B[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQPawnInventoryComponent*              CallFunc_GetInventory_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_ClearFiring) == 0x000008, "Wrong alignment on BP_PlayerController_C_ClearFiring");
static_assert(sizeof(BP_PlayerController_C_ClearFiring) == 0x000050, "Wrong size on BP_PlayerController_C_ClearFiring");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, K2Node_DynamicCast_AsSQPlayer_State) == 0x000000, "Member 'BP_PlayerController_C_ClearFiring::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_PlayerController_C_ClearFiring::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_GetSoldier_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_GetCurrentSeatPawn_ReturnValue) == 0x000020, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_GetCurrentSeatPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_GetVehicleInventory_ReturnValue) == 0x000030, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_GetVehicleInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_IsValid_ReturnValue_3) == 0x000039, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_GetInventory_ReturnValue) == 0x000040, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_IsInVehicle_ReturnValue) == 0x000048, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_IsValid_ReturnValue_4) == 0x000049, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ClearFiring, CallFunc_IsValid_ReturnValue_5) == 0x00004A, "Member 'BP_PlayerController_C_ClearFiring::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Leave Menu
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerController_C_Leave_Menu final
{
public:
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Showing_Main_Menu_Showing;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Leave_Menu) == 0x000008, "Wrong alignment on BP_PlayerController_C_Leave_Menu");
static_assert(sizeof(BP_PlayerController_C_Leave_Menu) == 0x000038, "Wrong size on BP_PlayerController_C_Leave_Menu");
static_assert(offsetof(BP_PlayerController_C_Leave_Menu, CallFunc_GetHUD_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_Leave_Menu::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Leave_Menu, K2Node_DynamicCast_AsBPI_HUD) == 0x000008, "Member 'BP_PlayerController_C_Leave_Menu::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Leave_Menu, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerController_C_Leave_Menu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Leave_Menu, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000020, "Member 'BP_PlayerController_C_Leave_Menu::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Leave_Menu, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PlayerController_C_Leave_Menu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Leave_Menu, CallFunc_Get_Showing_Main_Menu_Showing) == 0x000031, "Member 'BP_PlayerController_C_Leave_Menu::CallFunc_Get_Showing_Main_Menu_Showing' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.CommandKeyAction
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerController_C_CommandKeyAction final
{
public:
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Deployment;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Command;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_MenuBase_C*                        CallFunc_Get_Main_Menus_Roaming;                   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_CommandKeyAction) == 0x000008, "Wrong alignment on BP_PlayerController_C_CommandKeyAction");
static_assert(sizeof(BP_PlayerController_C_CommandKeyAction) == 0x000060, "Wrong size on BP_PlayerController_C_CommandKeyAction");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, CallFunc_K2_GetPawn_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_CommandKeyAction::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_CommandKeyAction::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_CommandKeyAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, K2Node_DynamicCast_AsBPI_HUD) == 0x000018, "Member 'BP_PlayerController_C_CommandKeyAction::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerController_C_CommandKeyAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000030, "Member 'BP_PlayerController_C_CommandKeyAction::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerController_C_CommandKeyAction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, CallFunc_Get_Main_Menus_Deployment) == 0x000048, "Member 'BP_PlayerController_C_CommandKeyAction::CallFunc_Get_Main_Menus_Deployment' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, CallFunc_Get_Main_Menus_Command) == 0x000050, "Member 'BP_PlayerController_C_CommandKeyAction::CallFunc_Get_Main_Menus_Command' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CommandKeyAction, CallFunc_Get_Main_Menus_Roaming) == 0x000058, "Member 'BP_PlayerController_C_CommandKeyAction::CallFunc_Get_Main_Menus_Roaming' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Can Remove Marker
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerController_C_Can_Remove_Marker final
{
public:
	int32                                         SpotMarkerCount;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Can_Remove_Marker) == 0x000004, "Wrong alignment on BP_PlayerController_C_Can_Remove_Marker");
static_assert(sizeof(BP_PlayerController_C_Can_Remove_Marker) == 0x000004, "Wrong size on BP_PlayerController_C_Can_Remove_Marker");
static_assert(offsetof(BP_PlayerController_C_Can_Remove_Marker, SpotMarkerCount) == 0x000000, "Member 'BP_PlayerController_C_Can_Remove_Marker::SpotMarkerCount' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Can Place Marker
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_Can_Place_Marker final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A70[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpotMarkerCount;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Can_Place_Marker) == 0x000004, "Wrong alignment on BP_PlayerController_C_Can_Place_Marker");
static_assert(sizeof(BP_PlayerController_C_Can_Place_Marker) == 0x000008, "Wrong size on BP_PlayerController_C_Can_Place_Marker");
static_assert(offsetof(BP_PlayerController_C_Can_Place_Marker, Valid) == 0x000000, "Member 'BP_PlayerController_C_Can_Place_Marker::Valid' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Can_Place_Marker, SpotMarkerCount) == 0x000004, "Member 'BP_PlayerController_C_Can_Place_Marker::SpotMarkerCount' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.MouseWheelZoomMapAction
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerController_C_MouseWheelZoomMapAction final
{
public:
	float                                         MouseWheelAxis;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A71[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_MouseWheelZoomMapAction) == 0x000008, "Wrong alignment on BP_PlayerController_C_MouseWheelZoomMapAction");
static_assert(sizeof(BP_PlayerController_C_MouseWheelZoomMapAction) == 0x000028, "Wrong size on BP_PlayerController_C_MouseWheelZoomMapAction");
static_assert(offsetof(BP_PlayerController_C_MouseWheelZoomMapAction, MouseWheelAxis) == 0x000000, "Member 'BP_PlayerController_C_MouseWheelZoomMapAction::MouseWheelAxis' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_MouseWheelZoomMapAction, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_MouseWheelZoomMapAction::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_MouseWheelZoomMapAction, K2Node_DynamicCast_AsBPI_HUD) == 0x000010, "Member 'BP_PlayerController_C_MouseWheelZoomMapAction::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_MouseWheelZoomMapAction, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerController_C_MouseWheelZoomMapAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Remove Fireteam Markers
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerController_C_Remove_Fireteam_Markers final
{
public:
	bool                                          bAction;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A72[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A73[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQMapMarker*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A74[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Remove_Fireteam_Markers) == 0x000008, "Wrong alignment on BP_PlayerController_C_Remove_Fireteam_Markers");
static_assert(sizeof(BP_PlayerController_C_Remove_Fireteam_Markers) == 0x000038, "Wrong size on BP_PlayerController_C_Remove_Fireteam_Markers");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, bAction) == 0x000000, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::bAction' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, CallFunc_IsSquadLeader_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Fireteam_Markers, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerController_C_Remove_Fireteam_Markers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Force Show Spawns on Map
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PlayerController_C_Force_Show_Spawns_on_Map final
{
public:
	class USaveData_UI_C*                         L_Save;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A75[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_MapControls_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBP_MapWidgetRallyPoint_C*>      CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_MapControls_C*                       CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MapWidgetRallyPoint_C*              CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A76[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_MapWidgetSpawnPoint_C*>      CallFunc_GetAllWidgetsOfClass_FoundWidgets_2;      // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MapWidgetSpawnPoint_C*              CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A77[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Force_Show_Spawns_on_Map) == 0x000008, "Wrong alignment on BP_PlayerController_C_Force_Show_Spawns_on_Map");
static_assert(sizeof(BP_PlayerController_C_Force_Show_Spawns_on_Map) == 0x0000A0, "Wrong size on BP_PlayerController_C_Force_Show_Spawns_on_Map");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, L_Save) == 0x000000, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::L_Save' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000030, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000040, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Less_IntInt_ReturnValue_1) == 0x000069, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_GetAllWidgetsOfClass_FoundWidgets_2) == 0x000070, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_GetAllWidgetsOfClass_FoundWidgets_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000080, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Array_Length_ReturnValue_2) == 0x000094, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Force_Show_Spawns_on_Map, CallFunc_Less_IntInt_ReturnValue_2) == 0x000098, "Member 'BP_PlayerController_C_Force_Show_Spawns_on_Map::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Try to Open Menu
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerController_C_Try_to_Open_Menu final
{
public:
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A78[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_1;                    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A79[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD_2;                    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Try_to_Open_Menu) == 0x000008, "Wrong alignment on BP_PlayerController_C_Try_to_Open_Menu");
static_assert(sizeof(BP_PlayerController_C_Try_to_Open_Menu) == 0x000060, "Wrong size on BP_PlayerController_C_Try_to_Open_Menu");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, CallFunc_GetHUD_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_Try_to_Open_Menu::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_Try_to_Open_Menu::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, K2Node_DynamicCast_AsBPI_HUD) == 0x000010, "Member 'BP_PlayerController_C_Try_to_Open_Menu::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerController_C_Try_to_Open_Menu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PlayerController_C_Try_to_Open_Menu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, CallFunc_GetHUD_ReturnValue_1) == 0x000028, "Member 'BP_PlayerController_C_Try_to_Open_Menu::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, K2Node_DynamicCast_AsBPI_HUD_1) == 0x000030, "Member 'BP_PlayerController_C_Try_to_Open_Menu::K2Node_DynamicCast_AsBPI_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerController_C_Try_to_Open_Menu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, K2Node_DynamicCast_AsBPI_HUD_2) == 0x000048, "Member 'BP_PlayerController_C_Try_to_Open_Menu::K2Node_DynamicCast_AsBPI_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Try_to_Open_Menu, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_PlayerController_C_Try_to_Open_Menu::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Remove Last Command Request Marker
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_Remove_Last_Command_Request_Marker final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7A[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Remove_Last_Command_Request_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_Remove_Last_Command_Request_Marker");
static_assert(sizeof(BP_PlayerController_C_Remove_Last_Command_Request_Marker) == 0x000018, "Wrong size on BP_PlayerController_C_Remove_Last_Command_Request_Marker");
static_assert(offsetof(BP_PlayerController_C_Remove_Last_Command_Request_Marker, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_Remove_Last_Command_Request_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Last_Command_Request_Marker, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerController_C_Remove_Last_Command_Request_Marker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Last_Command_Request_Marker, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_Remove_Last_Command_Request_Marker::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Remove_Last_Command_Request_Marker, CallFunc_IsValid_ReturnValue_2) == 0x000010, "Member 'BP_PlayerController_C_Remove_Last_Command_Request_Marker::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Create Command Request
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerController_C_Create_Command_Request final
{
public:
	class UClass*                                 Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7B[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Distance;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7C[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Map_Marker_Command_Master; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCommander_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCommander_ReturnValue_1;                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCommander_ReturnValue_2;                // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7D[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A7E[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7F[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapMarker_CommandMaster_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Create_Command_Request) == 0x000010, "Wrong alignment on BP_PlayerController_C_Create_Command_Request");
static_assert(sizeof(BP_PlayerController_C_Create_Command_Request) == 0x000090, "Wrong size on BP_PlayerController_C_Create_Command_Request");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, Action) == 0x000000, "Member 'BP_PlayerController_C_Create_Command_Request::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, Transform) == 0x000010, "Member 'BP_PlayerController_C_Create_Command_Request::Transform' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, Distance) == 0x000040, "Member 'BP_PlayerController_C_Create_Command_Request::Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_IsValidClass_ReturnValue) == 0x000045, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, K2Node_ClassDynamicCast_AsBP_Map_Marker_Command_Master) == 0x000048, "Member 'BP_PlayerController_C_Create_Command_Request::K2Node_ClassDynamicCast_AsBP_Map_Marker_Command_Master' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, K2Node_ClassDynamicCast_bSuccess) == 0x000050, "Member 'BP_PlayerController_C_Create_Command_Request::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_IsCommander_ReturnValue) == 0x000051, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_IsCommander_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_IsCommander_ReturnValue_1) == 0x000052, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_IsCommander_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_IsCommander_ReturnValue_2) == 0x000053, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_IsCommander_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_GetTeam_ReturnValue) == 0x00005C, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, Temp_float_Variable) == 0x000060, "Member 'BP_PlayerController_C_Create_Command_Request::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_Conv_IntToByte_ReturnValue) == 0x000064, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_GetValidValue_ReturnValue) == 0x000065, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, Temp_bool_Variable) == 0x000066, "Member 'BP_PlayerController_C_Create_Command_Request::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, K2Node_Select_Default) == 0x000068, "Member 'BP_PlayerController_C_Create_Command_Request::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_K2_GetPawn_ReturnValue) == 0x000078, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Command_Request, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_PlayerController_C_Create_Command_Request::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Create Director Marker
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PlayerController_C_Create_Director_Marker final
{
public:
	class UClass*                                 Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A80[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Distance;                                          // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Squad;                                             // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCommander_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A81[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapMarker_DirectorMaster_C*         CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A82[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeam_ReturnValue;                      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A83[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A84[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapMarker_DirectorMaster_C*         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A85[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Create_Director_Marker) == 0x000010, "Wrong alignment on BP_PlayerController_C_Create_Director_Marker");
static_assert(sizeof(BP_PlayerController_C_Create_Director_Marker) == 0x0000A0, "Wrong size on BP_PlayerController_C_Create_Director_Marker");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, Action) == 0x000000, "Member 'BP_PlayerController_C_Create_Director_Marker::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, Transform) == 0x000010, "Member 'BP_PlayerController_C_Create_Director_Marker::Transform' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, Distance) == 0x000040, "Member 'BP_PlayerController_C_Create_Director_Marker::Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, Squad) == 0x000044, "Member 'BP_PlayerController_C_Create_Director_Marker::Squad' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_IsCommander_ReturnValue) == 0x000048, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_IsCommander_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_Less_IntInt_ReturnValue) == 0x00004A, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, Temp_bool_Variable) == 0x000058, "Member 'BP_PlayerController_C_Create_Director_Marker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, K2Node_Select_Default) == 0x00005C, "Member 'BP_PlayerController_C_Create_Director_Marker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_GetTeam_ReturnValue) == 0x000060, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_Conv_IntToByte_ReturnValue) == 0x000064, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000068, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_GetValidValue_ReturnValue) == 0x000070, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_K2_GetPawn_ReturnValue) == 0x000080, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Create_Director_Marker, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'BP_PlayerController_C_Create_Director_Marker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Get Deployable
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_Get_Deployable final
{
public:
	class UClass*                                 Deployable;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Get_Deployable) == 0x000008, "Wrong alignment on BP_PlayerController_C_Get_Deployable");
static_assert(sizeof(BP_PlayerController_C_Get_Deployable) == 0x000008, "Wrong size on BP_PlayerController_C_Get_Deployable");
static_assert(offsetof(BP_PlayerController_C_Get_Deployable, Deployable) == 0x000000, "Member 'BP_PlayerController_C_Get_Deployable::Deployable' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.PossessAdminCam
// 0x00E0 (0x00E0 - 0x0000)
struct BP_PlayerController_C_PossessAdminCam final
{
public:
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A86[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A87[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeveloperAdminCam_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State_1;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A88[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue_1;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSoldierInAVehicle_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCameraMan_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A89[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8A[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQCameraMan*                           K2Node_DynamicCast_AsSQCamera_Man;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8B[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeveloperAdminCam_C*                CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_PossessAdminCam) == 0x000010, "Wrong alignment on BP_PlayerController_C_PossessAdminCam");
static_assert(sizeof(BP_PlayerController_C_PossessAdminCam) == 0x0000E0, "Wrong size on BP_PlayerController_C_PossessAdminCam");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, K2Node_DynamicCast_AsSQPlayer_State) == 0x000000, "Member 'BP_PlayerController_C_PossessAdminCam::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_PlayerController_C_PossessAdminCam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_GetSoldier_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsValid_ReturnValue_3) == 0x00001B, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, K2Node_DynamicCast_AsSQPlayer_State_1) == 0x000060, "Member 'BP_PlayerController_C_PossessAdminCam::K2Node_DynamicCast_AsSQPlayer_State_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_PlayerController_C_PossessAdminCam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_GetSoldier_ReturnValue_1) == 0x000070, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_GetSoldier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsValid_ReturnValue_4) == 0x000078, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsValid_ReturnValue_5) == 0x000079, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsValid_ReturnValue_6) == 0x00007A, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsValid_ReturnValue_7) == 0x00007B, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsSoldierInAVehicle_ReturnValue) == 0x00007C, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsSoldierInAVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsCameraMan_ReturnValue) == 0x00007D, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsCameraMan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_Not_PreBool_ReturnValue) == 0x00007E, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_K2_GetPawn_ReturnValue) == 0x000080, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_IsValid_ReturnValue_8) == 0x000089, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, K2Node_DynamicCast_AsSQCamera_Man) == 0x000090, "Member 'BP_PlayerController_C_PossessAdminCam::K2Node_DynamicCast_AsSQCamera_Man' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_PlayerController_C_PossessAdminCam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000D0, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PossessAdminCam, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000D8, "Member 'BP_PlayerController_C_PossessAdminCam::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Set Out of Bounds Notification
// 0x00B8 (0x00B8 - 0x0000)
struct BP_PlayerController_C_Set_Out_of_Bounds_Notification final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BoundaryInterface_C> K2Node_DynamicCast_AsBPI_Boundary_Interface;       // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BoundaryInterface_C> K2Node_DynamicCast_AsBPI_Boundary_Interface_1;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A90[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A91[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD_1;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A92[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD_1;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Set_Out_of_Bounds_Notification) == 0x000008, "Wrong alignment on BP_PlayerController_C_Set_Out_of_Bounds_Notification");
static_assert(sizeof(BP_PlayerController_C_Set_Out_of_Bounds_Notification) == 0x0000B8, "Wrong size on BP_PlayerController_C_Set_Out_of_Bounds_Notification");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, Show) == 0x000000, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::Show' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000018, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_AsBPI_Boundary_Interface) == 0x000020, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_AsBPI_Boundary_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_AsBPI_Boundary_Interface_1) == 0x000038, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_AsBPI_Boundary_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, CallFunc_GetHUD_ReturnValue) == 0x000050, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_AsSQHUD) == 0x000068, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000078, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_AsUMG_Base_HUD) == 0x000080, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_AsUMG_Base_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, CallFunc_GetHUD_ReturnValue_1) == 0x000090, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_AsSQHUD_1) == 0x000098, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_AsSQHUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_AsUMG_Base_HUD_1) == 0x0000A8, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_AsUMG_Base_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Out_of_Bounds_Notification, K2Node_DynamicCast_bSuccess_5) == 0x0000B0, "Member 'BP_PlayerController_C_Set_Out_of_Bounds_Notification::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.HandleFireteamUpdatedNotification
// 0x02E0 (0x02E0 - 0x0000)
struct BP_PlayerController_C_HandleFireteamUpdatedNotification final
{
public:
	int32                                         FireTeamIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFTL;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A93[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A94[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A95[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A96[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D8(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A97[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0110(0x0040)(HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0168(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D0(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x01E8(0x0018)()
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A98[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x0208(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0220(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0260(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A99[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0278(0x0018)()
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9A[0x2];                                     // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_4;                           // 0x0298(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x02B0(0x0018)()
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_HandleFireteamUpdatedNotification) == 0x000008, "Wrong alignment on BP_PlayerController_C_HandleFireteamUpdatedNotification");
static_assert(sizeof(BP_PlayerController_C_HandleFireteamUpdatedNotification) == 0x0002E0, "Wrong size on BP_PlayerController_C_HandleFireteamUpdatedNotification");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, FireTeamIndex) == 0x000000, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::FireTeamIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, IsFTL) == 0x000004, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::IsFTL' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_int_Variable) == 0x000008, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_text_Variable) == 0x000010, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_text_Variable_1) == 0x000028, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_text_Variable_2) == 0x000040, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_text_Variable_3) == 0x000058, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_bool_Variable) == 0x000070, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_object_Variable) == 0x000078, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_object_Variable_1) == 0x000080, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_bool_Variable_1) == 0x000088, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_int_Variable_1) == 0x00008C, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_text_Variable_4) == 0x000090, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_text_Variable_5) == 0x0000A8, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_text_Variable_6) == 0x0000C0, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_text_Variable_7) == 0x0000D8, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_bool_Variable_2) == 0x0000F0, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_Select_Default) == 0x0000F8, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_MakeStruct_FormatArgumentData) == 0x000110, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_Select_Default_1) == 0x000150, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_MakeStruct_FormatArgumentData_1) == 0x000168, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_Format_ReturnValue) == 0x0001A8, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_MakeArray_Array_1) == 0x0001C0, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_Format_ReturnValue_1) == 0x0001D0, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_Select_Default_2) == 0x0001E8, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000200, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000201, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_BooleanAND_ReturnValue) == 0x000202, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_Not_PreBool_ReturnValue) == 0x000203, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_Select_Default_3) == 0x000208, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_MakeStruct_FormatArgumentData_2) == 0x000220, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_MakeArray_Array_2) == 0x000260, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x000270, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_Format_ReturnValue_2) == 0x000278, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000290, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_BooleanAND_ReturnValue_1) == 0x000291, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000292, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, Temp_bool_Variable_3) == 0x000293, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000294, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_BooleanOR_ReturnValue) == 0x000295, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_Select_Default_4) == 0x000298, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, K2Node_Select_Default_5) == 0x0002B0, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x0002C8, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_HandleFireteamUpdatedNotification, CallFunc_GetColor_ReturnValue) == 0x0002D0, "Member 'BP_PlayerController_C_HandleFireteamUpdatedNotification::CallFunc_GetColor_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Set Restricted Team Zone Notification
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerController_C_Set_Restricted_Team_Zone_Notification final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD_1;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9F[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_BaseHUD_C*                         K2Node_DynamicCast_AsUMG_Base_HUD_1;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification) == 0x000008, "Wrong alignment on BP_PlayerController_C_Set_Restricted_Team_Zone_Notification");
static_assert(sizeof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification) == 0x000068, "Wrong size on BP_PlayerController_C_Set_Restricted_Team_Zone_Notification");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, Show) == 0x000000, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::Show' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, K2Node_DynamicCast_AsSQHUD) == 0x000020, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, CallFunc_GetHUD_ReturnValue_1) == 0x000030, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, K2Node_DynamicCast_AsSQHUD_1) == 0x000038, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::K2Node_DynamicCast_AsSQHUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, K2Node_DynamicCast_AsUMG_Base_HUD) == 0x000048, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::K2Node_DynamicCast_AsUMG_Base_HUD' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, K2Node_DynamicCast_AsUMG_Base_HUD_1) == 0x000058, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::K2Node_DynamicCast_AsUMG_Base_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Set_Restricted_Team_Zone_Notification, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'BP_PlayerController_C_Set_Restricted_Team_Zone_Notification::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.IsAimingDownSights
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerController_C_IsAimingDownSights final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA1[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAimingDownSights_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_IsAimingDownSights) == 0x000008, "Wrong alignment on BP_PlayerController_C_IsAimingDownSights");
static_assert(sizeof(BP_PlayerController_C_IsAimingDownSights) == 0x000038, "Wrong size on BP_PlayerController_C_IsAimingDownSights");
static_assert(offsetof(BP_PlayerController_C_IsAimingDownSights, ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_IsAimingDownSights::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsAimingDownSights, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_IsAimingDownSights::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsAimingDownSights, K2Node_DynamicCast_AsSQSoldier) == 0x000010, "Member 'BP_PlayerController_C_IsAimingDownSights::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsAimingDownSights, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerController_C_IsAimingDownSights::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsAimingDownSights, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_PlayerController_C_IsAimingDownSights::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsAimingDownSights, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000020, "Member 'BP_PlayerController_C_IsAimingDownSights::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsAimingDownSights, K2Node_DynamicCast_AsSQWeapon) == 0x000028, "Member 'BP_PlayerController_C_IsAimingDownSights::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsAimingDownSights, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_PlayerController_C_IsAimingDownSights::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_IsAimingDownSights, CallFunc_IsAimingDownSights_ReturnValue) == 0x000031, "Member 'BP_PlayerController_C_IsAimingDownSights::CallFunc_IsAimingDownSights_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.bCan Place Marker
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_bCan_Place_Marker final
{
public:
	bool                                          Can_Place;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_bCan_Place_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_bCan_Place_Marker");
static_assert(sizeof(BP_PlayerController_C_bCan_Place_Marker) == 0x000018, "Wrong size on BP_PlayerController_C_bCan_Place_Marker");
static_assert(offsetof(BP_PlayerController_C_bCan_Place_Marker, Can_Place) == 0x000000, "Member 'BP_PlayerController_C_bCan_Place_Marker::Can_Place' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Place_Marker, CallFunc_IsSquadLeader_ReturnValue) == 0x000001, "Member 'BP_PlayerController_C_bCan_Place_Marker::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Place_Marker, K2Node_DynamicCast_AsSQPlayer_State) == 0x000008, "Member 'BP_PlayerController_C_bCan_Place_Marker::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Place_Marker, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PlayerController_C_bCan_Place_Marker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Place_Marker, CallFunc_IsFireTeamLeader_ReturnValue) == 0x000011, "Member 'BP_PlayerController_C_bCan_Place_Marker::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Place_Marker, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'BP_PlayerController_C_bCan_Place_Marker::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.bCan Remove Marker
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerController_C_bCan_Remove_Marker final
{
public:
	bool                                          Can_Remove;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_FT_ID;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Fireteam_Leader;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA4[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA5[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_1;              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_bCan_Remove_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_bCan_Remove_Marker");
static_assert(sizeof(BP_PlayerController_C_bCan_Remove_Marker) == 0x000030, "Wrong size on BP_PlayerController_C_bCan_Remove_Marker");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, Can_Remove) == 0x000000, "Member 'BP_PlayerController_C_bCan_Remove_Marker::Can_Remove' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, L_FT_ID) == 0x000004, "Member 'BP_PlayerController_C_bCan_Remove_Marker::L_FT_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, L_Fireteam_Leader) == 0x000008, "Member 'BP_PlayerController_C_bCan_Remove_Marker::L_Fireteam_Leader' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_IsSquadLeader_ReturnValue) == 0x00000C, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000F, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_BooleanAND_ReturnValue_1) == 0x000011, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, K2Node_DynamicCast_AsSQPlayer_State) == 0x000018, "Member 'BP_PlayerController_C_bCan_Remove_Marker::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerController_C_bCan_Remove_Marker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_GetFireTeamIndex_ReturnValue) == 0x000024, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_BooleanAND_ReturnValue_2) == 0x000028, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_IsFireTeamLeader_ReturnValue) == 0x00002A, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_IsSquadLeader_ReturnValue_1) == 0x00002B, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_IsSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCan_Remove_Marker, CallFunc_BooleanOR_ReturnValue_1) == 0x00002C, "Member 'BP_PlayerController_C_bCan_Remove_Marker::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Get Last Selected Marker
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_Get_Last_Selected_Marker final
{
public:
	class USQMapWidgetMapMarkerSelectable*        Marker;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Get_Last_Selected_Marker) == 0x000008, "Wrong alignment on BP_PlayerController_C_Get_Last_Selected_Marker");
static_assert(sizeof(BP_PlayerController_C_Get_Last_Selected_Marker) == 0x000008, "Wrong size on BP_PlayerController_C_Get_Last_Selected_Marker");
static_assert(offsetof(BP_PlayerController_C_Get_Last_Selected_Marker, Marker) == 0x000000, "Member 'BP_PlayerController_C_Get_Last_Selected_Marker::Marker' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Get Command Action Condition
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_Get_Command_Action_Condition final
{
public:
	class UClass*                                 Condition_Class;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Get_Command_Action_Condition) == 0x000008, "Wrong alignment on BP_PlayerController_C_Get_Command_Action_Condition");
static_assert(sizeof(BP_PlayerController_C_Get_Command_Action_Condition) == 0x000008, "Wrong size on BP_PlayerController_C_Get_Command_Action_Condition");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Action_Condition, Condition_Class) == 0x000000, "Member 'BP_PlayerController_C_Get_Command_Action_Condition::Condition_Class' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Get Command Request Available
// 0x0024 (0x0024 - 0x0000)
struct BP_PlayerController_C_Get_Command_Request_Available final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Remaining_Time;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA7[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA8[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_Get_Command_Request_Available) == 0x000004, "Wrong alignment on BP_PlayerController_C_Get_Command_Request_Available");
static_assert(sizeof(BP_PlayerController_C_Get_Command_Request_Available) == 0x000024, "Wrong size on BP_PlayerController_C_Get_Command_Request_Available");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Request_Available, Available) == 0x000000, "Member 'BP_PlayerController_C_Get_Command_Request_Available::Available' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Request_Available, Remaining_Time) == 0x000004, "Member 'BP_PlayerController_C_Get_Command_Request_Available::Remaining_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Request_Available, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_Get_Command_Request_Available::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Request_Available, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerController_C_Get_Command_Request_Available::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Request_Available, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_Get_Command_Request_Available::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Request_Available, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BP_PlayerController_C_Get_Command_Request_Available::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Request_Available, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_PlayerController_C_Get_Command_Request_Available::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Request_Available, CallFunc_FMax_ReturnValue) == 0x00001C, "Member 'BP_PlayerController_C_Get_Command_Request_Available::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Get_Command_Request_Available, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'BP_PlayerController_C_Get_Command_Request_Available::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.bCanRemoveMapMarkerNew
// 0x0110 (0x0110 - 0x0000)
struct BP_PlayerController_C_bCanRemoveMapMarkerNew final
{
public:
	class UBP_MapMarker_Selectable_C*             Map_Marker;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Remove;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA9[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQMapMarkerVisualData                 CallFunc_GetMapMarkerData_ReturnValue;             // 0x0010(0x00C8)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_1;              // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_2;              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_3;              // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAA[0x2];                                     // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAB[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFireTeamLeader_ReturnValue;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_4;              // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_bCanRemoveMapMarkerNew) == 0x000008, "Wrong alignment on BP_PlayerController_C_bCanRemoveMapMarkerNew");
static_assert(sizeof(BP_PlayerController_C_bCanRemoveMapMarkerNew) == 0x000110, "Wrong size on BP_PlayerController_C_bCanRemoveMapMarkerNew");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, Map_Marker) == 0x000000, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::Map_Marker' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, Can_Remove) == 0x000008, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::Can_Remove' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_IsSquadLeader_ReturnValue) == 0x000009, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_GetMapMarkerData_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_GetMapMarkerData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D9, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000DA, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000DB, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000DC, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000DD, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000DE, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanOR_ReturnValue) == 0x0000DF, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000E0, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue) == 0x0000E1, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E2, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0000E3, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0000E4, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanOR_ReturnValue_1) == 0x0000E5, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0000E6, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_IsSquadLeader_ReturnValue_1) == 0x0000E7, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_IsSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_IsSquadLeader_ReturnValue_2) == 0x0000E9, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_IsSquadLeader_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_IsSquadLeader_ReturnValue_3) == 0x0000EA, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_IsSquadLeader_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue_2) == 0x0000EB, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue_3) == 0x0000EC, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanOR_ReturnValue_2) == 0x0000ED, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, K2Node_DynamicCast_AsSQPlayer_State) == 0x0000F0, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanOR_ReturnValue_3) == 0x0000F9, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_GetFireTeamIndex_ReturnValue) == 0x0000FC, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_IsFireTeamLeader_ReturnValue) == 0x000100, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_IsFireTeamLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000101, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue_4) == 0x000102, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_IsSquadLeader_ReturnValue_4) == 0x000103, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_IsSquadLeader_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000104, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanOR_ReturnValue_4) == 0x000105, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue_5) == 0x000106, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue_6) == 0x000107, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue_7) == 0x000108, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue_8) == 0x000109, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanOR_ReturnValue_5) == 0x00010A, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanOR_ReturnValue_6) == 0x00010B, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanOR_ReturnValue_7) == 0x00010C, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_bCanRemoveMapMarkerNew, CallFunc_BooleanAND_ReturnValue_9) == 0x00010D, "Member 'BP_PlayerController_C_bCanRemoveMapMarkerNew::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.CanOpenRadialMenu
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerController_C_CanOpenRadialMenu final
{
public:
	bool                                          Param_CanOpenRadialMenu;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAD[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAE[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AAF[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPullingTrigger_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPendingFire_ReturnValue;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_CanOpenRadialMenu) == 0x000008, "Wrong alignment on BP_PlayerController_C_CanOpenRadialMenu");
static_assert(sizeof(BP_PlayerController_C_CanOpenRadialMenu) == 0x000048, "Wrong size on BP_PlayerController_C_CanOpenRadialMenu");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, Param_CanOpenRadialMenu) == 0x000000, "Member 'BP_PlayerController_C_CanOpenRadialMenu::Param_CanOpenRadialMenu' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_CanOpenRadialMenu::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_CanOpenRadialMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, K2Node_DynamicCast_AsSQSoldier) == 0x000018, "Member 'BP_PlayerController_C_CanOpenRadialMenu::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerController_C_CanOpenRadialMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000028, "Member 'BP_PlayerController_C_CanOpenRadialMenu::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, CallFunc_IsAlive_ReturnValue) == 0x000030, "Member 'BP_PlayerController_C_CanOpenRadialMenu::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_PlayerController_C_CanOpenRadialMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, K2Node_DynamicCast_AsSQWeapon) == 0x000038, "Member 'BP_PlayerController_C_CanOpenRadialMenu::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_PlayerController_C_CanOpenRadialMenu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, CallFunc_IsPullingTrigger_ReturnValue) == 0x000041, "Member 'BP_PlayerController_C_CanOpenRadialMenu::CallFunc_IsPullingTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, CallFunc_IsPendingFire_ReturnValue) == 0x000042, "Member 'BP_PlayerController_C_CanOpenRadialMenu::CallFunc_IsPendingFire_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, CallFunc_BooleanOR_ReturnValue) == 0x000043, "Member 'BP_PlayerController_C_CanOpenRadialMenu::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_CanOpenRadialMenu, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BP_PlayerController_C_CanOpenRadialMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.GetDeployableReference
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerController_C_GetDeployableReference final
{
public:
	class USQDeployableSettings*                  InDeployableSettings;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   OutDeployableReference;                            // 0x0008(0x0028)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	class USQLayer*                               CallFunc_TryGetCurrentLayer_OutLayer;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetCurrentLayer_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB0[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQDeployableSettings_C*             K2Node_DynamicCast_AsBP_SQDeployable_Settings;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB1[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_TryGetDeployableWithLayer_OutDeployable;  // 0x0050(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetDeployableWithLayer_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_GetDeployableReference) == 0x000008, "Wrong alignment on BP_PlayerController_C_GetDeployableReference");
static_assert(sizeof(BP_PlayerController_C_GetDeployableReference) == 0x000080, "Wrong size on BP_PlayerController_C_GetDeployableReference");
static_assert(offsetof(BP_PlayerController_C_GetDeployableReference, InDeployableSettings) == 0x000000, "Member 'BP_PlayerController_C_GetDeployableReference::InDeployableSettings' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_GetDeployableReference, OutDeployableReference) == 0x000008, "Member 'BP_PlayerController_C_GetDeployableReference::OutDeployableReference' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_GetDeployableReference, CallFunc_TryGetCurrentLayer_OutLayer) == 0x000030, "Member 'BP_PlayerController_C_GetDeployableReference::CallFunc_TryGetCurrentLayer_OutLayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_GetDeployableReference, CallFunc_TryGetCurrentLayer_ReturnValue) == 0x000038, "Member 'BP_PlayerController_C_GetDeployableReference::CallFunc_TryGetCurrentLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_GetDeployableReference, K2Node_DynamicCast_AsBP_SQDeployable_Settings) == 0x000040, "Member 'BP_PlayerController_C_GetDeployableReference::K2Node_DynamicCast_AsBP_SQDeployable_Settings' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_GetDeployableReference, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerController_C_GetDeployableReference::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_GetDeployableReference, CallFunc_TryGetDeployableWithLayer_OutDeployable) == 0x000050, "Member 'BP_PlayerController_C_GetDeployableReference::CallFunc_TryGetDeployableWithLayer_OutDeployable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_GetDeployableReference, CallFunc_TryGetDeployableWithLayer_ReturnValue) == 0x000078, "Member 'BP_PlayerController_C_GetDeployableReference::CallFunc_TryGetDeployableWithLayer_ReturnValue' has a wrong offset!");

}


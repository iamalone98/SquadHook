#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VehicleSpeedo

#include "Basic.hpp"

#include "ESQVehicleTag_structs.hpp"
#include "UMG_structs.hpp"
#include "Squad_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.ExecuteUbergraph_UMG_VehicleSpeedo
// 0x0188 (0x0188 - 0x0000)
struct UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3839[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383A[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383B[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383C[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383D[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_CustomEvent_Soldier;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             K2Node_CustomEvent_Vehicle;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                K2Node_CustomEvent_FromSeat;                       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                K2Node_CustomEvent_ToSeat;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383E[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetDriverSeat_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQGroundVehicle*                       K2Node_DynamicCast_AsSQGround_Vehicle;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383F[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GearText_ReturnValue;                     // 0x00B8(0x0018)()
	struct FLinearColor                           CallFunc_GearColor_ReturnValue;                    // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3840[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQTeamState*                           K2Node_CustomEvent_OldTeam;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           K2Node_CustomEvent_NewTeam;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3841[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQSoldier* Soldier, class ASQVehicle* Vehicle, class USQVehicleSeatComponent* FromSeat, class USQVehicleSeatComponent* ToSeat)> K2Node_CreateDelegate_OutputDelegate;              // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3842[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0140(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3843[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3844[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0168(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetSpeedometerRange_ReturnValue;          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo) == 0x000008, "Wrong alignment on UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo");
static_assert(sizeof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo) == 0x000188, "Wrong size on UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, EntryPoint) == 0x000000, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_Event_MyGeometry) == 0x000008, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_Event_InDeltaTime) == 0x000040, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_IsValid_ReturnValue_1) == 0x000045, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_MapRangeClamped_ReturnValue) == 0x000054, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00005C, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, Temp_bool_Has_Been_Initd_Variable_1) == 0x000060, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_IsValid_ReturnValue_3) == 0x000061, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000068, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_IsVisible_ReturnValue) == 0x000070, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CustomEvent_Soldier) == 0x000078, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CustomEvent_Soldier' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CustomEvent_Vehicle) == 0x000080, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CustomEvent_Vehicle' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CustomEvent_FromSeat) == 0x000088, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CustomEvent_FromSeat' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CustomEvent_ToSeat) == 0x000090, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CustomEvent_ToSeat' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, Temp_bool_IsClosed_Variable) == 0x000098, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_IsValid_ReturnValue_4) == 0x000099, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_GetDriverSeat_ReturnValue) == 0x0000A0, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_GetDriverSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_DynamicCast_AsSQGround_Vehicle) == 0x0000A8, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_DynamicCast_AsSQGround_Vehicle' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B1, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_GearText_ReturnValue) == 0x0000B8, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_GearText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_GearColor_ReturnValue) == 0x0000D0, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_GearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, Temp_bool_IsClosed_Variable_1) == 0x0000E0, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CustomEvent_OldTeam) == 0x0000E8, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CustomEvent_OldTeam' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CustomEvent_NewTeam) == 0x0000F0, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CustomEvent_NewTeam' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_K2_GetPawn_ReturnValue) == 0x0000F8, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_DynamicCast_AsSQSoldier) == 0x000100, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CreateDelegate_OutputDelegate) == 0x00010C, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CreateDelegate_OutputDelegate_1) == 0x00011C, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CreateDelegate_OutputDelegate_2) == 0x00012C, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000140, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000148, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_IsValid_ReturnValue_5) == 0x000150, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CreateDelegate_OutputDelegate_3) == 0x000154, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000168, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, K2Node_CreateDelegate_OutputDelegate_4) == 0x000170, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo, CallFunc_GetSpeedometerRange_ReturnValue) == 0x000180, "Member 'UMG_VehicleSpeedo_C_ExecuteUbergraph_UMG_VehicleSpeedo::CallFunc_GetSpeedometerRange_ReturnValue' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Changed Team
// 0x0010 (0x0010 - 0x0000)
struct UMG_VehicleSpeedo_C_Changed_Team final
{
public:
	class ASQTeamState*                           OldTeam;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           NewTeam;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Changed_Team) == 0x000008, "Wrong alignment on UMG_VehicleSpeedo_C_Changed_Team");
static_assert(sizeof(UMG_VehicleSpeedo_C_Changed_Team) == 0x000010, "Wrong size on UMG_VehicleSpeedo_C_Changed_Team");
static_assert(offsetof(UMG_VehicleSpeedo_C_Changed_Team, OldTeam) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Changed_Team::OldTeam' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Changed_Team, NewTeam) == 0x000008, "Member 'UMG_VehicleSpeedo_C_Changed_Team::NewTeam' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Update Vehicle
// 0x0020 (0x0020 - 0x0000)
struct UMG_VehicleSpeedo_C_Update_Vehicle final
{
public:
	class ASQSoldier*                             Soldier;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             Vehicle;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                FromSeat;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                ToSeat;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Update_Vehicle) == 0x000008, "Wrong alignment on UMG_VehicleSpeedo_C_Update_Vehicle");
static_assert(sizeof(UMG_VehicleSpeedo_C_Update_Vehicle) == 0x000020, "Wrong size on UMG_VehicleSpeedo_C_Update_Vehicle");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Vehicle, Soldier) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Update_Vehicle::Soldier' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Vehicle, Vehicle) == 0x000008, "Member 'UMG_VehicleSpeedo_C_Update_Vehicle::Vehicle' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Vehicle, FromSeat) == 0x000010, "Member 'UMG_VehicleSpeedo_C_Update_Vehicle::FromSeat' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Vehicle, ToSeat) == 0x000018, "Member 'UMG_VehicleSpeedo_C_Update_Vehicle::ToSeat' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Tick
// 0x003C (0x003C - 0x0000)
struct UMG_VehicleSpeedo_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Tick) == 0x000004, "Wrong alignment on UMG_VehicleSpeedo_C_Tick");
static_assert(sizeof(UMG_VehicleSpeedo_C_Tick) == 0x00003C, "Wrong size on UMG_VehicleSpeedo_C_Tick");
static_assert(offsetof(UMG_VehicleSpeedo_C_Tick, MyGeometry) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Tick, InDeltaTime) == 0x000038, "Member 'UMG_VehicleSpeedo_C_Tick::InDeltaTime' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.GearText
// 0x00B0 (0x00B0 - 0x0000)
struct UMG_VehicleSpeedo_C_GearText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3845[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3846[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3847[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentGear_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3848[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0080(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0098(0x0018)()
};
static_assert(alignof(UMG_VehicleSpeedo_C_GearText) == 0x000008, "Wrong alignment on UMG_VehicleSpeedo_C_GearText");
static_assert(sizeof(UMG_VehicleSpeedo_C_GearText) == 0x0000B0, "Wrong size on UMG_VehicleSpeedo_C_GearText");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, ReturnValue) == 0x000000, "Member 'UMG_VehicleSpeedo_C_GearText::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, Temp_bool_Variable) == 0x000018, "Member 'UMG_VehicleSpeedo_C_GearText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, Temp_text_Variable) == 0x000020, "Member 'UMG_VehicleSpeedo_C_GearText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, Temp_bool_Variable_1) == 0x000038, "Member 'UMG_VehicleSpeedo_C_GearText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, Temp_text_Variable_1) == 0x000040, "Member 'UMG_VehicleSpeedo_C_GearText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'UMG_VehicleSpeedo_C_GearText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, CallFunc_GetCurrentGear_ReturnValue) == 0x00005C, "Member 'UMG_VehicleSpeedo_C_GearText::CallFunc_GetCurrentGear_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'UMG_VehicleSpeedo_C_GearText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'UMG_VehicleSpeedo_C_GearText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'UMG_VehicleSpeedo_C_GearText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, K2Node_Select_Default) == 0x000080, "Member 'UMG_VehicleSpeedo_C_GearText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearText, K2Node_Select_Default_1) == 0x000098, "Member 'UMG_VehicleSpeedo_C_GearText::K2Node_Select_Default_1' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.GearColor
// 0x002C (0x002C - 0x0000)
struct UMG_VehicleSpeedo_C_GearColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3849[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentGear_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_384A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleSpeedo_C_GearColor) == 0x000004, "Wrong alignment on UMG_VehicleSpeedo_C_GearColor");
static_assert(sizeof(UMG_VehicleSpeedo_C_GearColor) == 0x00002C, "Wrong size on UMG_VehicleSpeedo_C_GearColor");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearColor, ReturnValue) == 0x000000, "Member 'UMG_VehicleSpeedo_C_GearColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearColor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UMG_VehicleSpeedo_C_GearColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearColor, CallFunc_GetCurrentGear_ReturnValue) == 0x000014, "Member 'UMG_VehicleSpeedo_C_GearColor::CallFunc_GetCurrentGear_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearColor, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'UMG_VehicleSpeedo_C_GearColor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GearColor, CallFunc_SelectColor_ReturnValue) == 0x00001C, "Member 'UMG_VehicleSpeedo_C_GearColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.DrawDialNumbers
// 0x00A8 (0x00A8 - 0x0000)
struct UMG_VehicleSpeedo_C_DrawDialNumbers final
{
public:
	float                                         Temp_float_Variable;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_14;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_16;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_17;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_18;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384B[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpeedDialNumber_C*                     CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQVehicleType                                Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384C[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384D[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_384E[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_384F[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleSpeedo_C_DrawDialNumbers) == 0x000008, "Wrong alignment on UMG_VehicleSpeedo_C_DrawDialNumbers");
static_assert(sizeof(UMG_VehicleSpeedo_C_DrawDialNumbers) == 0x0000A8, "Wrong size on UMG_VehicleSpeedo_C_DrawDialNumbers");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable) == 0x000000, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_1) == 0x000004, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_2) == 0x000008, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_3) == 0x00000C, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_4) == 0x000010, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_5) == 0x000014, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_6) == 0x000018, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_7) == 0x00001C, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_8) == 0x000020, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_9) == 0x000024, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_10) == 0x000028, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_11) == 0x00002C, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_12) == 0x000030, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_13) == 0x000034, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_14) == 0x000038, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_15) == 0x00003C, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_16) == 0x000040, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_17) == 0x000044, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_17' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_float_Variable_18) == 0x000048, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_float_Variable_18' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_Create_ReturnValue) == 0x000050, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_byte_Variable) == 0x000058, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_AddChild_ReturnValue) == 0x000060, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, Temp_int_Variable) == 0x000068, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, K2Node_DynamicCast_AsOverlay_Slot) == 0x000070, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::K2Node_DynamicCast_AsOverlay_Slot' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_Multiply_IntInt_ReturnValue) == 0x00007C, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000080, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, K2Node_Select_Default) == 0x00008C, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000094, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_FTrunc_ReturnValue) == 0x000098, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_MapRangeClamped_ReturnValue) == 0x00009C, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_DrawDialNumbers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'UMG_VehicleSpeedo_C_DrawDialNumbers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Update Revs
// 0x001C (0x001C - 0x0000)
struct UMG_VehicleSpeedo_C_Update_Revs final
{
public:
	float                                         CallFunc_GetEngineMaxRPM_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEngineRPM_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Update_Revs) == 0x000004, "Wrong alignment on UMG_VehicleSpeedo_C_Update_Revs");
static_assert(sizeof(UMG_VehicleSpeedo_C_Update_Revs) == 0x00001C, "Wrong size on UMG_VehicleSpeedo_C_Update_Revs");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Revs, CallFunc_GetEngineMaxRPM_ReturnValue) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Update_Revs::CallFunc_GetEngineMaxRPM_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Revs, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'UMG_VehicleSpeedo_C_Update_Revs::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Revs, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000008, "Member 'UMG_VehicleSpeedo_C_Update_Revs::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Revs, CallFunc_GetEngineRPM_ReturnValue) == 0x00000C, "Member 'UMG_VehicleSpeedo_C_Update_Revs::CallFunc_GetEngineRPM_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Revs, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'UMG_VehicleSpeedo_C_Update_Revs::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Revs, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'UMG_VehicleSpeedo_C_Update_Revs::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Revs, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'UMG_VehicleSpeedo_C_Update_Revs::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Refresh Icon
// 0x0020 (0x0020 - 0x0000)
struct UMG_VehicleSpeedo_C_Refresh_Icon final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3850[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Refresh_Icon) == 0x000008, "Wrong alignment on UMG_VehicleSpeedo_C_Refresh_Icon");
static_assert(sizeof(UMG_VehicleSpeedo_C_Refresh_Icon) == 0x000020, "Wrong size on UMG_VehicleSpeedo_C_Refresh_Icon");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Icon, Temp_bool_Variable) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Refresh_Icon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Icon, Temp_bool_Variable_1) == 0x000001, "Member 'UMG_VehicleSpeedo_C_Refresh_Icon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Icon, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'UMG_VehicleSpeedo_C_Refresh_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Icon, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'UMG_VehicleSpeedo_C_Refresh_Icon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Icon, CallFunc_IsValid_ReturnValue_2) == 0x000004, "Member 'UMG_VehicleSpeedo_C_Refresh_Icon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Icon, K2Node_Select_Default) == 0x000008, "Member 'UMG_VehicleSpeedo_C_Refresh_Icon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Icon, K2Node_Select_Default_1) == 0x000010, "Member 'UMG_VehicleSpeedo_C_Refresh_Icon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Icon, CallFunc_IsValid_ReturnValue_3) == 0x000018, "Member 'UMG_VehicleSpeedo_C_Refresh_Icon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Rearm Cost
// 0x0060 (0x0060 - 0x0000)
struct UMG_VehicleSpeedo_C_Rearm_Cost final
{
public:
	float                                         Current_Vehicle_Rearm_Cost;                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3851[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3852[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3853[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleInventoryComponent*           CallFunc_GetSeatPawnInventory_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3854[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateMissingAmmoCost_ReturnValue;     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3855[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3856[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
};
static_assert(alignof(UMG_VehicleSpeedo_C_Rearm_Cost) == 0x000008, "Wrong alignment on UMG_VehicleSpeedo_C_Rearm_Cost");
static_assert(sizeof(UMG_VehicleSpeedo_C_Rearm_Cost) == 0x000060, "Wrong size on UMG_VehicleSpeedo_C_Rearm_Cost");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, Current_Vehicle_Rearm_Cost) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::Current_Vehicle_Rearm_Cost' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, Temp_byte_Variable) == 0x000004, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, Temp_byte_Variable_1) == 0x000005, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, Temp_int_Array_Index_Variable) == 0x000010, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, Temp_bool_Variable) == 0x000014, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_IsVisible_ReturnValue) == 0x000015, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_Array_Get_Item) == 0x000018, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_GetSeatPawnInventory_ReturnValue) == 0x000028, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_GetSeatPawnInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_CalculateMissingAmmoCost_ReturnValue) == 0x000034, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_CalculateMissingAmmoCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00003D, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, K2Node_Select_Default) == 0x00003E, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_FFloor_ReturnValue) == 0x000040, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Rearm_Cost, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'UMG_VehicleSpeedo_C_Rearm_Cost::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Refresh Data
// 0x0070 (0x0070 - 0x0000)
struct UMG_VehicleSpeedo_C_Refresh_Data final
{
public:
	class ASQPlayerController*                    L_PC;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             L_Current_Vehicle;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQHelicopter2*                         K2Node_DynamicCast_AsSQHelicopter_2;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3857[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGroundVehicle*                       K2Node_DynamicCast_AsSQGround_Vehicle;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3858[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetDriverSeat_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                CallFunc_GetCurrentSeat_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3859[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385A[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Refresh_Data) == 0x000008, "Wrong alignment on UMG_VehicleSpeedo_C_Refresh_Data");
static_assert(sizeof(UMG_VehicleSpeedo_C_Refresh_Data) == 0x000070, "Wrong size on UMG_VehicleSpeedo_C_Refresh_Data");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, L_PC) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::L_PC' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, L_Current_Vehicle) == 0x000008, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::L_Current_Vehicle' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, K2Node_DynamicCast_AsSQHelicopter_2) == 0x000010, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::K2Node_DynamicCast_AsSQHelicopter_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, CallFunc_DoesImplementInterface_ReturnValue) == 0x000019, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, K2Node_DynamicCast_AsSQGround_Vehicle) == 0x000020, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::K2Node_DynamicCast_AsSQGround_Vehicle' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, CallFunc_IsVisible_ReturnValue) == 0x000029, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, CallFunc_IsVisible_ReturnValue_1) == 0x00002A, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, CallFunc_GetDriverSeat_ReturnValue) == 0x000030, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::CallFunc_GetDriverSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, CallFunc_GetCurrentSeat_ReturnValue) == 0x000038, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::CallFunc_GetCurrentSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000050, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000060, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Data, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'UMG_VehicleSpeedo_C_Refresh_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Refresh Handbrake
// 0x0002 (0x0002 - 0x0000)
struct UMG_VehicleSpeedo_C_Refresh_Handbrake final
{
public:
	bool                                          CallFunc_DoesVehicleHaveWheels_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Refresh_Handbrake) == 0x000001, "Wrong alignment on UMG_VehicleSpeedo_C_Refresh_Handbrake");
static_assert(sizeof(UMG_VehicleSpeedo_C_Refresh_Handbrake) == 0x000002, "Wrong size on UMG_VehicleSpeedo_C_Refresh_Handbrake");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Handbrake, CallFunc_DoesVehicleHaveWheels_ReturnValue) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Refresh_Handbrake::CallFunc_DoesVehicleHaveWheels_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Handbrake, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UMG_VehicleSpeedo_C_Refresh_Handbrake::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Update Handbrake
// 0x0002 (0x0002 - 0x0000)
struct UMG_VehicleSpeedo_C_Update_Handbrake final
{
public:
	bool                                          CallFunc_IsHandbrakeActive_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Update_Handbrake) == 0x000001, "Wrong alignment on UMG_VehicleSpeedo_C_Update_Handbrake");
static_assert(sizeof(UMG_VehicleSpeedo_C_Update_Handbrake) == 0x000002, "Wrong size on UMG_VehicleSpeedo_C_Update_Handbrake");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Handbrake, CallFunc_IsHandbrakeActive_ReturnValue) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Update_Handbrake::CallFunc_IsHandbrakeActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Handbrake, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UMG_VehicleSpeedo_C_Update_Handbrake::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.GetSpeedometerRange
// 0x0068 (0x0068 - 0x0000)
struct UMG_VehicleSpeedo_C_GetSpeedometerRange final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQVehicleType                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_12;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_13;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_14;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_15;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_16;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_17;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_18;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetForwardSpeed_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleSpeedo_C_GetSpeedometerRange) == 0x000004, "Wrong alignment on UMG_VehicleSpeedo_C_GetSpeedometerRange");
static_assert(sizeof(UMG_VehicleSpeedo_C_GetSpeedometerRange) == 0x000068, "Wrong size on UMG_VehicleSpeedo_C_GetSpeedometerRange");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, ReturnValue) == 0x000000, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_byte_Variable) == 0x000004, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable) == 0x000008, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_1) == 0x00000C, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_2) == 0x000010, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_3) == 0x000014, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_4) == 0x000018, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_5) == 0x00001C, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_6) == 0x000020, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_7) == 0x000024, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_8) == 0x000028, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_9) == 0x00002C, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_10) == 0x000030, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_11) == 0x000034, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_12) == 0x000038, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_13) == 0x00003C, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_13' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_14) == 0x000040, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_14' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_15) == 0x000044, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_15' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_16) == 0x000048, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_16' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_17) == 0x00004C, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_17' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, Temp_float_Variable_18) == 0x000050, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::Temp_float_Variable_18' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, CallFunc_GetForwardSpeed_ReturnValue) == 0x000054, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::CallFunc_GetForwardSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, CallFunc_Abs_ReturnValue) == 0x000058, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, K2Node_Select_Default) == 0x00005C, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_GetSpeedometerRange, CallFunc_MapRangeClamped_ReturnValue) == 0x000064, "Member 'UMG_VehicleSpeedo_C_GetSpeedometerRange::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Refresh Amphibious Icon
// 0x0018 (0x0018 - 0x0000)
struct UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon final
{
public:
	ESQVehicleTag                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQVehicleSettings_C*                K2Node_DynamicCast_AsBP_SQVehicle_Settings;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon) == 0x000008, "Wrong alignment on UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon");
static_assert(sizeof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon) == 0x000018, "Wrong size on UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon, Temp_byte_Variable) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon, Temp_bool_Variable) == 0x000001, "Member 'UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon, Temp_byte_Variable_1) == 0x000002, "Member 'UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon, Temp_byte_Variable_2) == 0x000003, "Member 'UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon, K2Node_DynamicCast_AsBP_SQVehicle_Settings) == 0x000008, "Member 'UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon::K2Node_DynamicCast_AsBP_SQVehicle_Settings' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon, CallFunc_Set_Contains_ReturnValue) == 0x000011, "Member 'UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon, K2Node_Select_Default) == 0x000012, "Member 'UMG_VehicleSpeedo_C_Refresh_Amphibious_Icon::K2Node_Select_Default' has a wrong offset!");

// Function UMG_VehicleSpeedo.UMG_VehicleSpeedo_C.Update Amphibious Icon
// 0x0003 (0x0003 - 0x0000)
struct UMG_VehicleSpeedo_C_Update_Amphibious_Icon final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInWaterBody_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UMG_VehicleSpeedo_C_Update_Amphibious_Icon) == 0x000001, "Wrong alignment on UMG_VehicleSpeedo_C_Update_Amphibious_Icon");
static_assert(sizeof(UMG_VehicleSpeedo_C_Update_Amphibious_Icon) == 0x000003, "Wrong size on UMG_VehicleSpeedo_C_Update_Amphibious_Icon");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Amphibious_Icon, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'UMG_VehicleSpeedo_C_Update_Amphibious_Icon::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Amphibious_Icon, CallFunc_IsInWaterBody_ReturnValue) == 0x000001, "Member 'UMG_VehicleSpeedo_C_Update_Amphibious_Icon::CallFunc_IsInWaterBody_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VehicleSpeedo_C_Update_Amphibious_Icon, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'UMG_VehicleSpeedo_C_Update_Amphibious_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


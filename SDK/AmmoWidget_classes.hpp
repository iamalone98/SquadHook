#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AmmoWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AmmoWidget.AmmoWidget_C
// 0x0070 (0x03F0 - 0x0380)
class UAmmoWidget_C final : public USQAmmoWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             BPAmmoCountTextBlock;                              // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BPChamberedRound;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BPFiremode;                                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BPMagnificationTextblock_1;                        // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BPWeaponName;                                      // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BPZeroingTextblock;                                // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasWeaponName;                                  // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                KeybindBorder;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeybindText;                                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMagazineGroupWidget_C*                 MagGroup1;                                         // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMagazineGroupWidget_C*                 MagGroup2;                                         // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_VehicleCargo_C*                    UMG_VehicleCargo_609;                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_1;                                  // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AmmoWidget(int32 EntryPoint);
	void MagnificationChanged(float NewFOV, int32 NewMagnification);
	void OnShowCurrentWeapon();
	void OnShowResourceAmounts();
	void OnCurrentWeaponChanged();
	void BPInit();
	void Construct();
	void UpdateScopeMagnificationText(int32 Magnification);
	void OnAdsEventDelegate(bool bIsStateA);
	void UpdateKeybind();
	void GetShortActionName(class FName InAction, class FText* Short_Name);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AmmoWidget_C">();
	}
	static class UAmmoWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAmmoWidget_C>();
	}
};
static_assert(alignof(UAmmoWidget_C) == 0x000008, "Wrong alignment on UAmmoWidget_C");
static_assert(sizeof(UAmmoWidget_C) == 0x0003F0, "Wrong size on UAmmoWidget_C");
static_assert(offsetof(UAmmoWidget_C, UberGraphFrame) == 0x000380, "Member 'UAmmoWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, BPAmmoCountTextBlock) == 0x000388, "Member 'UAmmoWidget_C::BPAmmoCountTextBlock' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, BPChamberedRound) == 0x000390, "Member 'UAmmoWidget_C::BPChamberedRound' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, BPFiremode) == 0x000398, "Member 'UAmmoWidget_C::BPFiremode' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, BPMagnificationTextblock_1) == 0x0003A0, "Member 'UAmmoWidget_C::BPMagnificationTextblock_1' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, BPWeaponName) == 0x0003A8, "Member 'UAmmoWidget_C::BPWeaponName' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, BPZeroingTextblock) == 0x0003B0, "Member 'UAmmoWidget_C::BPZeroingTextblock' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, CanvasWeaponName) == 0x0003B8, "Member 'UAmmoWidget_C::CanvasWeaponName' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, KeybindBorder) == 0x0003C0, "Member 'UAmmoWidget_C::KeybindBorder' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, KeybindText) == 0x0003C8, "Member 'UAmmoWidget_C::KeybindText' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, MagGroup1) == 0x0003D0, "Member 'UAmmoWidget_C::MagGroup1' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, MagGroup2) == 0x0003D8, "Member 'UAmmoWidget_C::MagGroup2' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, UMG_VehicleCargo_609) == 0x0003E0, "Member 'UAmmoWidget_C::UMG_VehicleCargo_609' has a wrong offset!");
static_assert(offsetof(UAmmoWidget_C, WidgetSwitcher_1) == 0x0003E8, "Member 'UAmmoWidget_C::WidgetSwitcher_1' has a wrong offset!");

}


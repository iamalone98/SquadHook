#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Director_Path_CO_OrderLine

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_Director_Path_CO_OrderLine.W_Director_Path_CO_OrderLine_C.ExecuteUbergraph_W_Director_Path_CO_OrderLine
// 0x0078 (0x0078 - 0x0000)
struct W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Pixel_Distance_Distance;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45FD[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
	float                                         CallFunc_Get_Angle_Widget_Angle;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_Angle_World_Rotation;                 // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine) == 0x000008, "Wrong alignment on W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine");
static_assert(sizeof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine) == 0x000078, "Wrong size on W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine, EntryPoint) == 0x000000, "Member 'W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine, CallFunc_Get_Pixel_Distance_Distance) == 0x000004, "Member 'W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine::CallFunc_Get_Pixel_Distance_Distance' has a wrong offset!");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine, CallFunc_Get_Angle_Widget_Angle) == 0x000060, "Member 'W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine::CallFunc_Get_Angle_Widget_Angle' has a wrong offset!");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine, CallFunc_Get_Angle_World_Rotation) == 0x000064, "Member 'W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine::CallFunc_Get_Angle_World_Rotation' has a wrong offset!");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'W_Director_Path_CO_OrderLine_C_ExecuteUbergraph_W_Director_Path_CO_OrderLine::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function W_Director_Path_CO_OrderLine.W_Director_Path_CO_OrderLine_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Director_Path_CO_OrderLine_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Director_Path_CO_OrderLine_C_Tick) == 0x000004, "Wrong alignment on W_Director_Path_CO_OrderLine_C_Tick");
static_assert(sizeof(W_Director_Path_CO_OrderLine_C_Tick) == 0x00003C, "Wrong size on W_Director_Path_CO_OrderLine_C_Tick");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_Tick, MyGeometry) == 0x000000, "Member 'W_Director_Path_CO_OrderLine_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Director_Path_CO_OrderLine_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Director_Path_CO_OrderLine_C_Tick::InDeltaTime' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_HUD

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_HUD.BPI_HUD_C
// 0x0000 (0x0028 - 0x0028)
class IBPI_HUD_C final : public IInterface
{
public:
	void Open_Deployment();
	void Create_Radial_Menu(class UClass* Model, class FName Close_Command, class UObject* Context);
	void Get_Radial_Menu(class UBaseRadialMenu_C** Radial_Menu);
	void Show_3D_Marker(class ASQMapMarker* Marker);
	void Get_Main_Menus(class UUMG_MenuBase_C** Deployment, class UUMG_MenuBase_C** Command, class UUMG_MenuBase_C** Roaming);
	void Show_End_Scoreboard();
	void Get_Is_Showing_Settings_Menu(bool* Showing_Main_Menu);
	void Get_Map_Core(class UW_SQMapCore_C** Map_Core);
	void Get_Map_Component(class USQCoreStateMapComponent** Map_Component);
	void Menu_Toggle(bool Instant, class UUMG_MenuBase_C* In_Menu, bool Show_Mouse);
	void Clear_All_Floating_Widgets();
	void Toggle_Main_Menu();
	void Menu_Close(class UUMG_MenuBase_C* Menu);
	void End_Match(int32 Winning_Team, int32 Losing_Team, int32 Winning_Tickets, int32 Loser_Tickets);
	void Create_SL_Menu();
	void Destroy_SL_Menu();
	void Close_Radial();
	void Show_Leaderboard(bool Show);
	void Toggle_Leaderboard();
	void Get_Scoreboard(class USQScoreboard** ScoreBoard);
	void Set_Commander_Max_Cooldowns();
	void Player_Died();
	void Get_UI_Input_Stacks(TArray<struct FSQInputState>* Input_Stacks);
	void Get_Interactable_Widget(class USQInteractableWidgetList** Interact_Widget);
	void Close_Menus();
	void Destroy_Radial();
	void Zoom_In_Map();
	void Get_Showing_Main_Menu(bool* Showing);
	void Zoom_In_Map_Wheel(float Axis);
	void Start_Match();
	void CreateEmoteWheel();
	void DestroyEmoteWheel();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_HUD_C">();
	}
	static class IBPI_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_HUD_C>();
	}
};
static_assert(alignof(IBPI_HUD_C) == 0x000008, "Wrong alignment on IBPI_HUD_C");
static_assert(sizeof(IBPI_HUD_C) == 0x000028, "Wrong size on IBPI_HUD_C");

}


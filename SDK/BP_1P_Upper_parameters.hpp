#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_1P_Upper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function BP_1P_Upper.BP_1P_Upper_C.ExecuteUbergraph_BP_1P_Upper
// 0x0020 (0x0020 - 0x0000)
struct BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MutableSoldier_C*                   K2Node_DynamicCast_AsBP_Mutable_Soldier;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper) == 0x000008, "Wrong alignment on BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper");
static_assert(sizeof(BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper) == 0x000020, "Wrong size on BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper");
static_assert(offsetof(BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper, EntryPoint) == 0x000000, "Member 'BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper, K2Node_DynamicCast_AsBP_Mutable_Soldier) == 0x000010, "Member 'BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper::K2Node_DynamicCast_AsBP_Mutable_Soldier' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_1P_Upper_C_ExecuteUbergraph_BP_1P_Upper::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_1P_Upper.BP_1P_Upper_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct BP_1P_Upper_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_1P_Upper_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on BP_1P_Upper_C_BlueprintUpdateAnimation");
static_assert(sizeof(BP_1P_Upper_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on BP_1P_Upper_C_BlueprintUpdateAnimation");
static_assert(offsetof(BP_1P_Upper_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'BP_1P_Upper_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function BP_1P_Upper.BP_1P_Upper_C.GetLeaningData
// 0x0090 (0x0090 - 0x0000)
struct BP_1P_Upper_C_GetLeaningData final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQStance                                     Temp_byte_Variable;                                // 0x0009(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQStance                                     Temp_byte_Variable_1;                              // 0x000A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQStance                                     Temp_byte_Variable_2;                              // 0x000B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MutableSoldier_C*                   K2Node_DynamicCast_AsBP_Mutable_Soldier;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39BB[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQLeaningConfig                       CallFunc_Map_Find_Value;                           // 0x0024(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39BC[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQLeaningConfig                       CallFunc_Map_Find_Value_1;                         // 0x0038(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39BD[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQLeaningConfig                       CallFunc_Map_Find_Value_2;                         // 0x004C(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39BE[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39BF[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_1P_Upper_C_GetLeaningData) == 0x000008, "Wrong alignment on BP_1P_Upper_C_GetLeaningData");
static_assert(sizeof(BP_1P_Upper_C_GetLeaningData) == 0x000090, "Wrong size on BP_1P_Upper_C_GetLeaningData");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, DeltaTime) == 0x000000, "Member 'BP_1P_Upper_C_GetLeaningData::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, Temp_bool_Variable) == 0x000006, "Member 'BP_1P_Upper_C_GetLeaningData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, Temp_bool_Variable_1) == 0x000007, "Member 'BP_1P_Upper_C_GetLeaningData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, Temp_bool_Variable_2) == 0x000008, "Member 'BP_1P_Upper_C_GetLeaningData::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, Temp_byte_Variable) == 0x000009, "Member 'BP_1P_Upper_C_GetLeaningData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, Temp_byte_Variable_1) == 0x00000A, "Member 'BP_1P_Upper_C_GetLeaningData::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, Temp_byte_Variable_2) == 0x00000B, "Member 'BP_1P_Upper_C_GetLeaningData::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, K2Node_DynamicCast_AsBP_Mutable_Soldier) == 0x000018, "Member 'BP_1P_Upper_C_GetLeaningData::K2Node_DynamicCast_AsBP_Mutable_Soldier' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_1P_Upper_C_GetLeaningData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_Map_Find_Value) == 0x000024, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_Map_Find_ReturnValue) == 0x000034, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_Map_Find_Value_1) == 0x000038, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_Map_Find_ReturnValue_1) == 0x000048, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_Map_Find_Value_2) == 0x00004C, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_Map_Find_ReturnValue_2) == 0x00005C, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_GetVelocity_ReturnValue) == 0x000060, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_VSize_ReturnValue) == 0x00006C, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, K2Node_Select_Default) == 0x000074, "Member 'BP_1P_Upper_C_GetLeaningData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, K2Node_Select_Default_1) == 0x000078, "Member 'BP_1P_Upper_C_GetLeaningData::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_FInterpTo_ReturnValue) == 0x00007C, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_FInterpTo_ReturnValue_1) == 0x000080, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, K2Node_Select_Default_2) == 0x000084, "Member 'BP_1P_Upper_C_GetLeaningData::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_GetLeaningData, CallFunc_FInterpTo_ReturnValue_2) == 0x000088, "Member 'BP_1P_Upper_C_GetLeaningData::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");

// Function BP_1P_Upper.BP_1P_Upper_C.Update Clear Sights
// 0x0068 (0x0068 - 0x0000)
struct BP_1P_Upper_C_Update_Clear_Sights final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C0[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQEquipableItem*                       CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQWeapon*                              K2Node_DynamicCast_AsSQWeapon;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAimingDownSights_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C1[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQWeaponStaticInfo*                    CallFunc_GetWeaponStaticInfo_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C2[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C3[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueRange_MinValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueRange_MaxValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_1P_Upper_C_Update_Clear_Sights) == 0x000008, "Wrong alignment on BP_1P_Upper_C_Update_Clear_Sights");
static_assert(sizeof(BP_1P_Upper_C_Update_Clear_Sights) == 0x000068, "Wrong size on BP_1P_Upper_C_Update_Clear_Sights");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000008, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, K2Node_DynamicCast_AsSQWeapon) == 0x000010, "Member 'BP_1P_Upper_C_Update_Clear_Sights::K2Node_DynamicCast_AsSQWeapon' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_1P_Upper_C_Update_Clear_Sights::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_IsAimingDownSights_ReturnValue) == 0x000019, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_IsAimingDownSights_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_GetWeaponStaticInfo_ReturnValue) == 0x000020, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_GetWeaponStaticInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_RLerp_ReturnValue) == 0x00002C, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_VLerp_ReturnValue) == 0x000038, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_IsValid_ReturnValue_2) == 0x000045, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_GetValueRange_MinValue) == 0x000048, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_GetValueRange_MinValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_GetValueRange_MaxValue) == 0x00004C, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_GetValueRange_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000050, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_Lerp_ReturnValue) == 0x000054, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_GetFloatValue_ReturnValue) == 0x00005C, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_1P_Upper_C_Update_Clear_Sights, CallFunc_FInterpTo_ReturnValue) == 0x000064, "Member 'BP_1P_Upper_C_Update_Clear_Sights::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function BP_1P_Upper.BP_1P_Upper_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct BP_1P_Upper_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(BP_1P_Upper_C_AnimGraph) == 0x000008, "Wrong alignment on BP_1P_Upper_C_AnimGraph");
static_assert(sizeof(BP_1P_Upper_C_AnimGraph) == 0x000010, "Wrong size on BP_1P_Upper_C_AnimGraph");
static_assert(offsetof(BP_1P_Upper_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'BP_1P_Upper_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}


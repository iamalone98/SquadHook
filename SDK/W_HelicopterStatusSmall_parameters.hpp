#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HelicopterStatusSmall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_HelicopterStatusSmall.W_HelicopterStatusSmall_C.ExecuteUbergraph_W_HelicopterStatusSmall
// 0x0078 (0x0078 - 0x0000)
struct W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D59[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D5A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall) == 0x000008, "Wrong alignment on W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall");
static_assert(sizeof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall) == 0x000078, "Wrong size on W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall");
static_assert(offsetof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall, EntryPoint) == 0x000000, "Member 'W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall, K2Node_Event_MyGeometry) == 0x000020, "Member 'W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall, K2Node_Event_InDeltaTime) == 0x000058, "Member 'W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000068, "Member 'W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'W_HelicopterStatusSmall_C_ExecuteUbergraph_W_HelicopterStatusSmall::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_HelicopterStatusSmall.W_HelicopterStatusSmall_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_HelicopterStatusSmall_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HelicopterStatusSmall_C_Tick) == 0x000004, "Wrong alignment on W_HelicopterStatusSmall_C_Tick");
static_assert(sizeof(W_HelicopterStatusSmall_C_Tick) == 0x00003C, "Wrong size on W_HelicopterStatusSmall_C_Tick");
static_assert(offsetof(W_HelicopterStatusSmall_C_Tick, MyGeometry) == 0x000000, "Member 'W_HelicopterStatusSmall_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Tick, InDeltaTime) == 0x000038, "Member 'W_HelicopterStatusSmall_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_HelicopterStatusSmall.W_HelicopterStatusSmall_C.Get Helicopter
// 0x0048 (0x0048 - 0x0000)
struct W_HelicopterStatusSmall_C_Get_Helicopter final
{
public:
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQInteractableWidgetList*              CallFunc_Get_Interactable_Widget_Interact_Widget;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_InteractableWidgetList_Master_C*     K2Node_DynamicCast_AsW_Interactable_Widget_List_Master; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5C[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHelicopter2*                         K2Node_DynamicCast_AsSQHelicopter_2;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_HelicopterStatusSmall_C_Get_Helicopter) == 0x000008, "Wrong alignment on W_HelicopterStatusSmall_C_Get_Helicopter");
static_assert(sizeof(W_HelicopterStatusSmall_C_Get_Helicopter) == 0x000048, "Wrong size on W_HelicopterStatusSmall_C_Get_Helicopter");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, CallFunc_GetHUD_ReturnValue) == 0x000000, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, K2Node_DynamicCast_AsBPI_HUD) == 0x000008, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, CallFunc_Get_Interactable_Widget_Interact_Widget) == 0x000020, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::CallFunc_Get_Interactable_Widget_Interact_Widget' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, K2Node_DynamicCast_AsW_Interactable_Widget_List_Master) == 0x000028, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::K2Node_DynamicCast_AsW_Interactable_Widget_List_Master' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, K2Node_DynamicCast_AsSQHelicopter_2) == 0x000038, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::K2Node_DynamicCast_AsSQHelicopter_2' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Helicopter, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'W_HelicopterStatusSmall_C_Get_Helicopter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function W_HelicopterStatusSmall.W_HelicopterStatusSmall_C.Update Engine State
// 0x0108 (0x0108 - 0x0000)
struct W_HelicopterStatusSmall_C_Update_Engine_State final
{
public:
	class USQVehicleEngine*                       L_Engine;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           L_Health_Color;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           L_Engine_Toggle_Color;                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5D[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEngineActive_ReturnValue;               // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5E[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentEngineToggleRequiredDuration_ReturnValue; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5F[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentEngineTogglePercentage_ReturnValue; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEngineToggleActive_ReturnValue;         // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D60[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D61[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleComponent*                    CallFunc_GetVehicleEngine_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNormalizedHealth_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D62[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleEngine*                       K2Node_DynamicCast_AsSQVehicle_Engine;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D63[0x2];                                     // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D64[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D65[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D66[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue_1;    // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HelicopterStatusSmall_C_Update_Engine_State) == 0x000008, "Wrong alignment on W_HelicopterStatusSmall_C_Update_Engine_State");
static_assert(sizeof(W_HelicopterStatusSmall_C_Update_Engine_State) == 0x000108, "Wrong size on W_HelicopterStatusSmall_C_Update_Engine_State");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, L_Engine) == 0x000000, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::L_Engine' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, L_Health_Color) == 0x000008, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::L_Health_Color' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, L_Engine_Toggle_Color) == 0x000018, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::L_Engine_Toggle_Color' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, Temp_object_Variable) == 0x000028, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, Temp_object_Variable_1) == 0x000030, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, Temp_bool_Variable) == 0x000038, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, Temp_struct_Variable) == 0x00003C, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, Temp_struct_Variable_1) == 0x00004C, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, Temp_bool_Variable_1) == 0x00005C, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, Temp_bool_Variable_2) == 0x00005D, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_IsEngineActive_ReturnValue) == 0x00005E, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_IsEngineActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_GetCurrentEngineToggleRequiredDuration_ReturnValue) == 0x000060, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_GetCurrentEngineToggleRequiredDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, K2Node_Select_Default) == 0x000064, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_GetCurrentEngineTogglePercentage_ReturnValue) == 0x000078, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_GetCurrentEngineTogglePercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_IsEngineToggleActive_ReturnValue) == 0x00007D, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_IsEngineToggleActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_BooleanOR_ReturnValue) == 0x00007E, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000080, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, Temp_bool_Variable_3) == 0x000084, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_GetVehicleEngine_ReturnValue) == 0x000088, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_GetVehicleEngine_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_GetNormalizedHealth_ReturnValue) == 0x000090, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_GetNormalizedHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, K2Node_DynamicCast_AsSQVehicle_Engine) == 0x000098, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::K2Node_DynamicCast_AsSQVehicle_Engine' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A1, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, K2Node_Select_Default_1) == 0x0000A4, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_BooleanAND_ReturnValue) == 0x0000B4, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000B8, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, K2Node_Select_Default_2) == 0x0000C0, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_FInterpTo_ReturnValue) == 0x0000C8, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000CC, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000D0, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x0000D4, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000E4, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue_1) == 0x0000E8, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Engine_State, K2Node_Select_Default_3) == 0x0000F8, "Member 'W_HelicopterStatusSmall_C_Update_Engine_State::K2Node_Select_Default_3' has a wrong offset!");

// Function W_HelicopterStatusSmall.W_HelicopterStatusSmall_C.Update Main Rotor State
// 0x0090 (0x0090 - 0x0000)
struct W_HelicopterStatusSmall_C_Update_Main_Rotor_State final
{
public:
	struct FLinearColor                           L_Health_Color;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQRotorBladesComponent*                L_Rotor;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D67[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D68[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRotorBladesComponent*                CallFunc_Get_Specific_Blades_Rotor;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D69[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue_1;    // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State) == 0x000008, "Wrong alignment on W_HelicopterStatusSmall_C_Update_Main_Rotor_State");
static_assert(sizeof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State) == 0x000090, "Wrong size on W_HelicopterStatusSmall_C_Update_Main_Rotor_State");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, L_Health_Color) == 0x000000, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::L_Health_Color' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, L_Rotor) == 0x000010, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::L_Rotor' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, Temp_bool_Variable) == 0x000018, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, Temp_struct_Variable) == 0x00001C, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, Temp_bool_Variable_1) == 0x00002C, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002D, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_Get_Specific_Blades_Rotor) == 0x000030, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_Get_Specific_Blades_Rotor' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_Less_FloatFloat_ReturnValue) == 0x000038, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000040, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x000044, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue_1) == 0x000054, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, K2Node_Select_Default) == 0x000064, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, K2Node_Select_Default_1) == 0x000074, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000084, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Main_Rotor_State, CallFunc_FInterpTo_ReturnValue) == 0x000088, "Member 'W_HelicopterStatusSmall_C_Update_Main_Rotor_State::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function W_HelicopterStatusSmall.W_HelicopterStatusSmall_C.Get Specific Blades
// 0x0020 (0x0020 - 0x0000)
struct W_HelicopterStatusSmall_C_Get_Specific_Blades final
{
public:
	bool                                          Main;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRotorBladesComponent*                Rotor;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRotorBladesComponent*                K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HelicopterStatusSmall_C_Get_Specific_Blades) == 0x000008, "Wrong alignment on W_HelicopterStatusSmall_C_Get_Specific_Blades");
static_assert(sizeof(W_HelicopterStatusSmall_C_Get_Specific_Blades) == 0x000020, "Wrong size on W_HelicopterStatusSmall_C_Get_Specific_Blades");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Specific_Blades, Main) == 0x000000, "Member 'W_HelicopterStatusSmall_C_Get_Specific_Blades::Main' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Specific_Blades, Rotor) == 0x000008, "Member 'W_HelicopterStatusSmall_C_Get_Specific_Blades::Rotor' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Specific_Blades, Temp_bool_Variable) == 0x000010, "Member 'W_HelicopterStatusSmall_C_Get_Specific_Blades::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Get_Specific_Blades, K2Node_Select_Default) == 0x000018, "Member 'W_HelicopterStatusSmall_C_Get_Specific_Blades::K2Node_Select_Default' has a wrong offset!");

// Function W_HelicopterStatusSmall.W_HelicopterStatusSmall_C.Update Tail Rotor State
// 0x0090 (0x0090 - 0x0000)
struct W_HelicopterStatusSmall_C_Update_Tail_Rotor_State final
{
public:
	struct FLinearColor                           L_Health_Color;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQRotorBladesComponent*                L_Rotor;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6D[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRotorBladesComponent*                CallFunc_Get_Specific_Blades_Rotor;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D6E[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue_1;    // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State) == 0x000008, "Wrong alignment on W_HelicopterStatusSmall_C_Update_Tail_Rotor_State");
static_assert(sizeof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State) == 0x000090, "Wrong size on W_HelicopterStatusSmall_C_Update_Tail_Rotor_State");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, L_Health_Color) == 0x000000, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::L_Health_Color' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, L_Rotor) == 0x000010, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::L_Rotor' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, Temp_bool_Variable) == 0x000018, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, Temp_struct_Variable) == 0x00001C, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, Temp_bool_Variable_1) == 0x00002C, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002D, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_Get_Specific_Blades_Rotor) == 0x000030, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_Get_Specific_Blades_Rotor' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_Less_FloatFloat_ReturnValue) == 0x000038, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000040, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x000044, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue_1) == 0x000054, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, K2Node_Select_Default) == 0x000064, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, K2Node_Select_Default_1) == 0x000074, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000084, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_HelicopterStatusSmall_C_Update_Tail_Rotor_State, CallFunc_FInterpTo_ReturnValue) == 0x000088, "Member 'W_HelicopterStatusSmall_C_Update_Tail_Rotor_State::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

}


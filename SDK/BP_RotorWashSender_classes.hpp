#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RotorWashSender

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RotorWashSender.BP_RotorWashSender_C
// 0x0020 (0x0250 - 0x0230)
class UBP_RotorWashSender_C final : public USQRotorWashEffectSender
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          StartRegistered;                                   // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUpdating;                                        // 0x0239(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F5[0x6];                                     // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_RotorListener_C*                    Listener;                                          // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_RotorWashSender(int32 EntryPoint);
	void Initialize();
	void SetCanUpdate(bool CanUpdate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RotorWashSender_C">();
	}
	static class UBP_RotorWashSender_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_RotorWashSender_C>();
	}
};
static_assert(alignof(UBP_RotorWashSender_C) == 0x000010, "Wrong alignment on UBP_RotorWashSender_C");
static_assert(sizeof(UBP_RotorWashSender_C) == 0x000250, "Wrong size on UBP_RotorWashSender_C");
static_assert(offsetof(UBP_RotorWashSender_C, UberGraphFrame) == 0x000230, "Member 'UBP_RotorWashSender_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_RotorWashSender_C, StartRegistered) == 0x000238, "Member 'UBP_RotorWashSender_C::StartRegistered' has a wrong offset!");
static_assert(offsetof(UBP_RotorWashSender_C, IsUpdating) == 0x000239, "Member 'UBP_RotorWashSender_C::IsUpdating' has a wrong offset!");
static_assert(offsetof(UBP_RotorWashSender_C, Listener) == 0x000240, "Member 'UBP_RotorWashSender_C::Listener' has a wrong offset!");

}


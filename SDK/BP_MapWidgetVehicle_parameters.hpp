#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetVehicle

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Squad_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.ExecuteUbergraph_BP_MapWidgetVehicle
// 0x0168 (0x0168 - 0x0000)
struct BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3661[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3662[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ASQPlayerState* OldCommander, class ASQPlayerState* NewCommander)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3663[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTintColor_ReturnValue;                 // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3664[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetTintColor_ReturnValue_1;               // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3665[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3666[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00B8(0x0028)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00E0(0x0018)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3667[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_AtIndex;                              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfInVehicle_ReturnValue;              // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_4;                           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3668[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3669[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366A[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366B[0x1];                                     // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_UniformScale;                         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_CustomEvent_OldCommander;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_CustomEvent_NewCommander;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle) == 0x000008, "Wrong alignment on BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle");
static_assert(sizeof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle) == 0x000168, "Wrong size on BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, EntryPoint) == 0x000000, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_bool_Variable) == 0x000004, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_byte_Variable) == 0x000005, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_byte_Variable_1) == 0x000006, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_bool_Variable_1) == 0x000007, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_bool_Variable_2) == 0x000008, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_struct_Variable) == 0x00000C, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_struct_Variable_1) == 0x00001C, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_bool_Variable_3) == 0x00002C, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_struct_Variable_2) == 0x000040, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_struct_Variable_3) == 0x000050, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_byte_Variable_2) == 0x000060, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_Select_Default) == 0x000064, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_GetTintColor_ReturnValue) == 0x000074, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_GetTintColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_bool_Variable_4) == 0x000084, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_IsValid_ReturnValue) == 0x000085, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_IsValid_ReturnValue_1) == 0x000086, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_byte_Variable_3) == 0x000087, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_byte_Variable_4) == 0x000088, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_GetTintColor_ReturnValue_1) == 0x00008C, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_GetTintColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_Select_Default_1) == 0x0000A0, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_Select_Default_2) == 0x0000A4, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_MakeStruct_SlateColor) == 0x0000B8, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_Conv_IntToText_ReturnValue) == 0x0000E0, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_Event_AtIndex) == 0x0000FC, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_Event_AtIndex' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_bool_Variable_5) == 0x000100, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_Select_Default_3) == 0x000101, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_IsValid_ReturnValue_2) == 0x000102, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_IsSelfInVehicle_ReturnValue) == 0x000103, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_IsSelfInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_Select_Default_4) == 0x000104, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_MakeVector2D_ReturnValue) == 0x000108, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_SwitchEnum_CmpSuccess) == 0x000110, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_PlayAnimation_ReturnValue) == 0x000118, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_GetEndTime_ReturnValue) == 0x000120, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000124, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000128, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000130, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_GetOwningPlayer_ReturnValue) == 0x000138, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000140, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_IsValid_ReturnValue_3) == 0x000149, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, CallFunc_IsValid_ReturnValue_4) == 0x00014A, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_Event_UniformScale) == 0x00014C, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_Event_UniformScale' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_CustomEvent_OldCommander) == 0x000150, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_CustomEvent_OldCommander' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_CustomEvent_NewCommander) == 0x000158, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_CustomEvent_NewCommander' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, Temp_byte_Variable_5) == 0x000160, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle, K2Node_Select_Default_5) == 0x000161, "Member 'BP_MapWidgetVehicle_C_ExecuteUbergraph_BP_MapWidgetVehicle::K2Node_Select_Default_5' has a wrong offset!");

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnCommanderChangedEvent_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0 final
{
public:
	class ASQPlayerState*                         OldCommander;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         NewCommander;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0) == 0x000008, "Wrong alignment on BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0");
static_assert(sizeof(BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0) == 0x000010, "Wrong size on BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0");
static_assert(offsetof(BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0, OldCommander) == 0x000000, "Member 'BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0::OldCommander' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0, NewCommander) == 0x000008, "Member 'BP_MapWidgetVehicle_C_OnCommanderChangedEvent_Event_0::NewCommander' has a wrong offset!");

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MapWidgetVehicle_C_OnScaleChanged final
{
public:
	float                                         UniformScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetVehicle_C_OnScaleChanged) == 0x000004, "Wrong alignment on BP_MapWidgetVehicle_C_OnScaleChanged");
static_assert(sizeof(BP_MapWidgetVehicle_C_OnScaleChanged) == 0x000004, "Wrong size on BP_MapWidgetVehicle_C_OnScaleChanged");
static_assert(offsetof(BP_MapWidgetVehicle_C_OnScaleChanged, UniformScale) == 0x000000, "Member 'BP_MapWidgetVehicle_C_OnScaleChanged::UniformScale' has a wrong offset!");

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.OnVehicleOccupantInfoChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MapWidgetVehicle_C_OnVehicleOccupantInfoChanged final
{
public:
	int32                                         AtIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetVehicle_C_OnVehicleOccupantInfoChanged) == 0x000004, "Wrong alignment on BP_MapWidgetVehicle_C_OnVehicleOccupantInfoChanged");
static_assert(sizeof(BP_MapWidgetVehicle_C_OnVehicleOccupantInfoChanged) == 0x000004, "Wrong size on BP_MapWidgetVehicle_C_OnVehicleOccupantInfoChanged");
static_assert(offsetof(BP_MapWidgetVehicle_C_OnVehicleOccupantInfoChanged, AtIndex) == 0x000000, "Member 'BP_MapWidgetVehicle_C_OnVehicleOccupantInfoChanged::AtIndex' has a wrong offset!");

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.Tooltip
// 0x0018 (0x0018 - 0x0000)
struct BP_MapWidgetVehicle_C_Tooltip final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Tooltip_Vehicle_C*                   CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetVehicle_C_Tooltip) == 0x000008, "Wrong alignment on BP_MapWidgetVehicle_C_Tooltip");
static_assert(sizeof(BP_MapWidgetVehicle_C_Tooltip) == 0x000018, "Wrong size on BP_MapWidgetVehicle_C_Tooltip");
static_assert(offsetof(BP_MapWidgetVehicle_C_Tooltip, ReturnValue) == 0x000000, "Member 'BP_MapWidgetVehicle_C_Tooltip::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_Tooltip, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_MapWidgetVehicle_C_Tooltip::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_Tooltip, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_MapWidgetVehicle_C_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.Update Tooltip
// 0x0001 (0x0001 - 0x0000)
struct BP_MapWidgetVehicle_C_Update_Tooltip final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetVehicle_C_Update_Tooltip) == 0x000001, "Wrong alignment on BP_MapWidgetVehicle_C_Update_Tooltip");
static_assert(sizeof(BP_MapWidgetVehicle_C_Update_Tooltip) == 0x000001, "Wrong size on BP_MapWidgetVehicle_C_Update_Tooltip");
static_assert(offsetof(BP_MapWidgetVehicle_C_Update_Tooltip, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MapWidgetVehicle_C_Update_Tooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.On_TooltipHitBox_MouseButtonDown_0
// 0x02F8 (0x02F8 - 0x0000)
struct BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	ESQSelectionState                             Last_State;                                        // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSelectionState                             Temp_byte_Variable;                                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSelectionState                             Temp_byte_Variable_1;                              // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSelectionState                             Temp_byte_Variable_2;                              // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSelectionState                             Temp_byte_Variable_3;                              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366C[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSelectionState                             K2Node_Select_Default;                             // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366D[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366E[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0240(0x00B8)()
};
static_assert(alignof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0) == 0x000008, "Wrong alignment on BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0");
static_assert(sizeof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0) == 0x0002F8, "Wrong size on BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, MyGeometry) == 0x000000, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, MouseEvent) == 0x000038, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, Last_State) == 0x000160, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::Last_State' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, Temp_byte_Variable) == 0x000161, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, Temp_byte_Variable_1) == 0x000162, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, Temp_byte_Variable_2) == 0x000163, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, Temp_byte_Variable_3) == 0x000164, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, CallFunc_GetHUD_ReturnValue) == 0x000220, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, K2Node_Select_Default) == 0x000228, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, K2Node_DynamicCast_AsSQHUD) == 0x000230, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, K2Node_DynamicCast_bSuccess) == 0x000238, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0, CallFunc_Handled_ReturnValue_1) == 0x000240, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonDown_0::CallFunc_Handled_ReturnValue_1' has a wrong offset!");

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.On_TooltipHitBox_MouseButtonUp_0
// 0x0218 (0x0218 - 0x0000)
struct BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0) == 0x000008, "Wrong alignment on BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0");
static_assert(sizeof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0) == 0x000218, "Wrong size on BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0, MyGeometry) == 0x000000, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0, MouseEvent) == 0x000038, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0, ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'BP_MapWidgetVehicle_C_On_TooltipHitBox_MouseButtonUp_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetVehicle.BP_MapWidgetVehicle_C.ShowHideCommanderStar
// 0x0030 (0x0030 - 0x0000)
struct BP_MapWidgetVehicle_C_ShowHideCommanderStar final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366F[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         CallFunc_GetCurrentCommander_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSquadState*                          CallFunc_GetSquadState_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetVehicle_C_ShowHideCommanderStar) == 0x000008, "Wrong alignment on BP_MapWidgetVehicle_C_ShowHideCommanderStar");
static_assert(sizeof(BP_MapWidgetVehicle_C_ShowHideCommanderStar) == 0x000030, "Wrong size on BP_MapWidgetVehicle_C_ShowHideCommanderStar");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000008, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, CallFunc_GetCurrentCommander_ReturnValue) == 0x000018, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::CallFunc_GetCurrentCommander_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, CallFunc_GetSquadState_ReturnValue) == 0x000020, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::CallFunc_GetSquadState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, CallFunc_IsValid_ReturnValue_3) == 0x000029, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetVehicle_C_ShowHideCommanderStar, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002A, "Member 'BP_MapWidgetVehicle_C_ShowHideCommanderStar::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ServerListItem

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "SQLevelEntry_structs.hpp"
#include "Squad_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SQFactionEntry_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ServerListItem.ServerListItem_C.RequestJoin__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ServerListItem_C_RequestJoin__DelegateSignature final
{
public:
	class USQSessionInfo*                         Session;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_RequestJoin__DelegateSignature) == 0x000008, "Wrong alignment on ServerListItem_C_RequestJoin__DelegateSignature");
static_assert(sizeof(ServerListItem_C_RequestJoin__DelegateSignature) == 0x000008, "Wrong size on ServerListItem_C_RequestJoin__DelegateSignature");
static_assert(offsetof(ServerListItem_C_RequestJoin__DelegateSignature, Session) == 0x000000, "Member 'ServerListItem_C_RequestJoin__DelegateSignature::Session' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.ExecuteUbergraph_ServerListItem
// 0x0108 (0x0108 - 0x0000)
struct ServerListItem_C_ExecuteUbergraph_ServerListItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3BAF[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenuScreen_C*                      CallFunc_GetMainMenuRef_REF_MainMenu;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0058(0x0070)(ConstParm)
	bool                                          CallFunc_Toggle_Favourite_Valid;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Toggle_Favourite_Favourite;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB0[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFriendsBrowserWindow_C*>        CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UFriendsBrowserWindow_C*                CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB1[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3BB2[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_ExecuteUbergraph_ServerListItem) == 0x000008, "Wrong alignment on ServerListItem_C_ExecuteUbergraph_ServerListItem");
static_assert(sizeof(ServerListItem_C_ExecuteUbergraph_ServerListItem) == 0x000108, "Wrong size on ServerListItem_C_ExecuteUbergraph_ServerListItem");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, EntryPoint) == 0x000000, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, CallFunc_GetMainMenuRef_REF_MainMenu) == 0x000018, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::CallFunc_GetMainMenuRef_REF_MainMenu' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, K2Node_Event_MyGeometry) == 0x000020, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, K2Node_Event_MouseEvent) == 0x000058, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, CallFunc_Toggle_Favourite_Valid) == 0x0000C8, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::CallFunc_Toggle_Favourite_Valid' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, CallFunc_Toggle_Favourite_Favourite) == 0x0000C9, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::CallFunc_Toggle_Favourite_Favourite' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0000D0, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E8, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000EC, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_ExecuteUbergraph_ServerListItem, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000100, "Member 'ServerListItem_C_ExecuteUbergraph_ServerListItem::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct ServerListItem_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ServerListItem_C_OnMouseEnter) == 0x000008, "Wrong alignment on ServerListItem_C_OnMouseEnter");
static_assert(sizeof(ServerListItem_C_OnMouseEnter) == 0x0000A8, "Wrong size on ServerListItem_C_OnMouseEnter");
static_assert(offsetof(ServerListItem_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'ServerListItem_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'ServerListItem_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.Init
// 0x0288 (0x0288 - 0x0000)
struct ServerListItem_C_Init final
{
public:
	bool                                          IsLicensed;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Favourite;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB3[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReservedText_0;                                    // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   ReservedText;                                      // 0x0020(0x0018)(Edit, BlueprintVisible)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB4[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB5[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB6[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameModeString_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00E8(0x0018)()
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB7[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0110(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0138(0x0028)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB8[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB9[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0188(0x0018)()
	int32                                         Temp_int_Variable;                                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBA[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_3;                           // 0x01A8(0x0028)()
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default_5;                           // 0x01D8(0x0028)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetServerUniqueId_OutUniqueId;            // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetServerUniqueId_ReturnValue;            // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBB[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameVersion_ReturnValue;               // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameVersion_ReturnValue_1;             // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetMajorMinorVersion_ReturnValue;         // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetMajorMinorVersion_ReturnValue_1;       // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBC[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_6;                           // 0x0264(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBD[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidFavourite_Valid;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_Init) == 0x000008, "Wrong alignment on ServerListItem_C_Init");
static_assert(sizeof(ServerListItem_C_Init) == 0x000288, "Wrong size on ServerListItem_C_Init");
static_assert(offsetof(ServerListItem_C_Init, IsLicensed) == 0x000000, "Member 'ServerListItem_C_Init::IsLicensed' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, L_Favourite) == 0x000001, "Member 'ServerListItem_C_Init::L_Favourite' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, ReservedText_0) == 0x000008, "Member 'ServerListItem_C_Init::ReservedText_0' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, ReservedText) == 0x000020, "Member 'ServerListItem_C_Init::ReservedText' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_object_Variable) == 0x000038, "Member 'ServerListItem_C_Init::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_object_Variable_1) == 0x000040, "Member 'ServerListItem_C_Init::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_object_Variable_2) == 0x000048, "Member 'ServerListItem_C_Init::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_bool_Variable) == 0x000050, "Member 'ServerListItem_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_byte_Variable) == 0x000051, "Member 'ServerListItem_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_byte_Variable_1) == 0x000052, "Member 'ServerListItem_C_Init::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_bool_Variable_1) == 0x000053, "Member 'ServerListItem_C_Init::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_bool_Variable_2) == 0x000054, "Member 'ServerListItem_C_Init::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_bool_Variable_3) == 0x000055, "Member 'ServerListItem_C_Init::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_struct_Variable) == 0x000058, "Member 'ServerListItem_C_Init::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_struct_Variable_1) == 0x000068, "Member 'ServerListItem_C_Init::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_bool_Variable_4) == 0x000078, "Member 'ServerListItem_C_Init::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_struct_Variable_2) == 0x00007C, "Member 'ServerListItem_C_Init::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_struct_Variable_3) == 0x00008C, "Member 'ServerListItem_C_Init::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_bool_Variable_5) == 0x00009C, "Member 'ServerListItem_C_Init::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_struct_Variable_4) == 0x0000A0, "Member 'ServerListItem_C_Init::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_struct_Variable_5) == 0x0000B0, "Member 'ServerListItem_C_Init::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_GetGameModeString_ReturnValue) == 0x0000C0, "Member 'ServerListItem_C_Init::CallFunc_GetGameModeString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'ServerListItem_C_Init::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000E8, "Member 'ServerListItem_C_Init::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_object_Variable_3) == 0x000100, "Member 'ServerListItem_C_Init::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'ServerListItem_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, K2Node_MakeStruct_SlateColor) == 0x000110, "Member 'ServerListItem_C_Init::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, K2Node_MakeStruct_SlateColor_1) == 0x000138, "Member 'ServerListItem_C_Init::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, K2Node_Select_Default) == 0x000160, "Member 'ServerListItem_C_Init::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, K2Node_Select_Default_1) == 0x000164, "Member 'ServerListItem_C_Init::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, K2Node_Select_Default_2) == 0x000174, "Member 'ServerListItem_C_Init::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'ServerListItem_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_Conv_IntToText_ReturnValue) == 0x000188, "Member 'ServerListItem_C_Init::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, Temp_int_Variable) == 0x0001A0, "Member 'ServerListItem_C_Init::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, K2Node_Select_Default_3) == 0x0001A8, "Member 'ServerListItem_C_Init::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, K2Node_Select_Default_4) == 0x0001D0, "Member 'ServerListItem_C_Init::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, K2Node_Select_Default_5) == 0x0001D8, "Member 'ServerListItem_C_Init::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_GetOwningPlayer_ReturnValue) == 0x000200, "Member 'ServerListItem_C_Init::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_GetServerUniqueId_OutUniqueId) == 0x000208, "Member 'ServerListItem_C_Init::CallFunc_GetServerUniqueId_OutUniqueId' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_GetServerUniqueId_ReturnValue) == 0x000218, "Member 'ServerListItem_C_Init::CallFunc_GetServerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_GetGameVersion_ReturnValue) == 0x000220, "Member 'ServerListItem_C_Init::CallFunc_GetGameVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_GetGameVersion_ReturnValue_1) == 0x000230, "Member 'ServerListItem_C_Init::CallFunc_GetGameVersion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_GetMajorMinorVersion_ReturnValue) == 0x000240, "Member 'ServerListItem_C_Init::CallFunc_GetMajorMinorVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_GetMajorMinorVersion_ReturnValue_1) == 0x000250, "Member 'ServerListItem_C_Init::CallFunc_GetMajorMinorVersion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000260, "Member 'ServerListItem_C_Init::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, K2Node_Select_Default_6) == 0x000264, "Member 'ServerListItem_C_Init::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000278, "Member 'ServerListItem_C_Init::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Init, CallFunc_IsValidFavourite_Valid) == 0x000280, "Member 'ServerListItem_C_Init::CallFunc_IsValidFavourite_Valid' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.Get Main Color
// 0x0070 (0x0070 - 0x0000)
struct ServerListItem_C_Get_Main_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelected_Selected;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsJoinServer_Selected;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBE[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBF[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_Selected_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC0[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_Get_Main_Color) == 0x000004, "Wrong alignment on ServerListItem_C_Get_Main_Color");
static_assert(sizeof(ServerListItem_C_Get_Main_Color) == 0x000070, "Wrong size on ServerListItem_C_Get_Main_Color");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, ReturnValue) == 0x000000, "Member 'ServerListItem_C_Get_Main_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, Temp_bool_Variable) == 0x000010, "Member 'ServerListItem_C_Get_Main_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, Temp_bool_Variable_1) == 0x000011, "Member 'ServerListItem_C_Get_Main_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, Temp_bool_Variable_2) == 0x000012, "Member 'ServerListItem_C_Get_Main_Color::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, Temp_bool_Variable_3) == 0x000013, "Member 'ServerListItem_C_Get_Main_Color::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, CallFunc_IsSelected_Selected) == 0x000014, "Member 'ServerListItem_C_Get_Main_Color::CallFunc_IsSelected_Selected' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, CallFunc_IsJoinServer_Selected) == 0x000015, "Member 'ServerListItem_C_Get_Main_Color::CallFunc_IsJoinServer_Selected' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000018, "Member 'ServerListItem_C_Get_Main_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, CallFunc_IsHovered_ReturnValue) == 0x000028, "Member 'ServerListItem_C_Get_Main_Color::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, K2Node_Select_Default) == 0x00002C, "Member 'ServerListItem_C_Get_Main_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, CallFunc_IsSelected_Selected_1) == 0x00003C, "Member 'ServerListItem_C_Get_Main_Color::CallFunc_IsSelected_Selected_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, K2Node_Select_Default_1) == 0x000040, "Member 'ServerListItem_C_Get_Main_Color::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, K2Node_Select_Default_2) == 0x000050, "Member 'ServerListItem_C_Get_Main_Color::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Main_Color, K2Node_Select_Default_3) == 0x000060, "Member 'ServerListItem_C_Get_Main_Color::K2Node_Select_Default_3' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.IsSelected
// 0x0003 (0x0003 - 0x0000)
struct ServerListItem_C_IsSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_IsSelected) == 0x000001, "Wrong alignment on ServerListItem_C_IsSelected");
static_assert(sizeof(ServerListItem_C_IsSelected) == 0x000003, "Wrong size on ServerListItem_C_IsSelected");
static_assert(offsetof(ServerListItem_C_IsSelected, Selected) == 0x000000, "Member 'ServerListItem_C_IsSelected::Selected' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsSelected, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ServerListItem_C_IsSelected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsSelected, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000002, "Member 'ServerListItem_C_IsSelected::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.UpdatePlayerCounts
// 0x0358 (0x0358 - 0x0000)
struct ServerListItem_C_UpdatePlayerCounts final
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0168(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC1[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0198(0x0018)()
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC2[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC3[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01F8(0x0040)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0238(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0250(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0290(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x02F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0330(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0340(0x0018)()
};
static_assert(alignof(ServerListItem_C_UpdatePlayerCounts) == 0x000008, "Wrong alignment on ServerListItem_C_UpdatePlayerCounts");
static_assert(sizeof(ServerListItem_C_UpdatePlayerCounts) == 0x000358, "Wrong size on ServerListItem_C_UpdatePlayerCounts");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000B0, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeStruct_FormatArgumentData_3) == 0x0000F0, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeArray_Array) == 0x000130, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeArray_Array_1) == 0x000140, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Format_ReturnValue) == 0x000150, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Format_ReturnValue_1) == 0x000168, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Conv_TextToString_ReturnValue) == 0x000180, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Greater_IntInt_ReturnValue) == 0x000190, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000191, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, Temp_text_Variable) == 0x000198, "Member 'ServerListItem_C_UpdatePlayerCounts::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x0001B0, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x0001B8, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_BooleanAND_ReturnValue) == 0x0001C0, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_SelectString_ReturnValue) == 0x0001C8, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, Temp_bool_Variable) == 0x0001D8, "Member 'ServerListItem_C_UpdatePlayerCounts::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Conv_StringToText_ReturnValue) == 0x0001E0, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001F8, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_Select_Default) == 0x000238, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeStruct_FormatArgumentData_5) == 0x000250, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeArray_Array_2) == 0x000290, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Format_ReturnValue_2) == 0x0002A0, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0002B8, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_SelectString_ReturnValue_1) == 0x0002C8, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002D8, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeStruct_FormatArgumentData_6) == 0x0002F0, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, K2Node_MakeArray_Array_3) == 0x000330, "Member 'ServerListItem_C_UpdatePlayerCounts::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdatePlayerCounts, CallFunc_Format_ReturnValue_3) == 0x000340, "Member 'ServerListItem_C_UpdatePlayerCounts::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.Get Queue Object
// 0x0020 (0x0020 - 0x0000)
struct ServerListItem_C_Get_Queue_Object final
{
public:
	bool                                          In_Queue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameInstance*                        K2Node_DynamicCast_AsSQGame_Instance;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_Get_Queue_Object) == 0x000008, "Wrong alignment on ServerListItem_C_Get_Queue_Object");
static_assert(sizeof(ServerListItem_C_Get_Queue_Object) == 0x000020, "Wrong size on ServerListItem_C_Get_Queue_Object");
static_assert(offsetof(ServerListItem_C_Get_Queue_Object, In_Queue) == 0x000000, "Member 'ServerListItem_C_Get_Queue_Object::In_Queue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Queue_Object, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'ServerListItem_C_Get_Queue_Object::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Queue_Object, K2Node_DynamicCast_AsSQGame_Instance) == 0x000010, "Member 'ServerListItem_C_Get_Queue_Object::K2Node_DynamicCast_AsSQGame_Instance' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Queue_Object, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ServerListItem_C_Get_Queue_Object::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Queue_Object, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ServerListItem_C_Get_Queue_Object::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.IsJoinServer
// 0x0003 (0x0003 - 0x0000)
struct ServerListItem_C_IsJoinServer final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_IsJoinServer) == 0x000001, "Wrong alignment on ServerListItem_C_IsJoinServer");
static_assert(sizeof(ServerListItem_C_IsJoinServer) == 0x000003, "Wrong size on ServerListItem_C_IsJoinServer");
static_assert(offsetof(ServerListItem_C_IsJoinServer, Selected) == 0x000000, "Member 'ServerListItem_C_IsJoinServer::Selected' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsJoinServer, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ServerListItem_C_IsJoinServer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsJoinServer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000002, "Member 'ServerListItem_C_IsJoinServer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.Is Whitelisted
// 0x0001 (0x0001 - 0x0000)
struct ServerListItem_C_Is_Whitelisted final
{
public:
	bool                                          Param_Is_Whitelisted;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_Is_Whitelisted) == 0x000001, "Wrong alignment on ServerListItem_C_Is_Whitelisted");
static_assert(sizeof(ServerListItem_C_Is_Whitelisted) == 0x000001, "Wrong size on ServerListItem_C_Is_Whitelisted");
static_assert(offsetof(ServerListItem_C_Is_Whitelisted, Param_Is_Whitelisted) == 0x000000, "Member 'ServerListItem_C_Is_Whitelisted::Param_Is_Whitelisted' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.Is Modded
// 0x0001 (0x0001 - 0x0000)
struct ServerListItem_C_Is_Modded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_Is_Modded) == 0x000001, "Wrong alignment on ServerListItem_C_Is_Modded");
static_assert(sizeof(ServerListItem_C_Is_Modded) == 0x000001, "Wrong size on ServerListItem_C_Is_Modded");
static_assert(offsetof(ServerListItem_C_Is_Modded, ReturnValue) == 0x000000, "Member 'ServerListItem_C_Is_Modded::ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.Get_Modded_Icon_Color
// 0x0034 (0x0034 - 0x0000)
struct ServerListItem_C_Get_Modded_Icon_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Whitelisted_Is_Whitelisted;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Modded_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC5[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_Get_Modded_Icon_Color) == 0x000004, "Wrong alignment on ServerListItem_C_Get_Modded_Icon_Color");
static_assert(sizeof(ServerListItem_C_Get_Modded_Icon_Color) == 0x000034, "Wrong size on ServerListItem_C_Get_Modded_Icon_Color");
static_assert(offsetof(ServerListItem_C_Get_Modded_Icon_Color, ReturnValue) == 0x000000, "Member 'ServerListItem_C_Get_Modded_Icon_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Modded_Icon_Color, CallFunc_Is_Whitelisted_Is_Whitelisted) == 0x000010, "Member 'ServerListItem_C_Get_Modded_Icon_Color::CallFunc_Is_Whitelisted_Is_Whitelisted' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Modded_Icon_Color, CallFunc_Is_Modded_ReturnValue) == 0x000011, "Member 'ServerListItem_C_Get_Modded_Icon_Color::CallFunc_Is_Modded_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Modded_Icon_Color, CallFunc_SelectColor_ReturnValue) == 0x000014, "Member 'ServerListItem_C_Get_Modded_Icon_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_Modded_Icon_Color, CallFunc_SelectColor_ReturnValue_1) == 0x000024, "Member 'ServerListItem_C_Get_Modded_Icon_Color::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.TooltipModIcon
// 0x0010 (0x0010 - 0x0000)
struct ServerListItem_C_TooltipModIcon final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ModTooltip_C*                        CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_TooltipModIcon) == 0x000008, "Wrong alignment on ServerListItem_C_TooltipModIcon");
static_assert(sizeof(ServerListItem_C_TooltipModIcon) == 0x000010, "Wrong size on ServerListItem_C_TooltipModIcon");
static_assert(offsetof(ServerListItem_C_TooltipModIcon, ReturnValue) == 0x000000, "Member 'ServerListItem_C_TooltipModIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_TooltipModIcon, CallFunc_Create_ReturnValue) == 0x000008, "Member 'ServerListItem_C_TooltipModIcon::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.TooltipLocked
// 0x0028 (0x0028 - 0x0000)
struct ServerListItem_C_TooltipLocked final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_TooltipLocked) == 0x000008, "Wrong alignment on ServerListItem_C_TooltipLocked");
static_assert(sizeof(ServerListItem_C_TooltipLocked) == 0x000028, "Wrong size on ServerListItem_C_TooltipLocked");
static_assert(offsetof(ServerListItem_C_TooltipLocked, ReturnValue) == 0x000000, "Member 'ServerListItem_C_TooltipLocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_TooltipLocked, Temp_text_Variable) == 0x000008, "Member 'ServerListItem_C_TooltipLocked::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_TooltipLocked, CallFunc_Create_ReturnValue) == 0x000020, "Member 'ServerListItem_C_TooltipLocked::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.TooltipVAC
// 0x0028 (0x0028 - 0x0000)
struct ServerListItem_C_TooltipVAC final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_TooltipVAC) == 0x000008, "Wrong alignment on ServerListItem_C_TooltipVAC");
static_assert(sizeof(ServerListItem_C_TooltipVAC) == 0x000028, "Wrong size on ServerListItem_C_TooltipVAC");
static_assert(offsetof(ServerListItem_C_TooltipVAC, ReturnValue) == 0x000000, "Member 'ServerListItem_C_TooltipVAC::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_TooltipVAC, Temp_text_Variable) == 0x000008, "Member 'ServerListItem_C_TooltipVAC::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_TooltipVAC, CallFunc_Create_ReturnValue) == 0x000020, "Member 'ServerListItem_C_TooltipVAC::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.TooltipFavourite
// 0x0028 (0x0028 - 0x0000)
struct ServerListItem_C_TooltipFavourite final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_TooltipFavourite) == 0x000008, "Wrong alignment on ServerListItem_C_TooltipFavourite");
static_assert(sizeof(ServerListItem_C_TooltipFavourite) == 0x000028, "Wrong size on ServerListItem_C_TooltipFavourite");
static_assert(offsetof(ServerListItem_C_TooltipFavourite, ReturnValue) == 0x000000, "Member 'ServerListItem_C_TooltipFavourite::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_TooltipFavourite, Temp_text_Variable) == 0x000008, "Member 'ServerListItem_C_TooltipFavourite::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_TooltipFavourite, CallFunc_Create_ReturnValue) == 0x000020, "Member 'ServerListItem_C_TooltipFavourite::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.GetFavouriteColor
// 0x0070 (0x0070 - 0x0000)
struct ServerListItem_C_GetFavouriteColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC6[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC7[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetServerUniqueId_OutUniqueId;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetServerUniqueId_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidFavourite_Valid;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC8[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_GetFavouriteColor) == 0x000008, "Wrong alignment on ServerListItem_C_GetFavouriteColor");
static_assert(sizeof(ServerListItem_C_GetFavouriteColor) == 0x000070, "Wrong size on ServerListItem_C_GetFavouriteColor");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, ReturnValue) == 0x000000, "Member 'ServerListItem_C_GetFavouriteColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, Temp_bool_Variable) == 0x000010, "Member 'ServerListItem_C_GetFavouriteColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, Temp_struct_Variable) == 0x000014, "Member 'ServerListItem_C_GetFavouriteColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, Temp_struct_Variable_1) == 0x000024, "Member 'ServerListItem_C_GetFavouriteColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000038, "Member 'ServerListItem_C_GetFavouriteColor::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'ServerListItem_C_GetFavouriteColor::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, CallFunc_GetServerUniqueId_OutUniqueId) == 0x000048, "Member 'ServerListItem_C_GetFavouriteColor::CallFunc_GetServerUniqueId_OutUniqueId' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, CallFunc_GetServerUniqueId_ReturnValue) == 0x000058, "Member 'ServerListItem_C_GetFavouriteColor::CallFunc_GetServerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, CallFunc_IsValidFavourite_Valid) == 0x000059, "Member 'ServerListItem_C_GetFavouriteColor::CallFunc_IsValidFavourite_Valid' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetFavouriteColor, K2Node_Select_Default) == 0x00005C, "Member 'ServerListItem_C_GetFavouriteColor::K2Node_Select_Default' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.Toggle Favourite
// 0x00F8 (0x00F8 - 0x0000)
struct ServerListItem_C_Toggle_Favourite final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Favourite;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Added;                                             // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC9[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_UniqueId;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class USaveData_UI_C*                         L_Save;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCB[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_1;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_2;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue_3;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0078(0x0028)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BCC[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetServerUniqueId_OutUniqueId;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetServerUniqueId_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCD[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00C8(0x0028)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_Toggle_Favourite) == 0x000008, "Wrong alignment on ServerListItem_C_Toggle_Favourite");
static_assert(sizeof(ServerListItem_C_Toggle_Favourite) == 0x0000F8, "Wrong size on ServerListItem_C_Toggle_Favourite");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, Valid) == 0x000000, "Member 'ServerListItem_C_Toggle_Favourite::Valid' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, Favourite) == 0x000001, "Member 'ServerListItem_C_Toggle_Favourite::Favourite' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, Added) == 0x000002, "Member 'ServerListItem_C_Toggle_Favourite::Added' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, L_UniqueId) == 0x000008, "Member 'ServerListItem_C_Toggle_Favourite::L_UniqueId' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, L_Save) == 0x000018, "Member 'ServerListItem_C_Toggle_Favourite::L_Save' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, Temp_bool_Variable) == 0x000020, "Member 'ServerListItem_C_Toggle_Favourite::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000028, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_Len_ReturnValue) == 0x000030, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_GetSquadGameUserSettings_ReturnValue_1) == 0x000038, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_GetSquadGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_GetSquadGameUserSettings_ReturnValue_2) == 0x000040, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_GetSquadGameUserSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_GetSquadGameUserSettings_ReturnValue_3) == 0x000048, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_GetSquadGameUserSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'ServerListItem_C_Toggle_Favourite::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, K2Node_MakeStruct_SlateColor_1) == 0x000078, "Member 'ServerListItem_C_Toggle_Favourite::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A0, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_Array_AddUnique_ReturnValue) == 0x0000A8, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_GetServerUniqueId_OutUniqueId) == 0x0000B0, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_GetServerUniqueId_OutUniqueId' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_GetServerUniqueId_ReturnValue) == 0x0000C0, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_GetServerUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_BooleanOR_ReturnValue) == 0x0000C2, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_Array_Contains_ReturnValue) == 0x0000C3, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, K2Node_Select_Default) == 0x0000C8, "Member 'ServerListItem_C_Toggle_Favourite::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Toggle_Favourite, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000F0, "Member 'ServerListItem_C_Toggle_Favourite::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.UpdateFlags
// 0x0B38 (0x0B38 - 0x0000)
struct ServerListItem_C_UpdateFlags final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCE[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFactionEntry_Success;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BCF[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry;          // 0x0018(0x0580)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD0[0x7];                                     // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQFactionSetup_C*                   K2Node_DynamicCast_AsBP_SQFaction_Setup_1;         // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFactionEntry_Success_1;             // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD1[0x6];                                     // 0x05AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQFactionEntry                        CallFunc_TryGetFactionEntry_FactionEntry_1;        // 0x05B0(0x0580)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_UpdateFlags) == 0x000008, "Wrong alignment on ServerListItem_C_UpdateFlags");
static_assert(sizeof(ServerListItem_C_UpdateFlags) == 0x000B38, "Wrong size on ServerListItem_C_UpdateFlags");
static_assert(offsetof(ServerListItem_C_UpdateFlags, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ServerListItem_C_UpdateFlags::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'ServerListItem_C_UpdateFlags::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, K2Node_DynamicCast_AsBP_SQFaction_Setup) == 0x000008, "Member 'ServerListItem_C_UpdateFlags::K2Node_DynamicCast_AsBP_SQFaction_Setup' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ServerListItem_C_UpdateFlags::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, CallFunc_TryGetFactionEntry_Success) == 0x000011, "Member 'ServerListItem_C_UpdateFlags::CallFunc_TryGetFactionEntry_Success' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, CallFunc_TryGetFactionEntry_FactionEntry) == 0x000018, "Member 'ServerListItem_C_UpdateFlags::CallFunc_TryGetFactionEntry_FactionEntry' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, CallFunc_IsValid_ReturnValue_2) == 0x000598, "Member 'ServerListItem_C_UpdateFlags::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, K2Node_DynamicCast_AsBP_SQFaction_Setup_1) == 0x0005A0, "Member 'ServerListItem_C_UpdateFlags::K2Node_DynamicCast_AsBP_SQFaction_Setup_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, K2Node_DynamicCast_bSuccess_1) == 0x0005A8, "Member 'ServerListItem_C_UpdateFlags::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, CallFunc_TryGetFactionEntry_Success_1) == 0x0005A9, "Member 'ServerListItem_C_UpdateFlags::CallFunc_TryGetFactionEntry_Success_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, CallFunc_TryGetFactionEntry_FactionEntry_1) == 0x0005B0, "Member 'ServerListItem_C_UpdateFlags::CallFunc_TryGetFactionEntry_FactionEntry_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateFlags, CallFunc_BooleanAND_ReturnValue) == 0x000B30, "Member 'ServerListItem_C_UpdateFlags::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.IsValidFavourite
// 0x0030 (0x0030 - 0x0000)
struct ServerListItem_C_IsValidFavourite final
{
public:
	TArray<class FString>                         Favourites;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 UniqueID;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	bool                                          Licensed;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_IsValidFavourite) == 0x000008, "Wrong alignment on ServerListItem_C_IsValidFavourite");
static_assert(sizeof(ServerListItem_C_IsValidFavourite) == 0x000030, "Wrong size on ServerListItem_C_IsValidFavourite");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, Favourites) == 0x000000, "Member 'ServerListItem_C_IsValidFavourite::Favourites' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, UniqueID) == 0x000010, "Member 'ServerListItem_C_IsValidFavourite::UniqueID' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, Licensed) == 0x000020, "Member 'ServerListItem_C_IsValidFavourite::Licensed' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, Valid) == 0x000021, "Member 'ServerListItem_C_IsValidFavourite::Valid' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, CallFunc_Array_Contains_ReturnValue) == 0x000022, "Member 'ServerListItem_C_IsValidFavourite::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, CallFunc_Contains_ReturnValue) == 0x000023, "Member 'ServerListItem_C_IsValidFavourite::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, CallFunc_Len_ReturnValue) == 0x000024, "Member 'ServerListItem_C_IsValidFavourite::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'ServerListItem_C_IsValidFavourite::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000029, "Member 'ServerListItem_C_IsValidFavourite::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'ServerListItem_C_IsValidFavourite::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, CallFunc_BooleanAND_ReturnValue_1) == 0x00002B, "Member 'ServerListItem_C_IsValidFavourite::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_IsValidFavourite, CallFunc_BooleanAND_ReturnValue_2) == 0x00002C, "Member 'ServerListItem_C_IsValidFavourite::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.UpdateTags
// 0x0248 (0x0248 - 0x0000)
struct ServerListItem_C_UpdateTags final
{
public:
	class FText                                   OnlyText;                                          // 0x0000(0x0018)(Edit, BlueprintVisible)
	class UServerTag_C*                           LastGamemodeTag;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumGamemodes;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD2[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESQTagType, struct FLinearColor>         TagsColor;                                         // 0x0028(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD3[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayText_Text;                      // 0x0080(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD4[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E0(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD5[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQServerTag                           CallFunc_Array_Get_Item;                           // 0x0108(0x0058)()
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0160(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD6[0x2];                                     // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0178(0x0018)()
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD7[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UServerTag_C*                           K2Node_DynamicCast_AsServer_Tag;                   // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD8[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Whitelisted_Is_Whitelisted;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD9[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESQTagType, struct FLinearColor>         K2Node_MakeVariable_MakeVariableOutput;            // 0x01C0(0x0050)()
	class UServerTag_C*                           CallFunc_Create_ReturnValue;                       // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UServerTag_C*                           CallFunc_Create_ReturnValue_1;                     // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_1;    // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_UpdateTags) == 0x000008, "Wrong alignment on ServerListItem_C_UpdateTags");
static_assert(sizeof(ServerListItem_C_UpdateTags) == 0x000248, "Wrong size on ServerListItem_C_UpdateTags");
static_assert(offsetof(ServerListItem_C_UpdateTags, OnlyText) == 0x000000, "Member 'ServerListItem_C_UpdateTags::OnlyText' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, LastGamemodeTag) == 0x000018, "Member 'ServerListItem_C_UpdateTags::LastGamemodeTag' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, NumGamemodes) == 0x000020, "Member 'ServerListItem_C_UpdateTags::NumGamemodes' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, TagsColor) == 0x000028, "Member 'ServerListItem_C_UpdateTags::TagsColor' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, Temp_int_Array_Index_Variable) == 0x000078, "Member 'ServerListItem_C_UpdateTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_GetDisplayText_Text) == 0x000080, "Member 'ServerListItem_C_UpdateTags::CallFunc_GetDisplayText_Text' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Conv_TextToString_ReturnValue) == 0x000098, "Member 'ServerListItem_C_UpdateTags::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000A8, "Member 'ServerListItem_C_UpdateTags::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'ServerListItem_C_UpdateTags::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'ServerListItem_C_UpdateTags::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D0, "Member 'ServerListItem_C_UpdateTags::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E0, "Member 'ServerListItem_C_UpdateTags::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'ServerListItem_C_UpdateTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'ServerListItem_C_UpdateTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'ServerListItem_C_UpdateTags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Array_Get_Item) == 0x000108, "Member 'ServerListItem_C_UpdateTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_GetAllChildren_ReturnValue) == 0x000160, "Member 'ServerListItem_C_UpdateTags::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'ServerListItem_C_UpdateTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000174, "Member 'ServerListItem_C_UpdateTags::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Greater_IntInt_ReturnValue) == 0x000175, "Member 'ServerListItem_C_UpdateTags::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_TextToUpper_ReturnValue) == 0x000178, "Member 'ServerListItem_C_UpdateTags::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Array_LastIndex_ReturnValue) == 0x000190, "Member 'ServerListItem_C_UpdateTags::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Array_Length_ReturnValue_1) == 0x000194, "Member 'ServerListItem_C_UpdateTags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Array_Get_Item_1) == 0x000198, "Member 'ServerListItem_C_UpdateTags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Less_IntInt_ReturnValue) == 0x0001A0, "Member 'ServerListItem_C_UpdateTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, K2Node_DynamicCast_AsServer_Tag) == 0x0001A8, "Member 'ServerListItem_C_UpdateTags::K2Node_DynamicCast_AsServer_Tag' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'ServerListItem_C_UpdateTags::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, Temp_int_Variable) == 0x0001B4, "Member 'ServerListItem_C_UpdateTags::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Is_Whitelisted_Is_Whitelisted) == 0x0001B8, "Member 'ServerListItem_C_UpdateTags::CallFunc_Is_Whitelisted_Is_Whitelisted' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, K2Node_MakeVariable_MakeVariableOutput) == 0x0001C0, "Member 'ServerListItem_C_UpdateTags::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Create_ReturnValue) == 0x000210, "Member 'ServerListItem_C_UpdateTags::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Create_ReturnValue_1) == 0x000218, "Member 'ServerListItem_C_UpdateTags::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000220, "Member 'ServerListItem_C_UpdateTags::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_AddChildToHorizontalBox_ReturnValue_1) == 0x000228, "Member 'ServerListItem_C_UpdateTags::CallFunc_AddChildToHorizontalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Map_Find_Value) == 0x000230, "Member 'ServerListItem_C_UpdateTags::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTags, CallFunc_Map_Find_ReturnValue) == 0x000240, "Member 'ServerListItem_C_UpdateTags::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.UpdateLayerName
// 0x0018 (0x0018 - 0x0000)
struct ServerListItem_C_UpdateLayerName final
{
public:
	class FText                                   CallFunc_GetMapName_MapName;                       // 0x0000(0x0018)()
};
static_assert(alignof(ServerListItem_C_UpdateLayerName) == 0x000008, "Wrong alignment on ServerListItem_C_UpdateLayerName");
static_assert(sizeof(ServerListItem_C_UpdateLayerName) == 0x000018, "Wrong size on ServerListItem_C_UpdateLayerName");
static_assert(offsetof(ServerListItem_C_UpdateLayerName, CallFunc_GetMapName_MapName) == 0x000000, "Member 'ServerListItem_C_UpdateLayerName::CallFunc_GetMapName_MapName' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.Get_ImageHealth_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct ServerListItem_C_Get_ImageHealth_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_Get_ImageHealth_ToolTipWidget_0) == 0x000008, "Wrong alignment on ServerListItem_C_Get_ImageHealth_ToolTipWidget_0");
static_assert(sizeof(ServerListItem_C_Get_ImageHealth_ToolTipWidget_0) == 0x000010, "Wrong size on ServerListItem_C_Get_ImageHealth_ToolTipWidget_0");
static_assert(offsetof(ServerListItem_C_Get_ImageHealth_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'ServerListItem_C_Get_ImageHealth_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_Get_ImageHealth_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'ServerListItem_C_Get_ImageHealth_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.CreateMorqueeText
// 0x0050 (0x0050 - 0x0000)
struct ServerListItem_C_CreateMorqueeText final
{
public:
	class UOverlay*                               Overlay;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LettersLimit;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             FromText;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DotsEnding;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_MarqueeText_C*                      MarqueeText;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UUI_MarqueeText_C*                      CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UButton*                                CallFunc_GetMainButton_DetectionButton;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_CreateMorqueeText) == 0x000008, "Wrong alignment on ServerListItem_C_CreateMorqueeText");
static_assert(sizeof(ServerListItem_C_CreateMorqueeText) == 0x000050, "Wrong size on ServerListItem_C_CreateMorqueeText");
static_assert(offsetof(ServerListItem_C_CreateMorqueeText, Overlay) == 0x000000, "Member 'ServerListItem_C_CreateMorqueeText::Overlay' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_CreateMorqueeText, LettersLimit) == 0x000008, "Member 'ServerListItem_C_CreateMorqueeText::LettersLimit' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_CreateMorqueeText, FromText) == 0x000010, "Member 'ServerListItem_C_CreateMorqueeText::FromText' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_CreateMorqueeText, DotsEnding) == 0x000018, "Member 'ServerListItem_C_CreateMorqueeText::DotsEnding' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_CreateMorqueeText, MarqueeText) == 0x000020, "Member 'ServerListItem_C_CreateMorqueeText::MarqueeText' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_CreateMorqueeText, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'ServerListItem_C_CreateMorqueeText::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_CreateMorqueeText, CallFunc_Create_ReturnValue) == 0x000038, "Member 'ServerListItem_C_CreateMorqueeText::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_CreateMorqueeText, CallFunc_GetMainButton_DetectionButton) == 0x000040, "Member 'ServerListItem_C_CreateMorqueeText::CallFunc_GetMainButton_DetectionButton' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_CreateMorqueeText, CallFunc_AddChildToOverlay_ReturnValue) == 0x000048, "Member 'ServerListItem_C_CreateMorqueeText::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.SelectCurrentServer
// 0x0014 (0x0014 - 0x0000)
struct ServerListItem_C_SelectCurrentServer final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_SelectCurrentServer) == 0x000004, "Wrong alignment on ServerListItem_C_SelectCurrentServer");
static_assert(sizeof(ServerListItem_C_SelectCurrentServer) == 0x000014, "Wrong size on ServerListItem_C_SelectCurrentServer");
static_assert(offsetof(ServerListItem_C_SelectCurrentServer, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'ServerListItem_C_SelectCurrentServer::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_SelectCurrentServer, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000004, "Member 'ServerListItem_C_SelectCurrentServer::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_SelectCurrentServer, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x000008, "Member 'ServerListItem_C_SelectCurrentServer::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_SelectCurrentServer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'ServerListItem_C_SelectCurrentServer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_SelectCurrentServer, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'ServerListItem_C_SelectCurrentServer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_SelectCurrentServer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'ServerListItem_C_SelectCurrentServer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.UpdateTextFields
// 0x00C8 (0x00C8 - 0x0000)
struct ServerListItem_C_UpdateTextFields final
{
public:
	int32                                         GMNameTextLimit;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MapNameTextLimit;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerNameTextLimit;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	class FString                                 CallFunc_GetGameModeString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameModeString_ReturnValue_1;          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDD[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_MarqueeText_C*                      CallFunc_CreateMorqueeText_MarqueeText;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetMapName_MapName;                       // 0x0058(0x0018)()
	class UUI_MarqueeText_C*                      CallFunc_CreateMorqueeText_MarqueeText_1;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetMapName_MapName_1;                     // 0x0088(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDE[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_MarqueeText_C*                      CallFunc_CreateMorqueeText_MarqueeText_2;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_2;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ServerListItem_C_UpdateTextFields) == 0x000008, "Wrong alignment on ServerListItem_C_UpdateTextFields");
static_assert(sizeof(ServerListItem_C_UpdateTextFields) == 0x0000C8, "Wrong size on ServerListItem_C_UpdateTextFields");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, GMNameTextLimit) == 0x000000, "Member 'ServerListItem_C_UpdateTextFields::GMNameTextLimit' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, MapNameTextLimit) == 0x000004, "Member 'ServerListItem_C_UpdateTextFields::MapNameTextLimit' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, ServerNameTextLimit) == 0x000008, "Member 'ServerListItem_C_UpdateTextFields::ServerNameTextLimit' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_GetGameModeString_ReturnValue) == 0x000028, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_GetGameModeString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_GetGameModeString_ReturnValue_1) == 0x000038, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_GetGameModeString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_Len_ReturnValue) == 0x000048, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004C, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_CreateMorqueeText_MarqueeText) == 0x000050, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_CreateMorqueeText_MarqueeText' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_GetMapName_MapName) == 0x000058, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_GetMapName_MapName' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_CreateMorqueeText_MarqueeText_1) == 0x000070, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_CreateMorqueeText_MarqueeText_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_Conv_TextToString_ReturnValue) == 0x000078, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_GetMapName_MapName_1) == 0x000088, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_GetMapName_MapName_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000A0, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_Len_ReturnValue_1) == 0x0000B0, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000B4, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_CreateMorqueeText_MarqueeText_2) == 0x0000B8, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_CreateMorqueeText_MarqueeText_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_Len_ReturnValue_2) == 0x0000C0, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_Len_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_UpdateTextFields, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0000C4, "Member 'ServerListItem_C_UpdateTextFields::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.GetPlayTime
// 0x0108 (0x0108 - 0x0000)
struct ServerListItem_C_GetPlayTime final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDF[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0048(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
};
static_assert(alignof(ServerListItem_C_GetPlayTime) == 0x000008, "Wrong alignment on ServerListItem_C_GetPlayTime");
static_assert(sizeof(ServerListItem_C_GetPlayTime) == 0x000108, "Wrong size on ServerListItem_C_GetPlayTime");
static_assert(offsetof(ServerListItem_C_GetPlayTime, ReturnValue) == 0x000000, "Member 'ServerListItem_C_GetPlayTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, CallFunc_BreakTimespan_Days) == 0x000018, "Member 'ServerListItem_C_GetPlayTime::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, CallFunc_BreakTimespan_Hours) == 0x00001C, "Member 'ServerListItem_C_GetPlayTime::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, CallFunc_BreakTimespan_Minutes) == 0x000020, "Member 'ServerListItem_C_GetPlayTime::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, CallFunc_BreakTimespan_Seconds) == 0x000024, "Member 'ServerListItem_C_GetPlayTime::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, CallFunc_BreakTimespan_Milliseconds) == 0x000028, "Member 'ServerListItem_C_GetPlayTime::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'ServerListItem_C_GetPlayTime::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000048, "Member 'ServerListItem_C_GetPlayTime::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'ServerListItem_C_GetPlayTime::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'ServerListItem_C_GetPlayTime::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, K2Node_MakeArray_Array) == 0x0000E0, "Member 'ServerListItem_C_GetPlayTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetPlayTime, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'ServerListItem_C_GetPlayTime::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.GetMapName
// 0x0160 (0x0160 - 0x0000)
struct ServerListItem_C_GetMapName final
{
public:
	class FText                                   MapName;                                           // 0x0000(0x0018)(Parm, OutParm)
	class UBP_SQLayer_C*                          K2Node_DynamicCast_AsBP_SQLayer;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetLevelEntry_Success;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE0[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQLevelEntry                          CallFunc_TryGetLevelEntry_LevelEntry;              // 0x0028(0x0138)(HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_GetMapName) == 0x000008, "Wrong alignment on ServerListItem_C_GetMapName");
static_assert(sizeof(ServerListItem_C_GetMapName) == 0x000160, "Wrong size on ServerListItem_C_GetMapName");
static_assert(offsetof(ServerListItem_C_GetMapName, MapName) == 0x000000, "Member 'ServerListItem_C_GetMapName::MapName' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetMapName, K2Node_DynamicCast_AsBP_SQLayer) == 0x000018, "Member 'ServerListItem_C_GetMapName::K2Node_DynamicCast_AsBP_SQLayer' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetMapName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ServerListItem_C_GetMapName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetMapName, CallFunc_TryGetLevelEntry_Success) == 0x000021, "Member 'ServerListItem_C_GetMapName::CallFunc_TryGetLevelEntry_Success' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetMapName, CallFunc_TryGetLevelEntry_LevelEntry) == 0x000028, "Member 'ServerListItem_C_GetMapName::CallFunc_TryGetLevelEntry_LevelEntry' has a wrong offset!");

// Function ServerListItem.ServerListItem_C.GetGameModeString
// 0x00A8 (0x00A8 - 0x0000)
struct ServerListItem_C_GetGameModeString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameVersion_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetMajorMinorVersion_ReturnValue;         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetGameVersion_ReturnValue_1;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetMajorMinorVersion_ReturnValue_1;       // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE1[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ServerListItem_C_GetGameModeString) == 0x000008, "Wrong alignment on ServerListItem_C_GetGameModeString");
static_assert(sizeof(ServerListItem_C_GetGameModeString) == 0x0000A8, "Wrong size on ServerListItem_C_GetGameModeString");
static_assert(offsetof(ServerListItem_C_GetGameModeString, ReturnValue) == 0x000000, "Member 'ServerListItem_C_GetGameModeString::ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_GetGameVersion_ReturnValue) == 0x000010, "Member 'ServerListItem_C_GetGameModeString::CallFunc_GetGameVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'ServerListItem_C_GetGameModeString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_GetMajorMinorVersion_ReturnValue) == 0x000030, "Member 'ServerListItem_C_GetGameModeString::CallFunc_GetMajorMinorVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_GetGameVersion_ReturnValue_1) == 0x000040, "Member 'ServerListItem_C_GetGameModeString::CallFunc_GetGameVersion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_GetMajorMinorVersion_ReturnValue_1) == 0x000050, "Member 'ServerListItem_C_GetGameModeString::CallFunc_GetMajorMinorVersion_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000060, "Member 'ServerListItem_C_GetGameModeString::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000068, "Member 'ServerListItem_C_GetGameModeString::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'ServerListItem_C_GetGameModeString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'ServerListItem_C_GetGameModeString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ServerListItem_C_GetGameModeString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'ServerListItem_C_GetGameModeString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

}


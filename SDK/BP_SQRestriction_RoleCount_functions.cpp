#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQRestriction_RoleCount

#include "Basic.hpp"

#include "BP_SQRestriction_RoleCount_classes.hpp"
#include "BP_SQRestriction_RoleCount_parameters.hpp"


namespace SDK
{

// Function BP_SQRestriction_RoleCount.BP_SQRestriction_RoleCount_C.ShouldBeCounted
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USQRoleSettings*                  In_Tested_Role_Setting                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQRoleSettings*                  In_Searched_Role_Setting_If_No_Tags                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Out_Should_Be_Counted                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SQRestriction_RoleCount_C::ShouldBeCounted(class USQRoleSettings* In_Tested_Role_Setting, class USQRoleSettings* In_Searched_Role_Setting_If_No_Tags, bool* Out_Should_Be_Counted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_RoleCount_C", "ShouldBeCounted");

	Params::BP_SQRestriction_RoleCount_C_ShouldBeCounted Parms{};

	Parms.In_Tested_Role_Setting = In_Tested_Role_Setting;
	Parms.In_Searched_Role_Setting_If_No_Tags = In_Searched_Role_Setting_If_No_Tags;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Should_Be_Counted != nullptr)
		*Out_Should_Be_Counted = Parms.Out_Should_Be_Counted;
}


// Function BP_SQRestriction_RoleCount.BP_SQRestriction_RoleCount_C.GetTeamUsage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASQTeam*                          In_Team                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQRoleSettings*                  In_Setting                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Out_Usage                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SQRestriction_RoleCount_C::GetTeamUsage(class ASQTeam* In_Team, class USQRoleSettings* In_Setting, int32* Out_Usage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_RoleCount_C", "GetTeamUsage");

	Params::BP_SQRestriction_RoleCount_C_GetTeamUsage Parms{};

	Parms.In_Team = In_Team;
	Parms.In_Setting = In_Setting;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Usage != nullptr)
		*Out_Usage = Parms.Out_Usage;
}


// Function BP_SQRestriction_RoleCount.BP_SQRestriction_RoleCount_C.GetSquadUsage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASQPlayerController*              In_Player                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQRoleSettings*                  In_Setting                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Out_Usage                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SQRestriction_RoleCount_C::GetSquadUsage(class ASQPlayerController* In_Player, class USQRoleSettings* In_Setting, int32* Out_Usage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_RoleCount_C", "GetSquadUsage");

	Params::BP_SQRestriction_RoleCount_C_GetSquadUsage Parms{};

	Parms.In_Player = In_Player;
	Parms.In_Setting = In_Setting;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Usage != nullptr)
		*Out_Usage = Parms.Out_Usage;
}


// Function BP_SQRestriction_RoleCount.BP_SQRestriction_RoleCount_C.ShouldPlayerBeCounted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASQPlayerState*                   In_Player                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQRoleSettings*                  In_Searched_Role_Setting_If_No_Tags                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Out_Should_Count                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SQRestriction_RoleCount_C::ShouldPlayerBeCounted(class ASQPlayerState* In_Player, class USQRoleSettings* In_Searched_Role_Setting_If_No_Tags, bool* Out_Should_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_RoleCount_C", "ShouldPlayerBeCounted");

	Params::BP_SQRestriction_RoleCount_C_ShouldPlayerBeCounted Parms{};

	Parms.In_Player = In_Player;
	Parms.In_Searched_Role_Setting_If_No_Tags = In_Searched_Role_Setting_If_No_Tags;

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Should_Count != nullptr)
		*Out_Should_Count = Parms.Out_Should_Count;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VehicleStatus

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_VehicleStatus.W_VehicleStatus_C.ExecuteUbergraph_W_VehicleStatus
// 0x0078 (0x0078 - 0x0000)
struct W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_380C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380D[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus) == 0x000008, "Wrong alignment on W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus");
static_assert(sizeof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus) == 0x000078, "Wrong size on W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus");
static_assert(offsetof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus, EntryPoint) == 0x000000, "Member 'W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus, K2Node_Event_MyGeometry) == 0x000020, "Member 'W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus, K2Node_Event_InDeltaTime) == 0x000058, "Member 'W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000068, "Member 'W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'W_VehicleStatus_C_ExecuteUbergraph_W_VehicleStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_VehicleStatus.W_VehicleStatus_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_VehicleStatus_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VehicleStatus_C_Tick) == 0x000004, "Wrong alignment on W_VehicleStatus_C_Tick");
static_assert(sizeof(W_VehicleStatus_C_Tick) == 0x00003C, "Wrong size on W_VehicleStatus_C_Tick");
static_assert(offsetof(W_VehicleStatus_C_Tick, MyGeometry) == 0x000000, "Member 'W_VehicleStatus_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Tick, InDeltaTime) == 0x000038, "Member 'W_VehicleStatus_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_VehicleStatus.W_VehicleStatus_C.Get Vehicle
// 0x0038 (0x0038 - 0x0000)
struct W_VehicleStatus_C_Get_Vehicle final
{
public:
	class ASQVehicle*                             CallFunc_GetCurrentVehicle_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQDeployableVehicle*                   K2Node_DynamicCast_AsSQDeployable_Vehicle;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_380E[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQHelicopter2*                         K2Node_DynamicCast_AsSQHelicopter_2;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_380F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleSeatComponent*                CallFunc_GetDriverSeat_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleStatus_C_Get_Vehicle) == 0x000008, "Wrong alignment on W_VehicleStatus_C_Get_Vehicle");
static_assert(sizeof(W_VehicleStatus_C_Get_Vehicle) == 0x000038, "Wrong size on W_VehicleStatus_C_Get_Vehicle");
static_assert(offsetof(W_VehicleStatus_C_Get_Vehicle, CallFunc_GetCurrentVehicle_ReturnValue) == 0x000000, "Member 'W_VehicleStatus_C_Get_Vehicle::CallFunc_GetCurrentVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_Vehicle, K2Node_DynamicCast_AsSQDeployable_Vehicle) == 0x000008, "Member 'W_VehicleStatus_C_Get_Vehicle::K2Node_DynamicCast_AsSQDeployable_Vehicle' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_Vehicle, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_VehicleStatus_C_Get_Vehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_Vehicle, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'W_VehicleStatus_C_Get_Vehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_Vehicle, K2Node_DynamicCast_AsSQHelicopter_2) == 0x000018, "Member 'W_VehicleStatus_C_Get_Vehicle::K2Node_DynamicCast_AsSQHelicopter_2' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_Vehicle, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'W_VehicleStatus_C_Get_Vehicle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_Vehicle, CallFunc_GetDriverSeat_ReturnValue) == 0x000028, "Member 'W_VehicleStatus_C_Get_Vehicle::CallFunc_GetDriverSeat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_Vehicle, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'W_VehicleStatus_C_Get_Vehicle::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_VehicleStatus.W_VehicleStatus_C.Get_VehicleHealthPercent
// 0x0010 (0x0010 - 0x0000)
struct W_VehicleStatus_C_Get_VehicleHealthPercent final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3810[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleStatus_C_Get_VehicleHealthPercent) == 0x000004, "Wrong alignment on W_VehicleStatus_C_Get_VehicleHealthPercent");
static_assert(sizeof(W_VehicleStatus_C_Get_VehicleHealthPercent) == 0x000010, "Wrong size on W_VehicleStatus_C_Get_VehicleHealthPercent");
static_assert(offsetof(W_VehicleStatus_C_Get_VehicleHealthPercent, ReturnValue) == 0x000000, "Member 'W_VehicleStatus_C_Get_VehicleHealthPercent::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_VehicleHealthPercent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'W_VehicleStatus_C_Get_VehicleHealthPercent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_VehicleHealthPercent, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'W_VehicleStatus_C_Get_VehicleHealthPercent::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_VehicleHealthPercent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'W_VehicleStatus_C_Get_VehicleHealthPercent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_VehicleHealthPercent, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'W_VehicleStatus_C_Get_VehicleHealthPercent::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Get_VehicleHealthPercent, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'W_VehicleStatus_C_Get_VehicleHealthPercent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_VehicleStatus.W_VehicleStatus_C.Update Engine State
// 0x0108 (0x0108 - 0x0000)
struct W_VehicleStatus_C_Update_Engine_State final
{
public:
	class USQVehicleEngine*                       L_Engine;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           L_Health_Color;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           L_Engine_Toggle_Color;                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3811[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEngineActive_ReturnValue;               // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3812[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentEngineToggleRequiredDuration_ReturnValue; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3813[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentEngineTogglePercentage_ReturnValue; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEngineToggleActive_ReturnValue;         // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3814[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3815[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleComponent*                    CallFunc_GetVehicleEngine_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleEngine*                       K2Node_DynamicCast_AsSQVehicle_Engine;             // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3816[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNormalizedHealth_ReturnValue;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3817[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3818[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3819[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue_1;    // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_VehicleStatus_C_Update_Engine_State) == 0x000008, "Wrong alignment on W_VehicleStatus_C_Update_Engine_State");
static_assert(sizeof(W_VehicleStatus_C_Update_Engine_State) == 0x000108, "Wrong size on W_VehicleStatus_C_Update_Engine_State");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, L_Engine) == 0x000000, "Member 'W_VehicleStatus_C_Update_Engine_State::L_Engine' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, L_Health_Color) == 0x000008, "Member 'W_VehicleStatus_C_Update_Engine_State::L_Health_Color' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, L_Engine_Toggle_Color) == 0x000018, "Member 'W_VehicleStatus_C_Update_Engine_State::L_Engine_Toggle_Color' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, Temp_object_Variable) == 0x000028, "Member 'W_VehicleStatus_C_Update_Engine_State::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, Temp_object_Variable_1) == 0x000030, "Member 'W_VehicleStatus_C_Update_Engine_State::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, Temp_bool_Variable) == 0x000038, "Member 'W_VehicleStatus_C_Update_Engine_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, Temp_struct_Variable) == 0x00003C, "Member 'W_VehicleStatus_C_Update_Engine_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, Temp_struct_Variable_1) == 0x00004C, "Member 'W_VehicleStatus_C_Update_Engine_State::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, Temp_bool_Variable_1) == 0x00005C, "Member 'W_VehicleStatus_C_Update_Engine_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, Temp_bool_Variable_2) == 0x00005D, "Member 'W_VehicleStatus_C_Update_Engine_State::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_IsEngineActive_ReturnValue) == 0x00005E, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_IsEngineActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_GetCurrentEngineToggleRequiredDuration_ReturnValue) == 0x000060, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_GetCurrentEngineToggleRequiredDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000064, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, K2Node_Select_Default) == 0x000068, "Member 'W_VehicleStatus_C_Update_Engine_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_GetCurrentEngineTogglePercentage_ReturnValue) == 0x000078, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_GetCurrentEngineTogglePercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_IsEngineToggleActive_ReturnValue) == 0x00007D, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_IsEngineToggleActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_BooleanOR_ReturnValue) == 0x00007E, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000080, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, Temp_bool_Variable_3) == 0x000084, "Member 'W_VehicleStatus_C_Update_Engine_State::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_GetVehicleEngine_ReturnValue) == 0x000088, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_GetVehicleEngine_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, K2Node_DynamicCast_AsSQVehicle_Engine) == 0x000090, "Member 'W_VehicleStatus_C_Update_Engine_State::K2Node_DynamicCast_AsSQVehicle_Engine' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'W_VehicleStatus_C_Update_Engine_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_GetNormalizedHealth_ReturnValue) == 0x00009C, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_GetNormalizedHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A0, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, K2Node_Select_Default_1) == 0x0000A4, "Member 'W_VehicleStatus_C_Update_Engine_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_BooleanAND_ReturnValue) == 0x0000B4, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, K2Node_Select_Default_2) == 0x0000B8, "Member 'W_VehicleStatus_C_Update_Engine_State::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000C0, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_FInterpTo_ReturnValue) == 0x0000C4, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000C8, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000CC, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x0000D0, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000E0, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue_1) == 0x0000E4, "Member 'W_VehicleStatus_C_Update_Engine_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Engine_State, K2Node_Select_Default_3) == 0x0000F4, "Member 'W_VehicleStatus_C_Update_Engine_State::K2Node_Select_Default_3' has a wrong offset!");

// Function W_VehicleStatus.W_VehicleStatus_C.Update Ammo State
// 0x0080 (0x0080 - 0x0000)
struct W_VehicleStatus_C_Update_Ammo_State final
{
public:
	struct FLinearColor                           L_Health_Color;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleAmmoBox*                      L_Ammo_Box;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381B[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue_1;    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleAmmoBox*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleStatus_C_Update_Ammo_State) == 0x000008, "Wrong alignment on W_VehicleStatus_C_Update_Ammo_State");
static_assert(sizeof(W_VehicleStatus_C_Update_Ammo_State) == 0x000080, "Wrong size on W_VehicleStatus_C_Update_Ammo_State");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, L_Health_Color) == 0x000000, "Member 'W_VehicleStatus_C_Update_Ammo_State::L_Health_Color' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, L_Ammo_Box) == 0x000010, "Member 'W_VehicleStatus_C_Update_Ammo_State::L_Ammo_Box' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, Temp_bool_Variable) == 0x000018, "Member 'W_VehicleStatus_C_Update_Ammo_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000028, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000029, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002B, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002C, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x000034, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000044, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue_1) == 0x000048, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, K2Node_Select_Default) == 0x000058, "Member 'W_VehicleStatus_C_Update_Ammo_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000068, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_FInterpTo_ReturnValue) == 0x00006C, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Ammo_State, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'W_VehicleStatus_C_Update_Ammo_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_VehicleStatus.W_VehicleStatus_C.Wheel State
// 0x0150 (0x0150 - 0x0000)
struct W_VehicleStatus_C_Wheel_State final
{
public:
	TArray<class USQVehicleWheel*>                L_Wheels;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FLinearColor                           L_Health_Color;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Total_Health_Normalized;                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Total_Max_Health;                                // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Total_Health;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381C[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USQVehicleTrack*>                L_Tracks;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381D[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381E[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381F[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleWheel*                        CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3820[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USQVehicleWheel*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3821[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3822[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue_1;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3823[0x2];                                     // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3824[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQVehicleTrack*                        CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USQVehicleTrack*>                CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3825[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleStatus_C_Wheel_State) == 0x000008, "Wrong alignment on W_VehicleStatus_C_Wheel_State");
static_assert(sizeof(W_VehicleStatus_C_Wheel_State) == 0x000150, "Wrong size on W_VehicleStatus_C_Wheel_State");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, L_Wheels) == 0x000000, "Member 'W_VehicleStatus_C_Wheel_State::L_Wheels' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, L_Health_Color) == 0x000010, "Member 'W_VehicleStatus_C_Wheel_State::L_Health_Color' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, L_Total_Health_Normalized) == 0x000020, "Member 'W_VehicleStatus_C_Wheel_State::L_Total_Health_Normalized' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, L_Total_Max_Health) == 0x000024, "Member 'W_VehicleStatus_C_Wheel_State::L_Total_Max_Health' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, L_Total_Health) == 0x000028, "Member 'W_VehicleStatus_C_Wheel_State::L_Total_Health' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, L_Tracks) == 0x000030, "Member 'W_VehicleStatus_C_Wheel_State::L_Tracks' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_object_Variable) == 0x000040, "Member 'W_VehicleStatus_C_Wheel_State::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_object_Variable_1) == 0x000048, "Member 'W_VehicleStatus_C_Wheel_State::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_bool_Variable) == 0x000050, "Member 'W_VehicleStatus_C_Wheel_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_struct_Variable) == 0x000054, "Member 'W_VehicleStatus_C_Wheel_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_bool_Variable_1) == 0x000064, "Member 'W_VehicleStatus_C_Wheel_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_int_Array_Index_Variable) == 0x000068, "Member 'W_VehicleStatus_C_Wheel_State::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'W_VehicleStatus_C_Wheel_State::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'W_VehicleStatus_C_Wheel_State::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_bool_Variable_2) == 0x000078, "Member 'W_VehicleStatus_C_Wheel_State::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000079, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, K2Node_Select_Default) == 0x000080, "Member 'W_VehicleStatus_C_Wheel_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Array_Get_Item) == 0x000088, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000098, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x0000A0, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000B0, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B1, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'W_VehicleStatus_C_Wheel_State::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B8, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Less_IntInt_ReturnValue) == 0x0000B9, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C0, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x0000C8, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue_1) == 0x0000D8, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, K2Node_Select_Default_1) == 0x0000E8, "Member 'W_VehicleStatus_C_Wheel_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, K2Node_Select_Default_2) == 0x0000F8, "Member 'W_VehicleStatus_C_Wheel_State::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000108, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_FInterpTo_ReturnValue) == 0x00010C, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000110, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000111, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000114, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_BooleanOR_ReturnValue) == 0x000118, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000128, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000138, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x00013C, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Array_Length_ReturnValue_1) == 0x000140, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000144, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Wheel_State, CallFunc_Less_IntInt_ReturnValue_1) == 0x000148, "Member 'W_VehicleStatus_C_Wheel_State::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_VehicleStatus.W_VehicleStatus_C.Update Turret State
// 0x0100 (0x0100 - 0x0000)
struct W_VehicleStatus_C_Update_Turret_State final
{
public:
	float                                         L_Health;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           L_Health_Color;                                    // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Total_Health_Normalized;                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                L_Seat;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3826[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue_1;    // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3827[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicleSeat*                         CallFunc_GetSeatPawn_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSeatHealth_ReturnValue;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNormalizedSeatHealth_ReturnValue;      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleSeatComponent*                CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQVehicleSeatConfig                   CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0058)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleStatus_C_Update_Turret_State) == 0x000008, "Wrong alignment on W_VehicleStatus_C_Update_Turret_State");
static_assert(sizeof(W_VehicleStatus_C_Update_Turret_State) == 0x000100, "Wrong size on W_VehicleStatus_C_Update_Turret_State");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, L_Health) == 0x000000, "Member 'W_VehicleStatus_C_Update_Turret_State::L_Health' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, L_Health_Color) == 0x000004, "Member 'W_VehicleStatus_C_Update_Turret_State::L_Health_Color' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, L_Total_Health_Normalized) == 0x000014, "Member 'W_VehicleStatus_C_Update_Turret_State::L_Total_Health_Normalized' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, L_Seat) == 0x000018, "Member 'W_VehicleStatus_C_Update_Turret_State::L_Seat' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, Temp_struct_Variable) == 0x000020, "Member 'W_VehicleStatus_C_Update_Turret_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, Temp_bool_Variable) == 0x000030, "Member 'W_VehicleStatus_C_Update_Turret_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_Less_FloatFloat_ReturnValue) == 0x000031, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x000038, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000048, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_LinearColorLerpUsingHSV_ReturnValue_1) == 0x00004C, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_LinearColorLerpUsingHSV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, K2Node_Select_Default) == 0x00005C, "Member 'W_VehicleStatus_C_Update_Turret_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00006C, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_FInterpTo_ReturnValue) == 0x000070, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000074, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, Temp_bool_Variable_1) == 0x000075, "Member 'W_VehicleStatus_C_Update_Turret_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, K2Node_Select_Default_1) == 0x000078, "Member 'W_VehicleStatus_C_Update_Turret_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_GetSeatPawn_ReturnValue) == 0x000088, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_GetSeatPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_GetSeatHealth_ReturnValue) == 0x000090, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_GetSeatHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_GetNormalizedSeatHealth_ReturnValue) == 0x000094, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_GetNormalizedSeatHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_Array_Get_Item) == 0x000098, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000F8, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_Update_Turret_State, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000F9, "Member 'W_VehicleStatus_C_Update_Turret_State::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function W_VehicleStatus.W_VehicleStatus_C.VehicleHealthColor
// 0x0008 (0x0008 - 0x0000)
struct W_VehicleStatus_C_VehicleHealthColor final
{
public:
	float                                         CallFunc_Get_VehicleHealthPercent_ReturnValue;     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_VehicleStatus_C_VehicleHealthColor) == 0x000004, "Wrong alignment on W_VehicleStatus_C_VehicleHealthColor");
static_assert(sizeof(W_VehicleStatus_C_VehicleHealthColor) == 0x000008, "Wrong size on W_VehicleStatus_C_VehicleHealthColor");
static_assert(offsetof(W_VehicleStatus_C_VehicleHealthColor, CallFunc_Get_VehicleHealthPercent_ReturnValue) == 0x000000, "Member 'W_VehicleStatus_C_VehicleHealthColor::CallFunc_Get_VehicleHealthPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_VehicleHealthColor, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'W_VehicleStatus_C_VehicleHealthColor::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_VehicleStatus_C_VehicleHealthColor, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000005, "Member 'W_VehicleStatus_C_VehicleHealthColor::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

}


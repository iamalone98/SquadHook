#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetCaptureZone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.ExecuteUbergraph_BP_MapWidgetCaptureZone
// 0x01E0 (0x01E0 - 0x0000)
struct BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD9[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DDA[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DDB[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DDC[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DDD[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DDE[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DDF[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE0[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE1[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE2[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_UniformScale;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE3[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE4[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE5[0x6];                                     // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_4;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_update_fog_of_war_Out_Has_Fog_Of_War;     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_1;   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_2;   // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_3;   // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_4;   // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_5;   // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE6[0x1];                                     // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetCaptureStateCircleColor_Color;         // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_6;                           // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_7;                           // 0x016C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_6;   // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE7[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD;                       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE8[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE9[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01C8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone) == 0x000008, "Wrong alignment on BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone) == 0x0001E0, "Wrong size on BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, EntryPoint) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_byte_Variable) == 0x000004, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_bool_Variable) == 0x000006, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_IsValid_ReturnValue_1) == 0x000007, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_struct_Variable) == 0x000008, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_struct_Variable_1) == 0x000018, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_bool_Variable_1) == 0x000028, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_float_Variable) == 0x00002C, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_float_Variable_1) == 0x000030, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_bool_Variable_2) == 0x000034, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_IsValid_ReturnValue_2) == 0x000035, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_IsValid_ReturnValue_3) == 0x000036, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_object_Variable) == 0x000038, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_bool_Variable_3) == 0x000040, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_object_Variable_1) == 0x000048, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_object_Variable_2) == 0x000050, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_bool_Variable_4) == 0x000058, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_IsValid_ReturnValue_4) == 0x000059, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_IsValid_ReturnValue_5) == 0x00005A, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_struct_Variable_2) == 0x00005C, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_bool_Variable_5) == 0x00006C, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_struct_Variable_3) == 0x000070, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_struct_Variable_4) == 0x000080, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_TextIsEmpty_ReturnValue) == 0x000090, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_byte_Variable_1) == 0x000092, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_bool_Variable_6) == 0x000093, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_GetOwningPlayer_ReturnValue) == 0x000098, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x0000A0, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000AC, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_struct_Variable_5) == 0x0000B4, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C4, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Select_Default) == 0x0000C5, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Select_Default_1) == 0x0000C8, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_MakeVector2D_ReturnValue) == 0x0000CC, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D4, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_PlayAnimation_ReturnValue) == 0x0000D8, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Select_Default_2) == 0x0000E0, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000F0, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000F8, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Event_UniformScale) == 0x000100, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Event_UniformScale' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000108, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_byte_Variable_2) == 0x000110, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000114, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000119, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Select_Default_3) == 0x000120, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Select_Default_4) == 0x000128, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_update_fog_of_war_Out_Has_Fog_Of_War) == 0x000130, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_update_fog_of_war_Out_Has_Fog_Of_War' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_1) == 0x000131, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_2) == 0x000132, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_3) == 0x000133, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_4) == 0x000134, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_5) == 0x000135, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_bool_Variable_7) == 0x000136, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000137, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Select_Default_5) == 0x000138, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_byte_Variable_3) == 0x000148, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000149, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00014A, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_GetCaptureStateCircleColor_Color) == 0x00014C, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_GetCaptureStateCircleColor_Color' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Select_Default_6) == 0x00015C, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Select_Default_7) == 0x00016C, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_6) == 0x00017C, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_update_fog_of_war_Out_Has_Fog_Of_War_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_GetHUD_ReturnValue) == 0x000180, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_CreateDelegate_OutputDelegate) == 0x000188, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_DynamicCast_AsBP_HUD) == 0x000198, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_DynamicCast_AsBP_HUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_DynamicCast_bSuccess_1) == 0x0001A0, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_DynamicCast_AsBPI_HUD) == 0x0001A8, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_DynamicCast_bSuccess_2) == 0x0001B8, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_Get_Map_Core_Map_Core) == 0x0001C0, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001C8, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, CallFunc_IsValid_ReturnValue_6) == 0x0001D8, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, Temp_bool_Variable_8) == 0x0001D9, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone, K2Node_Select_Default_8) == 0x0001DA, "Member 'BP_MapWidgetCaptureZone_C_ExecuteUbergraph_BP_MapWidgetCaptureZone::K2Node_Select_Default_8' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.OnScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MapWidgetCaptureZone_C_OnScaleChanged final
{
public:
	float                                         UniformScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_OnScaleChanged) == 0x000004, "Wrong alignment on BP_MapWidgetCaptureZone_C_OnScaleChanged");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_OnScaleChanged) == 0x000004, "Wrong size on BP_MapWidgetCaptureZone_C_OnScaleChanged");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_OnScaleChanged, UniformScale) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_OnScaleChanged::UniformScale' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.Get_FlagImage_ToolTipWidget_0
// 0x0010 (0x0010 - 0x0000)
struct BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Tooltip_CaptureZone_C*               CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0) == 0x000008, "Wrong alignment on BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0) == 0x000010, "Wrong size on BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_MapWidgetCaptureZone_C_Get_FlagImage_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.Get Same Team
// 0x000C (0x000C - 0x0000)
struct BP_MapWidgetCaptureZone_C_Get_Same_Team final
{
public:
	bool                                          Same;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_Get_Same_Team) == 0x000004, "Wrong alignment on BP_MapWidgetCaptureZone_C_Get_Same_Team");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_Get_Same_Team) == 0x00000C, "Wrong size on BP_MapWidgetCaptureZone_C_Get_Same_Team");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Get_Same_Team, Same) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_Get_Same_Team::Same' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Get_Same_Team, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_MapWidgetCaptureZone_C_Get_Same_Team::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Get_Same_Team, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MapWidgetCaptureZone_C_Get_Same_Team::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Get_Same_Team, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000009, "Member 'BP_MapWidgetCaptureZone_C_Get_Same_Team::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Get_Same_Team, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'BP_MapWidgetCaptureZone_C_Get_Same_Team::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.Update Capture Bar Visibility
// 0x000A (0x000A - 0x0000)
struct BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAdminCamera_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Same_Team_Same;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility) == 0x000001, "Wrong alignment on BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility) == 0x00000A, "Wrong size on BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, Temp_bool_Variable) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, CallFunc_IsAdminCamera_ReturnValue) == 0x000002, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::CallFunc_IsAdminCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, Temp_byte_Variable) == 0x000003, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, Temp_byte_Variable_1) == 0x000004, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, CallFunc_Get_Same_Team_Same) == 0x000005, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::CallFunc_Get_Same_Team_Same' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility, K2Node_Select_Default) == 0x000009, "Member 'BP_MapWidgetCaptureZone_C_Update_Capture_Bar_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.update fog of war
// 0x0020 (0x0020 - 0x0000)
struct BP_MapWidgetCaptureZone_C_Update_fog_of_war final
{
public:
	bool                                          Out_Has_Fog_Of_War;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKnownToLocalPlayer_bKnown;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQGameState*                           CallFunc_TryGetGameState_OutGameState;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetGameState_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Get_Same_Team_Same;                       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAdminCamera_ReturnValue;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_Update_fog_of_war) == 0x000008, "Wrong alignment on BP_MapWidgetCaptureZone_C_Update_fog_of_war");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_Update_fog_of_war) == 0x000020, "Wrong size on BP_MapWidgetCaptureZone_C_Update_fog_of_war");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, Out_Has_Fog_Of_War) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::Out_Has_Fog_Of_War' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, Temp_bool_Variable) == 0x000001, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, Temp_byte_Variable) == 0x000002, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, Temp_byte_Variable_1) == 0x000003, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_IsKnownToLocalPlayer_bKnown) == 0x000004, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_IsKnownToLocalPlayer_bKnown' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_TryGetGameState_OutGameState) == 0x000008, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_TryGetGameState_OutGameState' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_TryGetGameState_ReturnValue) == 0x000010, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_TryGetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_Get_Same_Team_Same) == 0x000012, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_Get_Same_Team_Same' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_IsValid_ReturnValue) == 0x000013, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_IsAdminCamera_ReturnValue) == 0x000015, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_IsAdminCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_BooleanOR_ReturnValue_1) == 0x000016, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_BooleanOR_ReturnValue_2) == 0x000017, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, CallFunc_BooleanOR_ReturnValue_3) == 0x000018, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_Update_fog_of_war, K2Node_Select_Default) == 0x000019, "Member 'BP_MapWidgetCaptureZone_C_Update_fog_of_war::K2Node_Select_Default' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.IsKnownToLocalPlayer
// 0x002C (0x002C - 0x0000)
struct BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer final
{
public:
	bool                                          bKnown;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TargetFlag;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DED[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer) == 0x000004, "Wrong alignment on BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer) == 0x00002C, "Wrong size on BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, bKnown) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::bKnown' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, TargetFlag) == 0x000004, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::TargetFlag' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, Temp_int_Variable) == 0x000008, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, Temp_int_Variable_1) == 0x00000C, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, Temp_int_Variable_2) == 0x000010, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, Temp_int_Variable_3) == 0x000018, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, K2Node_Select_Default) == 0x000020, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, CallFunc_And_IntInt_ReturnValue) == 0x000024, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_MapWidgetCaptureZone_C_IsKnownToLocalPlayer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.GetCaptureStateCircleColor
// 0x00C0 (0x00C0 - 0x0000)
struct BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalPlayerTeamId;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEF[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF0[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF1[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF2[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor) == 0x000004, "Wrong alignment on BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor) == 0x0000C0, "Wrong size on BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Color) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Color' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, LocalPlayerTeamId) == 0x000010, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::LocalPlayerTeamId' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Temp_struct_Variable) == 0x000014, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Temp_bool_Variable) == 0x000024, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Temp_struct_Variable_1) == 0x000028, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Temp_bool_Variable_1) == 0x000038, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Temp_struct_Variable_2) == 0x00003C, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Temp_struct_Variable_3) == 0x00004C, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Temp_bool_Variable_2) == 0x00005C, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, CallFunc_IsValid_ReturnValue_1) == 0x00005E, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000060, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000065, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Temp_struct_Variable_4) == 0x000068, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000078, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00007C, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00007D, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, Temp_bool_Variable_3) == 0x00007E, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, K2Node_Select_Default) == 0x000080, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, K2Node_Select_Default_1) == 0x000090, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, K2Node_Select_Default_2) == 0x0000A0, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor, K2Node_Select_Default_3) == 0x0000B0, "Member 'BP_MapWidgetCaptureZone_C_GetCaptureStateCircleColor::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.UpdateOpacity
// 0x001C (0x001C - 0x0000)
struct BP_MapWidgetCaptureZone_C_UpdateOpacity final
{
public:
	float                                         ZoomAmount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_UpdateOpacity) == 0x000004, "Wrong alignment on BP_MapWidgetCaptureZone_C_UpdateOpacity");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_UpdateOpacity) == 0x00001C, "Wrong size on BP_MapWidgetCaptureZone_C_UpdateOpacity");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_UpdateOpacity, ZoomAmount) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_UpdateOpacity::ZoomAmount' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_UpdateOpacity, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_MapWidgetCaptureZone_C_UpdateOpacity::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_UpdateOpacity, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_MapWidgetCaptureZone_C_UpdateOpacity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_UpdateOpacity, K2Node_MakeStruct_LinearColor) == 0x00000C, "Member 'BP_MapWidgetCaptureZone_C_UpdateOpacity::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.HandleMapCoreChanged
// 0x0038 (0x0038 - 0x0000)
struct BP_MapWidgetCaptureZone_C_HandleMapCoreChanged final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF3[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_HandleMapCoreChanged) == 0x000008, "Wrong alignment on BP_MapWidgetCaptureZone_C_HandleMapCoreChanged");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_HandleMapCoreChanged) == 0x000038, "Wrong size on BP_MapWidgetCaptureZone_C_HandleMapCoreChanged");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapCoreChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_HandleMapCoreChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapCoreChanged, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'BP_MapWidgetCaptureZone_C_HandleMapCoreChanged::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapCoreChanged, K2Node_DynamicCast_AsBPI_HUD) == 0x000018, "Member 'BP_MapWidgetCaptureZone_C_HandleMapCoreChanged::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapCoreChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MapWidgetCaptureZone_C_HandleMapCoreChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapCoreChanged, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_MapWidgetCaptureZone_C_HandleMapCoreChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapCoreChanged, CallFunc_Get_Map_Core_Map_Core) == 0x000030, "Member 'BP_MapWidgetCaptureZone_C_HandleMapCoreChanged::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");

// Function BP_MapWidgetCaptureZone.BP_MapWidgetCaptureZone_C.HandleMapZoom
// 0x0038 (0x0038 - 0x0000)
struct BP_MapWidgetCaptureZone_C_HandleMapZoom final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetCaptureZone_C_HandleMapZoom) == 0x000008, "Wrong alignment on BP_MapWidgetCaptureZone_C_HandleMapZoom");
static_assert(sizeof(BP_MapWidgetCaptureZone_C_HandleMapZoom) == 0x000038, "Wrong size on BP_MapWidgetCaptureZone_C_HandleMapZoom");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapZoom, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MapWidgetCaptureZone_C_HandleMapZoom::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapZoom, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'BP_MapWidgetCaptureZone_C_HandleMapZoom::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapZoom, K2Node_DynamicCast_AsBPI_HUD) == 0x000010, "Member 'BP_MapWidgetCaptureZone_C_HandleMapZoom::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapZoom, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MapWidgetCaptureZone_C_HandleMapZoom::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapZoom, CallFunc_Get_Map_Core_Map_Core) == 0x000028, "Member 'BP_MapWidgetCaptureZone_C_HandleMapZoom::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetCaptureZone_C_HandleMapZoom, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_MapWidgetCaptureZone_C_HandleMapZoom::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}


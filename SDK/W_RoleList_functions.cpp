#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RoleList

#include "Basic.hpp"

#include "W_RoleList_classes.hpp"
#include "W_RoleList_parameters.hpp"


namespace SDK
{

// Function W_RoleList.W_RoleList_C.Roles Refreshed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UW_RoleList_C::Roles_Refreshed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "Roles Refreshed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleList.W_RoleList_C.ExecuteUbergraph_W_RoleList
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleList_C::ExecuteUbergraph_W_RoleList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "ExecuteUbergraph_W_RoleList");

	Params::W_RoleList_C_ExecuteUbergraph_W_RoleList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RoleList.W_RoleList_C.BindEventsToPlayerState
// (BlueprintCallable, BlueprintEvent)

void UW_RoleList_C::BindEventsToPlayerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "BindEventsToPlayerState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleList.W_RoleList_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_RoleList_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleList.W_RoleList_C.OnRoleChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQRoleSettings*                  CurrentRole                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_RoleList_C::OnRoleChange(class USQRoleSettings* CurrentRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "OnRoleChange");

	Params::W_RoleList_C_OnRoleChange Parms{};

	Parms.CurrentRole = CurrentRole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RoleList.W_RoleList_C.OnTeamChange
// (BlueprintCallable, BlueprintEvent)

void UW_RoleList_C::OnTeamChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "OnTeamChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleList.W_RoleList_C.On Collect References
// (BlueprintCallable, BlueprintEvent)

void UW_RoleList_C::On_Collect_References()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "On Collect References");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleList.W_RoleList_C.On Setup UI
// (BlueprintCallable, BlueprintEvent)

void UW_RoleList_C::On_Setup_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "On Setup UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleList.W_RoleList_C.OnTick
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSQAvailabilityState_Role>In_Player_Role_States                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UW_RoleList_C::OnTick(const TArray<struct FSQAvailabilityState_Role>& In_Player_Role_States)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "OnTick");

	Params::W_RoleList_C_OnTick Parms{};

	Parms.In_Player_Role_States = std::move(In_Player_Role_States);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_RoleList.W_RoleList_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_RoleList_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleList.W_RoleList_C.Initialize Groups
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OutSuccess                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_RoleList_C::Initialize_Groups(bool* OutSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "Initialize Groups");

	Params::W_RoleList_C_Initialize_Groups Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSuccess != nullptr)
		*OutSuccess = Parms.OutSuccess;
}


// Function W_RoleList.W_RoleList_C.CreateGroupWidgets
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UW_RoleGroup_C*>           Out_RoleGroup                                          (Parm, OutParm, ContainsInstancedReference)
// bool                                    Out_Success                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_RoleList_C::CreateGroupWidgets(TArray<class UW_RoleGroup_C*>* Out_RoleGroup, bool* Out_Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "CreateGroupWidgets");

	Params::W_RoleList_C_CreateGroupWidgets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_RoleGroup != nullptr)
		*Out_RoleGroup = std::move(Parms.Out_RoleGroup);

	if (Out_Success != nullptr)
		*Out_Success = Parms.Out_Success;
}


// Function W_RoleList.W_RoleList_C.Is Deploy Role Unavailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Unavailable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_RoleList_C::Is_Deploy_Role_Unavailable(bool* Unavailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "Is Deploy Role Unavailable");

	Params::W_RoleList_C_Is_Deploy_Role_Unavailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Unavailable != nullptr)
		*Unavailable = Parms.Unavailable;
}


// Function W_RoleList.W_RoleList_C.ClearGroups
// (Public, BlueprintCallable, BlueprintEvent)

void UW_RoleList_C::ClearGroups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "ClearGroups");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_RoleList.W_RoleList_C.CollectReferences
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Out_Success                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_RoleList_C::CollectReferences(bool* Out_Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_RoleList_C", "CollectReferences");

	Params::W_RoleList_C_CollectReferences Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Success != nullptr)
		*Out_Success = Parms.Out_Success;
}

}


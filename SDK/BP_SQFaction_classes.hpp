#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQFaction

#include "Basic.hpp"

#include "SQEAlliance_structs.hpp"
#include "SQETheatersOfOperations_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SQFaction.BP_SQFaction_C
// 0x0068 (0x00E8 - 0x0080)
class UBP_SQFaction_C final : public USQFaction
{
public:
	class UDataTable*                             GruntVoiceTable;                                   // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             SLVoiceTable;                                      // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQEAlliance                                  Alliance;                                          // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D02[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<ESQETheatersOfOperations>                TheatersOfOperations;                              // 0x0098(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void TryGetRoleGroupingStrategies(bool* Success, TArray<struct FSQRoleGroupingStrategy>* GroupingStrategies);
	void TryGetDeployableGroupingStrategies(bool* Success, TArray<struct FSQDeployableGroupingStrategy>* GroupingStrategies);
	void TryGetActionGroupingStrategies(bool* Success, TArray<struct FSQActionGroupingStrategy>* GroupingStrategies);
	bool TryGetFlagForAnimatedFlags(TSoftObjectPtr<class UTexture2D>* OutTexture);

	void TryGetFactionEntry(bool* Success, struct FSQFactionEntry* FactionEntry) const;
	bool TryGetFlagForFullScreen(TSoftObjectPtr<class UTexture2D>* OutTexture) const;
	bool TryGetFlagForMap(TSoftObjectPtr<class UTexture2D>* OutTexture) const;
	bool TryGetRallyPointMesh(class USQLayer* Layer, TSoftObjectPtr<class UStaticMesh>* OutMesh) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SQFaction_C">();
	}
	static class UBP_SQFaction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SQFaction_C>();
	}
};
static_assert(alignof(UBP_SQFaction_C) == 0x000008, "Wrong alignment on UBP_SQFaction_C");
static_assert(sizeof(UBP_SQFaction_C) == 0x0000E8, "Wrong size on UBP_SQFaction_C");
static_assert(offsetof(UBP_SQFaction_C, GruntVoiceTable) == 0x000080, "Member 'UBP_SQFaction_C::GruntVoiceTable' has a wrong offset!");
static_assert(offsetof(UBP_SQFaction_C, SLVoiceTable) == 0x000088, "Member 'UBP_SQFaction_C::SLVoiceTable' has a wrong offset!");
static_assert(offsetof(UBP_SQFaction_C, Alliance) == 0x000090, "Member 'UBP_SQFaction_C::Alliance' has a wrong offset!");
static_assert(offsetof(UBP_SQFaction_C, TheatersOfOperations) == 0x000098, "Member 'UBP_SQFaction_C::TheatersOfOperations' has a wrong offset!");

}


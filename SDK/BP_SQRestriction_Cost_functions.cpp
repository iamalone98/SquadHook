#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQRestriction_Cost

#include "Basic.hpp"

#include "BP_SQRestriction_Cost_classes.hpp"
#include "BP_SQRestriction_Cost_parameters.hpp"


namespace SDK
{

// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.CanPlayerBuy
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ASQPlayerController*              InPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDataTableRowHandle              OutRestrictionReason                                   (Parm, OutParm, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQRestriction_Cost_C::CanPlayerBuy(class ASQPlayerController* InPlayer, struct FDataTableRowHandle* OutRestrictionReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_Cost_C", "CanPlayerBuy");

	Params::BP_SQRestriction_Cost_C_CanPlayerBuy Parms{};

	Parms.InPlayer = InPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (OutRestrictionReason != nullptr)
		*OutRestrictionReason = std::move(Parms.OutRestrictionReason);

	return Parms.ReturnValue;
}


// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.CanTeamBuy
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ASQTeam*                          InTeam                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDataTableRowHandle              OutRestrictionReason                                   (Parm, OutParm, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQRestriction_Cost_C::CanTeamBuy(class ASQTeam* InTeam, struct FDataTableRowHandle* OutRestrictionReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_Cost_C", "CanTeamBuy");

	Params::BP_SQRestriction_Cost_C_CanTeamBuy Parms{};

	Parms.InTeam = InTeam;

	UObject::ProcessEvent(Func, &Parms);

	if (OutRestrictionReason != nullptr)
		*OutRestrictionReason = std::move(Parms.OutRestrictionReason);

	return Parms.ReturnValue;
}


// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.HasPlayerBasedCost
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQRestriction_Cost_C::HasPlayerBasedCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_Cost_C", "HasPlayerBasedCost");

	Params::BP_SQRestriction_Cost_C_HasPlayerBasedCost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.HasTeamBasedCost
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQRestriction_Cost_C::HasTeamBasedCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_Cost_C", "HasTeamBasedCost");

	Params::BP_SQRestriction_Cost_C_HasTeamBasedCost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.PayCostForTeam
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ASQTeam*                          InTeam                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SQRestriction_Cost_C::PayCostForTeam(class ASQTeam* InTeam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_Cost_C", "PayCostForTeam");

	Params::BP_SQRestriction_Cost_C_PayCostForTeam Parms{};

	Parms.InTeam = InTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.PayCostForPlayer
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ASQPlayerController*              InPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SQRestriction_Cost_C::PayCostForPlayer(class ASQPlayerController* InPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_Cost_C", "PayCostForPlayer");

	Params::BP_SQRestriction_Cost_C_PayCostForPlayer Parms{};

	Parms.InPlayer = InPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.RefundCostForTeam
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ASQTeam*                          InTeam                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InPercentage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SQRestriction_Cost_C::RefundCostForTeam(class ASQTeam* InTeam, int32 InPercentage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_Cost_C", "RefundCostForTeam");

	Params::BP_SQRestriction_Cost_C_RefundCostForTeam Parms{};

	Parms.InTeam = InTeam;
	Parms.InPercentage = InPercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SQRestriction_Cost.BP_SQRestriction_Cost_C.RefundCostForPlayer
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ASQPlayerController*              InPlayer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InPercentage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SQRestriction_Cost_C::RefundCostForPlayer(class ASQPlayerController* InPlayer, int32 InPercentage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQRestriction_Cost_C", "RefundCostForPlayer");

	Params::BP_SQRestriction_Cost_C_RefundCostForPlayer Parms{};

	Parms.InPlayer = InPlayer;
	Parms.InPercentage = InPercentage;

	UObject::ProcessEvent(Func, &Parms);
}

}


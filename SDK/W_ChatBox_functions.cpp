#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ChatBox

#include "Basic.hpp"

#include "W_ChatBox_classes.hpp"
#include "W_ChatBox_parameters.hpp"


namespace SDK
{

// Function W_ChatBox.W_ChatBox_C.ExecuteUbergraph_W_ChatBox
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatBox_C::ExecuteUbergraph_W_ChatBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "ExecuteUbergraph_W_ChatBox");

	Params::W_ChatBox_C_ExecuteUbergraph_W_ChatBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatBox.W_ChatBox_C.Parent Opened
// (BlueprintCallable, BlueprintEvent)

void UW_ChatBox_C::Parent_Opened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Parent Opened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatBox.W_ChatBox_C.Parent Closed
// (BlueprintCallable, BlueprintEvent)

void UW_ChatBox_C::Parent_Closed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Parent Closed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatBox.W_ChatBox_C.Bind To Menu Open Close
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUMG_MenuBase_C*                  Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatBox_C::Bind_To_Menu_Open_Close(class UUMG_MenuBase_C* Menu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Bind To Menu Open Close");

	Params::W_ChatBox_C_Bind_To_Menu_Open_Close Parms{};

	Parms.Menu = Menu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatBox.W_ChatBox_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UW_ChatBox_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "OnAddedToFocusPath");

	Params::W_ChatBox_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatBox.W_ChatBox_C.BndEvt__SelectButton_K2Node_ComponentBoundEvent_92_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_ChatBox_C::BndEvt__SelectButton_K2Node_ComponentBoundEvent_92_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "BndEvt__SelectButton_K2Node_ComponentBoundEvent_92_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatBox.W_ChatBox_C.Set Chat Visibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_ChatBox_C::Set_Chat_Visibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Set Chat Visibility");

	Params::W_ChatBox_C_Set_Chat_Visibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatBox.W_ChatBox_C.Focus and Change Channel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQChat                                 Channel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatBox_C::Focus_and_Change_Channel(ESQChat Channel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Focus and Change Channel");

	Params::W_ChatBox_C_Focus_and_Change_Channel Parms{};

	Parms.Channel = Channel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatBox.W_ChatBox_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ChatBox_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatBox.W_ChatBox_C.Change Channel
// (BlueprintCallable, BlueprintEvent)

void UW_ChatBox_C::Change_Channel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Change Channel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatBox.W_ChatBox_C.BndEvt__EditableTextBox_165_K2Node_ComponentBoundEvent_5_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatBox_C::BndEvt__EditableTextBox_165_K2Node_ComponentBoundEvent_5_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "BndEvt__EditableTextBox_165_K2Node_ComponentBoundEvent_5_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::W_ChatBox_C_BndEvt__EditableTextBox_165_K2Node_ComponentBoundEvent_5_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatBox.W_ChatBox_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_ChatBox_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "OnPreviewKeyDown");

	Params::W_ChatBox_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ChatBox.W_ChatBox_C.Focus Menu
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_ChatBox_C::Focus_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Focus Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatBox.W_ChatBox_C.Refresh Visuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_ChatBox_C::Refresh_Visuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Refresh Visuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatBox.W_ChatBox_C.Refresh Scroll Button
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_ChatBox_C::Refresh_Scroll_Button()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Refresh Scroll Button");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatBox.W_ChatBox_C.Get_ScrollButton_ToolTipWidget_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UW_ChatBox_C::Get_ScrollButton_ToolTipWidget_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Get_ScrollButton_ToolTipWidget_0");

	Params::W_ChatBox_C_Get_ScrollButton_ToolTipWidget_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ChatBox.W_ChatBox_C.Add New Chat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerName                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESQChat                                 Channel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESQNotificationTypes                    NotificationType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatBox_C::Add_New_Chat(const class FString& PlayerName, const class FString& Message, ESQChat Channel, const struct FLinearColor& Color, ESQNotificationTypes NotificationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatBox_C", "Add New Chat");

	Params::W_ChatBox_C_Add_New_Chat Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.Message = std::move(Message);
	Parms.Channel = Channel;
	Parms.Color = std::move(Color);
	Parms.NotificationType = NotificationType;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GraphicsWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ScreenResolutionStruct_structs.hpp"
#include "Squad_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "StreamlineBlueprint_structs.hpp"
#include "DLSSBlueprint_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GraphicsWindow.GraphicsWindow_C
// 0x0308 (0x0568 - 0x0260)
class UGraphicsWindow_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USettingsItem_TickBox_C*                AA_TOGGLE;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                AASamples;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         AmbientOcclusion;                                  // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 ANISOTROPIC;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         ANTIALIASING;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 Brightness;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                ContactShadows;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 Contrast;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DLSSDEVELOPERMODESTATS;                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DLSSDEVSUPPORTMESSAGE;                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DLSSFGDEVSUPPORTMESSAGE;                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DLSSISFIXEDSCREENPERCENTAGE;                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                DLSSMODES;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DLSSOPTIMALSCREENPERCENTAGE;                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DLSSOPTIMALSHARPNESS;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                DLSSRR;                                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DLSSRRDEVSUPPORTMESSAGE;                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DLSSSCREENPERCENTAGE;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 DLSSSharpness;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DLSSSUPPORTMESSAGE;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         DYNAMICMESHQUALITY;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         Effects;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                FarShadows;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                FGMODES;                                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FGSUPPORTMESSAGE;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                FSR2Quality;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 FSR2Sharpness;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                FSR2TOGGLE;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         GraphicsQuality;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                HZBOcclusion;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_5;                                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_6;                                           // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_7;                                           // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_8;                                           // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_9;                                           // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_11;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_12;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_14;                                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                LensFlare;                                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                LOWQUALITYFOLIAGE;                                 // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         MaterialQuality;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         MODEWINDOW;                                        // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                MONITORS;                                          // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 MotionBlur;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         Ocean;                                             // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         PostProcess;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                ReflexMode;                                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             REFLEXSUPPORTMESSAGE;                              // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RENDERERMSG;                                       // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                RendererSetting;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                RESCOMBO;                                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 Saturation;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         SCOPEIMAGECLARITY;                                 // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 ScopeResolutionScale;                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                ScopeUpdateRate;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SettingsLIst;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         Shadow;                                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 Sharpening;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 Slider_MaxGameFPS;                                 // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 Slider_MaxMenuFPS;                                 // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                SSAO;                                              // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_Slider_C*                 SUPERSAMPLING;                                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SUPERSAMPLINGMESSAGE;                              // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                Tessellation_Toggle;                               // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_GraphicsToggle_C*         Textures;                                          // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_ProgressBar_C*            TEXTUREVRAMUSAGE;                                  // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                ToggleVSYNC;                                       // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                UNCAPTEXTUREPOOLSIZE;                              // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                UpscaleMode;                                       // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                WakeSim;                                           // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsComboboxItem_C*                XeSSQuality;                                       // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USettingsItem_TickBox_C*                XESSTOGGLE;                                        // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FScreenResolutionStruct>        ValidResolutions;                                  // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         AllDLSSModes;                                      // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         SupportedDLSSModes;                                // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsUpscaleModeDirty;                               // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EUpscaleMode                                  CachedCurrentUpscaleMode;                          // 0x0511(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2921[0x6];                                     // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         AllUpscaleModes;                                   // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         SupportedDLSSFGModes;                              // 0x0528(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         AllFGModes;                                        // 0x0538(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         AllReflexModes;                                    // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         SupportedReflexModes;                              // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GraphicsWindow(int32 EntryPoint);
	void BndEvt__GraphicsWindowXeSS_XESSTOGGLE_K2Node_ComponentBoundEvent_23_OnClicked__DelegateSignature(bool bSelected, class USettingsItem_TickBox_C* Button);
	void BndEvt__GraphicsWindowXeSS_XESSQUALITY_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature(const class FString& Option, int32 Param_Index);
	void BndEvt__GraphicsWindow_REFLEXMODE_K2Node_ComponentBoundEvent_29_OnValueChanged__DelegateSignature(const class FString& Option, int32 Param_Index);
	void BndEvt__GraphicsWindow_FGMODES_K2Node_ComponentBoundEvent_25_OnValueChanged__DelegateSignature(const class FString& Option, int32 Param_Index);
	void OnInitialized();
	void BndEvt__GraphicsWindow_DLSSSHARPNESS_K2Node_ComponentBoundEvent_26_OnValueChanged__DelegateSignature(float Value);
	void BndEvt__GraphicsWindow_SAMPLINGOPTION_K2Node_ComponentBoundEvent_24_OnValueChanged__DelegateSignature(const class FString& Option, int32 Param_Index);
	void BndEvt__GraphicsWindow_DLSSDENOISER_K2Node_ComponentBoundEvent_23_OnClicked__DelegateSignature(bool bSelected, class USettingsItem_TickBox_C* Button);
	void BndEvt__GraphicsWindow_DLSSMODES_K2Node_ComponentBoundEvent_19_OnValueChanged__DelegateSignature(const class FString& Option, int32 Param_Index);
	void BndEvt__GraphicsWindow_SCOPE_IMAGE_CLARITY_K2Node_ComponentBoundEvent_22_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__GraphicsWindow_SCOPEUPDATERATE_K2Node_ComponentBoundEvent_20_OnValueChanged__DelegateSignature(const class FString& Option, int32 Param_Index);
	void BndEvt__GraphicsWindow_SCOPERESULTIONSCALE_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature(float Value);
	void Construct();
	void BndEvt__GraphicsWindow_D3DSetting_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(const class FString& Option, int32 Param_Index);
	void BndEvt__GraphicsWindow_OCEAN_K2Node_ComponentBoundEvent_12_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void OnBenchmarkDone();
	void BndEvt__GraphicsWindow_AA_TOGGLE_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, class USettingsItem_TickBox_C* Button);
	void BndEvt__GraphicsWindow_Merge_FSR2MODE_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature(const class FString& Option, int32 Param_Index);
	void BndEvt__GraphicsWindow_Merge_FSR2_TOGGLE_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(bool bSelected, class USettingsItem_TickBox_C* Button);
	void BndEvt__DYNAMICMESHQUALITY_K2Node_ComponentBoundEvent_15_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__MATERIALQUALITY_K2Node_ComponentBoundEvent_28_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__UNCAPTEXTUREPOOLSIZE_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature(bool bSelected, class USettingsItem_TickBox_C* Button);
	void BndEvt__Slider_MaxMenuFPS_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature(float Value);
	void BndEvt__ANTIALIASING_K2Node_ComponentBoundEvent_21_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__POSTPROCESS_K2Node_ComponentBoundEvent_20_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__AMBIENTOCCLUSION_K2Node_ComponentBoundEvent_19_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__SATURATION_K2Node_ComponentBoundEvent_14_OnValueChanged__DelegateSignature(float Value);
	void BndEvt__CONTRAST_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature(float Value);
	void BndEvt__BRIGHTNESS_K2Node_ComponentBoundEvent_4_OnValueChanged__DelegateSignature(float Value);
	void BndEvt__SettingsItem_Slider_C_0_K2Node_ComponentBoundEvent_164_OnValueChanged__DelegateSignature(float Value);
	void BndEvt__TEXTURES_K2Node_ComponentBoundEvent_962_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__ToggleVSYNC_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(bool bSelected, class USettingsItem_TickBox_C* Button);
	void BndEvt__EFFECTSSETTINGS_K2Node_ComponentBoundEvent_17_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__SHADOWSETTINGS_K2Node_ComponentBoundEvent_11_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__MODEWINDOW_K2Node_ComponentBoundEvent_9_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void BndEvt__GRAPHICSSETTING_K2Node_ComponentBoundEvent_7_OnButtonClick__DelegateSignature(int32 ButtonNumber, class USettingsItem_GraphicsToggle_C* ToggleItem);
	void Restore_Defaults();
	void APPLY_SETTINGS();
	void BENCHMARK();
	void BndEvt__RESCOMBO_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature(const class FString& Option, int32 Param_Index);
	void Refresh_Settings(class FName CVarSettingName, const class FString& Value);
	void UpdateResolutions();
	void Refresh_Res();
	bool Get_ANTIALIASING_IsEnabled();
	void SetCVarSettings();
	void UpdateTextureMemoryUsage();
	bool Get_CONTACTSHADOWS_bIsEnabled_0();
	void InitRefreshEvents();
	void InitUpscalingSettings();
	void Show_DLSSSettings(bool Visible);
	void ShowFSRSettings(bool Visible);
	void UpdateDLSSDevStats();
	void GetSupportedUpscaleModes(TArray<EUpscaleMode>* SupportedUpscaleModes);
	void InitReflexSettings();
	void ShowXeSSSettings(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GraphicsWindow_C">();
	}
	static class UGraphicsWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGraphicsWindow_C>();
	}
};
static_assert(alignof(UGraphicsWindow_C) == 0x000008, "Wrong alignment on UGraphicsWindow_C");
static_assert(sizeof(UGraphicsWindow_C) == 0x000568, "Wrong size on UGraphicsWindow_C");
static_assert(offsetof(UGraphicsWindow_C, UberGraphFrame) == 0x000260, "Member 'UGraphicsWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, AA_TOGGLE) == 0x000268, "Member 'UGraphicsWindow_C::AA_TOGGLE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, AASamples) == 0x000270, "Member 'UGraphicsWindow_C::AASamples' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, AmbientOcclusion) == 0x000278, "Member 'UGraphicsWindow_C::AmbientOcclusion' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, ANISOTROPIC) == 0x000280, "Member 'UGraphicsWindow_C::ANISOTROPIC' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, ANTIALIASING) == 0x000288, "Member 'UGraphicsWindow_C::ANTIALIASING' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Brightness) == 0x000290, "Member 'UGraphicsWindow_C::Brightness' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, ContactShadows) == 0x000298, "Member 'UGraphicsWindow_C::ContactShadows' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Contrast) == 0x0002A0, "Member 'UGraphicsWindow_C::Contrast' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSDEVELOPERMODESTATS) == 0x0002A8, "Member 'UGraphicsWindow_C::DLSSDEVELOPERMODESTATS' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSDEVSUPPORTMESSAGE) == 0x0002B0, "Member 'UGraphicsWindow_C::DLSSDEVSUPPORTMESSAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSFGDEVSUPPORTMESSAGE) == 0x0002B8, "Member 'UGraphicsWindow_C::DLSSFGDEVSUPPORTMESSAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSISFIXEDSCREENPERCENTAGE) == 0x0002C0, "Member 'UGraphicsWindow_C::DLSSISFIXEDSCREENPERCENTAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSMODES) == 0x0002C8, "Member 'UGraphicsWindow_C::DLSSMODES' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSOPTIMALSCREENPERCENTAGE) == 0x0002D0, "Member 'UGraphicsWindow_C::DLSSOPTIMALSCREENPERCENTAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSOPTIMALSHARPNESS) == 0x0002D8, "Member 'UGraphicsWindow_C::DLSSOPTIMALSHARPNESS' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSRR) == 0x0002E0, "Member 'UGraphicsWindow_C::DLSSRR' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSRRDEVSUPPORTMESSAGE) == 0x0002E8, "Member 'UGraphicsWindow_C::DLSSRRDEVSUPPORTMESSAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSSCREENPERCENTAGE) == 0x0002F0, "Member 'UGraphicsWindow_C::DLSSSCREENPERCENTAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSSharpness) == 0x0002F8, "Member 'UGraphicsWindow_C::DLSSSharpness' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DLSSSUPPORTMESSAGE) == 0x000300, "Member 'UGraphicsWindow_C::DLSSSUPPORTMESSAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, DYNAMICMESHQUALITY) == 0x000308, "Member 'UGraphicsWindow_C::DYNAMICMESHQUALITY' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Effects) == 0x000310, "Member 'UGraphicsWindow_C::Effects' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, FarShadows) == 0x000318, "Member 'UGraphicsWindow_C::FarShadows' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, FGMODES) == 0x000320, "Member 'UGraphicsWindow_C::FGMODES' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, FGSUPPORTMESSAGE) == 0x000328, "Member 'UGraphicsWindow_C::FGSUPPORTMESSAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, FSR2Quality) == 0x000330, "Member 'UGraphicsWindow_C::FSR2Quality' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, FSR2Sharpness) == 0x000338, "Member 'UGraphicsWindow_C::FSR2Sharpness' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, FSR2TOGGLE) == 0x000340, "Member 'UGraphicsWindow_C::FSR2TOGGLE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, GraphicsQuality) == 0x000348, "Member 'UGraphicsWindow_C::GraphicsQuality' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, HZBOcclusion) == 0x000350, "Member 'UGraphicsWindow_C::HZBOcclusion' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image) == 0x000358, "Member 'UGraphicsWindow_C::Image' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_0) == 0x000360, "Member 'UGraphicsWindow_C::Image_0' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_1) == 0x000368, "Member 'UGraphicsWindow_C::Image_1' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_2) == 0x000370, "Member 'UGraphicsWindow_C::Image_2' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_3) == 0x000378, "Member 'UGraphicsWindow_C::Image_3' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_4) == 0x000380, "Member 'UGraphicsWindow_C::Image_4' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_5) == 0x000388, "Member 'UGraphicsWindow_C::Image_5' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_6) == 0x000390, "Member 'UGraphicsWindow_C::Image_6' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_7) == 0x000398, "Member 'UGraphicsWindow_C::Image_7' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_8) == 0x0003A0, "Member 'UGraphicsWindow_C::Image_8' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_9) == 0x0003A8, "Member 'UGraphicsWindow_C::Image_9' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_11) == 0x0003B0, "Member 'UGraphicsWindow_C::Image_11' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_12) == 0x0003B8, "Member 'UGraphicsWindow_C::Image_12' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Image_14) == 0x0003C0, "Member 'UGraphicsWindow_C::Image_14' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, LensFlare) == 0x0003C8, "Member 'UGraphicsWindow_C::LensFlare' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, LOWQUALITYFOLIAGE) == 0x0003D0, "Member 'UGraphicsWindow_C::LOWQUALITYFOLIAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, MaterialQuality) == 0x0003D8, "Member 'UGraphicsWindow_C::MaterialQuality' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, MODEWINDOW) == 0x0003E0, "Member 'UGraphicsWindow_C::MODEWINDOW' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, MONITORS) == 0x0003E8, "Member 'UGraphicsWindow_C::MONITORS' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, MotionBlur) == 0x0003F0, "Member 'UGraphicsWindow_C::MotionBlur' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Ocean) == 0x0003F8, "Member 'UGraphicsWindow_C::Ocean' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, PostProcess) == 0x000400, "Member 'UGraphicsWindow_C::PostProcess' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, ReflexMode) == 0x000408, "Member 'UGraphicsWindow_C::ReflexMode' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, REFLEXSUPPORTMESSAGE) == 0x000410, "Member 'UGraphicsWindow_C::REFLEXSUPPORTMESSAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, RENDERERMSG) == 0x000418, "Member 'UGraphicsWindow_C::RENDERERMSG' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, RendererSetting) == 0x000420, "Member 'UGraphicsWindow_C::RendererSetting' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, RESCOMBO) == 0x000428, "Member 'UGraphicsWindow_C::RESCOMBO' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Saturation) == 0x000430, "Member 'UGraphicsWindow_C::Saturation' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, SCOPEIMAGECLARITY) == 0x000438, "Member 'UGraphicsWindow_C::SCOPEIMAGECLARITY' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, ScopeResolutionScale) == 0x000440, "Member 'UGraphicsWindow_C::ScopeResolutionScale' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, ScopeUpdateRate) == 0x000448, "Member 'UGraphicsWindow_C::ScopeUpdateRate' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, ScrollBox) == 0x000450, "Member 'UGraphicsWindow_C::ScrollBox' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, SettingsLIst) == 0x000458, "Member 'UGraphicsWindow_C::SettingsLIst' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Shadow) == 0x000460, "Member 'UGraphicsWindow_C::Shadow' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Sharpening) == 0x000468, "Member 'UGraphicsWindow_C::Sharpening' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Slider_MaxGameFPS) == 0x000470, "Member 'UGraphicsWindow_C::Slider_MaxGameFPS' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Slider_MaxMenuFPS) == 0x000478, "Member 'UGraphicsWindow_C::Slider_MaxMenuFPS' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, SSAO) == 0x000480, "Member 'UGraphicsWindow_C::SSAO' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, SUPERSAMPLING) == 0x000488, "Member 'UGraphicsWindow_C::SUPERSAMPLING' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, SUPERSAMPLINGMESSAGE) == 0x000490, "Member 'UGraphicsWindow_C::SUPERSAMPLINGMESSAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Tessellation_Toggle) == 0x000498, "Member 'UGraphicsWindow_C::Tessellation_Toggle' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, Textures) == 0x0004A0, "Member 'UGraphicsWindow_C::Textures' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, TEXTUREVRAMUSAGE) == 0x0004A8, "Member 'UGraphicsWindow_C::TEXTUREVRAMUSAGE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, ToggleVSYNC) == 0x0004B0, "Member 'UGraphicsWindow_C::ToggleVSYNC' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, UNCAPTEXTUREPOOLSIZE) == 0x0004B8, "Member 'UGraphicsWindow_C::UNCAPTEXTUREPOOLSIZE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, UpscaleMode) == 0x0004C0, "Member 'UGraphicsWindow_C::UpscaleMode' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, WakeSim) == 0x0004C8, "Member 'UGraphicsWindow_C::WakeSim' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, XeSSQuality) == 0x0004D0, "Member 'UGraphicsWindow_C::XeSSQuality' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, XESSTOGGLE) == 0x0004D8, "Member 'UGraphicsWindow_C::XESSTOGGLE' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, ValidResolutions) == 0x0004E0, "Member 'UGraphicsWindow_C::ValidResolutions' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, AllDLSSModes) == 0x0004F0, "Member 'UGraphicsWindow_C::AllDLSSModes' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, SupportedDLSSModes) == 0x000500, "Member 'UGraphicsWindow_C::SupportedDLSSModes' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, bIsUpscaleModeDirty) == 0x000510, "Member 'UGraphicsWindow_C::bIsUpscaleModeDirty' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, CachedCurrentUpscaleMode) == 0x000511, "Member 'UGraphicsWindow_C::CachedCurrentUpscaleMode' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, AllUpscaleModes) == 0x000518, "Member 'UGraphicsWindow_C::AllUpscaleModes' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, SupportedDLSSFGModes) == 0x000528, "Member 'UGraphicsWindow_C::SupportedDLSSFGModes' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, AllFGModes) == 0x000538, "Member 'UGraphicsWindow_C::AllFGModes' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, AllReflexModes) == 0x000548, "Member 'UGraphicsWindow_C::AllReflexModes' has a wrong offset!");
static_assert(offsetof(UGraphicsWindow_C, SupportedReflexModes) == 0x000558, "Member 'UGraphicsWindow_C::SupportedReflexModes' has a wrong offset!");

}


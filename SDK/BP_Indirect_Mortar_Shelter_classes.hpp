#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Indirect_Mortar_Shelter

#include "Basic.hpp"

#include "BP_Deployable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Indirect_Mortar_Shelter.BP_Indirect_Mortar_Shelter_C
// 0x0040 (0x0480 - 0x0440)
class ABP_Indirect_Mortar_Shelter_C : public ABP_Deployable_C
{
public:
	class UStaticMeshComponent*                   SM_FireShelter_Camo;                               // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FireShelter_Camo_Exterior;                      // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractZone;                                      // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Stakes;                                            // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ins_bunker;                                        // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh134;                                     // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh119;                                     // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ConstructionBox;                                   // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Indirect_Mortar_Shelter_C">();
	}
	static class ABP_Indirect_Mortar_Shelter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Indirect_Mortar_Shelter_C>();
	}
};
static_assert(alignof(ABP_Indirect_Mortar_Shelter_C) == 0x000008, "Wrong alignment on ABP_Indirect_Mortar_Shelter_C");
static_assert(sizeof(ABP_Indirect_Mortar_Shelter_C) == 0x000480, "Wrong size on ABP_Indirect_Mortar_Shelter_C");
static_assert(offsetof(ABP_Indirect_Mortar_Shelter_C, SM_FireShelter_Camo) == 0x000440, "Member 'ABP_Indirect_Mortar_Shelter_C::SM_FireShelter_Camo' has a wrong offset!");
static_assert(offsetof(ABP_Indirect_Mortar_Shelter_C, SM_FireShelter_Camo_Exterior) == 0x000448, "Member 'ABP_Indirect_Mortar_Shelter_C::SM_FireShelter_Camo_Exterior' has a wrong offset!");
static_assert(offsetof(ABP_Indirect_Mortar_Shelter_C, InteractZone) == 0x000450, "Member 'ABP_Indirect_Mortar_Shelter_C::InteractZone' has a wrong offset!");
static_assert(offsetof(ABP_Indirect_Mortar_Shelter_C, Stakes) == 0x000458, "Member 'ABP_Indirect_Mortar_Shelter_C::Stakes' has a wrong offset!");
static_assert(offsetof(ABP_Indirect_Mortar_Shelter_C, Ins_bunker) == 0x000460, "Member 'ABP_Indirect_Mortar_Shelter_C::Ins_bunker' has a wrong offset!");
static_assert(offsetof(ABP_Indirect_Mortar_Shelter_C, StaticMesh134) == 0x000468, "Member 'ABP_Indirect_Mortar_Shelter_C::StaticMesh134' has a wrong offset!");
static_assert(offsetof(ABP_Indirect_Mortar_Shelter_C, StaticMesh119) == 0x000470, "Member 'ABP_Indirect_Mortar_Shelter_C::StaticMesh119' has a wrong offset!");
static_assert(offsetof(ABP_Indirect_Mortar_Shelter_C, ConstructionBox) == 0x000478, "Member 'ABP_Indirect_Mortar_Shelter_C::ConstructionBox' has a wrong offset!");

}


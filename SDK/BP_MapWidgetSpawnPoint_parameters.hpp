#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetSpawnPoint

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Squad_structs.hpp"


namespace SDK::Params
{

// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.ExecuteUbergraph_BP_MapWidgetSpawnPoint
// 0x0078 (0x0078 - 0x0000)
struct BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_472A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSpawnPointType                             Temp_byte_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472B[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_UniformScale;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_472C[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_DeployConfirmation_C*>        CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_DeployConfirmation_C*                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint) == 0x000008, "Wrong alignment on BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint");
static_assert(sizeof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint) == 0x000078, "Wrong size on BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, EntryPoint) == 0x000000, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, Temp_object_Variable) == 0x000008, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, Temp_object_Variable_1) == 0x000010, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, Temp_object_Variable_2) == 0x000018, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, Temp_object_Variable_3) == 0x000020, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, Temp_object_Variable_4) == 0x000028, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, Temp_byte_Variable) == 0x00003C, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00003D, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, K2Node_Select_Default) == 0x000048, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, K2Node_Event_UniformScale) == 0x000050, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::K2Node_Event_UniformScale' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000058, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MapWidgetSpawnPoint_C_OnScaleChanged final
{
public:
	float                                         UniformScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSpawnPoint_C_OnScaleChanged) == 0x000004, "Wrong alignment on BP_MapWidgetSpawnPoint_C_OnScaleChanged");
static_assert(sizeof(BP_MapWidgetSpawnPoint_C_OnScaleChanged) == 0x000004, "Wrong size on BP_MapWidgetSpawnPoint_C_OnScaleChanged");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnScaleChanged, UniformScale) == 0x000000, "Member 'BP_MapWidgetSpawnPoint_C_OnScaleChanged::UniformScale' has a wrong offset!");

// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.Update Color
// 0x00A4 (0x00A4 - 0x0000)
struct BP_MapWidgetSpawnPoint_C_Update_Color final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472D[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_472F[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4730[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRemainingActivatingTime_RemainingTime; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4731[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRemainingActivatingTime_RemainingTime_1; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4732[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSpawnPoint_C_Update_Color) == 0x000004, "Wrong alignment on BP_MapWidgetSpawnPoint_C_Update_Color");
static_assert(sizeof(BP_MapWidgetSpawnPoint_C_Update_Color) == 0x0000A4, "Wrong size on BP_MapWidgetSpawnPoint_C_Update_Color");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_byte_Variable) == 0x000000, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_byte_Variable_1) == 0x000001, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_bool_Variable) == 0x000002, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_byte_Variable_2) == 0x000003, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_byte_Variable_3) == 0x000004, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_bool_Variable_1) == 0x000005, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_struct_Variable) == 0x000008, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_bool_Variable_2) == 0x000018, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_struct_Variable_1) == 0x00001C, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_struct_Variable_2) == 0x000024, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_bool_Variable_3) == 0x00002C, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_struct_Variable_3) == 0x000030, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_struct_Variable_4) == 0x000040, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, Temp_bool_Variable_4) == 0x000050, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_GetRemainingActivatingTime_RemainingTime) == 0x000054, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_GetRemainingActivatingTime_RemainingTime' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_GetRemainingActivatingTime_RemainingTime_1) == 0x00005C, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_GetRemainingActivatingTime_RemainingTime_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000061, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_BooleanOR_ReturnValue_1) == 0x000062, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, K2Node_Select_Default) == 0x000063, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, K2Node_Select_Default_1) == 0x000064, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006C, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_Not_PreBool_ReturnValue_2) == 0x00006D, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_BooleanOR_ReturnValue_2) == 0x00006E, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, K2Node_Select_Default_2) == 0x00006F, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_BooleanOR_ReturnValue_3) == 0x000070, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_BooleanOR_ReturnValue_4) == 0x000071, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, CallFunc_SelectColor_ReturnValue) == 0x000074, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, K2Node_Select_Default_3) == 0x000084, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Color, K2Node_Select_Default_4) == 0x000094, "Member 'BP_MapWidgetSpawnPoint_C_Update_Color::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.Update Spawns Visibility
// 0x0018 (0x0018 - 0x0000)
struct BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4733[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility) == 0x000008, "Wrong alignment on BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility");
static_assert(sizeof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility) == 0x000018, "Wrong size on BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, Temp_bool_Variable) == 0x000000, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, Temp_byte_Variable) == 0x000001, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, Temp_bool_Variable_1) == 0x000003, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, Temp_byte_Variable_2) == 0x000004, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, Temp_byte_Variable_3) == 0x000005, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000008, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, K2Node_Select_Default) == 0x000010, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility, K2Node_Select_Default_1) == 0x000011, "Member 'BP_MapWidgetSpawnPoint_C_Update_Spawns_Visibility::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnMouseButtonDown
// 0x0218 (0x0218 - 0x0000)
struct BP_MapWidgetSpawnPoint_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(BP_MapWidgetSpawnPoint_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on BP_MapWidgetSpawnPoint_C_OnMouseButtonDown");
static_assert(sizeof(BP_MapWidgetSpawnPoint_C_OnMouseButtonDown) == 0x000218, "Wrong size on BP_MapWidgetSpawnPoint_C_OnMouseButtonDown");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnMouseButtonUp
// 0x0260 (0x0260 - 0x0000)
struct BP_MapWidgetSpawnPoint_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4734[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0170(0x00B8)()
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4735[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_DeployConfirmation_C*>        CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0230(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4736[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DeployConfirmation_C*                CallFunc_Array_Get_Item;                           // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4737[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on BP_MapWidgetSpawnPoint_C_OnMouseButtonUp");
static_assert(sizeof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp) == 0x000260, "Wrong size on BP_MapWidgetSpawnPoint_C_OnMouseButtonUp");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, Temp_int_Array_Index_Variable) == 0x000160, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, Temp_int_Loop_Counter_Variable) == 0x000164, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000170, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000228, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000230, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000240, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, CallFunc_Array_Get_Item) == 0x000248, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000250, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, CallFunc_Array_Length_ReturnValue) == 0x000254, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_OnMouseButtonUp, CallFunc_Less_IntInt_ReturnValue) == 0x000258, "Member 'BP_MapWidgetSpawnPoint_C_OnMouseButtonUp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.GetRemainingActivatingTime
// 0x0020 (0x0020 - 0x0000)
struct BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4738[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime) == 0x000008, "Wrong alignment on BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime");
static_assert(sizeof(BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime) == 0x000020, "Wrong size on BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime, RemainingTime) == 0x000000, "Member 'BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime::RemainingTime' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000010, "Member 'BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.UpdateProgress
// 0x0010 (0x0010 - 0x0000)
struct BP_MapWidgetSpawnPoint_C_UpdateProgress final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4739[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRemainingActivatingTime_RemainingTime; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSpawnPoint_C_UpdateProgress) == 0x000004, "Wrong alignment on BP_MapWidgetSpawnPoint_C_UpdateProgress");
static_assert(sizeof(BP_MapWidgetSpawnPoint_C_UpdateProgress) == 0x000010, "Wrong size on BP_MapWidgetSpawnPoint_C_UpdateProgress");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_UpdateProgress, RemainingTime) == 0x000000, "Member 'BP_MapWidgetSpawnPoint_C_UpdateProgress::RemainingTime' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_UpdateProgress, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_MapWidgetSpawnPoint_C_UpdateProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_UpdateProgress, CallFunc_GetRemainingActivatingTime_RemainingTime) == 0x000008, "Member 'BP_MapWidgetSpawnPoint_C_UpdateProgress::CallFunc_GetRemainingActivatingTime_RemainingTime' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_UpdateProgress, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_MapWidgetSpawnPoint_C_UpdateProgress::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_UpdateProgress, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'BP_MapWidgetSpawnPoint_C_UpdateProgress::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_UpdateProgress, CallFunc_BooleanOR_ReturnValue_1) == 0x00000E, "Member 'BP_MapWidgetSpawnPoint_C_UpdateProgress::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSpawnPoint_C_UpdateProgress, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000F, "Member 'BP_MapWidgetSpawnPoint_C_UpdateProgress::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RoleItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_structs.hpp"
#include "FSQRoleEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SQUnavailabilityReason_structs.hpp"
#include "SQRoleTags_structs.hpp"
#include "SQRoleGroupingStrategy_structs.hpp"


namespace SDK::Params
{

// Function W_RoleItem.W_RoleItem_C.Role Selected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_RoleItem_C_Role_Selected__DelegateSignature final
{
public:
	class USQRoleSettings*                        Role;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_Role_Selected__DelegateSignature) == 0x000008, "Wrong alignment on W_RoleItem_C_Role_Selected__DelegateSignature");
static_assert(sizeof(W_RoleItem_C_Role_Selected__DelegateSignature) == 0x000008, "Wrong size on W_RoleItem_C_Role_Selected__DelegateSignature");
static_assert(offsetof(W_RoleItem_C_Role_Selected__DelegateSignature, Role) == 0x000000, "Member 'W_RoleItem_C_Role_Selected__DelegateSignature::Role' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.Role Hovered__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_RoleItem_C_Role_Hovered__DelegateSignature final
{
public:
	class USQRoleSettings*                        Role;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hovered;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_486F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RoleItem_C*                          Button_Reference;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSubRole;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_Role_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_RoleItem_C_Role_Hovered__DelegateSignature");
static_assert(sizeof(W_RoleItem_C_Role_Hovered__DelegateSignature) == 0x000020, "Wrong size on W_RoleItem_C_Role_Hovered__DelegateSignature");
static_assert(offsetof(W_RoleItem_C_Role_Hovered__DelegateSignature, Role) == 0x000000, "Member 'W_RoleItem_C_Role_Hovered__DelegateSignature::Role' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Role_Hovered__DelegateSignature, Hovered) == 0x000008, "Member 'W_RoleItem_C_Role_Hovered__DelegateSignature::Hovered' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Role_Hovered__DelegateSignature, Button_Reference) == 0x000010, "Member 'W_RoleItem_C_Role_Hovered__DelegateSignature::Button_Reference' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Role_Hovered__DelegateSignature, bSubRole) == 0x000018, "Member 'W_RoleItem_C_Role_Hovered__DelegateSignature::bSubRole' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.ExecuteUbergraph_W_RoleItem
// 0x0080 (0x0080 - 0x0000)
struct W_RoleItem_C_ExecuteUbergraph_W_RoleItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4870[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        K2Node_CustomEvent_Role;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRoleAlreadySelected_Out_Not_Selected_Yet; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerIsNotSpawned_Out_Is_NOT_Spawned;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerIsNotSpawned_Out_Is_NOT_Spawned_1;  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4871[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        K2Node_CustomEvent_In_Selected_Role;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestRole_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRoleAlreadySelected_Out_Not_Selected_Yet_1; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4872[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSQAvailabilityState_Role>      K2Node_CustomEvent_In_Player_Role_States;          // 0x0028(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_ShouldHideThisItem_Out_ShouldHide;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFirstRole_Out_Success;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4873[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_TryGetFirstRole_Out_Role_Setting;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetFirstRole_Out_Success_1;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4874[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_TryGetFirstRole_Out_Role_Setting_1;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQRoleSettings*                        K2Node_CustomEvent_In_Current_Role;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAvailable_Out_Is_Available;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4875[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetFirstRole_Out_Success_2;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4876[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_TryGetFirstRole_Out_Role_Setting_2;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem) == 0x000008, "Wrong alignment on W_RoleItem_C_ExecuteUbergraph_W_RoleItem");
static_assert(sizeof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem) == 0x000080, "Wrong size on W_RoleItem_C_ExecuteUbergraph_W_RoleItem");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, EntryPoint) == 0x000000, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, K2Node_CustomEvent_Role) == 0x000008, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::K2Node_CustomEvent_Role' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_IsRoleAlreadySelected_Out_Not_Selected_Yet) == 0x000011, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_IsRoleAlreadySelected_Out_Not_Selected_Yet' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_PlayerIsNotSpawned_Out_Is_NOT_Spawned) == 0x000012, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_PlayerIsNotSpawned_Out_Is_NOT_Spawned' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_PlayerIsNotSpawned_Out_Is_NOT_Spawned_1) == 0x000013, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_PlayerIsNotSpawned_Out_Is_NOT_Spawned_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, K2Node_CustomEvent_In_Selected_Role) == 0x000018, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::K2Node_CustomEvent_In_Selected_Role' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_RequestRole_ReturnValue) == 0x000020, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_RequestRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_IsRoleAlreadySelected_Out_Not_Selected_Yet_1) == 0x000021, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_IsRoleAlreadySelected_Out_Not_Selected_Yet_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, K2Node_CustomEvent_In_Player_Role_States) == 0x000028, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::K2Node_CustomEvent_In_Player_Role_States' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_ShouldHideThisItem_Out_ShouldHide) == 0x000038, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_ShouldHideThisItem_Out_ShouldHide' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_TryGetFirstRole_Out_Success) == 0x000039, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_TryGetFirstRole_Out_Success' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_TryGetFirstRole_Out_Role_Setting) == 0x000040, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_TryGetFirstRole_Out_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_TryGetFirstRole_Out_Success_1) == 0x000048, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_TryGetFirstRole_Out_Success_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_TryGetFirstRole_Out_Role_Setting_1) == 0x000050, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_TryGetFirstRole_Out_Role_Setting_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, K2Node_CustomEvent_In_Current_Role) == 0x000058, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::K2Node_CustomEvent_In_Current_Role' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_IsAvailable_Out_Is_Available) == 0x000061, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_IsAvailable_Out_Is_Available' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_TryGetFirstRole_Out_Success_2) == 0x000069, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_TryGetFirstRole_Out_Success_2' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_TryGetFirstRole_Out_Role_Setting_2) == 0x000070, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_TryGetFirstRole_Out_Role_Setting_2' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ExecuteUbergraph_W_RoleItem, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'W_RoleItem_C_ExecuteUbergraph_W_RoleItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.OnRoleChange
// 0x0008 (0x0008 - 0x0000)
struct W_RoleItem_C_OnRoleChange final
{
public:
	class USQRoleSettings*                        In_Current_Role;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_OnRoleChange) == 0x000008, "Wrong alignment on W_RoleItem_C_OnRoleChange");
static_assert(sizeof(W_RoleItem_C_OnRoleChange) == 0x000008, "Wrong size on W_RoleItem_C_OnRoleChange");
static_assert(offsetof(W_RoleItem_C_OnRoleChange, In_Current_Role) == 0x000000, "Member 'W_RoleItem_C_OnRoleChange::In_Current_Role' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.On Tick
// 0x0010 (0x0010 - 0x0000)
struct W_RoleItem_C_On_Tick final
{
public:
	TArray<struct FSQAvailabilityState_Role>      In_Player_Role_States;                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(W_RoleItem_C_On_Tick) == 0x000008, "Wrong alignment on W_RoleItem_C_On_Tick");
static_assert(sizeof(W_RoleItem_C_On_Tick) == 0x000010, "Wrong size on W_RoleItem_C_On_Tick");
static_assert(offsetof(W_RoleItem_C_On_Tick, In_Player_Role_States) == 0x000000, "Member 'W_RoleItem_C_On_Tick::In_Player_Role_States' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.SubRole Selected
// 0x0008 (0x0008 - 0x0000)
struct W_RoleItem_C_SubRole_Selected final
{
public:
	class USQRoleSettings*                        Role;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_SubRole_Selected) == 0x000008, "Wrong alignment on W_RoleItem_C_SubRole_Selected");
static_assert(sizeof(W_RoleItem_C_SubRole_Selected) == 0x000008, "Wrong size on W_RoleItem_C_SubRole_Selected");
static_assert(offsetof(W_RoleItem_C_SubRole_Selected, Role) == 0x000000, "Member 'W_RoleItem_C_SubRole_Selected::Role' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.Select Role
// 0x0008 (0x0008 - 0x0000)
struct W_RoleItem_C_Select_Role final
{
public:
	class USQRoleSettings*                        In_Selected_Role;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_Select_Role) == 0x000008, "Wrong alignment on W_RoleItem_C_Select_Role");
static_assert(sizeof(W_RoleItem_C_Select_Role) == 0x000008, "Wrong size on W_RoleItem_C_Select_Role");
static_assert(offsetof(W_RoleItem_C_Select_Role, In_Selected_Role) == 0x000000, "Member 'W_RoleItem_C_Select_Role::In_Selected_Role' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.Get State Color
// 0x0058 (0x0058 - 0x0000)
struct W_RoleItem_C_Get_State_Color final
{
public:
	bool                                          In_Selected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          In_Locked;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4877[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Out_Color;                                         // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsButtonHovered_Is_Hovered;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4878[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_Get_State_Color) == 0x000004, "Wrong alignment on W_RoleItem_C_Get_State_Color");
static_assert(sizeof(W_RoleItem_C_Get_State_Color) == 0x000058, "Wrong size on W_RoleItem_C_Get_State_Color");
static_assert(offsetof(W_RoleItem_C_Get_State_Color, In_Selected) == 0x000000, "Member 'W_RoleItem_C_Get_State_Color::In_Selected' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Get_State_Color, In_Locked) == 0x000001, "Member 'W_RoleItem_C_Get_State_Color::In_Locked' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Get_State_Color, Out_Color) == 0x000004, "Member 'W_RoleItem_C_Get_State_Color::Out_Color' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Get_State_Color, CallFunc_IsButtonHovered_Is_Hovered) == 0x000014, "Member 'W_RoleItem_C_Get_State_Color::CallFunc_IsButtonHovered_Is_Hovered' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Get_State_Color, CallFunc_SelectColor_ReturnValue) == 0x000018, "Member 'W_RoleItem_C_Get_State_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Get_State_Color, CallFunc_SelectColor_ReturnValue_1) == 0x000028, "Member 'W_RoleItem_C_Get_State_Color::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Get_State_Color, CallFunc_SelectColor_ReturnValue_2) == 0x000038, "Member 'W_RoleItem_C_Get_State_Color::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Get_State_Color, CallFunc_SelectColor_ReturnValue_3) == 0x000048, "Member 'W_RoleItem_C_Get_State_Color::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.Open Sub Roles
// 0x0018 (0x0018 - 0x0000)
struct W_RoleItem_C_Open_Sub_Roles final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4879[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SubRoleOptions_C*                    CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_Open_Sub_Roles) == 0x000008, "Wrong alignment on W_RoleItem_C_Open_Sub_Roles");
static_assert(sizeof(W_RoleItem_C_Open_Sub_Roles) == 0x000018, "Wrong size on W_RoleItem_C_Open_Sub_Roles");
static_assert(offsetof(W_RoleItem_C_Open_Sub_Roles, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_RoleItem_C_Open_Sub_Roles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Open_Sub_Roles, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_RoleItem_C_Open_Sub_Roles::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_Open_Sub_Roles, CallFunc_IsInViewport_ReturnValue) == 0x000010, "Member 'W_RoleItem_C_Open_Sub_Roles::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.AddSubRoleItem
// 0x0068 (0x0068 - 0x0000)
struct W_RoleItem_C_AddSubRoleItem final
{
public:
	struct FSQAvailabilityState_Role              InTeamRoleAvailabilityState;                       // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_AddSubRoleItem) == 0x000008, "Wrong alignment on W_RoleItem_C_AddSubRoleItem");
static_assert(sizeof(W_RoleItem_C_AddSubRoleItem) == 0x000068, "Wrong size on W_RoleItem_C_AddSubRoleItem");
static_assert(offsetof(W_RoleItem_C_AddSubRoleItem, InTeamRoleAvailabilityState) == 0x000000, "Member 'W_RoleItem_C_AddSubRoleItem::InTeamRoleAvailabilityState' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_AddSubRoleItem, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'W_RoleItem_C_AddSubRoleItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_AddSubRoleItem, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'W_RoleItem_C_AddSubRoleItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_AddSubRoleItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'W_RoleItem_C_AddSubRoleItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.CreateSubRoleWidget
// 0x0068 (0x0068 - 0x0000)
struct W_RoleItem_C_CreateSubRoleWidget final
{
public:
	struct FSQAvailabilityState_Role              InState;                                           // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	class UW_SubRoleItem_C*                       CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_CreateSubRoleWidget) == 0x000008, "Wrong alignment on W_RoleItem_C_CreateSubRoleWidget");
static_assert(sizeof(W_RoleItem_C_CreateSubRoleWidget) == 0x000068, "Wrong size on W_RoleItem_C_CreateSubRoleWidget");
static_assert(offsetof(W_RoleItem_C_CreateSubRoleWidget, InState) == 0x000000, "Member 'W_RoleItem_C_CreateSubRoleWidget::InState' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_CreateSubRoleWidget, CallFunc_Create_ReturnValue) == 0x000058, "Member 'W_RoleItem_C_CreateSubRoleWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_CreateSubRoleWidget, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'W_RoleItem_C_CreateSubRoleWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.HasThisTagGrouping
// 0x0100 (0x0100 - 0x0000)
struct W_RoleItem_C_HasThisTagGrouping final
{
public:
	struct FSQRoleGroupingStrategy                InTagGrouping;                                     // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          OutHasMatchingTagGrouping;                         // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_487A[0x5];                                     // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<ESQRoleTags>                             CallFunc_Set_Difference_Result;                    // 0x00A8(0x0050)()
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_HasThisTagGrouping) == 0x000008, "Wrong alignment on W_RoleItem_C_HasThisTagGrouping");
static_assert(sizeof(W_RoleItem_C_HasThisTagGrouping) == 0x000100, "Wrong size on W_RoleItem_C_HasThisTagGrouping");
static_assert(offsetof(W_RoleItem_C_HasThisTagGrouping, InTagGrouping) == 0x000000, "Member 'W_RoleItem_C_HasThisTagGrouping::InTagGrouping' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_HasThisTagGrouping, OutHasMatchingTagGrouping) == 0x0000A0, "Member 'W_RoleItem_C_HasThisTagGrouping::OutHasMatchingTagGrouping' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_HasThisTagGrouping, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0000A1, "Member 'W_RoleItem_C_HasThisTagGrouping::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_HasThisTagGrouping, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x0000A2, "Member 'W_RoleItem_C_HasThisTagGrouping::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_HasThisTagGrouping, CallFunc_Set_Difference_Result) == 0x0000A8, "Member 'W_RoleItem_C_HasThisTagGrouping::CallFunc_Set_Difference_Result' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_HasThisTagGrouping, CallFunc_Set_Length_ReturnValue) == 0x0000F8, "Member 'W_RoleItem_C_HasThisTagGrouping::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_HasThisTagGrouping, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000FC, "Member 'W_RoleItem_C_HasThisTagGrouping::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_HasThisTagGrouping, CallFunc_BooleanAND_ReturnValue) == 0x0000FD, "Member 'W_RoleItem_C_HasThisTagGrouping::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_HasThisTagGrouping, CallFunc_BooleanAND_ReturnValue_1) == 0x0000FE, "Member 'W_RoleItem_C_HasThisTagGrouping::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.SetTagGrouping
// 0x00A0 (0x00A0 - 0x0000)
struct W_RoleItem_C_SetTagGrouping final
{
public:
	struct FSQRoleGroupingStrategy                InTagGroupingStrategy;                             // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_SetTagGrouping) == 0x000008, "Wrong alignment on W_RoleItem_C_SetTagGrouping");
static_assert(sizeof(W_RoleItem_C_SetTagGrouping) == 0x0000A0, "Wrong size on W_RoleItem_C_SetTagGrouping");
static_assert(offsetof(W_RoleItem_C_SetTagGrouping, InTagGroupingStrategy) == 0x000000, "Member 'W_RoleItem_C_SetTagGrouping::InTagGroupingStrategy' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.GetRoleEntry
// 0x01A0 (0x01A0 - 0x0000)
struct W_RoleItem_C_GetRoleEntry final
{
public:
	int32                                         In_Index;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_487B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          OutEntry;                                          // 0x0008(0x00C0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetRole_Out_success;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_487C[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRoleSettings_C*                   CallFunc_GetRole_OutEntry;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRoleEntry_Success;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_487D[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_RoleEntry;                   // 0x00E0(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_GetRoleEntry) == 0x000008, "Wrong alignment on W_RoleItem_C_GetRoleEntry");
static_assert(sizeof(W_RoleItem_C_GetRoleEntry) == 0x0001A0, "Wrong size on W_RoleItem_C_GetRoleEntry");
static_assert(offsetof(W_RoleItem_C_GetRoleEntry, In_Index) == 0x000000, "Member 'W_RoleItem_C_GetRoleEntry::In_Index' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRoleEntry, OutEntry) == 0x000008, "Member 'W_RoleItem_C_GetRoleEntry::OutEntry' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRoleEntry, CallFunc_GetRole_Out_success) == 0x0000C8, "Member 'W_RoleItem_C_GetRoleEntry::CallFunc_GetRole_Out_success' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRoleEntry, CallFunc_GetRole_OutEntry) == 0x0000D0, "Member 'W_RoleItem_C_GetRoleEntry::CallFunc_GetRole_OutEntry' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRoleEntry, CallFunc_GetRoleEntry_Success) == 0x0000D8, "Member 'W_RoleItem_C_GetRoleEntry::CallFunc_GetRoleEntry_Success' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRoleEntry, CallFunc_GetRoleEntry_RoleEntry) == 0x0000E0, "Member 'W_RoleItem_C_GetRoleEntry::CallFunc_GetRoleEntry_RoleEntry' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.GetIcon
// 0x00F0 (0x00F0 - 0x0000)
struct W_RoleItem_C_GetIcon final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_487E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              OutIcon;                                           // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_OutEntry;                    // 0x0030(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_GetIcon) == 0x000008, "Wrong alignment on W_RoleItem_C_GetIcon");
static_assert(sizeof(W_RoleItem_C_GetIcon) == 0x0000F0, "Wrong size on W_RoleItem_C_GetIcon");
static_assert(offsetof(W_RoleItem_C_GetIcon, InIndex) == 0x000000, "Member 'W_RoleItem_C_GetIcon::InIndex' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetIcon, OutIcon) == 0x000008, "Member 'W_RoleItem_C_GetIcon::OutIcon' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetIcon, CallFunc_GetRoleEntry_OutEntry) == 0x000030, "Member 'W_RoleItem_C_GetIcon::CallFunc_GetRoleEntry_OutEntry' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.GetDisplayName
// 0x00E0 (0x00E0 - 0x0000)
struct W_RoleItem_C_GetDisplayName final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_487F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutDisplayName;                                    // 0x0008(0x0018)(Parm, OutParm)
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_OutEntry;                    // 0x0020(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_GetDisplayName) == 0x000008, "Wrong alignment on W_RoleItem_C_GetDisplayName");
static_assert(sizeof(W_RoleItem_C_GetDisplayName) == 0x0000E0, "Wrong size on W_RoleItem_C_GetDisplayName");
static_assert(offsetof(W_RoleItem_C_GetDisplayName, InIndex) == 0x000000, "Member 'W_RoleItem_C_GetDisplayName::InIndex' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetDisplayName, OutDisplayName) == 0x000008, "Member 'W_RoleItem_C_GetDisplayName::OutDisplayName' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetDisplayName, CallFunc_GetRoleEntry_OutEntry) == 0x000020, "Member 'W_RoleItem_C_GetDisplayName::CallFunc_GetRoleEntry_OutEntry' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.GetWeaponImage
// 0x00F0 (0x00F0 - 0x0000)
struct W_RoleItem_C_GetWeaponImage final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4880[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              OutIcon;                                           // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_OutEntry;                    // 0x0030(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_GetWeaponImage) == 0x000008, "Wrong alignment on W_RoleItem_C_GetWeaponImage");
static_assert(sizeof(W_RoleItem_C_GetWeaponImage) == 0x0000F0, "Wrong size on W_RoleItem_C_GetWeaponImage");
static_assert(offsetof(W_RoleItem_C_GetWeaponImage, InIndex) == 0x000000, "Member 'W_RoleItem_C_GetWeaponImage::InIndex' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetWeaponImage, OutIcon) == 0x000008, "Member 'W_RoleItem_C_GetWeaponImage::OutIcon' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetWeaponImage, CallFunc_GetRoleEntry_OutEntry) == 0x000030, "Member 'W_RoleItem_C_GetWeaponImage::CallFunc_GetRoleEntry_OutEntry' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.SetupExposition
// 0x0048 (0x0048 - 0x0000)
struct W_RoleItem_C_SetupExposition final
{
public:
	bool                                          CallFunc_ShouldHideThisItem_Out_ShouldHide;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4881[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0008(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetIcon_OutIcon;                          // 0x0020(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_SetupExposition) == 0x000008, "Wrong alignment on W_RoleItem_C_SetupExposition");
static_assert(sizeof(W_RoleItem_C_SetupExposition) == 0x000048, "Wrong size on W_RoleItem_C_SetupExposition");
static_assert(offsetof(W_RoleItem_C_SetupExposition, CallFunc_ShouldHideThisItem_Out_ShouldHide) == 0x000000, "Member 'W_RoleItem_C_SetupExposition::CallFunc_ShouldHideThisItem_Out_ShouldHide' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_SetupExposition, CallFunc_GetDisplayName_OutDisplayName) == 0x000008, "Member 'W_RoleItem_C_SetupExposition::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_SetupExposition, CallFunc_GetIcon_OutIcon) == 0x000020, "Member 'W_RoleItem_C_SetupExposition::CallFunc_GetIcon_OutIcon' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.PlayerIsNotSpawned
// 0x0018 (0x0018 - 0x0000)
struct W_RoleItem_C_PlayerIsNotSpawned final
{
public:
	bool                                          Out_Is_NOT_Spawned;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4882[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_PlayerIsNotSpawned) == 0x000008, "Wrong alignment on W_RoleItem_C_PlayerIsNotSpawned");
static_assert(sizeof(W_RoleItem_C_PlayerIsNotSpawned) == 0x000018, "Wrong size on W_RoleItem_C_PlayerIsNotSpawned");
static_assert(offsetof(W_RoleItem_C_PlayerIsNotSpawned, Out_Is_NOT_Spawned) == 0x000000, "Member 'W_RoleItem_C_PlayerIsNotSpawned::Out_Is_NOT_Spawned' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_PlayerIsNotSpawned, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'W_RoleItem_C_PlayerIsNotSpawned::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_PlayerIsNotSpawned, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_RoleItem_C_PlayerIsNotSpawned::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_PlayerIsNotSpawned, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'W_RoleItem_C_PlayerIsNotSpawned::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.TryGetFirstRole
// 0x0020 (0x0020 - 0x0000)
struct W_RoleItem_C_TryGetFirstRole final
{
public:
	bool                                          Out_Success;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4883[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        Out_Role_Setting;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRole_Out_success;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4884[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRoleSettings_C*                   CallFunc_GetRole_OutEntry;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_TryGetFirstRole) == 0x000008, "Wrong alignment on W_RoleItem_C_TryGetFirstRole");
static_assert(sizeof(W_RoleItem_C_TryGetFirstRole) == 0x000020, "Wrong size on W_RoleItem_C_TryGetFirstRole");
static_assert(offsetof(W_RoleItem_C_TryGetFirstRole, Out_Success) == 0x000000, "Member 'W_RoleItem_C_TryGetFirstRole::Out_Success' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_TryGetFirstRole, Out_Role_Setting) == 0x000008, "Member 'W_RoleItem_C_TryGetFirstRole::Out_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_TryGetFirstRole, CallFunc_GetRole_Out_success) == 0x000010, "Member 'W_RoleItem_C_TryGetFirstRole::CallFunc_GetRole_Out_success' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_TryGetFirstRole, CallFunc_GetRole_OutEntry) == 0x000018, "Member 'W_RoleItem_C_TryGetFirstRole::CallFunc_GetRole_OutEntry' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.IsRoleAlreadySelected
// 0x0020 (0x0020 - 0x0000)
struct W_RoleItem_C_IsRoleAlreadySelected final
{
public:
	class USQRoleSettings*                        In_Role_Setting;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_Not_Selected_Yet;                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4885[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQRoleSettings*                        CallFunc_GetDeployRole_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_IsRoleAlreadySelected) == 0x000008, "Wrong alignment on W_RoleItem_C_IsRoleAlreadySelected");
static_assert(sizeof(W_RoleItem_C_IsRoleAlreadySelected) == 0x000020, "Wrong size on W_RoleItem_C_IsRoleAlreadySelected");
static_assert(offsetof(W_RoleItem_C_IsRoleAlreadySelected, In_Role_Setting) == 0x000000, "Member 'W_RoleItem_C_IsRoleAlreadySelected::In_Role_Setting' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsRoleAlreadySelected, Out_Not_Selected_Yet) == 0x000008, "Member 'W_RoleItem_C_IsRoleAlreadySelected::Out_Not_Selected_Yet' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsRoleAlreadySelected, CallFunc_GetDeployRole_ReturnValue) == 0x000010, "Member 'W_RoleItem_C_IsRoleAlreadySelected::CallFunc_GetDeployRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsRoleAlreadySelected, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'W_RoleItem_C_IsRoleAlreadySelected::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.ShouldHideThisItem
// 0x0030 (0x0030 - 0x0000)
struct W_RoleItem_C_ShouldHideThisItem final
{
public:
	bool                                          Out_ShouldHide;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4886[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRole_Out_success;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4887[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRoleSettings_C*                   CallFunc_GetRole_OutEntry;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadLeader_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRecruit_Out_IsRecruit;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadLeader_ReturnValue_1;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4888[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_ShouldHideThisItem) == 0x000008, "Wrong alignment on W_RoleItem_C_ShouldHideThisItem");
static_assert(sizeof(W_RoleItem_C_ShouldHideThisItem) == 0x000030, "Wrong size on W_RoleItem_C_ShouldHideThisItem");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, Out_ShouldHide) == 0x000000, "Member 'W_RoleItem_C_ShouldHideThisItem::Out_ShouldHide' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, Temp_int_Variable) == 0x000004, "Member 'W_RoleItem_C_ShouldHideThisItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, CallFunc_GetRole_Out_success) == 0x000008, "Member 'W_RoleItem_C_ShouldHideThisItem::CallFunc_GetRole_Out_success' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, CallFunc_GetRole_OutEntry) == 0x000010, "Member 'W_RoleItem_C_ShouldHideThisItem::CallFunc_GetRole_OutEntry' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, CallFunc_IsSquadLeader_ReturnValue) == 0x000018, "Member 'W_RoleItem_C_ShouldHideThisItem::CallFunc_IsSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, CallFunc_IsRecruit_Out_IsRecruit) == 0x000019, "Member 'W_RoleItem_C_ShouldHideThisItem::CallFunc_IsRecruit_Out_IsRecruit' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, CallFunc_IsSquadLeader_ReturnValue_1) == 0x00001A, "Member 'W_RoleItem_C_ShouldHideThisItem::CallFunc_IsSquadLeader_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'W_RoleItem_C_ShouldHideThisItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_RoleItem_C_ShouldHideThisItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'W_RoleItem_C_ShouldHideThisItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_ShouldHideThisItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'W_RoleItem_C_ShouldHideThisItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.SetRoleVisible
// 0x0005 (0x0005 - 0x0000)
struct W_RoleItem_C_SetRoleVisible final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_SetRoleVisible) == 0x000001, "Wrong alignment on W_RoleItem_C_SetRoleVisible");
static_assert(sizeof(W_RoleItem_C_SetRoleVisible) == 0x000005, "Wrong size on W_RoleItem_C_SetRoleVisible");
static_assert(offsetof(W_RoleItem_C_SetRoleVisible, InVisible) == 0x000000, "Member 'W_RoleItem_C_SetRoleVisible::InVisible' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_SetRoleVisible, Temp_bool_Variable) == 0x000001, "Member 'W_RoleItem_C_SetRoleVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_SetRoleVisible, Temp_byte_Variable) == 0x000002, "Member 'W_RoleItem_C_SetRoleVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_SetRoleVisible, Temp_byte_Variable_1) == 0x000003, "Member 'W_RoleItem_C_SetRoleVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_SetRoleVisible, K2Node_Select_Default) == 0x000004, "Member 'W_RoleItem_C_SetRoleVisible::K2Node_Select_Default' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.UpdateLocalStates
// 0x00E8 (0x00E8 - 0x0000)
struct W_RoleItem_C_UpdateLocalStates final
{
public:
	TArray<struct FSQAvailabilityState_Role>      In_Player_Role_States;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQAvailabilityState_Role              CallFunc_Array_Get_Item;                           // 0x0028(0x0058)(ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4889[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQAvailabilityState_Role              CallFunc_Array_Get_Item_1;                         // 0x0088(0x0058)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldHideThisItem_Out_ShouldHide;        // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_UpdateLocalStates) == 0x000008, "Wrong alignment on W_RoleItem_C_UpdateLocalStates");
static_assert(sizeof(W_RoleItem_C_UpdateLocalStates) == 0x0000E8, "Wrong size on W_RoleItem_C_UpdateLocalStates");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, In_Player_Role_States) == 0x000000, "Member 'W_RoleItem_C_UpdateLocalStates::In_Player_Role_States' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'W_RoleItem_C_UpdateLocalStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'W_RoleItem_C_UpdateLocalStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'W_RoleItem_C_UpdateLocalStates::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'W_RoleItem_C_UpdateLocalStates::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E4, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000E5, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_ShouldHideThisItem_Out_ShouldHide) == 0x0000E6, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_ShouldHideThisItem_Out_ShouldHide' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateLocalStates, CallFunc_Not_PreBool_ReturnValue) == 0x0000E7, "Member 'W_RoleItem_C_UpdateLocalStates::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.UpdateSubOptions
// 0x0020 (0x0020 - 0x0000)
struct W_RoleItem_C_UpdateSubOptions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_488A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SubRoleItem_C*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_UpdateSubOptions) == 0x000008, "Wrong alignment on W_RoleItem_C_UpdateSubOptions");
static_assert(sizeof(W_RoleItem_C_UpdateSubOptions) == 0x000020, "Wrong size on W_RoleItem_C_UpdateSubOptions");
static_assert(offsetof(W_RoleItem_C_UpdateSubOptions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_RoleItem_C_UpdateSubOptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateSubOptions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_RoleItem_C_UpdateSubOptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateSubOptions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_RoleItem_C_UpdateSubOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateSubOptions, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_RoleItem_C_UpdateSubOptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateSubOptions, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'W_RoleItem_C_UpdateSubOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateSubOptions, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'W_RoleItem_C_UpdateSubOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateSubOptions, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'W_RoleItem_C_UpdateSubOptions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateSubOptions, CallFunc_IsVisible_ReturnValue) == 0x00001E, "Member 'W_RoleItem_C_UpdateSubOptions::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.IsAvailable
// 0x0078 (0x0078 - 0x0000)
struct W_RoleItem_C_IsAvailable final
{
public:
	bool                                          Out_Is_Available;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_488B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectedRole_Out_Selected;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_488C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQAvailabilityState_Role              CallFunc_Array_Get_Item;                           // 0x0018(0x0058)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAvailable_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_IsAvailable) == 0x000008, "Wrong alignment on W_RoleItem_C_IsAvailable");
static_assert(sizeof(W_RoleItem_C_IsAvailable) == 0x000078, "Wrong size on W_RoleItem_C_IsAvailable");
static_assert(offsetof(W_RoleItem_C_IsAvailable, Out_Is_Available) == 0x000000, "Member 'W_RoleItem_C_IsAvailable::Out_Is_Available' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsAvailable, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_RoleItem_C_IsAvailable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsAvailable, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_RoleItem_C_IsAvailable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsAvailable, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_RoleItem_C_IsAvailable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsAvailable, CallFunc_IsSelectedRole_Out_Selected) == 0x000010, "Member 'W_RoleItem_C_IsAvailable::CallFunc_IsSelectedRole_Out_Selected' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsAvailable, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_RoleItem_C_IsAvailable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsAvailable, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'W_RoleItem_C_IsAvailable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsAvailable, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'W_RoleItem_C_IsAvailable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsAvailable, CallFunc_IsAvailable_ReturnValue) == 0x000075, "Member 'W_RoleItem_C_IsAvailable::CallFunc_IsAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsAvailable, CallFunc_BooleanOR_ReturnValue) == 0x000076, "Member 'W_RoleItem_C_IsAvailable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.GetWidgetSwitcherIndex
// 0x001C (0x001C - 0x0000)
struct W_RoleItem_C_GetWidgetSwitcherIndex final
{
public:
	int32                                         In_Availability;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out_Widget_Switcher_Index;                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_488D[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAvailable_Out_Is_Available;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_488E[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_GetWidgetSwitcherIndex) == 0x000004, "Wrong alignment on W_RoleItem_C_GetWidgetSwitcherIndex");
static_assert(sizeof(W_RoleItem_C_GetWidgetSwitcherIndex) == 0x00001C, "Wrong size on W_RoleItem_C_GetWidgetSwitcherIndex");
static_assert(offsetof(W_RoleItem_C_GetWidgetSwitcherIndex, In_Availability) == 0x000000, "Member 'W_RoleItem_C_GetWidgetSwitcherIndex::In_Availability' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetWidgetSwitcherIndex, Out_Widget_Switcher_Index) == 0x000004, "Member 'W_RoleItem_C_GetWidgetSwitcherIndex::Out_Widget_Switcher_Index' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetWidgetSwitcherIndex, Temp_bool_Variable) == 0x000008, "Member 'W_RoleItem_C_GetWidgetSwitcherIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetWidgetSwitcherIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000009, "Member 'W_RoleItem_C_GetWidgetSwitcherIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetWidgetSwitcherIndex, Temp_int_Variable) == 0x00000C, "Member 'W_RoleItem_C_GetWidgetSwitcherIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetWidgetSwitcherIndex, Temp_int_Variable_1) == 0x000010, "Member 'W_RoleItem_C_GetWidgetSwitcherIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetWidgetSwitcherIndex, CallFunc_IsAvailable_Out_Is_Available) == 0x000014, "Member 'W_RoleItem_C_GetWidgetSwitcherIndex::CallFunc_IsAvailable_Out_Is_Available' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetWidgetSwitcherIndex, K2Node_Select_Default) == 0x000018, "Member 'W_RoleItem_C_GetWidgetSwitcherIndex::K2Node_Select_Default' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.GetCounts
// 0x0090 (0x0090 - 0x0000)
struct W_RoleItem_C_GetCounts final
{
public:
	int32                                         Out_Used;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out_Availability;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Available;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Used;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_488F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQAvailabilityState_Role              CallFunc_Array_Get_Item;                           // 0x0020(0x0058)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4890[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_GetCounts) == 0x000008, "Wrong alignment on W_RoleItem_C_GetCounts");
static_assert(sizeof(W_RoleItem_C_GetCounts) == 0x000090, "Wrong size on W_RoleItem_C_GetCounts");
static_assert(offsetof(W_RoleItem_C_GetCounts, Out_Used) == 0x000000, "Member 'W_RoleItem_C_GetCounts::Out_Used' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, Out_Availability) == 0x000004, "Member 'W_RoleItem_C_GetCounts::Out_Availability' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, L_Available) == 0x000008, "Member 'W_RoleItem_C_GetCounts::L_Available' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, L_Used) == 0x00000C, "Member 'W_RoleItem_C_GetCounts::L_Used' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_RoleItem_C_GetCounts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_RoleItem_C_GetCounts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_RoleItem_C_GetCounts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_RoleItem_C_GetCounts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'W_RoleItem_C_GetCounts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'W_RoleItem_C_GetCounts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'W_RoleItem_C_GetCounts::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, CallFunc_Max_ReturnValue) == 0x000084, "Member 'W_RoleItem_C_GetCounts::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCounts, CallFunc_Max_ReturnValue_1) == 0x000088, "Member 'W_RoleItem_C_GetCounts::CallFunc_Max_ReturnValue_1' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.IsSelectedRole
// 0x0078 (0x0078 - 0x0000)
struct W_RoleItem_C_IsSelectedRole final
{
public:
	bool                                          Out_Selected;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4891[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQAvailabilityState_Role              CallFunc_Array_Get_Item;                           // 0x0010(0x0058)(ContainsInstancedReference)
	class USQRoleSettings*                        CallFunc_GetDeployRole_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_IsSelectedRole) == 0x000008, "Wrong alignment on W_RoleItem_C_IsSelectedRole");
static_assert(sizeof(W_RoleItem_C_IsSelectedRole) == 0x000078, "Wrong size on W_RoleItem_C_IsSelectedRole");
static_assert(offsetof(W_RoleItem_C_IsSelectedRole, Out_Selected) == 0x000000, "Member 'W_RoleItem_C_IsSelectedRole::Out_Selected' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsSelectedRole, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_RoleItem_C_IsSelectedRole::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsSelectedRole, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_RoleItem_C_IsSelectedRole::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsSelectedRole, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_RoleItem_C_IsSelectedRole::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsSelectedRole, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_RoleItem_C_IsSelectedRole::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsSelectedRole, CallFunc_GetDeployRole_ReturnValue) == 0x000068, "Member 'W_RoleItem_C_IsSelectedRole::CallFunc_GetDeployRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsSelectedRole, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'W_RoleItem_C_IsSelectedRole::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsSelectedRole, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'W_RoleItem_C_IsSelectedRole::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsSelectedRole, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000075, "Member 'W_RoleItem_C_IsSelectedRole::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.UpdateExposition
// 0x0120 (0x0120 - 0x0000)
struct W_RoleItem_C_UpdateExposition final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4892[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4893[0x1];                                     // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCounts_Out_Used;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCounts_Out_Availability;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAvailable_Out_Is_Available;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4894[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4895[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWidgetSwitcherIndex_Out_Widget_Switcher_Index; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4896[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4897[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectedRole_Out_Selected;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4898[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4899[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_State_Color_Out_Color;                // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RoleItem_C_UpdateExposition) == 0x000008, "Wrong alignment on W_RoleItem_C_UpdateExposition");
static_assert(sizeof(W_RoleItem_C_UpdateExposition) == 0x000120, "Wrong size on W_RoleItem_C_UpdateExposition");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, Temp_bool_Variable) == 0x000000, "Member 'W_RoleItem_C_UpdateExposition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, Temp_struct_Variable) == 0x000004, "Member 'W_RoleItem_C_UpdateExposition::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, Temp_struct_Variable_1) == 0x000014, "Member 'W_RoleItem_C_UpdateExposition::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, Temp_bool_Variable_1) == 0x000024, "Member 'W_RoleItem_C_UpdateExposition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, Temp_byte_Variable) == 0x000025, "Member 'W_RoleItem_C_UpdateExposition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, Temp_byte_Variable_1) == 0x000026, "Member 'W_RoleItem_C_UpdateExposition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, CallFunc_GetCounts_Out_Used) == 0x000028, "Member 'W_RoleItem_C_UpdateExposition::CallFunc_GetCounts_Out_Used' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, CallFunc_GetCounts_Out_Availability) == 0x00002C, "Member 'W_RoleItem_C_UpdateExposition::CallFunc_GetCounts_Out_Availability' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, CallFunc_IsAvailable_Out_Is_Available) == 0x000030, "Member 'W_RoleItem_C_UpdateExposition::CallFunc_IsAvailable_Out_Is_Available' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'W_RoleItem_C_UpdateExposition::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'W_RoleItem_C_UpdateExposition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, CallFunc_GetWidgetSwitcherIndex_Out_Widget_Switcher_Index) == 0x00007C, "Member 'W_RoleItem_C_UpdateExposition::CallFunc_GetWidgetSwitcherIndex_Out_Widget_Switcher_Index' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'W_RoleItem_C_UpdateExposition::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, K2Node_Select_Default) == 0x000084, "Member 'W_RoleItem_C_UpdateExposition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'W_RoleItem_C_UpdateExposition::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, CallFunc_IsSelectedRole_Out_Selected) == 0x0000D8, "Member 'W_RoleItem_C_UpdateExposition::CallFunc_IsSelectedRole_Out_Selected' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, K2Node_MakeArray_Array) == 0x0000E0, "Member 'W_RoleItem_C_UpdateExposition::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'W_RoleItem_C_UpdateExposition::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, K2Node_Select_Default_1) == 0x000108, "Member 'W_RoleItem_C_UpdateExposition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_UpdateExposition, CallFunc_Get_State_Color_Out_Color) == 0x00010C, "Member 'W_RoleItem_C_UpdateExposition::CallFunc_Get_State_Color_Out_Color' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.GetUnavailabilityReason
// 0x0160 (0x0160 - 0x0000)
struct W_RoleItem_C_GetUnavailabilityReason final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutReason;                                         // 0x0008(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetCountText_Out_CountText;               // 0x0020(0x0018)()
	struct FTimespan                              CallFunc_GetAvailabilityDelay_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSeconds_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQUnavailabilityReason                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489C[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489D[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMinutes_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActiveTimer_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489E[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0148(0x0018)()
};
static_assert(alignof(W_RoleItem_C_GetUnavailabilityReason) == 0x000008, "Wrong alignment on W_RoleItem_C_GetUnavailabilityReason");
static_assert(sizeof(W_RoleItem_C_GetUnavailabilityReason) == 0x000160, "Wrong size on W_RoleItem_C_GetUnavailabilityReason");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, InIndex) == 0x000000, "Member 'W_RoleItem_C_GetUnavailabilityReason::InIndex' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, OutReason) == 0x000008, "Member 'W_RoleItem_C_GetUnavailabilityReason::OutReason' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, CallFunc_GetCountText_Out_CountText) == 0x000020, "Member 'W_RoleItem_C_GetUnavailabilityReason::CallFunc_GetCountText_Out_CountText' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, CallFunc_GetAvailabilityDelay_ReturnValue) == 0x000038, "Member 'W_RoleItem_C_GetUnavailabilityReason::CallFunc_GetAvailabilityDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, CallFunc_GetSeconds_ReturnValue) == 0x000040, "Member 'W_RoleItem_C_GetUnavailabilityReason::CallFunc_GetSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'W_RoleItem_C_GetUnavailabilityReason::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A0, "Member 'W_RoleItem_C_GetUnavailabilityReason::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'W_RoleItem_C_GetUnavailabilityReason::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'W_RoleItem_C_GetUnavailabilityReason::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, CallFunc_GetMinutes_ReturnValue) == 0x0000EC, "Member 'W_RoleItem_C_GetUnavailabilityReason::CallFunc_GetMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, CallFunc_HasActiveTimer_ReturnValue) == 0x0000F0, "Member 'W_RoleItem_C_GetUnavailabilityReason::CallFunc_HasActiveTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'W_RoleItem_C_GetUnavailabilityReason::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, K2Node_MakeArray_Array) == 0x000138, "Member 'W_RoleItem_C_GetUnavailabilityReason::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetUnavailabilityReason, CallFunc_Format_ReturnValue) == 0x000148, "Member 'W_RoleItem_C_GetUnavailabilityReason::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.IsItemMatching
// 0x0078 (0x0078 - 0x0000)
struct W_RoleItem_C_IsItemMatching final
{
public:
	class USQRoleSettings*                        In_Setting;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Matching;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489F[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQAvailabilityState_Role              CallFunc_Array_Get_Item;                           // 0x0018(0x0058)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_IsItemMatching) == 0x000008, "Wrong alignment on W_RoleItem_C_IsItemMatching");
static_assert(sizeof(W_RoleItem_C_IsItemMatching) == 0x000078, "Wrong size on W_RoleItem_C_IsItemMatching");
static_assert(offsetof(W_RoleItem_C_IsItemMatching, In_Setting) == 0x000000, "Member 'W_RoleItem_C_IsItemMatching::In_Setting' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsItemMatching, Is_Matching) == 0x000008, "Member 'W_RoleItem_C_IsItemMatching::Is_Matching' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsItemMatching, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'W_RoleItem_C_IsItemMatching::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsItemMatching, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'W_RoleItem_C_IsItemMatching::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsItemMatching, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'W_RoleItem_C_IsItemMatching::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsItemMatching, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_RoleItem_C_IsItemMatching::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsItemMatching, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'W_RoleItem_C_IsItemMatching::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsItemMatching, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'W_RoleItem_C_IsItemMatching::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsItemMatching, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000075, "Member 'W_RoleItem_C_IsItemMatching::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.IsButtonHovered
// 0x0002 (0x0002 - 0x0000)
struct W_RoleItem_C_IsButtonHovered final
{
public:
	bool                                          Is_Hovered;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_IsButtonHovered) == 0x000001, "Wrong alignment on W_RoleItem_C_IsButtonHovered");
static_assert(sizeof(W_RoleItem_C_IsButtonHovered) == 0x000002, "Wrong size on W_RoleItem_C_IsButtonHovered");
static_assert(offsetof(W_RoleItem_C_IsButtonHovered, Is_Hovered) == 0x000000, "Member 'W_RoleItem_C_IsButtonHovered::Is_Hovered' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_IsButtonHovered, CallFunc_IsHovered_ReturnValue) == 0x000001, "Member 'W_RoleItem_C_IsButtonHovered::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.Close Sub Roles
// 0x0001 (0x0001 - 0x0000)
struct W_RoleItem_C_Close_Sub_Roles final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_Close_Sub_Roles) == 0x000001, "Wrong alignment on W_RoleItem_C_Close_Sub_Roles");
static_assert(sizeof(W_RoleItem_C_Close_Sub_Roles) == 0x000001, "Wrong size on W_RoleItem_C_Close_Sub_Roles");
static_assert(offsetof(W_RoleItem_C_Close_Sub_Roles, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_RoleItem_C_Close_Sub_Roles::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.GetRole
// 0x0020 (0x0020 - 0x0000)
struct W_RoleItem_C_GetRole final
{
public:
	int32                                         In_Index;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_Success;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48A0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRoleSettings_C*                   OutEntry;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SQRoleSettings_C*                   K2Node_DynamicCast_AsBP_SQRole_Settings;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_RoleItem_C_GetRole) == 0x000008, "Wrong alignment on W_RoleItem_C_GetRole");
static_assert(sizeof(W_RoleItem_C_GetRole) == 0x000020, "Wrong size on W_RoleItem_C_GetRole");
static_assert(offsetof(W_RoleItem_C_GetRole, In_Index) == 0x000000, "Member 'W_RoleItem_C_GetRole::In_Index' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRole, Out_Success) == 0x000004, "Member 'W_RoleItem_C_GetRole::Out_Success' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRole, OutEntry) == 0x000008, "Member 'W_RoleItem_C_GetRole::OutEntry' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRole, K2Node_DynamicCast_AsBP_SQRole_Settings) == 0x000010, "Member 'W_RoleItem_C_GetRole::K2Node_DynamicCast_AsBP_SQRole_Settings' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRole, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_RoleItem_C_GetRole::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetRole, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'W_RoleItem_C_GetRole::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_RoleItem.W_RoleItem_C.GetCountText
// 0x0208 (0x0208 - 0x0000)
struct W_RoleItem_C_GetCountText final
{
public:
	class FText                                   Out_CountText;                                     // 0x0000(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48A1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_OutDisplayName;            // 0x0020(0x0018)()
	class FText                                   CallFunc_GetDisplayName_OutDisplayName_1;          // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetCounts_Out_Used;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCounts_Out_Availability;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0118(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48A2[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0170(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0188(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x01F0(0x0018)()
};
static_assert(alignof(W_RoleItem_C_GetCountText) == 0x000008, "Wrong alignment on W_RoleItem_C_GetCountText");
static_assert(sizeof(W_RoleItem_C_GetCountText) == 0x000208, "Wrong size on W_RoleItem_C_GetCountText");
static_assert(offsetof(W_RoleItem_C_GetCountText, Out_CountText) == 0x000000, "Member 'W_RoleItem_C_GetCountText::Out_CountText' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, Temp_bool_Variable) == 0x000018, "Member 'W_RoleItem_C_GetCountText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, CallFunc_GetDisplayName_OutDisplayName) == 0x000020, "Member 'W_RoleItem_C_GetCountText::CallFunc_GetDisplayName_OutDisplayName' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, CallFunc_GetDisplayName_OutDisplayName_1) == 0x000038, "Member 'W_RoleItem_C_GetCountText::CallFunc_GetDisplayName_OutDisplayName_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'W_RoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'W_RoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, CallFunc_GetCounts_Out_Used) == 0x0000D0, "Member 'W_RoleItem_C_GetCountText::CallFunc_GetCounts_Out_Used' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, CallFunc_GetCounts_Out_Availability) == 0x0000D4, "Member 'W_RoleItem_C_GetCountText::CallFunc_GetCounts_Out_Availability' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'W_RoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000118, "Member 'W_RoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000158, "Member 'W_RoleItem_C_GetCountText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, K2Node_MakeArray_Array) == 0x000160, "Member 'W_RoleItem_C_GetCountText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, CallFunc_Format_ReturnValue) == 0x000170, "Member 'W_RoleItem_C_GetCountText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, K2Node_MakeStruct_FormatArgumentData_4) == 0x000188, "Member 'W_RoleItem_C_GetCountText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, K2Node_MakeArray_Array_1) == 0x0001C8, "Member 'W_RoleItem_C_GetCountText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, CallFunc_Format_ReturnValue_1) == 0x0001D8, "Member 'W_RoleItem_C_GetCountText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RoleItem_C_GetCountText, K2Node_Select_Default) == 0x0001F0, "Member 'W_RoleItem_C_GetCountText::K2Node_Select_Default' has a wrong offset!");

}


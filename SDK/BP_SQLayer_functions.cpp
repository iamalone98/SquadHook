#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQLayer

#include "Basic.hpp"

#include "BP_SQLayer_classes.hpp"
#include "BP_SQLayer_parameters.hpp"


namespace SDK
{

// Function BP_SQLayer.BP_SQLayer_C.GetOuterLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Out_Success                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBP_SQLevel_C*                    Param_OuterLevel                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SQLayer_C::GetOuterLevel(bool* Out_Success, class UBP_SQLevel_C** Param_OuterLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "GetOuterLevel");

	Params::BP_SQLayer_C_GetOuterLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_Success != nullptr)
		*Out_Success = Parms.Out_Success;

	if (Param_OuterLevel != nullptr)
		*Param_OuterLevel = Parms.Param_OuterLevel;
}


// Function BP_SQLayer.BP_SQLayer_C.GetGameModeVersion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             GMVer                                                  (Parm, OutParm)

void UBP_SQLayer_C::GetGameModeVersion(class FText* GMVer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "GetGameModeVersion");

	Params::BP_SQLayer_C_GetGameModeVersion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GMVer != nullptr)
		*GMVer = std::move(Parms.GMVer);
}


// Function BP_SQLayer.BP_SQLayer_C.TryGetLevelEntry
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSQLevelEntry                    LevelEntry                                             (Parm, OutParm, HasGetValueTypeHash)

void UBP_SQLayer_C::TryGetLevelEntry(bool* Success, struct FSQLevelEntry* LevelEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "TryGetLevelEntry");

	Params::BP_SQLayer_C_TryGetLevelEntry Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (LevelEntry != nullptr)
		*LevelEntry = std::move(Parms.LevelEntry);
}


// Function BP_SQLayer.BP_SQLayer_C.TryGetLayerEntry
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSQLayerEntry                    LayerEntry                                             (Parm, OutParm, HasGetValueTypeHash)

void UBP_SQLayer_C::TryGetLayerEntry(bool* Success, struct FSQLayerEntry* LayerEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "TryGetLayerEntry");

	Params::BP_SQLayer_C_TryGetLayerEntry Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (LayerEntry != nullptr)
		*LayerEntry = std::move(Parms.LayerEntry);
}


// Function BP_SQLayer.BP_SQLayer_C.TryGetGameModeEntry
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSQGameModeEntry                 GameModeEntry                                          (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SQLayer_C::TryGetGameModeEntry(bool* Success, struct FSQGameModeEntry* GameModeEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "TryGetGameModeEntry");

	Params::BP_SQLayer_C_TryGetGameModeEntry Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (GameModeEntry != nullptr)
		*GameModeEntry = std::move(Parms.GameModeEntry);
}


// Function BP_SQLayer.BP_SQLayer_C.TryGetDisplayName
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             OutDisplayName                                         (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQLayer_C::TryGetDisplayName(class FText* OutDisplayName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "TryGetDisplayName");

	Params::BP_SQLayer_C_TryGetDisplayName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDisplayName != nullptr)
		*OutDisplayName = std::move(Parms.OutDisplayName);

	return Parms.ReturnValue;
}


// Function BP_SQLayer.BP_SQLayer_C.TryGetAvailabilityModifierPct
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   InTeam                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQAvailability*                  InAvailability                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OutModifier                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQLayer_C::TryGetAvailabilityModifierPct(const int32 InTeam, const class USQAvailability* InAvailability, int32* OutModifier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "TryGetAvailabilityModifierPct");

	Params::BP_SQLayer_C_TryGetAvailabilityModifierPct Parms{};

	Parms.InTeam = InTeam;
	Parms.InAvailability = InAvailability;

	UObject::ProcessEvent(Func, &Parms);

	if (OutModifier != nullptr)
		*OutModifier = Parms.OutModifier;

	return Parms.ReturnValue;
}


// Function BP_SQLayer.BP_SQLayer_C.TryGetLayerStagingDuration
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        OutDuration                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQLayer_C::TryGetLayerStagingDuration(struct FTimespan* OutDuration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "TryGetLayerStagingDuration");

	Params::BP_SQLayer_C_TryGetLayerStagingDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDuration != nullptr)
		*OutDuration = std::move(Parms.OutDuration);

	return Parms.ReturnValue;
}


// Function BP_SQLayer.BP_SQLayer_C.CanVoteForFactionConcurrently
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQLayer_C::CanVoteForFactionConcurrently() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "CanVoteForFactionConcurrently");

	Params::BP_SQLayer_C_CanVoteForFactionConcurrently Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SQLayer.BP_SQLayer_C.GetFobRadiusTableRow
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FDataTableRowHandle        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NoDestructor)

const struct FDataTableRowHandle UBP_SQLayer_C::GetFobRadiusTableRow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "GetFobRadiusTableRow");

	Params::BP_SQLayer_C_GetFobRadiusTableRow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SQLayer.BP_SQLayer_C.TryGetGameModeName
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             OutGameMode                                            (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQLayer_C::TryGetGameModeName(class FText* OutGameMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "TryGetGameModeName");

	Params::BP_SQLayer_C_TryGetGameModeName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutGameMode != nullptr)
		*OutGameMode = std::move(Parms.OutGameMode);

	return Parms.ReturnValue;
}


// Function BP_SQLayer.BP_SQLayer_C.TryGetGameModeShortName
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             OutGameMode                                            (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SQLayer_C::TryGetGameModeShortName(class FText* OutGameMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "TryGetGameModeShortName");

	Params::BP_SQLayer_C_TryGetGameModeShortName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutGameMode != nullptr)
		*OutGameMode = std::move(Parms.OutGameMode);

	return Parms.ReturnValue;
}


// Function BP_SQLayer.BP_SQLayer_C.GetGameModeID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName UBP_SQLayer_C::GetGameModeID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "GetGameModeID");

	Params::BP_SQLayer_C_GetGameModeID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SQLayer.BP_SQLayer_C.GetLayerSize
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName UBP_SQLayer_C::GetLayerSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SQLayer_C", "GetLayerSize");

	Params::BP_SQLayer_C_GetLayerSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BaseSettingOption

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_BaseSettingOption.W_BaseSettingOption_C.OnRefresh__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_BaseSettingOption_C_OnRefresh__DelegateSignature final
{
public:
	class FName                                   SettingName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSettingOption_C_OnRefresh__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseSettingOption_C_OnRefresh__DelegateSignature");
static_assert(sizeof(W_BaseSettingOption_C_OnRefresh__DelegateSignature) == 0x000018, "Wrong size on W_BaseSettingOption_C_OnRefresh__DelegateSignature");
static_assert(offsetof(W_BaseSettingOption_C_OnRefresh__DelegateSignature, SettingName) == 0x000000, "Member 'W_BaseSettingOption_C_OnRefresh__DelegateSignature::SettingName' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_OnRefresh__DelegateSignature, Value) == 0x000008, "Member 'W_BaseSettingOption_C_OnRefresh__DelegateSignature::Value' has a wrong offset!");

// Function W_BaseSettingOption.W_BaseSettingOption_C.OnSet__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_BaseSettingOption_C_OnSet__DelegateSignature final
{
public:
	class FName                                   Setting_Name;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSettingOption_C_OnSet__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseSettingOption_C_OnSet__DelegateSignature");
static_assert(sizeof(W_BaseSettingOption_C_OnSet__DelegateSignature) == 0x000018, "Wrong size on W_BaseSettingOption_C_OnSet__DelegateSignature");
static_assert(offsetof(W_BaseSettingOption_C_OnSet__DelegateSignature, Setting_Name) == 0x000000, "Member 'W_BaseSettingOption_C_OnSet__DelegateSignature::Setting_Name' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_OnSet__DelegateSignature, Value) == 0x000008, "Member 'W_BaseSettingOption_C_OnSet__DelegateSignature::Value' has a wrong offset!");

// Function W_BaseSettingOption.W_BaseSettingOption_C.ExecuteUbergraph_W_BaseSettingOption
// 0x0024 (0x0024 - 0x0000)
struct W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName Setting_Name, const class FString& Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName SettingName, const class FString& Value)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption) == 0x000004, "Wrong alignment on W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption");
static_assert(sizeof(W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption) == 0x000024, "Wrong size on W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption");
static_assert(offsetof(W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption, EntryPoint) == 0x000000, "Member 'W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'W_BaseSettingOption_C_ExecuteUbergraph_W_BaseSettingOption::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function W_BaseSettingOption.W_BaseSettingOption_C.GetToolTipWidget
// 0x0010 (0x0010 - 0x0000)
struct W_BaseSettingOption_C_GetToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_CreateWidget_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSettingOption_C_GetToolTipWidget) == 0x000008, "Wrong alignment on W_BaseSettingOption_C_GetToolTipWidget");
static_assert(sizeof(W_BaseSettingOption_C_GetToolTipWidget) == 0x000010, "Wrong size on W_BaseSettingOption_C_GetToolTipWidget");
static_assert(offsetof(W_BaseSettingOption_C_GetToolTipWidget, ReturnValue) == 0x000000, "Member 'W_BaseSettingOption_C_GetToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_GetToolTipWidget, CallFunc_CreateWidget_ReturnValue) == 0x000008, "Member 'W_BaseSettingOption_C_GetToolTipWidget::CallFunc_CreateWidget_ReturnValue' has a wrong offset!");

// Function W_BaseSettingOption.W_BaseSettingOption_C.RefreshSettings
// 0x0020 (0x0020 - 0x0000)
struct W_BaseSettingOption_C_RefreshSettings final
{
public:
	class FName                                   SettingName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSettingOption_C_RefreshSettings) == 0x000008, "Wrong alignment on W_BaseSettingOption_C_RefreshSettings");
static_assert(sizeof(W_BaseSettingOption_C_RefreshSettings) == 0x000020, "Wrong size on W_BaseSettingOption_C_RefreshSettings");
static_assert(offsetof(W_BaseSettingOption_C_RefreshSettings, SettingName) == 0x000000, "Member 'W_BaseSettingOption_C_RefreshSettings::SettingName' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_RefreshSettings, Value) == 0x000008, "Member 'W_BaseSettingOption_C_RefreshSettings::Value' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_RefreshSettings, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000018, "Member 'W_BaseSettingOption_C_RefreshSettings::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");

// Function W_BaseSettingOption.W_BaseSettingOption_C.SetSettingValue
// 0x0018 (0x0018 - 0x0000)
struct W_BaseSettingOption_C_SetSettingValue final
{
public:
	class FName                                   Setting_Name;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseSettingOption_C_SetSettingValue) == 0x000008, "Wrong alignment on W_BaseSettingOption_C_SetSettingValue");
static_assert(sizeof(W_BaseSettingOption_C_SetSettingValue) == 0x000018, "Wrong size on W_BaseSettingOption_C_SetSettingValue");
static_assert(offsetof(W_BaseSettingOption_C_SetSettingValue, Setting_Name) == 0x000000, "Member 'W_BaseSettingOption_C_SetSettingValue::Setting_Name' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_SetSettingValue, Value) == 0x000008, "Member 'W_BaseSettingOption_C_SetSettingValue::Value' has a wrong offset!");

// Function W_BaseSettingOption.W_BaseSettingOption_C.CreateWidget
// 0x0030 (0x0030 - 0x0000)
struct W_BaseSettingOption_C_CreateWidget final
{
public:
	class UWidget*                                WidgetIn;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_Tooltip_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_BaseSettingOption_C_CreateWidget) == 0x000008, "Wrong alignment on W_BaseSettingOption_C_CreateWidget");
static_assert(sizeof(W_BaseSettingOption_C_CreateWidget) == 0x000030, "Wrong size on W_BaseSettingOption_C_CreateWidget");
static_assert(offsetof(W_BaseSettingOption_C_CreateWidget, WidgetIn) == 0x000000, "Member 'W_BaseSettingOption_C_CreateWidget::WidgetIn' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_CreateWidget, Color) == 0x000008, "Member 'W_BaseSettingOption_C_CreateWidget::Color' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_CreateWidget, ReturnValue) == 0x000018, "Member 'W_BaseSettingOption_C_CreateWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_CreateWidget, CallFunc_Create_ReturnValue) == 0x000020, "Member 'W_BaseSettingOption_C_CreateWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseSettingOption_C_CreateWidget, CallFunc_TextIsEmpty_ReturnValue) == 0x000028, "Member 'W_BaseSettingOption_C_CreateWidget::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

}


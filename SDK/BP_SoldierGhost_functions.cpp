#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SoldierGhost

#include "Basic.hpp"

#include "BP_SoldierGhost_classes.hpp"
#include "BP_SoldierGhost_parameters.hpp"


namespace SDK
{

// Function BP_SoldierGhost.BP_SoldierGhost_C.ExecuteUbergraph_BP_SoldierGhost
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SoldierGhost_C::ExecuteUbergraph_BP_SoldierGhost(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SoldierGhost_C", "ExecuteUbergraph_BP_SoldierGhost");

	Params::BP_SoldierGhost_C_ExecuteUbergraph_BP_SoldierGhost Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SoldierGhost.BP_SoldierGhost_C.AssetsLoaded
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     Classes                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_SoldierGhost_C::AssetsLoaded(const TArray<TSoftClassPtr<class UClass>>& Classes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SoldierGhost_C", "AssetsLoaded");

	Params::BP_SoldierGhost_C_AssetsLoaded Parms{};

	Parms.Classes = std::move(Classes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SoldierGhost.BP_SoldierGhost_C.Spawn
// (Event, Public, BlueprintEvent)

void ABP_SoldierGhost_C::Spawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SoldierGhost_C", "Spawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SoldierGhost.BP_SoldierGhost_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SoldierGhost_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SoldierGhost_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SoldierGhost.BP_SoldierGhost_C.GetInventoryClasses
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSQInventoryWeaponGroupData>Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<TSoftClassPtr<class UClass>>     Classes                                                (Parm, OutParm)

void ABP_SoldierGhost_C::GetInventoryClasses(TArray<struct FSQInventoryWeaponGroupData>& Inventory, TArray<TSoftClassPtr<class UClass>>* Classes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SoldierGhost_C", "GetInventoryClasses");

	Params::BP_SoldierGhost_C_GetInventoryClasses Parms{};

	Parms.Inventory = std::move(Inventory);

	UObject::ProcessEvent(Func, &Parms);

	Inventory = std::move(Parms.Inventory);

	if (Classes != nullptr)
		*Classes = std::move(Parms.Classes);
}

}


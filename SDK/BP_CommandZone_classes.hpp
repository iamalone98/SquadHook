#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CommandZone

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CommandZone.BP_CommandZone_C
// 0x0050 (0x0278 - 0x0228)
class ABP_CommandZone_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Collision;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Toggle_Commander_Actions;                      // 0x023C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461B[0x3];                                     // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Actions_Online_Message;                            // 0x0240(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Actions_Offline_Message;                           // 0x0258(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Role_Check;                                        // 0x0270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CommandZone(int32 EntryPoint);
	void Begin_Role_Checks();
	void BndEvt__Collision_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Commander_Changed(class ASQPlayerState* OldCommander, class ASQPlayerState* NewCommander);
	void Refresh_Commander_Actions_Allowed();
	void Bind_Commander_Changed();
	void ReceiveBeginPlay();
	void Set_Actions_Allowed(class ASQPlayerController* Target_PC, bool bNewActionsEnabled);
	void OnCommanderRevivedEvent_Event_0(class ASQPlayerState* CommanderPS);
	void UserConstructionScript();
	void Get_Overlapping_Commander(class ASQPlayerController** AsSQPlayer_Controller);
	void Compare_Teams(int32 B, bool* Same_Team);
	void Can_Allow_Actions(bool* Allow_Actions);
	void Leader_Role_Check();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CommandZone_C">();
	}
	static class ABP_CommandZone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CommandZone_C>();
	}
};
static_assert(alignof(ABP_CommandZone_C) == 0x000008, "Wrong alignment on ABP_CommandZone_C");
static_assert(sizeof(ABP_CommandZone_C) == 0x000278, "Wrong size on ABP_CommandZone_C");
static_assert(offsetof(ABP_CommandZone_C, UberGraphFrame) == 0x000228, "Member 'ABP_CommandZone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CommandZone_C, Collision) == 0x000230, "Member 'ABP_CommandZone_C::Collision' has a wrong offset!");
static_assert(offsetof(ABP_CommandZone_C, Radius) == 0x000238, "Member 'ABP_CommandZone_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_CommandZone_C, Can_Toggle_Commander_Actions) == 0x00023C, "Member 'ABP_CommandZone_C::Can_Toggle_Commander_Actions' has a wrong offset!");
static_assert(offsetof(ABP_CommandZone_C, Actions_Online_Message) == 0x000240, "Member 'ABP_CommandZone_C::Actions_Online_Message' has a wrong offset!");
static_assert(offsetof(ABP_CommandZone_C, Actions_Offline_Message) == 0x000258, "Member 'ABP_CommandZone_C::Actions_Offline_Message' has a wrong offset!");
static_assert(offsetof(ABP_CommandZone_C, Role_Check) == 0x000270, "Member 'ABP_CommandZone_C::Role_Check' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CaptureZoneMain

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CaptureZoneMain.BP_CaptureZoneMain_C.ExecuteUbergraph_BP_CaptureZoneMain
// 0x0008 (0x0008 - 0x0000)
struct BP_CaptureZoneMain_C_ExecuteUbergraph_BP_CaptureZoneMain final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PreviousTeam;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureZoneMain_C_ExecuteUbergraph_BP_CaptureZoneMain) == 0x000004, "Wrong alignment on BP_CaptureZoneMain_C_ExecuteUbergraph_BP_CaptureZoneMain");
static_assert(sizeof(BP_CaptureZoneMain_C_ExecuteUbergraph_BP_CaptureZoneMain) == 0x000008, "Wrong size on BP_CaptureZoneMain_C_ExecuteUbergraph_BP_CaptureZoneMain");
static_assert(offsetof(BP_CaptureZoneMain_C_ExecuteUbergraph_BP_CaptureZoneMain, EntryPoint) == 0x000000, "Member 'BP_CaptureZoneMain_C_ExecuteUbergraph_BP_CaptureZoneMain::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CaptureZoneMain_C_ExecuteUbergraph_BP_CaptureZoneMain, K2Node_Event_PreviousTeam) == 0x000004, "Member 'BP_CaptureZoneMain_C_ExecuteUbergraph_BP_CaptureZoneMain::K2Node_Event_PreviousTeam' has a wrong offset!");

// Function BP_CaptureZoneMain.BP_CaptureZoneMain_C.OnTeamChange
// 0x0004 (0x0004 - 0x0000)
struct BP_CaptureZoneMain_C_OnTeamChange final
{
public:
	int32                                         PreviousTeam;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureZoneMain_C_OnTeamChange) == 0x000004, "Wrong alignment on BP_CaptureZoneMain_C_OnTeamChange");
static_assert(sizeof(BP_CaptureZoneMain_C_OnTeamChange) == 0x000004, "Wrong size on BP_CaptureZoneMain_C_OnTeamChange");
static_assert(offsetof(BP_CaptureZoneMain_C_OnTeamChange, PreviousTeam) == 0x000000, "Member 'BP_CaptureZoneMain_C_OnTeamChange::PreviousTeam' has a wrong offset!");

// Function BP_CaptureZoneMain.BP_CaptureZoneMain_C.GetTeamId
// 0x0008 (0x0008 - 0x0000)
struct BP_CaptureZoneMain_C_GetTeamId final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CaptureZoneMain_C_GetTeamId) == 0x000004, "Wrong alignment on BP_CaptureZoneMain_C_GetTeamId");
static_assert(sizeof(BP_CaptureZoneMain_C_GetTeamId) == 0x000008, "Wrong size on BP_CaptureZoneMain_C_GetTeamId");
static_assert(offsetof(BP_CaptureZoneMain_C_GetTeamId, ReturnValue) == 0x000000, "Member 'BP_CaptureZoneMain_C_GetTeamId::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CaptureZoneMain_C_GetTeamId, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_CaptureZoneMain_C_GetTeamId::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

}


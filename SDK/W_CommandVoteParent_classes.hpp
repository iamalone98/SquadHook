#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CommandVoteParent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CommandVoteParent.W_CommandVoteParent_C
// 0x00A0 (0x0328 - 0x0288)
class UW_CommandVoteParent_C final : public USQCommanderVotingWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_0;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_Button_C*                     ButtonCommander;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             CommandVoteScrollBox;                              // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Grid_Votee;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_CommandVote;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_TimerText;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TimerBorder;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           TopPanel;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           Vote_Handle;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TimerDuration;                                     // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2094[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQCommanderState*                      Cache_Commander_State;                             // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    My_PC;                                             // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Vote;                                          // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2095[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         My_PS;                                             // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Commander_Name;                                    // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_W_CommandVoteParent(int32 EntryPoint);
	void Cache_Player_State();
	void Construct();
	void OnIsVotingAvailableChanged();
	void OnIsVoteInProgressChanged();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__ButtonCommander_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature(bool bSelected, class UMainMenu_Button_C* Button);
	void BPInit();
	class FText Get_TB_VoteActiveText_Text_0();
	void UpdateVisibilities();
	void Update_Appearance();
	void Get_Can_Use_Button(bool* Valid, class FText* Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CommandVoteParent_C">();
	}
	static class UW_CommandVoteParent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CommandVoteParent_C>();
	}
};
static_assert(alignof(UW_CommandVoteParent_C) == 0x000008, "Wrong alignment on UW_CommandVoteParent_C");
static_assert(sizeof(UW_CommandVoteParent_C) == 0x000328, "Wrong size on UW_CommandVoteParent_C");
static_assert(offsetof(UW_CommandVoteParent_C, UberGraphFrame) == 0x000288, "Member 'UW_CommandVoteParent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, Border_0) == 0x000290, "Member 'UW_CommandVoteParent_C::Border_0' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, ButtonCommander) == 0x000298, "Member 'UW_CommandVoteParent_C::ButtonCommander' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, CommandVoteScrollBox) == 0x0002A0, "Member 'UW_CommandVoteParent_C::CommandVoteScrollBox' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, Grid_Votee) == 0x0002A8, "Member 'UW_CommandVoteParent_C::Grid_Votee' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, Image_0) == 0x0002B0, "Member 'UW_CommandVoteParent_C::Image_0' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, Image_1) == 0x0002B8, "Member 'UW_CommandVoteParent_C::Image_1' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, TB_CommandVote) == 0x0002C0, "Member 'UW_CommandVoteParent_C::TB_CommandVote' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, TB_TimerText) == 0x0002C8, "Member 'UW_CommandVoteParent_C::TB_TimerText' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, TimerBorder) == 0x0002D0, "Member 'UW_CommandVoteParent_C::TimerBorder' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, TopPanel) == 0x0002D8, "Member 'UW_CommandVoteParent_C::TopPanel' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, Vote_Handle) == 0x0002E0, "Member 'UW_CommandVoteParent_C::Vote_Handle' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, TimerDuration) == 0x0002E8, "Member 'UW_CommandVoteParent_C::TimerDuration' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, Cache_Commander_State) == 0x0002F0, "Member 'UW_CommandVoteParent_C::Cache_Commander_State' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, My_PC) == 0x0002F8, "Member 'UW_CommandVoteParent_C::My_PC' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, Can_Vote) == 0x000300, "Member 'UW_CommandVoteParent_C::Can_Vote' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, My_PS) == 0x000308, "Member 'UW_CommandVoteParent_C::My_PS' has a wrong offset!");
static_assert(offsetof(UW_CommandVoteParent_C, Commander_Name) == 0x000310, "Member 'UW_CommandVoteParent_C::Commander_Name' has a wrong offset!");

}


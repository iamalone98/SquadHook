#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQVehicleSettings

#include "Basic.hpp"

#include "ESQBiome_structs.hpp"
#include "SQVehicleVersion_structs.hpp"
#include "SQVehicleEntry_structs.hpp"
#include "ESQVehicleTag_structs.hpp"


namespace SDK::Params
{

// Function BP_SQVehicleSettings.BP_SQVehicleSettings_C.TryGetVehicleWithBiome
// 0x00D0 (0x00D0 - 0x0000)
struct BP_SQVehicleSettings_C_TryGetVehicleWithBiome final
{
public:
	ESQBiome                                      Biome;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C30[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   OutVehicle;                                        // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C31[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           L_MatchingVehicles;                                // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C32[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSQVehicleVersion                      CallFunc_Array_Get_Item;                           // 0x0060(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C33[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C34[0x1];                                     // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C35[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome) == 0x000008, "Wrong alignment on BP_SQVehicleSettings_C_TryGetVehicleWithBiome");
static_assert(sizeof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome) == 0x0000D0, "Wrong size on BP_SQVehicleSettings_C_TryGetVehicleWithBiome");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, Biome) == 0x000000, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::Biome' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, OutVehicle) == 0x000008, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, ReturnValue) == 0x000030, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, L_MatchingVehicles) == 0x000038, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::L_MatchingVehicles' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000054, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_RandomInteger_ReturnValue) == 0x00005C, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00009C, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_Greater_IntInt_ReturnValue) == 0x00009D, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00009E, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_SelectInt_ReturnValue) == 0x0000A0, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithBiome, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithBiome::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_SQVehicleSettings.BP_SQVehicleSettings_C.GetVehicleEntry
// 0x00F0 (0x00F0 - 0x0000)
struct BP_SQVehicleSettings_C_GetVehicleEntry final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C36[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQVehicleEntry                        VehicleEntry;                                      // 0x0008(0x0070)(Parm, OutParm, HasGetValueTypeHash)
	struct FSQVehicleEntry                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQVehicleSettings_C_GetVehicleEntry) == 0x000008, "Wrong alignment on BP_SQVehicleSettings_C_GetVehicleEntry");
static_assert(sizeof(BP_SQVehicleSettings_C_GetVehicleEntry) == 0x0000F0, "Wrong size on BP_SQVehicleSettings_C_GetVehicleEntry");
static_assert(offsetof(BP_SQVehicleSettings_C_GetVehicleEntry, Success) == 0x000000, "Member 'BP_SQVehicleSettings_C_GetVehicleEntry::Success' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_GetVehicleEntry, VehicleEntry) == 0x000008, "Member 'BP_SQVehicleSettings_C_GetVehicleEntry::VehicleEntry' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_GetVehicleEntry, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'BP_SQVehicleSettings_C_GetVehicleEntry::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_GetVehicleEntry, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E8, "Member 'BP_SQVehicleSettings_C_GetVehicleEntry::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SQVehicleSettings.BP_SQVehicleSettings_C.TryGetVehicleWithLayer
// 0x0118 (0x0118 - 0x0000)
struct BP_SQVehicleSettings_C_TryGetVehicleWithLayer final
{
public:
	const class USQLayer*                         InLayer;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   OutVehicle;                                        // 0x0008(0x0028)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C37[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           L_MatchingVehicles;                                // 0x0038(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C38[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQLevel_C*                          K2Node_DynamicCast_AsBP_SQLevel;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C39[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3A[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQVehicleVersion                      CallFunc_Array_Get_Item;                           // 0x0068(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3B[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3C[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0028)(HasGetValueTypeHash)
	struct FSQVehicleVersion                      CallFunc_Array_Get_Item_2;                         // 0x00D8(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3D[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer) == 0x000008, "Wrong alignment on BP_SQVehicleSettings_C_TryGetVehicleWithLayer");
static_assert(sizeof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer) == 0x000118, "Wrong size on BP_SQVehicleSettings_C_TryGetVehicleWithLayer");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, InLayer) == 0x000000, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::InLayer' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, OutVehicle) == 0x000008, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::OutVehicle' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, ReturnValue) == 0x000030, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, L_MatchingVehicles) == 0x000038, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::L_MatchingVehicles' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, K2Node_DynamicCast_AsBP_SQLevel) == 0x000050, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::K2Node_DynamicCast_AsBP_SQLevel' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000098, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_RandomInteger_ReturnValue) == 0x0000A4, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_SelectInt_ReturnValue) == 0x0000AC, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Array_Get_Item_2) == 0x0000D8, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_Array_Add_ReturnValue) == 0x000110, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_TryGetVehicleWithLayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000114, "Member 'BP_SQVehicleSettings_C_TryGetVehicleWithLayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SQVehicleSettings.BP_SQVehicleSettings_C.HasTag
// 0x0003 (0x0003 - 0x0000)
struct BP_SQVehicleSettings_C_HasTag final
{
public:
	ESQVehicleTag                                 InTag;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_HasTag;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQVehicleSettings_C_HasTag) == 0x000001, "Wrong alignment on BP_SQVehicleSettings_C_HasTag");
static_assert(sizeof(BP_SQVehicleSettings_C_HasTag) == 0x000003, "Wrong size on BP_SQVehicleSettings_C_HasTag");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTag, InTag) == 0x000000, "Member 'BP_SQVehicleSettings_C_HasTag::InTag' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTag, Out_HasTag) == 0x000001, "Member 'BP_SQVehicleSettings_C_HasTag::Out_HasTag' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTag, CallFunc_Set_Contains_ReturnValue) == 0x000002, "Member 'BP_SQVehicleSettings_C_HasTag::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function BP_SQVehicleSettings.BP_SQVehicleSettings_C.HasTags
// 0x0030 (0x0030 - 0x0000)
struct BP_SQVehicleSettings_C_HasTags final
{
public:
	TArray<ESQVehicleTag>                         InTags;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InAll;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Out_HasTag;                                        // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Result;                                          // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3E[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQVehicleTag                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3F[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQVehicleSettings_C_HasTags) == 0x000008, "Wrong alignment on BP_SQVehicleSettings_C_HasTags");
static_assert(sizeof(BP_SQVehicleSettings_C_HasTags) == 0x000030, "Wrong size on BP_SQVehicleSettings_C_HasTags");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, InTags) == 0x000000, "Member 'BP_SQVehicleSettings_C_HasTags::InTags' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, InAll) == 0x000010, "Member 'BP_SQVehicleSettings_C_HasTags::InAll' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, Out_HasTag) == 0x000011, "Member 'BP_SQVehicleSettings_C_HasTags::Out_HasTag' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, L_Result) == 0x000012, "Member 'BP_SQVehicleSettings_C_HasTags::L_Result' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_SQVehicleSettings_C_HasTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_SQVehicleSettings_C_HasTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_SQVehicleSettings_C_HasTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SQVehicleSettings_C_HasTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BP_SQVehicleSettings_C_HasTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_SQVehicleSettings_C_HasTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_HasTags, CallFunc_Set_Contains_ReturnValue) == 0x000028, "Member 'BP_SQVehicleSettings_C_HasTags::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function BP_SQVehicleSettings.BP_SQVehicleSettings_C.ShouldCauseSieged
// 0x0010 (0x0010 - 0x0000)
struct BP_SQVehicleSettings_C_ShouldCauseSieged final
{
public:
	const class ASQGameSpawn*                     Spawn;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SQVehicleSettings_C_ShouldCauseSieged) == 0x000008, "Wrong alignment on BP_SQVehicleSettings_C_ShouldCauseSieged");
static_assert(sizeof(BP_SQVehicleSettings_C_ShouldCauseSieged) == 0x000010, "Wrong size on BP_SQVehicleSettings_C_ShouldCauseSieged");
static_assert(offsetof(BP_SQVehicleSettings_C_ShouldCauseSieged, Spawn) == 0x000000, "Member 'BP_SQVehicleSettings_C_ShouldCauseSieged::Spawn' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_ShouldCauseSieged, ReturnValue) == 0x000008, "Member 'BP_SQVehicleSettings_C_ShouldCauseSieged::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_ShouldCauseSieged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BP_SQVehicleSettings_C_ShouldCauseSieged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_ShouldCauseSieged, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'BP_SQVehicleSettings_C_ShouldCauseSieged::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_ShouldCauseSieged, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'BP_SQVehicleSettings_C_ShouldCauseSieged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SQVehicleSettings_C_ShouldCauseSieged, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_SQVehicleSettings_C_ShouldCauseSieged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}


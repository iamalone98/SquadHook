#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SQFactionSetup

#include "Basic.hpp"

#include "SQRoleGroupingStrategy_structs.hpp"
#include "ESQFactionSetupType_structs.hpp"
#include "ESQFactionSetupTag_structs.hpp"
#include "ESQLayerSize_structs.hpp"
#include "SQDeployableGroupingStrategy_structs.hpp"
#include "SQActionGroupingStrategy_structs.hpp"
#include "Squad_classes.hpp"
#include "ESQIntelligence_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SQFactionSetup.BP_SQFactionSetup_C
// 0x0108 (0x0218 - 0x0110)
class UBP_SQFactionSetup_C final : public USQFactionSetup
{
public:
	ESQFactionSetupType                           Type;                                              // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CDF[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<ESQFactionSetupTag>                      Tags;                                              // 0x0118(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                          CanUseCommanderActionNearVehicle;                  // 0x0168(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasBuddyRally;                                     // 0x0169(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CE0[0x6];                                     // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSQRoleGroupingStrategy>        RoleGroupingStrategies;                            // 0x0170(0x0010)(Edit, BlueprintVisible, Transient, AdvancedDisplay)
	TArray<struct FSQRoleGroupingStrategy>        RoleCategories;                                    // 0x0180(0x0010)(Edit, BlueprintVisible, Transient, AdvancedDisplay)
	TArray<struct FSQRoleGroupingStrategy>        RoleGroupingTags;                                  // 0x0190(0x0010)(Edit, BlueprintVisible, Transient, AdvancedDisplay)
	TArray<struct FSQDeployableGroupingStrategy>  DeployableGroupingStrategies;                      // 0x01A0(0x0010)(Edit, BlueprintVisible, Transient, AdvancedDisplay)
	TArray<struct FSQActionGroupingStrategy>      ActionGroupingStrategies;                          // 0x01B0(0x0010)(Edit, BlueprintVisible, Transient, AdvancedDisplay)
	TSet<ESQLayerSize>                            MapSizes;                                          // 0x01C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Intelligence_On_Enemy;                             // 0x0210(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void TryGetRoleGroupingStrategies(bool* Success, TArray<struct FSQRoleGroupingStrategy>* Param_RoleGroupingStrategies);
	void TryGetRoleCategories(bool* OutSuccess, TArray<struct FSQRoleGroupingStrategy>* OutRoleCategories);
	void TryGetRoleGroupingTags(bool* OutSuccess, TArray<struct FSQRoleGroupingStrategy>* OutGroupTags);
	void TryGetDeployableGroupingStrategies(bool* Success, TArray<struct FSQDeployableGroupingStrategy>* Grouping_Strategies);
	void TryGetActionGroupingStrategies(bool* Success, TArray<struct FSQActionGroupingStrategy>* Grouping_Strategies);
	void HasIntel(ESQIntelligence In_Intel, bool* Out_Has_Intel);
	void GetUnitTypeIcon(TSoftObjectPtr<class UTexture2D>* Icon, class FText* TypeName);

	void TryGetFactionSetupEntry(bool* Success, struct FSQFactionSetupEntry* FactionSetupEntry) const;
	void TryGetFactionEntry(bool* Success, struct FSQFactionEntry* FactionEntry) const;
	void GetOuterFaction(bool* Out_Success, class UBP_SQFaction_C** Param_OuterFaction) const;
	void GetUnitSymbol(TSoftObjectPtr<class UTexture2D>* Out_Symbol) const;
	bool CanPlayAgainst(const class USQFactionSetup* OtherFaction) const;
	class FName GetFactionTypeName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SQFactionSetup_C">();
	}
	static class UBP_SQFactionSetup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SQFactionSetup_C>();
	}
};
static_assert(alignof(UBP_SQFactionSetup_C) == 0x000008, "Wrong alignment on UBP_SQFactionSetup_C");
static_assert(sizeof(UBP_SQFactionSetup_C) == 0x000218, "Wrong size on UBP_SQFactionSetup_C");
static_assert(offsetof(UBP_SQFactionSetup_C, Type) == 0x000110, "Member 'UBP_SQFactionSetup_C::Type' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, Tags) == 0x000118, "Member 'UBP_SQFactionSetup_C::Tags' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, CanUseCommanderActionNearVehicle) == 0x000168, "Member 'UBP_SQFactionSetup_C::CanUseCommanderActionNearVehicle' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, HasBuddyRally) == 0x000169, "Member 'UBP_SQFactionSetup_C::HasBuddyRally' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, RoleGroupingStrategies) == 0x000170, "Member 'UBP_SQFactionSetup_C::RoleGroupingStrategies' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, RoleCategories) == 0x000180, "Member 'UBP_SQFactionSetup_C::RoleCategories' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, RoleGroupingTags) == 0x000190, "Member 'UBP_SQFactionSetup_C::RoleGroupingTags' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, DeployableGroupingStrategies) == 0x0001A0, "Member 'UBP_SQFactionSetup_C::DeployableGroupingStrategies' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, ActionGroupingStrategies) == 0x0001B0, "Member 'UBP_SQFactionSetup_C::ActionGroupingStrategies' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, MapSizes) == 0x0001C0, "Member 'UBP_SQFactionSetup_C::MapSizes' has a wrong offset!");
static_assert(offsetof(UBP_SQFactionSetup_C, Intelligence_On_Enemy) == 0x000210, "Member 'UBP_SQFactionSetup_C::Intelligence_On_Enemy' has a wrong offset!");

}


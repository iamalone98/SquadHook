#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetSpawnPoint

#include "Basic.hpp"

#include "BP_MapWidgetSpawnPoint_classes.hpp"
#include "BP_MapWidgetSpawnPoint_parameters.hpp"


namespace SDK
{

// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.ExecuteUbergraph_BP_MapWidgetSpawnPoint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetSpawnPoint_C::ExecuteUbergraph_BP_MapWidgetSpawnPoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "ExecuteUbergraph_BP_MapWidgetSpawnPoint");

	Params::BP_MapWidgetSpawnPoint_C_ExecuteUbergraph_BP_MapWidgetSpawnPoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnActivatedTimeStampChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::OnActivatedTimeStampChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "OnActivatedTimeStampChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnSpawningEnabledChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::OnSpawningEnabledChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "OnSpawningEnabledChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnSiegedChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::OnSiegedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "OnSiegedChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnScaleChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   UniformScale                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetSpawnPoint_C::OnScaleChanged(float UniformScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "OnScaleChanged");

	Params::BP_MapWidgetSpawnPoint_C_OnScaleChanged Parms{};

	Parms.UniformScale = UniformScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.Check Animation
// (BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::Check_Animation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "Check Animation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnSpawnPointTypeChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::OnSpawnPointTypeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "OnSpawnPointTypeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnIsSelectedChanged
// (Event, Protected, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::OnIsSelectedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "OnIsSelectedChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.Update Color
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::Update_Color()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "Update Color");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.Update Spawns Visibility
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::Update_Spawns_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "Update Spawns Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_MapWidgetSpawnPoint_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "OnMouseButtonDown");

	Params::BP_MapWidgetSpawnPoint_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_MapWidgetSpawnPoint_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "OnMouseButtonUp");

	Params::BP_MapWidgetSpawnPoint_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.GetRemainingActivatingTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   RemainingTime                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MapWidgetSpawnPoint_C::GetRemainingActivatingTime(float* RemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "GetRemainingActivatingTime");

	Params::BP_MapWidgetSpawnPoint_C_GetRemainingActivatingTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingTime != nullptr)
		*RemainingTime = Parms.RemainingTime;
}


// Function BP_MapWidgetSpawnPoint.BP_MapWidgetSpawnPoint_C.UpdateProgress
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MapWidgetSpawnPoint_C::UpdateProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapWidgetSpawnPoint_C", "UpdateProgress");

	UObject::ProcessEvent(Func, nullptr);
}

}


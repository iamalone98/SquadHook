#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Generic_Helicopter

#include "Basic.hpp"

#include "BP_Generic_Helicopter_classes.hpp"
#include "BP_Generic_Helicopter_parameters.hpp"


namespace SDK
{

// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ExecuteUbergraph_BP_Generic_Helicopter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::ExecuteUbergraph_BP_Generic_Helicopter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ExecuteUbergraph_BP_Generic_Helicopter");

	Params::BP_Generic_Helicopter_C_ExecuteUbergraph_BP_Generic_Helicopter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.EndWaterDamage
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::EndWaterDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "EndWaterDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.BndEvt__MainBladesCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Generic_Helicopter_C::BndEvt__MainBladesCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "BndEvt__MainBladesCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Generic_Helicopter_C_BndEvt__MainBladesCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.BndEvt__TailBladesCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Generic_Helicopter_C::BndEvt__TailBladesCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "BndEvt__TailBladesCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_Generic_Helicopter_C_BndEvt__TailBladesCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.StartWaterDamage
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::StartWaterDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "StartWaterDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ApplyWaterDamage
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::ApplyWaterDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ApplyWaterDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Optimize Sender
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::Optimize_Sender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Optimize Sender");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.UpdateFreeLookSetting
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::UpdateFreeLookSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "UpdateFreeLookSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.OnFDMImpact
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   TimeSlice                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          MoveDelta                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::OnFDMImpact(const struct FHitResult& HitResult, float TimeSlice, const struct FVector& MoveDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "OnFDMImpact");

	Params::BP_Generic_Helicopter_C_OnFDMImpact Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.TimeSlice = TimeSlice;
	Parms.MoveDelta = std::move(MoveDelta);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Set Landing Camera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::Set_Landing_Camera(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Set Landing Camera");

	Params::BP_Generic_Helicopter_C_Set_Landing_Camera Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Evaluate Warning
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::Evaluate_Warning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Evaluate Warning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.On Out of Bounds
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::On_Out_of_Bounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "On Out of Bounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.On Entered Bounds
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::On_Entered_Bounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "On Entered Bounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Stop Warning Anim
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::Stop_Warning_Anim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Stop Warning Anim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Start Warning Anim
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::Start_Warning_Anim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Start Warning Anim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_Generic_Helicopter_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Warning Light Anim
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::Warning_Light_Anim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Warning Light Anim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.LeftVehicle
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*                       Soldier                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQVehicleSeatComponent*          PreviousSeat                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::LeftVehicle(class ASQSoldier* Soldier, class USQVehicleSeatComponent* PreviousSeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "LeftVehicle");

	Params::BP_Generic_Helicopter_C_LeftVehicle Parms{};

	Parms.Soldier = Soldier;
	Parms.PreviousSeat = PreviousSeat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Toggle Landing Camera
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::Toggle_Landing_Camera(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Toggle Landing Camera");

	Params::BP_Generic_Helicopter_C_Toggle_Landing_Camera Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.OnPhysicsReplicated
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::OnPhysicsReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "OnPhysicsReplicated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.SwitchedSeat
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*                       Soldier                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQVehicleSeatComponent*          PreviousSeat                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQVehicleSeatComponent*          NewSeat                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::SwitchedSeat(class ASQSoldier* Soldier, class USQVehicleSeatComponent* PreviousSeat, class USQVehicleSeatComponent* NewSeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "SwitchedSeat");

	Params::BP_Generic_Helicopter_C_SwitchedSeat Parms{};

	Parms.Soldier = Soldier;
	Parms.PreviousSeat = PreviousSeat;
	Parms.NewSeat = NewSeat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.EnteredVehicle
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*                       Soldier                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USQVehicleSeatComponent*          NewSeat                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::EnteredVehicle(class ASQSoldier* Soldier, class USQVehicleSeatComponent* NewSeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "EnteredVehicle");

	Params::BP_Generic_Helicopter_C_EnteredVehicle Parms{};

	Parms.Soldier = Soldier;
	Parms.NewSeat = NewSeat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.TickGroundEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::TickGroundEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "TickGroundEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_VehicleZoom_K2Node_InputAxisEvent_8
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_VehicleZoom_K2Node_InputAxisEvent_8(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_VehicleZoom_K2Node_InputAxisEvent_8");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_VehicleZoom_K2Node_InputAxisEvent_8 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.BndEvt__VehicleMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_Generic_Helicopter_C::BndEvt__VehicleMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "BndEvt__VehicleMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_Generic_Helicopter_C_BndEvt__VehicleMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.OnEngineActive
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::OnEngineActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "OnEngineActive");

	Params::BP_Generic_Helicopter_C_OnEngineActive Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.CheckIfCanLandVehicle
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::CheckIfCanLandVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "CheckIfCanLandVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.BeginPlay_Landing
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::BeginPlay_Landing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "BeginPlay_Landing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ReceiveTick");

	Params::BP_Generic_Helicopter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.TurnOnPhysics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IgnoreLandingCheck                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          NewLinearVelocity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewAngularVelocity                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::TurnOnPhysics(bool IgnoreLandingCheck, const struct FVector& NewLinearVelocity, const struct FVector& NewAngularVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "TurnOnPhysics");

	Params::BP_Generic_Helicopter_C_TurnOnPhysics Parms{};

	Parms.IgnoreLandingCheck = IgnoreLandingCheck;
	Parms.NewLinearVelocity = std::move(NewLinearVelocity);
	Parms.NewAngularVelocity = std::move(NewAngularVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.MC_VehicleUnpossessed
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::MC_VehicleUnpossessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "MC_VehicleUnpossessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ReceiveUnpossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ReceiveUnpossessed");

	Params::BP_Generic_Helicopter_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ROC_VehiclePosessed
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::ROC_VehiclePosessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ROC_VehiclePosessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ReceivePossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ReceivePossessed");

	Params::BP_Generic_Helicopter_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Generic_Helicopter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_13
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_13(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_13");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_13 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_7
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_Turn_K2Node_InputAxisEvent_7(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_Turn_K2Node_InputAxisEvent_7");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_7 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_HelicopterRollKey_K2Node_InputAxisEvent_5
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_HelicopterRollKey_K2Node_InputAxisEvent_5(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_HelicopterRollKey_K2Node_InputAxisEvent_5");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_HelicopterRollKey_K2Node_InputAxisEvent_5 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_Helicopter_Look_Right_Left_K2Node_InputAxisEvent_4
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_Helicopter_Look_Right_Left_K2Node_InputAxisEvent_4(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_Helicopter_Look_Right_Left_K2Node_InputAxisEvent_4");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_Helicopter_Look_Right_Left_K2Node_InputAxisEvent_4 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_Helicopter_Look_Up_Down_K2Node_InputAxisEvent_2
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_Helicopter_Look_Up_Down_K2Node_InputAxisEvent_2(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_Helicopter_Look_Up_Down_K2Node_InputAxisEvent_2");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_Helicopter_Look_Up_Down_K2Node_InputAxisEvent_2 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_HelicopterPitchKey_K2Node_InputAxisEvent_6
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_HelicopterPitchKey_K2Node_InputAxisEvent_6(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_HelicopterPitchKey_K2Node_InputAxisEvent_6");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_HelicopterPitchKey_K2Node_InputAxisEvent_6 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_HelicopterCyclic_Yaw_K2Node_InputAxisEvent_11
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_HelicopterCyclic_Yaw_K2Node_InputAxisEvent_11(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_HelicopterCyclic_Yaw_K2Node_InputAxisEvent_11");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_HelicopterCyclic_Yaw_K2Node_InputAxisEvent_11 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_HelicopterCyclic_Roll_K2Node_InputAxisEvent_10
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_HelicopterCyclic_Roll_K2Node_InputAxisEvent_10(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_HelicopterCyclic_Roll_K2Node_InputAxisEvent_10");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_HelicopterCyclic_Roll_K2Node_InputAxisEvent_10 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_HelicopterCyclic_Pitch_K2Node_InputAxisEvent_9
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_HelicopterCyclic_Pitch_K2Node_InputAxisEvent_9(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_HelicopterCyclic_Pitch_K2Node_InputAxisEvent_9");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_HelicopterCyclic_Pitch_K2Node_InputAxisEvent_9 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_Helicopter_Collective_K2Node_InputAxisEvent_8
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_Helicopter_Collective_K2Node_InputAxisEvent_8(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_Helicopter_Collective_K2Node_InputAxisEvent_8");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_Helicopter_Collective_K2Node_InputAxisEvent_8 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.HandleInput
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeRatio                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::HandleInput(float DeltaTimeRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "HandleInput");

	Params::BP_Generic_Helicopter_C_HandleInput Parms{};

	Parms.DeltaTimeRatio = DeltaTimeRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_MoveElevator_K2Node_InputAxisEvent_3
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_MoveElevator_K2Node_InputAxisEvent_3(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_MoveElevator_K2Node_InputAxisEvent_3");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_MoveElevator_K2Node_InputAxisEvent_3 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_MoveAileron_K2Node_InputAxisEvent_2
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_MoveAileron_K2Node_InputAxisEvent_2(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_MoveAileron_K2Node_InputAxisEvent_2");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_MoveAileron_K2Node_InputAxisEvent_2 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_HelicopterRight_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_HelicopterRight_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_HelicopterRight_K2Node_InputAxisEvent_1");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_HelicopterRight_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpAxisEvt_HelicopterUp_K2Node_InputAxisEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpAxisEvt_HelicopterUp_K2Node_InputAxisEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpAxisEvt_HelicopterUp_K2Node_InputAxisEvent_0");

	Params::BP_Generic_Helicopter_C_InpAxisEvt_HelicopterUp_K2Node_InputAxisEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.HandleInput_Pitch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::HandleInput_Pitch(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "HandleInput_Pitch");

	Params::BP_Generic_Helicopter_C_HandleInput_Pitch Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.HandleInput_Roll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::HandleInput_Roll(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "HandleInput_Roll");

	Params::BP_Generic_Helicopter_C_HandleInput_Roll Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.HandleInput_Yaw
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::HandleInput_Yaw(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "HandleInput_Yaw");

	Params::BP_Generic_Helicopter_C_HandleInput_Yaw Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Acceleration_ModifySensitivity
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::Acceleration_ModifySensitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Acceleration_ModifySensitivity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.HandleInput_Acceleration
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AxisInput                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::HandleInput_Acceleration(float AxisInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "HandleInput_Acceleration");

	Params::BP_Generic_Helicopter_C_HandleInput_Acceleration Parms{};

	Parms.AxisInput = AxisInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ROS_UpdateLandingState
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLanded_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::ROS_UpdateLandingState(bool IsLanded_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ROS_UpdateLandingState");

	Params::BP_Generic_Helicopter_C_ROS_UpdateLandingState Parms{};

	Parms.IsLanded_ = IsLanded_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.StartCheckLiftOff
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::StartCheckLiftOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "StartCheckLiftOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.CheckLiftOff
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::CheckLiftOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "CheckLiftOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.MC_SetLandingState
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewIsLandedState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::MC_SetLandingState(bool NewIsLandedState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "MC_SetLandingState");

	Params::BP_Generic_Helicopter_C_MC_SetLandingState Parms{};

	Parms.NewIsLandedState = NewIsLandedState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.LandVehicle
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::LandVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "LandVehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_0");

	Params::BP_Generic_Helicopter_C_InpActEvt_VehicleToggleCamera_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_PickupConstruct_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_PickupConstruct_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_PickupConstruct_K2Node_InputActionEvent_1");

	Params::BP_Generic_Helicopter_C_InpActEvt_PickupConstruct_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_PickupConstruct_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_PickupConstruct_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_PickupConstruct_K2Node_InputActionEvent_2");

	Params::BP_Generic_Helicopter_C_InpActEvt_PickupConstruct_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_PickupAmmo_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_PickupAmmo_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_PickupAmmo_K2Node_InputActionEvent_3");

	Params::BP_Generic_Helicopter_C_InpActEvt_PickupAmmo_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_PickupAmmo_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_PickupAmmo_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_PickupAmmo_K2Node_InputActionEvent_4");

	Params::BP_Generic_Helicopter_C_InpActEvt_PickupAmmo_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_DropConstruct_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_DropConstruct_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_DropConstruct_K2Node_InputActionEvent_5");

	Params::BP_Generic_Helicopter_C_InpActEvt_DropConstruct_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_DropConstruct_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_DropConstruct_K2Node_InputActionEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_DropConstruct_K2Node_InputActionEvent_6");

	Params::BP_Generic_Helicopter_C_InpActEvt_DropConstruct_K2Node_InputActionEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_DropAmmo_K2Node_InputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_DropAmmo_K2Node_InputActionEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_DropAmmo_K2Node_InputActionEvent_7");

	Params::BP_Generic_Helicopter_C_InpActEvt_DropAmmo_K2Node_InputActionEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_DropAmmo_K2Node_InputActionEvent_8
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_DropAmmo_K2Node_InputActionEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_DropAmmo_K2Node_InputActionEvent_8");

	Params::BP_Generic_Helicopter_C_InpActEvt_DropAmmo_K2Node_InputActionEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.InpActEvt_Helicopter_Recenter_View_K2Node_InputActionEvent_9
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::InpActEvt_Helicopter_Recenter_View_K2Node_InputActionEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "InpActEvt_Helicopter_Recenter_View_K2Node_InputActionEvent_9");

	Params::BP_Generic_Helicopter_C_InpActEvt_Helicopter_Recenter_View_K2Node_InputActionEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Warning Light Animation__LightOn__EventFunc
// (BlueprintEvent)

void ABP_Generic_Helicopter_C::Warning_Light_Animation__LightOn__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Warning Light Animation__LightOn__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Warning Light Animation__LightOff__EventFunc
// (BlueprintEvent)

void ABP_Generic_Helicopter_C::Warning_Light_Animation__LightOff__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Warning Light Animation__LightOff__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Warning Light Animation__UpdateFunc
// (BlueprintEvent)

void ABP_Generic_Helicopter_C::Warning_Light_Animation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Warning Light Animation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Warning Light Animation__FinishedFunc
// (BlueprintEvent)

void ABP_Generic_Helicopter_C::Warning_Light_Animation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Warning Light Animation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Timeline_2__UpdateFunc
// (BlueprintEvent)

void ABP_Generic_Helicopter_C::Timeline_2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Timeline_2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Timeline_2__FinishedFunc
// (BlueprintEvent)

void ABP_Generic_Helicopter_C::Timeline_2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Timeline_2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.AddAcceleration
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::AddAcceleration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "AddAcceleration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.CalcCustomVelocity
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::CalcCustomVelocity(struct FVector* Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "CalcCustomVelocity");

	Params::BP_Generic_Helicopter_C_CalcCustomVelocity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.CanLand
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanLand_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::CanLand(bool* CanLand_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "CanLand");

	Params::BP_Generic_Helicopter_C_CanLand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanLand_ != nullptr)
		*CanLand_ = Parms.CanLand_;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetPitchNormalized
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::GetPitchNormalized(float* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetPitchNormalized");

	Params::BP_Generic_Helicopter_C_GetPitchNormalized Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetRollNormalized
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::GetRollNormalized(float* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetRollNormalized");

	Params::BP_Generic_Helicopter_C_GetRollNormalized Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetVelocityLength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::GetVelocityLength(float* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetVelocityLength");

	Params::BP_Generic_Helicopter_C_GetVelocityLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.CalcYawResistances
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::CalcYawResistances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "CalcYawResistances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.CalcBrakebyYaw
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::CalcBrakebyYaw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "CalcBrakebyYaw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.AddYaw
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Yaw                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::AddYaw(float Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "AddYaw");

	Params::BP_Generic_Helicopter_C_AddYaw Parms{};

	Parms.Yaw = Yaw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.AddPitch
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::AddPitch(float Pitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "AddPitch");

	Params::BP_Generic_Helicopter_C_AddPitch Parms{};

	Parms.Pitch = Pitch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.AddRoll
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Roll_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::AddRoll(float Roll_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "AddRoll");

	Params::BP_Generic_Helicopter_C_AddRoll Parms{};

	Parms.Roll_ = Roll_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.DoPushAndBounce
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::DoPushAndBounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "DoPushAndBounce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.DoRollToYawTransfer
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::DoRollToYawTransfer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "DoRollToYawTransfer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetGradualRotationIncrement
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Roll                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Pitch                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::GetGradualRotationIncrement(float* Roll, float* Pitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetGradualRotationIncrement");

	Params::BP_Generic_Helicopter_C_GetGradualRotationIncrement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Roll != nullptr)
		*Roll = Parms.Roll;

	if (Pitch != nullptr)
		*Pitch = Parms.Pitch;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.PolishRollInput
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::PolishRollInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "PolishRollInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetDistanceFromTheGround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TraceSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    GotDistance                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::GetDistanceFromTheGround(float TraceSize, float* Distance, bool* GotDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetDistanceFromTheGround");

	Params::BP_Generic_Helicopter_C_GetDistanceFromTheGround Parms{};

	Parms.TraceSize = TraceSize;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	if (GotDistance != nullptr)
		*GotDistance = Parms.GotDistance;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.PolishPitchInput
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::PolishPitchInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "PolishPitchInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.EnablePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::EnablePhysics(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "EnablePhysics");

	Params::BP_Generic_Helicopter_C_EnablePhysics Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ResetState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::ResetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ResetState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.ResetMovementState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::ResetMovementState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "ResetMovementState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.SetGroundEffect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::SetGroundEffect(float* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "SetGroundEffect");

	Params::BP_Generic_Helicopter_C_SetGroundEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.DrawDebug
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Draw                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::DrawDebug(bool Draw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "DrawDebug");

	Params::BP_Generic_Helicopter_C_DrawDebug Parms{};

	Parms.Draw = Draw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetRotationDiff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::GetRotationDiff(struct FRotator* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetRotationDiff");

	Params::BP_Generic_Helicopter_C_GetRotationDiff Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.DebugVariablesMap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, class FString>      Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FColor                           Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::DebugVariablesMap(const TMap<class FString, class FString>& Map, const struct FColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "DebugVariablesMap");

	Params::BP_Generic_Helicopter_C_DebugVariablesMap Parms{};

	Parms.Map = std::move(Map);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetThrustPower
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Thrust                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::GetThrustPower(float* Thrust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetThrustPower");

	Params::BP_Generic_Helicopter_C_GetThrustPower Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Thrust != nullptr)
		*Thrust = Parms.Thrust;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.PilotZoom
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::PilotZoom(float InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "PilotZoom");

	Params::BP_Generic_Helicopter_C_PilotZoom Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.DoStabilizers
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::DoStabilizers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "DoStabilizers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.CheckPhysics
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::CheckPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "CheckPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.DrawDebugLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::DrawDebugLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "DrawDebugLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Manage Landing Camera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::Manage_Landing_Camera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Manage Landing Camera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.DebugVectorToString
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Digits                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           String                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::DebugVectorToString(const struct FVector& Vector, int32 Digits, class FString* String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "DebugVectorToString");

	Params::BP_Generic_Helicopter_C_DebugVectorToString Parms{};

	Parms.Vector = std::move(Vector);
	Parms.Digits = Digits;

	UObject::ProcessEvent(Func, &Parms);

	if (String != nullptr)
		*String = std::move(Parms.String);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.DoRotationFromRoll
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::DoRotationFromRoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "DoRotationFromRoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.OnRep_Warning On
// (BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::OnRep_Warning_On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "OnRep_Warning On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.DoRotors
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::DoRotors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "DoRotors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Set UI Enabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable_UI                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::Set_UI_Enabled(bool Enable_UI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Set UI Enabled");

	Params::BP_Generic_Helicopter_C_Set_UI_Enabled Parms{};

	Parms.Enable_UI = Enable_UI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetVisualCollective
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Collectives                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::GetVisualCollective(float* Collectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetVisualCollective");

	Params::BP_Generic_Helicopter_C_GetVisualCollective Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Collectives != nullptr)
		*Collectives = Parms.Collectives;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.HAT Look To
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Generic_Helicopter_C::HAT_Look_To()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "HAT Look To");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetKnots
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Knots                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::GetKnots(float* Knots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetKnots");

	Params::BP_Generic_Helicopter_C_GetKnots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Knots != nullptr)
		*Knots = Parms.Knots;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Get UI Tint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::Get_UI_Tint(struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Get UI Tint");

	Params::BP_Generic_Helicopter_C_Get_UI_Tint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.Is Using Landing Camera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Using_Landing_Camera                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Generic_Helicopter_C::Is_Using_Landing_Camera(bool* Using_Landing_Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "Is Using Landing Camera");

	Params::BP_Generic_Helicopter_C_Is_Using_Landing_Camera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Using_Landing_Camera != nullptr)
		*Using_Landing_Camera = Parms.Using_Landing_Camera;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetMaxRPM
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Generic_Helicopter_C::GetMaxRPM() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetMaxRPM");

	Params::BP_Generic_Helicopter_C_GetMaxRPM Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.IsLanded
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Generic_Helicopter_C::IsLanded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "IsLanded");

	Params::BP_Generic_Helicopter_C_IsLanded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetEngineThrust
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   EngineThrust                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::GetEngineThrust(float* EngineThrust) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetEngineThrust");

	Params::BP_Generic_Helicopter_C_GetEngineThrust Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EngineThrust != nullptr)
		*EngineThrust = Parms.EngineThrust;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetTailRotorThrust
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_Generic_Helicopter_C::GetTailRotorThrust() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetTailRotorThrust");

	Params::BP_Generic_Helicopter_C_GetTailRotorThrust Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetMainRotorThrust
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_Generic_Helicopter_C::GetMainRotorThrust() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetMainRotorThrust");

	Params::BP_Generic_Helicopter_C_GetMainRotorThrust Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetThrottle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_Generic_Helicopter_C::GetThrottle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetThrottle");

	Params::BP_Generic_Helicopter_C_GetThrottle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Generic_Helicopter.BP_Generic_Helicopter_C.GetRotorEfficiency
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Efficiency                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Generic_Helicopter_C::GetRotorEfficiency(float* Efficiency) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Generic_Helicopter_C", "GetRotorEfficiency");

	Params::BP_Generic_Helicopter_C_GetRotorEfficiency Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Efficiency != nullptr)
		*Efficiency = Parms.Efficiency;
}

}


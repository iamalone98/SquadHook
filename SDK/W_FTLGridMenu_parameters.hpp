#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FTLGridMenu

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_FTLGridMenu.W_FTLGridMenu_C.ExecuteUbergraph_W_FTLGridMenu
// 0x0100 (0x0100 - 0x0000)
struct W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_In_Geometry;                          // 0x0004(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408E[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_In_Mouse_Event;                       // 0x0040(0x0070)()
	struct FVector                                K2Node_Event_Zero_Based_World_Location;            // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MapMarkersEnabledDefined_ReturnValue;     // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408F[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4090[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State_1;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4091[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue_1;           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu) == 0x000008, "Wrong alignment on W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu");
static_assert(sizeof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu) == 0x000100, "Wrong size on W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, EntryPoint) == 0x000000, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, K2Node_Event_In_Geometry) == 0x000004, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::K2Node_Event_In_Geometry' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, K2Node_Event_In_Mouse_Event) == 0x000040, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::K2Node_Event_In_Mouse_Event' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, K2Node_Event_Zero_Based_World_Location) == 0x0000B0, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::K2Node_Event_Zero_Based_World_Location' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, CallFunc_MapMarkersEnabledDefined_ReturnValue) == 0x0000BC, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::CallFunc_MapMarkersEnabledDefined_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x0000C0, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, K2Node_DynamicCast_AsSQPlayer_State) == 0x0000C8, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, K2Node_DynamicCast_AsSQPlayer_State_1) == 0x0000D8, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::K2Node_DynamicCast_AsSQPlayer_State_1' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, CallFunc_GetFireTeamIndex_ReturnValue) == 0x0000E4, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, CallFunc_GetFireTeamIndex_ReturnValue_1) == 0x0000E8, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::CallFunc_GetFireTeamIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, CallFunc_Max_ReturnValue) == 0x0000EC, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu, CallFunc_GetColor_ReturnValue) == 0x0000F0, "Member 'W_FTLGridMenu_C_ExecuteUbergraph_W_FTLGridMenu::CallFunc_GetColor_ReturnValue' has a wrong offset!");

// Function W_FTLGridMenu.W_FTLGridMenu_C.Build Grid
// 0x00B8 (0x00B8 - 0x0000)
struct W_FTLGridMenu_C_Build_Grid final
{
public:
	struct FGeometry                              In_Geometry;                                       // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          In_Mouse_Event;                                    // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector                                Zero_Based_World_Location;                         // 0x00A8(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FTLGridMenu_C_Build_Grid) == 0x000008, "Wrong alignment on W_FTLGridMenu_C_Build_Grid");
static_assert(sizeof(W_FTLGridMenu_C_Build_Grid) == 0x0000B8, "Wrong size on W_FTLGridMenu_C_Build_Grid");
static_assert(offsetof(W_FTLGridMenu_C_Build_Grid, In_Geometry) == 0x000000, "Member 'W_FTLGridMenu_C_Build_Grid::In_Geometry' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_Build_Grid, In_Mouse_Event) == 0x000038, "Member 'W_FTLGridMenu_C_Build_Grid::In_Mouse_Event' has a wrong offset!");
static_assert(offsetof(W_FTLGridMenu_C_Build_Grid, Zero_Based_World_Location) == 0x0000A8, "Member 'W_FTLGridMenu_C_Build_Grid::Zero_Based_World_Location' has a wrong offset!");

}


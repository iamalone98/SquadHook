#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InteractableItem_VehicleRepair

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_InteractableItem_VehicleRepair.W_InteractableItem_VehicleRepair_C.ExecuteUbergraph_W_InteractableItem_VehicleRepair
// 0x0004 (0x0004 - 0x0000)
struct W_InteractableItem_VehicleRepair_C_ExecuteUbergraph_W_InteractableItem_VehicleRepair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractableItem_VehicleRepair_C_ExecuteUbergraph_W_InteractableItem_VehicleRepair) == 0x000004, "Wrong alignment on W_InteractableItem_VehicleRepair_C_ExecuteUbergraph_W_InteractableItem_VehicleRepair");
static_assert(sizeof(W_InteractableItem_VehicleRepair_C_ExecuteUbergraph_W_InteractableItem_VehicleRepair) == 0x000004, "Wrong size on W_InteractableItem_VehicleRepair_C_ExecuteUbergraph_W_InteractableItem_VehicleRepair");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_ExecuteUbergraph_W_InteractableItem_VehicleRepair, EntryPoint) == 0x000000, "Member 'W_InteractableItem_VehicleRepair_C_ExecuteUbergraph_W_InteractableItem_VehicleRepair::EntryPoint' has a wrong offset!");

// Function W_InteractableItem_VehicleRepair.W_InteractableItem_VehicleRepair_C.Update Vehicle Health
// 0x0020 (0x0020 - 0x0000)
struct W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health final
{
public:
	class ASQVehicle*                             L_Vehicle;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Main_Health_Limit_Reached;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Main_Health_Max_Health;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E37[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health) == 0x000008, "Wrong alignment on W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health");
static_assert(sizeof(W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health) == 0x000020, "Wrong size on W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health, L_Vehicle) == 0x000000, "Member 'W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health::L_Vehicle' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health, CallFunc_Set_Main_Health_Limit_Reached) == 0x000008, "Member 'W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health::CallFunc_Set_Main_Health_Limit_Reached' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health, CallFunc_Set_Main_Health_Max_Health) == 0x000009, "Member 'W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health::CallFunc_Set_Main_Health_Max_Health' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health, K2Node_DynamicCast_AsSQVehicle) == 0x000010, "Member 'W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_InteractableItem_VehicleRepair_C_Update_Vehicle_Health::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_InteractableItem_VehicleRepair.W_InteractableItem_VehicleRepair_C.Get Format Box
// 0x0008 (0x0008 - 0x0000)
struct W_InteractableItem_VehicleRepair_C_Get_Format_Box final
{
public:
	class UHorizontalBox*                         Param_FormatBox;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InteractableItem_VehicleRepair_C_Get_Format_Box) == 0x000008, "Wrong alignment on W_InteractableItem_VehicleRepair_C_Get_Format_Box");
static_assert(sizeof(W_InteractableItem_VehicleRepair_C_Get_Format_Box) == 0x000008, "Wrong size on W_InteractableItem_VehicleRepair_C_Get_Format_Box");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Get_Format_Box, Param_FormatBox) == 0x000000, "Member 'W_InteractableItem_VehicleRepair_C_Get_Format_Box::Param_FormatBox' has a wrong offset!");

// Function W_InteractableItem_VehicleRepair.W_InteractableItem_VehicleRepair_C.Set Main Health
// 0x0020 (0x0020 - 0x0000)
struct W_InteractableItem_VehicleRepair_C_Set_Main_Health final
{
public:
	class ASQVehicle*                             Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Limit_Reached;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Max_Health;                                        // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Max;                                             // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Limit_Reached;                                   // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E38[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_InteractableItem_VehicleRepair_C_Set_Main_Health) == 0x000008, "Wrong alignment on W_InteractableItem_VehicleRepair_C_Set_Main_Health");
static_assert(sizeof(W_InteractableItem_VehicleRepair_C_Set_Main_Health) == 0x000020, "Wrong size on W_InteractableItem_VehicleRepair_C_Set_Main_Health");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, Vehicle) == 0x000000, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::Vehicle' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, Limit_Reached) == 0x000008, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::Limit_Reached' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, Max_Health) == 0x000009, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::Max_Health' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, L_Max) == 0x00000A, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::L_Max' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, L_Limit_Reached) == 0x00000B, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::L_Limit_Reached' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000015, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000016, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, CallFunc_BooleanOR_ReturnValue) == 0x000017, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InteractableItem_VehicleRepair_C_Set_Main_Health, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'W_InteractableItem_VehicleRepair_C_Set_Main_Health::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


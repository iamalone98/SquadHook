#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetHAB

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_MapWidgetHAB.BP_MapWidgetHAB_C.ExecuteUbergraph_BP_MapWidgetHAB
// 0x000C (0x000C - 0x0000)
struct BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetHABIconVisibility_Visibility;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Valid_Spawn;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CA[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_UniformScale;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB) == 0x000004, "Wrong alignment on BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB");
static_assert(sizeof(BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB) == 0x00000C, "Wrong size on BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB");
static_assert(offsetof(BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB, EntryPoint) == 0x000000, "Member 'BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB, CallFunc_GetHABIconVisibility_Visibility) == 0x000004, "Member 'BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB::CallFunc_GetHABIconVisibility_Visibility' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB, K2Node_CustomEvent_Valid_Spawn) == 0x000005, "Member 'BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB::K2Node_CustomEvent_Valid_Spawn' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB, K2Node_Event_UniformScale) == 0x000008, "Member 'BP_MapWidgetHAB_C_ExecuteUbergraph_BP_MapWidgetHAB::K2Node_Event_UniformScale' has a wrong offset!");

// Function BP_MapWidgetHAB.BP_MapWidgetHAB_C.Spawn Validation
// 0x0001 (0x0001 - 0x0000)
struct BP_MapWidgetHAB_C_Spawn_Validation final
{
public:
	bool                                          Valid_Spawn;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetHAB_C_Spawn_Validation) == 0x000001, "Wrong alignment on BP_MapWidgetHAB_C_Spawn_Validation");
static_assert(sizeof(BP_MapWidgetHAB_C_Spawn_Validation) == 0x000001, "Wrong size on BP_MapWidgetHAB_C_Spawn_Validation");
static_assert(offsetof(BP_MapWidgetHAB_C_Spawn_Validation, Valid_Spawn) == 0x000000, "Member 'BP_MapWidgetHAB_C_Spawn_Validation::Valid_Spawn' has a wrong offset!");

// Function BP_MapWidgetHAB.BP_MapWidgetHAB_C.OnScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MapWidgetHAB_C_OnScaleChanged final
{
public:
	float                                         UniformScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetHAB_C_OnScaleChanged) == 0x000004, "Wrong alignment on BP_MapWidgetHAB_C_OnScaleChanged");
static_assert(sizeof(BP_MapWidgetHAB_C_OnScaleChanged) == 0x000004, "Wrong size on BP_MapWidgetHAB_C_OnScaleChanged");
static_assert(offsetof(BP_MapWidgetHAB_C_OnScaleChanged, UniformScale) == 0x000000, "Member 'BP_MapWidgetHAB_C_OnScaleChanged::UniformScale' has a wrong offset!");

// Function BP_MapWidgetHAB.BP_MapWidgetHAB_C.GetHABIconVisibility
// 0x0008 (0x0008 - 0x0000)
struct BP_MapWidgetHAB_C_GetHABIconVisibility final
{
public:
	ESlateVisibility                              Param_Visibility;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_Activated;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetHAB_C_GetHABIconVisibility) == 0x000001, "Wrong alignment on BP_MapWidgetHAB_C_GetHABIconVisibility");
static_assert(sizeof(BP_MapWidgetHAB_C_GetHABIconVisibility) == 0x000008, "Wrong size on BP_MapWidgetHAB_C_GetHABIconVisibility");
static_assert(offsetof(BP_MapWidgetHAB_C_GetHABIconVisibility, Param_Visibility) == 0x000000, "Member 'BP_MapWidgetHAB_C_GetHABIconVisibility::Param_Visibility' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_GetHABIconVisibility, Temp_bool_Variable) == 0x000001, "Member 'BP_MapWidgetHAB_C_GetHABIconVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_GetHABIconVisibility, Temp_byte_Variable) == 0x000002, "Member 'BP_MapWidgetHAB_C_GetHABIconVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_GetHABIconVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'BP_MapWidgetHAB_C_GetHABIconVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_GetHABIconVisibility, CallFunc_IsActivated_Activated) == 0x000004, "Member 'BP_MapWidgetHAB_C_GetHABIconVisibility::CallFunc_IsActivated_Activated' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_GetHABIconVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_MapWidgetHAB_C_GetHABIconVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_GetHABIconVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_MapWidgetHAB_C_GetHABIconVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_GetHABIconVisibility, K2Node_Select_Default) == 0x000007, "Member 'BP_MapWidgetHAB_C_GetHABIconVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BP_MapWidgetHAB.BP_MapWidgetHAB_C.IsActivated
// 0x0020 (0x0020 - 0x0000)
struct BP_MapWidgetHAB_C_IsActivated final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39CC[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetHAB_C_IsActivated) == 0x000008, "Wrong alignment on BP_MapWidgetHAB_C_IsActivated");
static_assert(sizeof(BP_MapWidgetHAB_C_IsActivated) == 0x000020, "Wrong size on BP_MapWidgetHAB_C_IsActivated");
static_assert(offsetof(BP_MapWidgetHAB_C_IsActivated, Activated) == 0x000000, "Member 'BP_MapWidgetHAB_C_IsActivated::Activated' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_IsActivated, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_MapWidgetHAB_C_IsActivated::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_IsActivated, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MapWidgetHAB_C_IsActivated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_IsActivated, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000014, "Member 'BP_MapWidgetHAB_C_IsActivated::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetHAB_C_IsActivated, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_MapWidgetHAB_C_IsActivated::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}


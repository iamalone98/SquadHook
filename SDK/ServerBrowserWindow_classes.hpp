#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ServerBrowserWindow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "UMG_structs.hpp"
#include "E_SortType_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ServerBrowserWindow.ServerBrowserWindow_C
// 0x0168 (0x0430 - 0x02C8)
class UServerBrowserWindow_C final : public USQServerBrowserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                CurrentServerParent;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MainMenuButton_C*                    FilterButton;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Filters_C*                           FilterWindow;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_146;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_FilterButton;                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      PromotedGrid;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PromotedVerticalBox;                               // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       SearchBox;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UServerDetails_C*                       ServerDetails_C_0;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      ServerListGrid;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USortableColumnButton_C*                SortGameMode;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USortableColumnButton_C*                SORTHealth;                                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USortableColumnButton_C*                SORTMaps;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USortableColumnButton_C*                SortNumPlayers;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USortableColumnButton_C*                SortPing;                                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USortableColumnButton_C*                SortServerName;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        SwitcherDetails;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      Throbber;                                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Loading;                            // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UServerListItem_C*                      SelectedServerItem;                                // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrongVersionServerCount;                           // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SameVersionServerCount;                            // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Licensed_Servers;                             // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Show_Unlicensed_Servers;                           // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Show_Favorited_Servers;                            // 0x038A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Show_Recent_Servers;                               // 0x038B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38C9[0x4];                                     // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Browser_Header;                                    // 0x0390(0x0018)(Edit, BlueprintVisible)
	int32                                         CurrentServerIndex;                                // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38CA[0x4];                                     // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UServerListItem_C*                      JoiningServer;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Queue_Window;                                 // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38CB[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        Results;                                           // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Is_Sorted;                                         // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38CC[0x7];                                     // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenuScreen_C*                      REF_MainMenu;                                      // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             Found_Sessions;                                    // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FBlueprintSessionResult>        Composited_Sessions;                               // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Search_Complete;                                   // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseUniqueWhitelistBox;                             // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Has_Promoted_Servers;                              // 0x0402(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38CD[0x5];                                     // 0x0403(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ServerPassword_C*                   ServerPasswordWidget;                              // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ModdedServerWarning_C*              ModdedServerWarning;                               // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQSessionInfo*                         CurrentSession;                                    // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayFabJsonObject*                     LastJsonAnalitics;                                 // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanUpdateServerList;                               // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RequestedUpdateServerList;                         // 0x0429(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Found_Sessions__DelegateSignature();
	void ExecuteUbergraph_ServerBrowserWindow(int32 EntryPoint);
	void OnPasswordSuccess();
	void WarningAcknowledgedHandler();
	void OnQueueForServer(class ASQJoinBeaconClient* NewJoinBeaconClient);
	void SendAnalyticsChangeFilter();
	void BndEvt__ServerBrowserWindow_ServerDetails_C_0_K2Node_ComponentBoundEvent_3_DetailsJoinButton__DelegateSignature();
	void SentAnaliticsInfo(const class FString& Type, const class FString& EventName);
	void BndEvt__ServerBrowserWindow_FilterButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(bool bSelected, class UW_MainMenuButton_C* Button);
	void RequestJoinPress(class USQSessionInfo* Session);
	void OnFailure();
	void OnUpdateSession(const TArray<struct FBlueprintSessionResult>& Param_Results);
	void OnSuccess(const TArray<struct FBlueprintSessionResult>& Param_Results);
	void JoiningCancelled();
	void Refresh_Last_Sorting();
	void BndEvt__SearchBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void PasswordEnteredForced(const class FString& Password, class UBP_ServerPassword_C* Sender);
	void Construct();
	void RequestJoinServer(class USQSessionInfo* SessionInfo);
	void UpdateServerList();
	ESlateVisibility GetLicensingNoticeVisibility();
	void StopUpdatingThrobber();
	void ResetSortButtons();
	void ResetServerIndex();
	void AddNewServerWidget(const struct FBlueprintSessionResult& Result, class UServerListItem_C** Item);
	void UpdateSession(const struct FBlueprintSessionResult& Result);
	void GetServerIndex(int32 PingMs, int32* Param_Index);
	ECheckBoxState GetCheckedShowDiffServers();
	ECheckBoxState GetCheckedShowEmptyServers();
	void StartQueue();
	bool GetQueueServerButtonIsEnabled();
	ESlateVisibility GetQueueServerButtonVisibility();
	ECheckBoxState GetCheckedShowQueuesSeparately();
	ECheckBoxState GetCheckedShowReservedSlots();
	void Sort_List(bool Is_Ascending, E_SortType Sort_Type);
	void Sort_List_by_Health_Status(bool Ascending);
	void Check_Mods(class USQSessionInfo* SessionInfo, bool* In_Sync);
	void Remove_Current_Server();
	void Reset_Search();
	void Add_unique_sessions(TArray<struct FBlueprintSessionResult>& Param_Results);
	void Organise_List_Rows();
	void Save_Last_Sort_Type(E_SortType Type, bool LastAscendingSortType);
	void Should_filter_server(const struct FBlueprintSessionResult& Session, bool* Hide);
	ESlateVisibility Set_Promoted_Box_Visibility();
	void OnConnectionAccepted();
	void DownloadingModsFinished();
	void SetSelectedServer(class UServerListItem_C* Param_SelectedServerItem);
	void GetMainMenuRef(class UMainMenuScreen_C** Param_REF_MainMenu);
	void SentAnaliticsSucc(const struct FClientWriteEventResponse& Result, class UObject* CustomData);
	void SentAnaliticsFailed(const struct FPlayFabError& Error, class UObject* CustomData);
	struct FLinearColor GetColorAndOpacity_0();
	class FString GetCurrentSearchString();

	void ShouldApplyFilters(bool* Apply) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ServerBrowserWindow_C">();
	}
	static class UServerBrowserWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UServerBrowserWindow_C>();
	}
};
static_assert(alignof(UServerBrowserWindow_C) == 0x000008, "Wrong alignment on UServerBrowserWindow_C");
static_assert(sizeof(UServerBrowserWindow_C) == 0x000430, "Wrong size on UServerBrowserWindow_C");
static_assert(offsetof(UServerBrowserWindow_C, UberGraphFrame) == 0x0002C8, "Member 'UServerBrowserWindow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, CurrentServerParent) == 0x0002D0, "Member 'UServerBrowserWindow_C::CurrentServerParent' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, FilterButton) == 0x0002D8, "Member 'UServerBrowserWindow_C::FilterButton' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, FilterWindow) == 0x0002E0, "Member 'UServerBrowserWindow_C::FilterWindow' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Image) == 0x0002E8, "Member 'UServerBrowserWindow_C::Image' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Image_0) == 0x0002F0, "Member 'UServerBrowserWindow_C::Image_0' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Image_146) == 0x0002F8, "Member 'UServerBrowserWindow_C::Image_146' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Overlay_FilterButton) == 0x000300, "Member 'UServerBrowserWindow_C::Overlay_FilterButton' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, PromotedGrid) == 0x000308, "Member 'UServerBrowserWindow_C::PromotedGrid' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, PromotedVerticalBox) == 0x000310, "Member 'UServerBrowserWindow_C::PromotedVerticalBox' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SearchBox) == 0x000318, "Member 'UServerBrowserWindow_C::SearchBox' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, ServerDetails_C_0) == 0x000320, "Member 'UServerBrowserWindow_C::ServerDetails_C_0' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, ServerListGrid) == 0x000328, "Member 'UServerBrowserWindow_C::ServerListGrid' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SortGameMode) == 0x000330, "Member 'UServerBrowserWindow_C::SortGameMode' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SORTHealth) == 0x000338, "Member 'UServerBrowserWindow_C::SORTHealth' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SORTMaps) == 0x000340, "Member 'UServerBrowserWindow_C::SORTMaps' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SortNumPlayers) == 0x000348, "Member 'UServerBrowserWindow_C::SortNumPlayers' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SortPing) == 0x000350, "Member 'UServerBrowserWindow_C::SortPing' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SortServerName) == 0x000358, "Member 'UServerBrowserWindow_C::SortServerName' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SwitcherDetails) == 0x000360, "Member 'UServerBrowserWindow_C::SwitcherDetails' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Throbber) == 0x000368, "Member 'UServerBrowserWindow_C::Throbber' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, WidgetSwitcher_Loading) == 0x000370, "Member 'UServerBrowserWindow_C::WidgetSwitcher_Loading' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SelectedServerItem) == 0x000378, "Member 'UServerBrowserWindow_C::SelectedServerItem' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, WrongVersionServerCount) == 0x000380, "Member 'UServerBrowserWindow_C::WrongVersionServerCount' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, SameVersionServerCount) == 0x000384, "Member 'UServerBrowserWindow_C::SameVersionServerCount' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Show_Licensed_Servers) == 0x000388, "Member 'UServerBrowserWindow_C::Show_Licensed_Servers' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Show_Unlicensed_Servers) == 0x000389, "Member 'UServerBrowserWindow_C::Show_Unlicensed_Servers' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Show_Favorited_Servers) == 0x00038A, "Member 'UServerBrowserWindow_C::Show_Favorited_Servers' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Show_Recent_Servers) == 0x00038B, "Member 'UServerBrowserWindow_C::Show_Recent_Servers' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Browser_Header) == 0x000390, "Member 'UServerBrowserWindow_C::Browser_Header' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, CurrentServerIndex) == 0x0003A8, "Member 'UServerBrowserWindow_C::CurrentServerIndex' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, JoiningServer) == 0x0003B0, "Member 'UServerBrowserWindow_C::JoiningServer' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Show_Queue_Window) == 0x0003B8, "Member 'UServerBrowserWindow_C::Show_Queue_Window' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Results) == 0x0003C0, "Member 'UServerBrowserWindow_C::Results' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Is_Sorted) == 0x0003D0, "Member 'UServerBrowserWindow_C::Is_Sorted' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, REF_MainMenu) == 0x0003D8, "Member 'UServerBrowserWindow_C::REF_MainMenu' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Found_Sessions) == 0x0003E0, "Member 'UServerBrowserWindow_C::Found_Sessions' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Composited_Sessions) == 0x0003F0, "Member 'UServerBrowserWindow_C::Composited_Sessions' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Search_Complete) == 0x000400, "Member 'UServerBrowserWindow_C::Search_Complete' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, UseUniqueWhitelistBox) == 0x000401, "Member 'UServerBrowserWindow_C::UseUniqueWhitelistBox' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, Has_Promoted_Servers) == 0x000402, "Member 'UServerBrowserWindow_C::Has_Promoted_Servers' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, ServerPasswordWidget) == 0x000408, "Member 'UServerBrowserWindow_C::ServerPasswordWidget' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, ModdedServerWarning) == 0x000410, "Member 'UServerBrowserWindow_C::ModdedServerWarning' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, CurrentSession) == 0x000418, "Member 'UServerBrowserWindow_C::CurrentSession' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, LastJsonAnalitics) == 0x000420, "Member 'UServerBrowserWindow_C::LastJsonAnalitics' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, CanUpdateServerList) == 0x000428, "Member 'UServerBrowserWindow_C::CanUpdateServerList' has a wrong offset!");
static_assert(offsetof(UServerBrowserWindow_C, RequestedUpdateServerList) == 0x000429, "Member 'UServerBrowserWindow_C::RequestedUpdateServerList' has a wrong offset!");

}


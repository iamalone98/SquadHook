#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWidgetSoldier

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Squad_structs.hpp"
#include "FSQRoleEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.ExecuteUbergraph_BP_MapWidgetSoldier
// 0x0148 (0x0148 - 0x0000)
struct BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_405E[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASQPlayerState* OldCommander, class ASQPlayerState* NewCommander)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_405F[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowBleeding_ReturnValue;              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetShowIncap_ReturnValue;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowBleeding_ReturnValue_1;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetShowIncap_ReturnValue_1;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4060[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerController*                    K2Node_DynamicCast_AsSQPlayer_Controller;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4061[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetTintColor_ReturnValue;                 // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_UniformScale;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ASQGameState*                           CallFunc_GetSquadGameState_Return_Value;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_CustomEvent_OldCommander;                   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         K2Node_CustomEvent_NewCommander;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQTeamState*                           CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4062[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4063[0x5];                                     // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HUD_C*                              K2Node_DynamicCast_AsBP_HUD;                       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4064[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4065[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier");
static_assert(sizeof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier) == 0x000148, "Wrong size on BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, EntryPoint) == 0x000000, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable) == 0x000004, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable_1) == 0x000005, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_bool_Variable) == 0x000006, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable_2) == 0x000007, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable_3) == 0x000008, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_bool_Variable_1) == 0x000009, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable_4) == 0x00000A, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable_5) == 0x00000B, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_bool_Variable_2) == 0x00000C, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_float_Variable) == 0x000010, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_bool_Variable_3) == 0x000028, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_bool_Variable_4) == 0x000029, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable_6) == 0x000040, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable_7) == 0x000041, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetShowBleeding_ReturnValue) == 0x000042, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetShowBleeding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetShowIncap_ReturnValue) == 0x000043, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetShowIncap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_Select_Default) == 0x000044, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_bool_Variable_5) == 0x000045, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_Select_Default_1) == 0x000046, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_Select_Default_2) == 0x000047, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetShowBleeding_ReturnValue_1) == 0x000048, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetShowBleeding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetShowIncap_ReturnValue_1) == 0x000049, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetShowIncap_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_BooleanOR_ReturnValue_1) == 0x00004B, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_Select_Default_3) == 0x00004C, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_IsValid_ReturnValue) == 0x00004D, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_SwitchEnum_CmpSuccess) == 0x00004E, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_PlayAnimation_ReturnValue_2) == 0x000050, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetEndTime_ReturnValue) == 0x000058, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00005C, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000060, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetOwningPlayer_ReturnValue) == 0x000068, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_DynamicCast_AsSQPlayer_Controller) == 0x000070, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_DynamicCast_AsSQPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetTintColor_ReturnValue) == 0x00007C, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetTintColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_Event_UniformScale) == 0x00008C, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_Event_UniformScale' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_Select_Default_4) == 0x00009C, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A0, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B0, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetSquadGameState_Return_Value) == 0x0000B8, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetSquadGameState_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_CustomEvent_OldCommander) == 0x0000C0, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_CustomEvent_OldCommander' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_CustomEvent_NewCommander) == 0x0000C8, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_CustomEvent_NewCommander' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E0, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F0, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable_8) == 0x000100, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, Temp_byte_Variable_9) == 0x000101, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_Select_Default_5) == 0x000102, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_GetHUD_ReturnValue) == 0x000108, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_DynamicCast_AsBP_HUD) == 0x000110, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_DynamicCast_AsBP_HUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_DynamicCast_AsBPI_HUD) == 0x000120, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, K2Node_DynamicCast_bSuccess_2) == 0x000130, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_Get_Map_Core_Map_Core) == 0x000138, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier, CallFunc_IsValid_ReturnValue_1) == 0x000140, "Member 'BP_MapWidgetSoldier_C_ExecuteUbergraph_BP_MapWidgetSoldier::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.OnCommanderChangedEvent_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_MapWidgetSoldier_C_OnCommanderChangedEvent_Event_0 final
{
public:
	class ASQPlayerState*                         OldCommander;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQPlayerState*                         NewCommander;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_OnCommanderChangedEvent_Event_0) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_OnCommanderChangedEvent_Event_0");
static_assert(sizeof(BP_MapWidgetSoldier_C_OnCommanderChangedEvent_Event_0) == 0x000010, "Wrong size on BP_MapWidgetSoldier_C_OnCommanderChangedEvent_Event_0");
static_assert(offsetof(BP_MapWidgetSoldier_C_OnCommanderChangedEvent_Event_0, OldCommander) == 0x000000, "Member 'BP_MapWidgetSoldier_C_OnCommanderChangedEvent_Event_0::OldCommander' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_OnCommanderChangedEvent_Event_0, NewCommander) == 0x000008, "Member 'BP_MapWidgetSoldier_C_OnCommanderChangedEvent_Event_0::NewCommander' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.OnScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MapWidgetSoldier_C_OnScaleChanged final
{
public:
	float                                         UniformScale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_OnScaleChanged) == 0x000004, "Wrong alignment on BP_MapWidgetSoldier_C_OnScaleChanged");
static_assert(sizeof(BP_MapWidgetSoldier_C_OnScaleChanged) == 0x000004, "Wrong size on BP_MapWidgetSoldier_C_OnScaleChanged");
static_assert(offsetof(BP_MapWidgetSoldier_C_OnScaleChanged, UniformScale) == 0x000000, "Member 'BP_MapWidgetSoldier_C_OnScaleChanged::UniformScale' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Update Player Image
// 0x0018 (0x0018 - 0x0000)
struct BP_MapWidgetSoldier_C_Update_Player_Image final
{
public:
	ESQAuthorityTypes                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4066[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Update_Player_Image) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Update_Player_Image");
static_assert(sizeof(BP_MapWidgetSoldier_C_Update_Player_Image) == 0x000018, "Wrong size on BP_MapWidgetSoldier_C_Update_Player_Image");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Player_Image, Temp_byte_Variable) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Update_Player_Image::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Player_Image, Temp_bool_Variable) == 0x000001, "Member 'BP_MapWidgetSoldier_C_Update_Player_Image::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Player_Image, K2Node_Select_Default) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Update_Player_Image::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Player_Image, K2Node_Select_Default_1) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Update_Player_Image::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Update Icon Size
// 0x0068 (0x0068 - 0x0000)
struct BP_MapWidgetSoldier_C_Update_Icon_Size final
{
public:
	struct FVector2D                              Temp_struct_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4067[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4068[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4069[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406A[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Update_Icon_Size) == 0x000004, "Wrong alignment on BP_MapWidgetSoldier_C_Update_Icon_Size");
static_assert(sizeof(BP_MapWidgetSoldier_C_Update_Icon_Size) == 0x000068, "Wrong size on BP_MapWidgetSoldier_C_Update_Icon_Size");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_struct_Variable) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_bool_Variable) == 0x000009, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_struct_Variable_1) == 0x00000C, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_struct_Variable_2) == 0x000014, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_bool_Variable_1) == 0x00001C, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_struct_Variable_3) == 0x000020, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_struct_Variable_4) == 0x000028, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_bool_Variable_2) == 0x000030, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_struct_Variable_5) == 0x000034, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, Temp_bool_Variable_3) == 0x00003C, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x00003D, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, K2Node_Select_Default) == 0x000040, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, K2Node_Select_Default_1) == 0x000048, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, K2Node_Select_Default_2) == 0x000050, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, K2Node_Select_Default_3) == 0x000058, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, CallFunc_BreakVector2D_X) == 0x000060, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Icon_Size, CallFunc_BreakVector2D_Y) == 0x000064, "Member 'BP_MapWidgetSoldier_C_Update_Icon_Size::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Tooltip
// 0x0018 (0x0018 - 0x0000)
struct BP_MapWidgetSoldier_C_Tooltip final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Tooltip_Soldier_C*                   CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Tooltip) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Tooltip");
static_assert(sizeof(BP_MapWidgetSoldier_C_Tooltip) == 0x000018, "Wrong size on BP_MapWidgetSoldier_C_Tooltip");
static_assert(offsetof(BP_MapWidgetSoldier_C_Tooltip, ReturnValue) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Tooltip::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Tooltip, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Tooltip::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Tooltip, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.On_TooltipHitBox_MouseButtonDown_0
// 0x0258 (0x0258 - 0x0000)
struct BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	ESQSelectionState                             Last_State;                                        // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSelectionState                             Temp_byte_Variable;                                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406B[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	ESQSelectionState                             Temp_byte_Variable_1;                              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQSelectionState                             Temp_byte_Variable_2;                              // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSelectionState                             Temp_byte_Variable_3;                              // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQSelectionState                             K2Node_Select_Default;                             // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406C[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0190(0x00B8)()
	class ASQHUD*                                 K2Node_DynamicCast_AsSQHUD;                        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0");
static_assert(sizeof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0) == 0x000258, "Wrong size on BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, MyGeometry) == 0x000000, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, MouseEvent) == 0x000038, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, Last_State) == 0x000160, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::Last_State' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, Temp_byte_Variable) == 0x000161, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, Temp_byte_Variable_1) == 0x000180, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000181, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, Temp_byte_Variable_2) == 0x000182, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, Temp_byte_Variable_3) == 0x000183, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, K2Node_Select_Default) == 0x000184, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, CallFunc_GetHUD_ReturnValue) == 0x000188, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000190, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, K2Node_DynamicCast_AsSQHUD) == 0x000248, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::K2Node_DynamicCast_AsSQHUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0, K2Node_DynamicCast_bSuccess) == 0x000250, "Member 'BP_MapWidgetSoldier_C_On_TooltipHitBox_MouseButtonDown_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Update Role Info
// 0x0040 (0x0040 - 0x0000)
struct BP_MapWidgetSoldier_C_Update_Role_Info final
{
public:
	float                                         Zoom_Amount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406D[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406E[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406F[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4070[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Update_Role_Info) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Update_Role_Info");
static_assert(sizeof(BP_MapWidgetSoldier_C_Update_Role_Info) == 0x000040, "Wrong size on BP_MapWidgetSoldier_C_Update_Role_Info");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, Zoom_Amount) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::Zoom_Amount' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, Temp_bool_Variable) == 0x000004, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, Temp_int_Variable) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, Temp_bool_Variable_2) == 0x00000D, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, Temp_float_Variable) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000018, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, K2Node_Select_Default) == 0x00001C, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, K2Node_Select_Default_1) == 0x000028, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x00002C, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000030, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Info, K2Node_Select_Default_2) == 0x000038, "Member 'BP_MapWidgetSoldier_C_Update_Role_Info::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Update Role Icon
// 0x00D8 (0x00D8 - 0x0000)
struct BP_MapWidgetSoldier_C_Update_Role_Icon final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4071[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SQRoleSettings_C*                   K2Node_DynamicCast_AsBP_SQRole_Settings;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRoleEntry_Success;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4072[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSQRoleEntry                          CallFunc_GetRoleEntry_RoleEntry;                   // 0x0018(0x00C0)(HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Update_Role_Icon) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Update_Role_Icon");
static_assert(sizeof(BP_MapWidgetSoldier_C_Update_Role_Icon) == 0x0000D8, "Wrong size on BP_MapWidgetSoldier_C_Update_Role_Icon");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Icon, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Update_Role_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Icon, K2Node_DynamicCast_AsBP_SQRole_Settings) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Update_Role_Icon::K2Node_DynamicCast_AsBP_SQRole_Settings' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Icon, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Update_Role_Icon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Icon, CallFunc_GetRoleEntry_Success) == 0x000011, "Member 'BP_MapWidgetSoldier_C_Update_Role_Icon::CallFunc_GetRoleEntry_Success' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Role_Icon, CallFunc_GetRoleEntry_RoleEntry) == 0x000018, "Member 'BP_MapWidgetSoldier_C_Update_Role_Icon::CallFunc_GetRoleEntry_RoleEntry' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Same Fireteam
// 0x0020 (0x0020 - 0x0000)
struct BP_MapWidgetSoldier_C_Same_Fireteam final
{
public:
	bool                                          Same;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4073[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPlayerState*                         K2Node_DynamicCast_AsSQPlayer_State;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4074[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFireTeamIndex_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Same_Fireteam) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Same_Fireteam");
static_assert(sizeof(BP_MapWidgetSoldier_C_Same_Fireteam) == 0x000020, "Wrong size on BP_MapWidgetSoldier_C_Same_Fireteam");
static_assert(offsetof(BP_MapWidgetSoldier_C_Same_Fireteam, Same) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Same_Fireteam::Same' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Same_Fireteam, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_MapWidgetSoldier_C_Same_Fireteam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Same_Fireteam, K2Node_DynamicCast_AsSQPlayer_State) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Same_Fireteam::K2Node_DynamicCast_AsSQPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Same_Fireteam, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Same_Fireteam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Same_Fireteam, CallFunc_GetFireTeamIndex_ReturnValue) == 0x000014, "Member 'BP_MapWidgetSoldier_C_Same_Fireteam::CallFunc_GetFireTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Same_Fireteam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_MapWidgetSoldier_C_Same_Fireteam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Same_Fireteam, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_MapWidgetSoldier_C_Same_Fireteam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.OnMouseButtonUp
// 0x0218 (0x0218 - 0x0000)
struct BP_MapWidgetSoldier_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(BP_MapWidgetSoldier_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_OnMouseButtonUp");
static_assert(sizeof(BP_MapWidgetSoldier_C_OnMouseButtonUp) == 0x000218, "Wrong size on BP_MapWidgetSoldier_C_OnMouseButtonUp");
static_assert(offsetof(BP_MapWidgetSoldier_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'BP_MapWidgetSoldier_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'BP_MapWidgetSoldier_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetSoldier_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'BP_MapWidgetSoldier_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Update Is Medic Icon
// 0x0050 (0x0050 - 0x0000)
struct BP_MapWidgetSoldier_C_Update_Is_Medic_Icon final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4075[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4076[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue_1;      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4077[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4078[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Update_Is_Medic_Icon");
static_assert(sizeof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon) == 0x000050, "Wrong size on BP_MapWidgetSoldier_C_Update_Is_Medic_Icon");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, Temp_bool_Variable) == 0x000001, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, Temp_object_Variable) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, Temp_object_Variable_1) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, Temp_bool_Variable_1) == 0x000018, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, Temp_object_Variable_2) == 0x000020, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, Temp_bool_Variable_2) == 0x000028, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, Temp_byte_Variable) == 0x000029, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, Temp_byte_Variable_1) == 0x00002A, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00002B, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_GreaterEqual_ByteByte_ReturnValue_1) == 0x00002E, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_GreaterEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, K2Node_Select_Default) == 0x000030, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_Not_PreBool_ReturnValue_1) == 0x000038, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, K2Node_Select_Default_1) == 0x000040, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_Not_PreBool_ReturnValue_2) == 0x000048, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_BooleanAND_ReturnValue_1) == 0x00004A, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, CallFunc_BooleanAND_ReturnValue_2) == 0x00004B, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Is_Medic_Icon, K2Node_Select_Default_2) == 0x00004C, "Member 'BP_MapWidgetSoldier_C_Update_Is_Medic_Icon::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Update ID
// 0x00F0 (0x00F0 - 0x0000)
struct BP_MapWidgetSoldier_C_Update_ID final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4079[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_2;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue_1;      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407A[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue_2;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              K2Node_Select_Default_1;                           // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_2;                           // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0058(0x0028)()
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407C[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetAlphabetLetterString_ReturnValue;      // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C0(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x00D8(0x0018)()
};
static_assert(alignof(BP_MapWidgetSoldier_C_Update_ID) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Update_ID");
static_assert(sizeof(BP_MapWidgetSoldier_C_Update_ID) == 0x0000F0, "Wrong size on BP_MapWidgetSoldier_C_Update_ID");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000001, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, Temp_bool_Variable) == 0x000002, "Member 'BP_MapWidgetSoldier_C_Update_ID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, Temp_float_Variable) == 0x000004, "Member 'BP_MapWidgetSoldier_C_Update_ID::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, Temp_float_Variable_1) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Update_ID::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_MapWidgetSoldier_C_Update_ID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, Temp_byte_Variable) == 0x00000D, "Member 'BP_MapWidgetSoldier_C_Update_ID::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, Temp_byte_Variable_1) == 0x00000E, "Member 'BP_MapWidgetSoldier_C_Update_ID::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, Temp_bool_Variable_2) == 0x00000F, "Member 'BP_MapWidgetSoldier_C_Update_ID::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, Temp_byte_Variable_2) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Update_ID::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, Temp_bool_Variable_3) == 0x000011, "Member 'BP_MapWidgetSoldier_C_Update_ID::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_GreaterEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_GreaterEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000014, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, K2Node_Select_Default) == 0x000018, "Member 'BP_MapWidgetSoldier_C_Update_ID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, K2Node_MakeStruct_Margin) == 0x00001C, "Member 'BP_MapWidgetSoldier_C_Update_ID::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_GreaterEqual_ByteByte_ReturnValue_2) == 0x00002C, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_GreaterEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_BooleanOR_ReturnValue) == 0x00002D, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, K2Node_Select_Default_1) == 0x00002E, "Member 'BP_MapWidgetSoldier_C_Update_ID::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, K2Node_Select_Default_2) == 0x00002F, "Member 'BP_MapWidgetSoldier_C_Update_ID::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000030, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_Max_ReturnValue) == 0x000038, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x000040, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_GetColor_ReturnValue) == 0x000048, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, K2Node_MakeStruct_SlateColor) == 0x000058, "Member 'BP_MapWidgetSoldier_C_Update_ID::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_Max_ReturnValue_1) == 0x000080, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_GetAlphabetLetterString_ReturnValue) == 0x000088, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_GetAlphabetLetterString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_ToUpper_ReturnValue) == 0x000098, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A8, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C0, "Member 'BP_MapWidgetSoldier_C_Update_ID::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_ID, K2Node_Select_Default_3) == 0x0000D8, "Member 'BP_MapWidgetSoldier_C_Update_ID::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Update Wounded Opacity
// 0x0024 (0x0024 - 0x0000)
struct BP_MapWidgetSoldier_C_Update_Wounded_Opacity final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_407D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_407E[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Update_Wounded_Opacity) == 0x000004, "Wrong alignment on BP_MapWidgetSoldier_C_Update_Wounded_Opacity");
static_assert(sizeof(BP_MapWidgetSoldier_C_Update_Wounded_Opacity) == 0x000024, "Wrong size on BP_MapWidgetSoldier_C_Update_Wounded_Opacity");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Wounded_Opacity, Temp_bool_Variable) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Update_Wounded_Opacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Wounded_Opacity, Temp_float_Variable) == 0x000004, "Member 'BP_MapWidgetSoldier_C_Update_Wounded_Opacity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Wounded_Opacity, Temp_float_Variable_1) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Update_Wounded_Opacity::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Wounded_Opacity, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_MapWidgetSoldier_C_Update_Wounded_Opacity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Wounded_Opacity, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'BP_MapWidgetSoldier_C_Update_Wounded_Opacity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Wounded_Opacity, K2Node_Select_Default) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Update_Wounded_Opacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Wounded_Opacity, CallFunc_MakeColor_ReturnValue) == 0x000014, "Member 'BP_MapWidgetSoldier_C_Update_Wounded_Opacity::CallFunc_MakeColor_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Update Color
// 0x0080 (0x0080 - 0x0000)
struct BP_MapWidgetSoldier_C_Update_Color final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_7;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407F[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_2;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4080[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_3;                           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4081[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset_1;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_4;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4082[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset_2;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_5;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4083[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColor_ReturnValue_1;                   // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_ReturnValue_2;                   // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Update_Color) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Update_Color");
static_assert(sizeof(BP_MapWidgetSoldier_C_Update_Color) == 0x000080, "Wrong size on BP_MapWidgetSoldier_C_Update_Color");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_bool_Variable) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_byte_Variable) == 0x000001, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_byte_Variable_1) == 0x000002, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_bool_Variable_1) == 0x000003, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_byte_Variable_2) == 0x000004, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_byte_Variable_3) == 0x000005, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_bool_Variable_2) == 0x000006, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_byte_Variable_4) == 0x000007, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_bool_Variable_3) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_byte_Variable_5) == 0x000009, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_bool_Variable_4) == 0x00000A, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_byte_Variable_6) == 0x00000B, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_bool_Variable_5) == 0x00000C, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, Temp_byte_Variable_7) == 0x00000D, "Member 'BP_MapWidgetSoldier_C_Update_Color::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000F, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, K2Node_Select_Default) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Update_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, K2Node_Select_Default_1) == 0x000011, "Member 'BP_MapWidgetSoldier_C_Update_Color::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x000018, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, K2Node_Select_Default_2) == 0x000020, "Member 'BP_MapWidgetSoldier_C_Update_Color::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_Max_ReturnValue) == 0x000024, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_GetColor_ReturnValue) == 0x000028, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_Max_ReturnValue_1) == 0x000038, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, K2Node_Select_Default_3) == 0x00003C, "Member 'BP_MapWidgetSoldier_C_Update_Color::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_Get_SQHUD_Colors_ColorsDataAsset_1) == 0x000040, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_Get_SQHUD_Colors_ColorsDataAsset_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, K2Node_Select_Default_4) == 0x000048, "Member 'BP_MapWidgetSoldier_C_Update_Color::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_Get_SQHUD_Colors_ColorsDataAsset_2) == 0x000050, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_Get_SQHUD_Colors_ColorsDataAsset_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, K2Node_Select_Default_5) == 0x000058, "Member 'BP_MapWidgetSoldier_C_Update_Color::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_GetColor_ReturnValue_1) == 0x00005C, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_GetColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Color, CallFunc_GetColor_ReturnValue_2) == 0x00006C, "Member 'BP_MapWidgetSoldier_C_Update_Color::CallFunc_GetColor_ReturnValue_2' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Update Tooltip Color
// 0x0030 (0x0030 - 0x0000)
struct BP_MapWidgetSoldier_C_Update_Tooltip_Color final
{
public:
	ESQMapWidgetTint                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4084[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQMapWidgetTint                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_1;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4085[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USQColorsDataAsset*                     CallFunc_Get_SQHUD_Colors_ColorsDataAsset;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQMapWidgetTint                              K2Node_Select_Default_2;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4086[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColor_ReturnValue;                     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Update_Tooltip_Color) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Update_Tooltip_Color");
static_assert(sizeof(BP_MapWidgetSoldier_C_Update_Tooltip_Color) == 0x000030, "Wrong size on BP_MapWidgetSoldier_C_Update_Tooltip_Color");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, Temp_byte_Variable) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, Temp_byte_Variable_1) == 0x000001, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, Temp_bool_Variable) == 0x000002, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, Temp_byte_Variable_2) == 0x000003, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, Temp_bool_Variable_1) == 0x000004, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, Temp_byte_Variable_3) == 0x000005, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, Temp_bool_Variable_2) == 0x000006, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, CallFunc_Max_ReturnValue) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, K2Node_Select_Default) == 0x00000D, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, K2Node_Select_Default_1) == 0x00000E, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, CallFunc_Get_SQHUD_Colors_ColorsDataAsset) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::CallFunc_Get_SQHUD_Colors_ColorsDataAsset' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, K2Node_Select_Default_2) == 0x000018, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, CallFunc_GetColor_ReturnValue) == 0x00001C, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Update_Tooltip_Color, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_MapWidgetSoldier_C_Update_Tooltip_Color::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Set Show Fireteam Letter
// 0x0008 (0x0008 - 0x0000)
struct BP_MapWidgetSoldier_C_Set_Show_Fireteam_Letter final
{
public:
	class USaveData_UI_C*                         CallFunc_Get_UI_Save_Data_UI_Save_Data;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Set_Show_Fireteam_Letter) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Set_Show_Fireteam_Letter");
static_assert(sizeof(BP_MapWidgetSoldier_C_Set_Show_Fireteam_Letter) == 0x000008, "Wrong size on BP_MapWidgetSoldier_C_Set_Show_Fireteam_Letter");
static_assert(offsetof(BP_MapWidgetSoldier_C_Set_Show_Fireteam_Letter, CallFunc_Get_UI_Save_Data_UI_Save_Data) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Set_Show_Fireteam_Letter::CallFunc_Get_UI_Save_Data_UI_Save_Data' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Refresh Element Visibility
// 0x002A (0x002A - 0x0000)
struct BP_MapWidgetSoldier_C_Refresh_Element_Visibility final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility) == 0x000001, "Wrong alignment on BP_MapWidgetSoldier_C_Refresh_Element_Visibility");
static_assert(sizeof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility) == 0x00002A, "Wrong size on BP_MapWidgetSoldier_C_Refresh_Element_Visibility");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_bool_Variable) == 0x000001, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_byte_Variable) == 0x000002, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_bool_Variable_1) == 0x000004, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_byte_Variable_2) == 0x000005, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_byte_Variable_3) == 0x000006, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_bool_Variable_2) == 0x000007, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_byte_Variable_4) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_byte_Variable_5) == 0x000009, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_byte_Variable_6) == 0x00000A, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x00000F, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000011, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_byte_Variable_7) == 0x000012, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000013, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_Not_PreBool_ReturnValue_2) == 0x000014, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_Not_PreBool_ReturnValue_3) == 0x000016, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_Not_PreBool_ReturnValue_4) == 0x000017, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanOR_ReturnValue_1) == 0x000019, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue_2) == 0x00001A, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, Temp_bool_Variable_3) == 0x00001B, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_Not_PreBool_ReturnValue_5) == 0x00001C, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, K2Node_Select_Default) == 0x00001D, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue_3) == 0x00001E, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue_4) == 0x00001F, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, K2Node_Select_Default_1) == 0x000020, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_Not_PreBool_ReturnValue_6) == 0x000021, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue_5) == 0x000022, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue_6) == 0x000023, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue_7) == 0x000025, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue_8) == 0x000026, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, K2Node_Select_Default_2) == 0x000027, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, CallFunc_BooleanAND_ReturnValue_9) == 0x000028, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Refresh_Element_Visibility, K2Node_Select_Default_3) == 0x000029, "Member 'BP_MapWidgetSoldier_C_Refresh_Element_Visibility::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.Set View Cone Visibility
// 0x0020 (0x0020 - 0x0000)
struct BP_MapWidgetSoldier_C_Set_View_Cone_Visibility final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4087[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSoldier_C_Set_View_Cone_Visibility) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_Set_View_Cone_Visibility");
static_assert(sizeof(BP_MapWidgetSoldier_C_Set_View_Cone_Visibility) == 0x000020, "Wrong size on BP_MapWidgetSoldier_C_Set_View_Cone_Visibility");
static_assert(offsetof(BP_MapWidgetSoldier_C_Set_View_Cone_Visibility, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MapWidgetSoldier_C_Set_View_Cone_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Set_View_Cone_Visibility, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'BP_MapWidgetSoldier_C_Set_View_Cone_Visibility::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Set_View_Cone_Visibility, K2Node_DynamicCast_AsSQSoldier) == 0x000010, "Member 'BP_MapWidgetSoldier_C_Set_View_Cone_Visibility::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_Set_View_Cone_Visibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MapWidgetSoldier_C_Set_View_Cone_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.UpdateVoipAnim
// 0x0018 (0x0018 - 0x0000)
struct BP_MapWidgetSoldier_C_UpdateVoipAnim final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4088[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSoldier_C_UpdateVoipAnim) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_UpdateVoipAnim");
static_assert(sizeof(BP_MapWidgetSoldier_C_UpdateVoipAnim) == 0x000018, "Wrong size on BP_MapWidgetSoldier_C_UpdateVoipAnim");
static_assert(offsetof(BP_MapWidgetSoldier_C_UpdateVoipAnim, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_MapWidgetSoldier_C_UpdateVoipAnim::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_UpdateVoipAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_MapWidgetSoldier_C_UpdateVoipAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_UpdateVoipAnim, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_MapWidgetSoldier_C_UpdateVoipAnim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.HandleMapCoreChanged
// 0x0038 (0x0038 - 0x0000)
struct BP_MapWidgetSoldier_C_HandleMapCoreChanged final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4089[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapWidgetSoldier_C_HandleMapCoreChanged) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_HandleMapCoreChanged");
static_assert(sizeof(BP_MapWidgetSoldier_C_HandleMapCoreChanged) == 0x000038, "Wrong size on BP_MapWidgetSoldier_C_HandleMapCoreChanged");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapCoreChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_MapWidgetSoldier_C_HandleMapCoreChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapCoreChanged, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'BP_MapWidgetSoldier_C_HandleMapCoreChanged::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapCoreChanged, K2Node_DynamicCast_AsBPI_HUD) == 0x000018, "Member 'BP_MapWidgetSoldier_C_HandleMapCoreChanged::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapCoreChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MapWidgetSoldier_C_HandleMapCoreChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapCoreChanged, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_MapWidgetSoldier_C_HandleMapCoreChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapCoreChanged, CallFunc_Get_Map_Core_Map_Core) == 0x000030, "Member 'BP_MapWidgetSoldier_C_HandleMapCoreChanged::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");

// Function BP_MapWidgetSoldier.BP_MapWidgetSoldier_C.HandleMapZoom
// 0x0038 (0x0038 - 0x0000)
struct BP_MapWidgetSoldier_C_HandleMapZoom final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408A[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_HUD_C>            K2Node_DynamicCast_AsBPI_HUD;                      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_408B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_SQMapCore_C*                         CallFunc_Get_Map_Core_Map_Core;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapWidgetSoldier_C_HandleMapZoom) == 0x000008, "Wrong alignment on BP_MapWidgetSoldier_C_HandleMapZoom");
static_assert(sizeof(BP_MapWidgetSoldier_C_HandleMapZoom) == 0x000038, "Wrong size on BP_MapWidgetSoldier_C_HandleMapZoom");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapZoom, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_MapWidgetSoldier_C_HandleMapZoom::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapZoom, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_MapWidgetSoldier_C_HandleMapZoom::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapZoom, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'BP_MapWidgetSoldier_C_HandleMapZoom::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapZoom, K2Node_DynamicCast_AsBPI_HUD) == 0x000010, "Member 'BP_MapWidgetSoldier_C_HandleMapZoom::K2Node_DynamicCast_AsBPI_HUD' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapZoom, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MapWidgetSoldier_C_HandleMapZoom::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapZoom, CallFunc_Get_Map_Core_Map_Core) == 0x000028, "Member 'BP_MapWidgetSoldier_C_HandleMapZoom::CallFunc_Get_Map_Core_Map_Core' has a wrong offset!");
static_assert(offsetof(BP_MapWidgetSoldier_C_HandleMapZoom, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'BP_MapWidgetSoldier_C_HandleMapZoom::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}


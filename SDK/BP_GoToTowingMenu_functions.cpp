#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GoToTowingMenu

#include "Basic.hpp"

#include "BP_GoToTowingMenu_classes.hpp"
#include "BP_GoToTowingMenu_parameters.hpp"


namespace SDK
{

// Function BP_GoToTowingMenu.BP_GoToTowingMenu_C.ExecuteUbergraph_BP_GoToTowingMenu
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GoToTowingMenu_C::ExecuteUbergraph_BP_GoToTowingMenu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GoToTowingMenu_C", "ExecuteUbergraph_BP_GoToTowingMenu");

	Params::BP_GoToTowingMenu_C_ExecuteUbergraph_BP_GoToTowingMenu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GoToTowingMenu.BP_GoToTowingMenu_C.Populate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQRadialButton*                  Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBaseRadialMenu_C*                Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GoToTowingMenu_C::Populate(class USQRadialButton* Widget, class UBaseRadialMenu_C* Menu, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GoToTowingMenu_C", "Populate");

	Params::BP_GoToTowingMenu_C_Populate Parms{};

	Parms.Widget = Widget;
	Parms.Menu = Menu;
	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GoToTowingMenu.BP_GoToTowingMenu_C.OnClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBaseRadialMenu_C*                Radial                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GoToTowingMenu_C::OnClicked(class UBaseRadialMenu_C* Radial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GoToTowingMenu_C", "OnClicked");

	Params::BP_GoToTowingMenu_C_OnClicked Parms{};

	Parms.Radial = Radial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GoToTowingMenu.BP_GoToTowingMenu_C.IsInDriverSeatOfGroundVehicle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsInDriverSeat                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GoToTowingMenu_C::IsInDriverSeatOfGroundVehicle(class AController* Controller, bool* IsInDriverSeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GoToTowingMenu_C", "IsInDriverSeatOfGroundVehicle");

	Params::BP_GoToTowingMenu_C_IsInDriverSeatOfGroundVehicle Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (IsInDriverSeat != nullptr)
		*IsInDriverSeat = Parms.IsInDriverSeat;
}


// Function BP_GoToTowingMenu.BP_GoToTowingMenu_C.SetActiveButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USQRadialButton*                  Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GoToTowingMenu_C::SetActiveButton(bool Active, class USQRadialButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GoToTowingMenu_C", "SetActiveButton");

	Params::BP_GoToTowingMenu_C_SetActiveButton Parms{};

	Parms.Active = Active;
	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GoToTowingMenu.BP_GoToTowingMenu_C.IsEmergencyMoveAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBaseRadialMenu_C*                Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Available                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GoToTowingMenu_C::IsEmergencyMoveAvailable(class UBaseRadialMenu_C* Menu, bool* Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GoToTowingMenu_C", "IsEmergencyMoveAvailable");

	Params::BP_GoToTowingMenu_C_IsEmergencyMoveAvailable Parms{};

	Parms.Menu = Menu;

	UObject::ProcessEvent(Func, &Parms);

	if (Available != nullptr)
		*Available = Parms.Available;
}


// Function BP_GoToTowingMenu.BP_GoToTowingMenu_C.IsPlayerOutOfVehicle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOutOfVehicle                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GoToTowingMenu_C::IsPlayerOutOfVehicle(class AController* Controller, bool* IsOutOfVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GoToTowingMenu_C", "IsPlayerOutOfVehicle");

	Params::BP_GoToTowingMenu_C_IsPlayerOutOfVehicle Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (IsOutOfVehicle != nullptr)
		*IsOutOfVehicle = Parms.IsOutOfVehicle;
}


// Function BP_GoToTowingMenu.BP_GoToTowingMenu_C.IsInStagingPhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    StagingPhaseActive                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GoToTowingMenu_C::IsInStagingPhase(class APlayerController* Controller, bool* StagingPhaseActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GoToTowingMenu_C", "IsInStagingPhase");

	Params::BP_GoToTowingMenu_C_IsInStagingPhase Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (StagingPhaseActive != nullptr)
		*StagingPhaseActive = Parms.StagingPhaseActive;
}


// Function BP_GoToTowingMenu.BP_GoToTowingMenu_C.IsInteractingWithHelicopter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBaseRadialMenu_C*                Menu                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_GoToTowingMenu_C::IsInteractingWithHelicopter(class UBaseRadialMenu_C* Menu, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GoToTowingMenu_C", "IsInteractingWithHelicopter");

	Params::BP_GoToTowingMenu_C_IsInteractingWithHelicopter Parms{};

	Parms.Menu = Menu;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}


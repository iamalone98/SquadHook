#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_VoteItem

#include "Basic.hpp"

#include "Squad_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UMG_VoteItem.UMG_VoteItem_C.VoteItemSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteItem_C_VoteItemSelected__DelegateSignature final
{
public:
	class FName                                   Choice;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteItem_C_VoteItemSelected__DelegateSignature) == 0x000004, "Wrong alignment on UMG_VoteItem_C_VoteItemSelected__DelegateSignature");
static_assert(sizeof(UMG_VoteItem_C_VoteItemSelected__DelegateSignature) == 0x000008, "Wrong size on UMG_VoteItem_C_VoteItemSelected__DelegateSignature");
static_assert(offsetof(UMG_VoteItem_C_VoteItemSelected__DelegateSignature, Choice) == 0x000000, "Member 'UMG_VoteItem_C_VoteItemSelected__DelegateSignature::Choice' has a wrong offset!");

// Function UMG_VoteItem.UMG_VoteItem_C.InfoSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UMG_VoteItem_C_InfoSelected__DelegateSignature final
{
public:
	class FName                                   Param_ChoiceId;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteItem_C_InfoSelected__DelegateSignature) == 0x000004, "Wrong alignment on UMG_VoteItem_C_InfoSelected__DelegateSignature");
static_assert(sizeof(UMG_VoteItem_C_InfoSelected__DelegateSignature) == 0x000008, "Wrong size on UMG_VoteItem_C_InfoSelected__DelegateSignature");
static_assert(offsetof(UMG_VoteItem_C_InfoSelected__DelegateSignature, Param_ChoiceId) == 0x000000, "Member 'UMG_VoteItem_C_InfoSelected__DelegateSignature::Param_ChoiceId' has a wrong offset!");

// Function UMG_VoteItem.UMG_VoteItem_C.ExecuteUbergraph_UMG_VoteItem
// 0x0018 (0x0018 - 0x0000)
struct UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41DB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem) == 0x000008, "Wrong alignment on UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem");
static_assert(sizeof(UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem) == 0x000018, "Wrong size on UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem");
static_assert(offsetof(UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem, EntryPoint) == 0x000000, "Member 'UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'UMG_VoteItem_C_ExecuteUbergraph_UMG_VoteItem::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function UMG_VoteItem.UMG_VoteItem_C.FillFromTexture
// 0x0058 (0x0058 - 0x0000)
struct UMG_VoteItem_C_FillFromTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              Texture;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   TopName;                                           // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   BottomName;                                        // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UMG_VoteItem_C_FillFromTexture) == 0x000008, "Wrong alignment on UMG_VoteItem_C_FillFromTexture");
static_assert(sizeof(UMG_VoteItem_C_FillFromTexture) == 0x000058, "Wrong size on UMG_VoteItem_C_FillFromTexture");
static_assert(offsetof(UMG_VoteItem_C_FillFromTexture, Texture) == 0x000000, "Member 'UMG_VoteItem_C_FillFromTexture::Texture' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_FillFromTexture, TopName) == 0x000028, "Member 'UMG_VoteItem_C_FillFromTexture::TopName' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_FillFromTexture, BottomName) == 0x000040, "Member 'UMG_VoteItem_C_FillFromTexture::BottomName' has a wrong offset!");

// Function UMG_VoteItem.UMG_VoteItem_C.UpdateStatus
// 0x0028 (0x0028 - 0x0000)
struct UMG_VoteItem_C_UpdateStatus final
{
public:
	int32                                         Vote_Count;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Voted_For;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41DC[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteItem_C_UpdateStatus) == 0x000008, "Wrong alignment on UMG_VoteItem_C_UpdateStatus");
static_assert(sizeof(UMG_VoteItem_C_UpdateStatus) == 0x000028, "Wrong size on UMG_VoteItem_C_UpdateStatus");
static_assert(offsetof(UMG_VoteItem_C_UpdateStatus, Vote_Count) == 0x000000, "Member 'UMG_VoteItem_C_UpdateStatus::Vote_Count' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateStatus, Has_Voted_For) == 0x000004, "Member 'UMG_VoteItem_C_UpdateStatus::Has_Voted_For' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateStatus, Temp_byte_Variable) == 0x000005, "Member 'UMG_VoteItem_C_UpdateStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateStatus, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'UMG_VoteItem_C_UpdateStatus::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateStatus, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'UMG_VoteItem_C_UpdateStatus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateStatus, Temp_byte_Variable_1) == 0x000021, "Member 'UMG_VoteItem_C_UpdateStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateStatus, Temp_bool_Variable) == 0x000022, "Member 'UMG_VoteItem_C_UpdateStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateStatus, K2Node_Select_Default) == 0x000023, "Member 'UMG_VoteItem_C_UpdateStatus::K2Node_Select_Default' has a wrong offset!");

// Function UMG_VoteItem.UMG_VoteItem_C.MarkSelected
// 0x0058 (0x0058 - 0x0000)
struct UMG_VoteItem_C_MarkSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41DD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
};
static_assert(alignof(UMG_VoteItem_C_MarkSelected) == 0x000008, "Wrong alignment on UMG_VoteItem_C_MarkSelected");
static_assert(sizeof(UMG_VoteItem_C_MarkSelected) == 0x000058, "Wrong size on UMG_VoteItem_C_MarkSelected");
static_assert(offsetof(UMG_VoteItem_C_MarkSelected, Selected) == 0x000000, "Member 'UMG_VoteItem_C_MarkSelected::Selected' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_MarkSelected, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'UMG_VoteItem_C_MarkSelected::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_MarkSelected, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'UMG_VoteItem_C_MarkSelected::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function UMG_VoteItem.UMG_VoteItem_C.OnVoteUpdated
// 0x0030 (0x0030 - 0x0000)
struct UMG_VoteItem_C_OnVoteUpdated final
{
public:
	class USQVoteSessionClient*                   VoteSession;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerCurrentVotes;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41DE[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQVoteSessionChoiceInfo               CallFunc_GetChoiceState_OutState;                  // 0x0010(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteItem_C_OnVoteUpdated) == 0x000008, "Wrong alignment on UMG_VoteItem_C_OnVoteUpdated");
static_assert(sizeof(UMG_VoteItem_C_OnVoteUpdated) == 0x000030, "Wrong size on UMG_VoteItem_C_OnVoteUpdated");
static_assert(offsetof(UMG_VoteItem_C_OnVoteUpdated, VoteSession) == 0x000000, "Member 'UMG_VoteItem_C_OnVoteUpdated::VoteSession' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_OnVoteUpdated, PlayerCurrentVotes) == 0x000008, "Member 'UMG_VoteItem_C_OnVoteUpdated::PlayerCurrentVotes' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_OnVoteUpdated, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000C, "Member 'UMG_VoteItem_C_OnVoteUpdated::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_OnVoteUpdated, CallFunc_GetChoiceState_OutState) == 0x000010, "Member 'UMG_VoteItem_C_OnVoteUpdated::CallFunc_GetChoiceState_OutState' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_OnVoteUpdated, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'UMG_VoteItem_C_OnVoteUpdated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function UMG_VoteItem.UMG_VoteItem_C.UpdateFlagMaterial
// 0x0130 (0x0130 - 0x0000)
struct UMG_VoteItem_C_UpdateFlagMaterial final
{
public:
	TSoftObjectPtr<class UTexture2D>              FlagTexture;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              TeamTexture;                                       // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              BadgeTexture;                                      // 0x0050(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   TopName;                                           // 0x0078(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   BottomName;                                        // 0x0090(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TSoftObjectPtr<class UTexture2D>              RoleIcon;                                          // 0x00A8(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   RoleName;                                          // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41DF[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E0[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_UnitTypeIcon_C*                      CallFunc_Create_ReturnValue;                       // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_VoteItem_C_UpdateFlagMaterial) == 0x000008, "Wrong alignment on UMG_VoteItem_C_UpdateFlagMaterial");
static_assert(sizeof(UMG_VoteItem_C_UpdateFlagMaterial) == 0x000130, "Wrong size on UMG_VoteItem_C_UpdateFlagMaterial");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, FlagTexture) == 0x000000, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::FlagTexture' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, TeamTexture) == 0x000028, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::TeamTexture' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, BadgeTexture) == 0x000050, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::BadgeTexture' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, TopName) == 0x000078, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::TopName' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, BottomName) == 0x000090, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::BottomName' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, RoleIcon) == 0x0000A8, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::RoleIcon' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, RoleName) == 0x0000D0, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::RoleName' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, CallFunc_GetChildAt_ReturnValue) == 0x0000E8, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000F8, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, K2Node_DynamicCast_AsTexture_2D) == 0x000100, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000110, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, CallFunc_Create_ReturnValue) == 0x000118, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000120, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_UpdateFlagMaterial, CallFunc_AddChild_ReturnValue) == 0x000128, "Member 'UMG_VoteItem_C_UpdateFlagMaterial::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function UMG_VoteItem.UMG_VoteItem_C.GetVisualData
// 0x0078 (0x0078 - 0x0000)
struct UMG_VoteItem_C_GetVisualData final
{
public:
	bool                                          VoteVisible;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Selected;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E1[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   VoteCountText;                                     // 0x0008(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E2[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0048(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
};
static_assert(alignof(UMG_VoteItem_C_GetVisualData) == 0x000008, "Wrong alignment on UMG_VoteItem_C_GetVisualData");
static_assert(sizeof(UMG_VoteItem_C_GetVisualData) == 0x000078, "Wrong size on UMG_VoteItem_C_GetVisualData");
static_assert(offsetof(UMG_VoteItem_C_GetVisualData, VoteVisible) == 0x000000, "Member 'UMG_VoteItem_C_GetVisualData::VoteVisible' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_GetVisualData, Selected) == 0x000001, "Member 'UMG_VoteItem_C_GetVisualData::Selected' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_GetVisualData, VoteCountText) == 0x000008, "Member 'UMG_VoteItem_C_GetVisualData::VoteCountText' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_GetVisualData, Temp_bool_Variable) == 0x000020, "Member 'UMG_VoteItem_C_GetVisualData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_GetVisualData, Temp_text_Variable) == 0x000028, "Member 'UMG_VoteItem_C_GetVisualData::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_GetVisualData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'UMG_VoteItem_C_GetVisualData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_GetVisualData, CallFunc_GetText_ReturnValue) == 0x000048, "Member 'UMG_VoteItem_C_GetVisualData::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_VoteItem_C_GetVisualData, K2Node_Select_Default) == 0x000060, "Member 'UMG_VoteItem_C_GetVisualData::K2Node_Select_Default' has a wrong offset!");

}


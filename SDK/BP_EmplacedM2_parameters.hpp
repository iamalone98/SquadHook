#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EmplacedM2

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_EmplacedM2.BP_EmplacedM2_C.ExecuteUbergraph_BP_EmplacedM2
// 0x0080 (0x0080 - 0x0000)
struct BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0020(0x0018)(HasGetValueTypeHash)
	class USQGameUserSettings*                    CallFunc_GetSquadGameUserSettings_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentWeaponInputEnabled_ReturnValue;  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_1; // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D20[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0068(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2");
static_assert(sizeof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2) == 0x000080, "Wrong size on BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, EntryPoint) == 0x000000, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, K2Node_InputActionEvent_Key) == 0x000008, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, Temp_struct_Variable) == 0x000020, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, CallFunc_GetSquadGameUserSettings_ReturnValue) == 0x000038, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::CallFunc_GetSquadGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, K2Node_InputAxisEvent_AxisValue_1) == 0x000044, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, K2Node_InputAxisEvent_AxisValue) == 0x000048, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, CallFunc_MakeRotator_ReturnValue) == 0x00004C, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, CallFunc_MakeRotator_ReturnValue_1) == 0x000058, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, CallFunc_IsCurrentWeaponInputEnabled_ReturnValue) == 0x000064, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::CallFunc_IsCurrentWeaponInputEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_1) == 0x000065, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::CallFunc_IsCurrentWeaponInputEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2, K2Node_InputActionEvent_Key_1) == 0x000068, "Member 'BP_EmplacedM2_C_ExecuteUbergraph_BP_EmplacedM2::K2Node_InputActionEvent_Key_1' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_42
// 0x0004 (0x0004 - 0x0000)
struct BP_EmplacedM2_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42) == 0x000004, "Wrong alignment on BP_EmplacedM2_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42");
static_assert(sizeof(BP_EmplacedM2_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42) == 0x000004, "Wrong size on BP_EmplacedM2_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42");
static_assert(offsetof(BP_EmplacedM2_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42, AxisValue) == 0x000000, "Member 'BP_EmplacedM2_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_42::AxisValue' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_39
// 0x0004 (0x0004 - 0x0000)
struct BP_EmplacedM2_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39) == 0x000004, "Wrong alignment on BP_EmplacedM2_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39");
static_assert(sizeof(BP_EmplacedM2_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39) == 0x000004, "Wrong size on BP_EmplacedM2_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39");
static_assert(offsetof(BP_EmplacedM2_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39, AxisValue) == 0x000000, "Member 'BP_EmplacedM2_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_39::AxisValue' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.InpActEvt_Focus_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.InpActEvt_Focus_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_EmplacedM2_C_InpActEvt_Focus_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.GetCurrentWeaponInputEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_EmplacedM2_C_GetCurrentWeaponInputEnabled final
{
public:
	bool                                          bInputEnabled;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EmplacedM2_C_GetCurrentWeaponInputEnabled) == 0x000001, "Wrong alignment on BP_EmplacedM2_C_GetCurrentWeaponInputEnabled");
static_assert(sizeof(BP_EmplacedM2_C_GetCurrentWeaponInputEnabled) == 0x000001, "Wrong size on BP_EmplacedM2_C_GetCurrentWeaponInputEnabled");
static_assert(offsetof(BP_EmplacedM2_C_GetCurrentWeaponInputEnabled, bInputEnabled) == 0x000000, "Member 'BP_EmplacedM2_C_GetCurrentWeaponInputEnabled::bInputEnabled' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.IsSoldierAlive
// 0x0028 (0x0028 - 0x0000)
struct BP_EmplacedM2_C_IsSoldierAlive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D21[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicleWeapon*                       K2Node_DynamicCast_AsSQVehicle_Weapon;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D22[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EmplacedM2_C_IsSoldierAlive) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_IsSoldierAlive");
static_assert(sizeof(BP_EmplacedM2_C_IsSoldierAlive) == 0x000028, "Wrong size on BP_EmplacedM2_C_IsSoldierAlive");
static_assert(offsetof(BP_EmplacedM2_C_IsSoldierAlive, ReturnValue) == 0x000000, "Member 'BP_EmplacedM2_C_IsSoldierAlive::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_IsSoldierAlive, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EmplacedM2_C_IsSoldierAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_IsSoldierAlive, K2Node_DynamicCast_AsSQVehicle_Weapon) == 0x000008, "Member 'BP_EmplacedM2_C_IsSoldierAlive::K2Node_DynamicCast_AsSQVehicle_Weapon' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_IsSoldierAlive, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_EmplacedM2_C_IsSoldierAlive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_IsSoldierAlive, CallFunc_GetSoldier_ReturnValue) == 0x000018, "Member 'BP_EmplacedM2_C_IsSoldierAlive::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_IsSoldierAlive, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_EmplacedM2_C_IsSoldierAlive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EmplacedM2_C_IsSoldierAlive, CallFunc_IsAlive_ReturnValue) == 0x000021, "Member 'BP_EmplacedM2_C_IsSoldierAlive::CallFunc_IsAlive_ReturnValue' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.GetWeaponAttachComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EmplacedM2_C_GetWeaponAttachComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_GetWeaponAttachComponent) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_GetWeaponAttachComponent");
static_assert(sizeof(BP_EmplacedM2_C_GetWeaponAttachComponent) == 0x000008, "Wrong size on BP_EmplacedM2_C_GetWeaponAttachComponent");
static_assert(offsetof(BP_EmplacedM2_C_GetWeaponAttachComponent, ReturnValue) == 0x000000, "Member 'BP_EmplacedM2_C_GetWeaponAttachComponent::ReturnValue' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.Get3PAttachComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EmplacedM2_C_Get3PAttachComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_Get3PAttachComponent) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_Get3PAttachComponent");
static_assert(sizeof(BP_EmplacedM2_C_Get3PAttachComponent) == 0x000008, "Wrong size on BP_EmplacedM2_C_Get3PAttachComponent");
static_assert(offsetof(BP_EmplacedM2_C_Get3PAttachComponent, ReturnValue) == 0x000000, "Member 'BP_EmplacedM2_C_Get3PAttachComponent::ReturnValue' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.Get1PAttachComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EmplacedM2_C_Get1PAttachComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_Get1PAttachComponent) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_Get1PAttachComponent");
static_assert(sizeof(BP_EmplacedM2_C_Get1PAttachComponent) == 0x000008, "Wrong size on BP_EmplacedM2_C_Get1PAttachComponent");
static_assert(offsetof(BP_EmplacedM2_C_Get1PAttachComponent, ReturnValue) == 0x000000, "Member 'BP_EmplacedM2_C_Get1PAttachComponent::ReturnValue' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.GetMasterPoseComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EmplacedM2_C_GetMasterPoseComponent final
{
public:
	class USkinnedMeshComponent*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_GetMasterPoseComponent) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_GetMasterPoseComponent");
static_assert(sizeof(BP_EmplacedM2_C_GetMasterPoseComponent) == 0x000008, "Wrong size on BP_EmplacedM2_C_GetMasterPoseComponent");
static_assert(offsetof(BP_EmplacedM2_C_GetMasterPoseComponent, ReturnValue) == 0x000000, "Member 'BP_EmplacedM2_C_GetMasterPoseComponent::ReturnValue' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.GetCameraComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EmplacedM2_C_GetCameraComponent final
{
public:
	class UCameraComponent*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_GetCameraComponent) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_GetCameraComponent");
static_assert(sizeof(BP_EmplacedM2_C_GetCameraComponent) == 0x000008, "Wrong size on BP_EmplacedM2_C_GetCameraComponent");
static_assert(offsetof(BP_EmplacedM2_C_GetCameraComponent, ReturnValue) == 0x000000, "Member 'BP_EmplacedM2_C_GetCameraComponent::ReturnValue' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.GetDefaultCameraLocationComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EmplacedM2_C_GetDefaultCameraLocationComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_GetDefaultCameraLocationComponent) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_GetDefaultCameraLocationComponent");
static_assert(sizeof(BP_EmplacedM2_C_GetDefaultCameraLocationComponent) == 0x000008, "Wrong size on BP_EmplacedM2_C_GetDefaultCameraLocationComponent");
static_assert(offsetof(BP_EmplacedM2_C_GetDefaultCameraLocationComponent, ReturnValue) == 0x000000, "Member 'BP_EmplacedM2_C_GetDefaultCameraLocationComponent::ReturnValue' has a wrong offset!");

// Function BP_EmplacedM2.BP_EmplacedM2_C.GetADSCameraLocationComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EmplacedM2_C_GetADSCameraLocationComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EmplacedM2_C_GetADSCameraLocationComponent) == 0x000008, "Wrong alignment on BP_EmplacedM2_C_GetADSCameraLocationComponent");
static_assert(sizeof(BP_EmplacedM2_C_GetADSCameraLocationComponent) == 0x000008, "Wrong size on BP_EmplacedM2_C_GetADSCameraLocationComponent");
static_assert(offsetof(BP_EmplacedM2_C_GetADSCameraLocationComponent, ReturnValue) == 0x000000, "Member 'BP_EmplacedM2_C_GetADSCameraLocationComponent::ReturnValue' has a wrong offset!");

}


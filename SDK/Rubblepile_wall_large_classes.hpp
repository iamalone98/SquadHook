#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Rubblepile_wall_large

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass rubblepile_wall_large.rubblepile_wall_large_C
// 0x0030 (0x0258 - 0x0228)
class ARubblepile_wall_large_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Rubble_cut2;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Rubble_cut1;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tire_small_0;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   barral3_0;                                         // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Rubblepile5_0;                                     // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene1;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"rubblepile_wall_large_C">();
	}
	static class ARubblepile_wall_large_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARubblepile_wall_large_C>();
	}
};
static_assert(alignof(ARubblepile_wall_large_C) == 0x000008, "Wrong alignment on ARubblepile_wall_large_C");
static_assert(sizeof(ARubblepile_wall_large_C) == 0x000258, "Wrong size on ARubblepile_wall_large_C");
static_assert(offsetof(ARubblepile_wall_large_C, Rubble_cut2) == 0x000228, "Member 'ARubblepile_wall_large_C::Rubble_cut2' has a wrong offset!");
static_assert(offsetof(ARubblepile_wall_large_C, Rubble_cut1) == 0x000230, "Member 'ARubblepile_wall_large_C::Rubble_cut1' has a wrong offset!");
static_assert(offsetof(ARubblepile_wall_large_C, Tire_small_0) == 0x000238, "Member 'ARubblepile_wall_large_C::Tire_small_0' has a wrong offset!");
static_assert(offsetof(ARubblepile_wall_large_C, barral3_0) == 0x000240, "Member 'ARubblepile_wall_large_C::barral3_0' has a wrong offset!");
static_assert(offsetof(ARubblepile_wall_large_C, Rubblepile5_0) == 0x000248, "Member 'ARubblepile_wall_large_C::Rubblepile5_0' has a wrong offset!");
static_assert(offsetof(ARubblepile_wall_large_C, Scene1) == 0x000250, "Member 'ARubblepile_wall_large_C::Scene1' has a wrong offset!");

}


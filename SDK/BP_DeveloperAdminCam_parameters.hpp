#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeveloperAdminCam

#include "Basic.hpp"

#include "Squad_structs.hpp"
#include "Engine_structs.hpp"
#include "UIZOrderStruct_structs.hpp"


namespace SDK::Params
{

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ExecuteUbergraph_BP_DeveloperAdminCam
// 0x0190 (0x0190 - 0x0000)
struct BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3080[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Selected)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* TrackedActor)>   K2Node_CreateDelegate_OutputDelegate_3;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3081[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3082[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CameraManInterface_C*                CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMouseMode                                    K2Node_CustomEvent_NewMode;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3083[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* ActorRef, class USQVehicleComponent* Component, float Amount, class UClass* Type)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3084[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor_2;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleComponent*                    K2Node_CustomEvent_Component;                      // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3085[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_DamageType;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3086[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Actor)>          K2Node_CreateDelegate_OutputDelegate_5;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3087[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor_1;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             K2Node_CustomEvent_Soldier;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASQSoldier* Soldier)>    K2Node_CreateDelegate_OutputDelegate_6;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	class ASQPlayerController*                    CallFunc_GetSquadPlayerController_Return_Value;    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3088[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_CustomEvent_Vehicle;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3089[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Team;                           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIZOrderStruct                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308A[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployable*                          K2Node_DynamicCast_AsSQDeployable;                 // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308B[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPawn*                                K2Node_DynamicCast_AsSQPawn;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQTeam                                       Temp_byte_Variable;                                // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       Temp_byte_Variable_1;                              // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       Temp_byte_Variable_2;                              // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308C[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BaseDamage;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308D[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDamageType>                K2Node_CustomEvent_DamageTypeClass;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQTeam                                       K2Node_Select_Default;                             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308E[0x1];                                     // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam");
static_assert(sizeof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam) == 0x000190, "Wrong size on BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, EntryPoint) == 0x000000, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_IsVisible_ReturnValue) == 0x000024, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_IsHovered_ReturnValue) == 0x000025, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_Not_PreBool_ReturnValue) == 0x000026, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_BooleanAND_ReturnValue) == 0x000027, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_Event_EndPlayReason) == 0x000028, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CreateDelegate_OutputDelegate_3) == 0x00003C, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_Event_Actor) == 0x000050, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_Create_ReturnValue) == 0x000068, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_NewMode) == 0x000070, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_NewMode' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_GetPlayerController_ReturnValue_1) == 0x000078, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CreateDelegate_OutputDelegate_4) == 0x000080, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_IsInputKeyDown_ReturnValue) == 0x000090, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_Actor_2) == 0x000098, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_Component) == 0x0000A0, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_Damage) == 0x0000A8, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_DamageType) == 0x0000B0, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000BC, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_Actor_1) == 0x0000D0, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_Soldier) == 0x0000D8, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_Soldier' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000E0, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_GetSquadPlayerController_Return_Value) == 0x0000F0, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_GetSquadPlayerController_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_GetSoldier_ReturnValue) == 0x0000F8, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_IsVisible_ReturnValue_1) == 0x000100, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_IsValid_ReturnValue_2) == 0x000101, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_Vehicle) == 0x000108, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_Vehicle' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_IsValid_ReturnValue_3) == 0x000110, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_Actor) == 0x000118, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_Team) == 0x000120, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_GetDataTableRowFromName_OutRow) == 0x000124, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000128, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_DynamicCast_AsSQDeployable) == 0x000130, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_DynamicCast_AsSQDeployable' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_DynamicCast_AsSQPawn) == 0x000140, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_DynamicCast_AsSQPawn' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, Temp_byte_Variable) == 0x000149, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, Temp_byte_Variable_1) == 0x00014A, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, Temp_byte_Variable_2) == 0x00014B, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_DamagedActor) == 0x000150, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_BaseDamage) == 0x000158, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CustomEvent_DamageTypeClass) == 0x000160, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CustomEvent_DamageTypeClass' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, Temp_int_Variable) == 0x000168, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_ApplyDamage_ReturnValue) == 0x00016C, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_DynamicCast_AsSQVehicle) == 0x000170, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_DynamicCast_bSuccess_2) == 0x000178, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_Select_Default) == 0x000179, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00017A, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, K2Node_CreateDelegate_OutputDelegate_7) == 0x00017C, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam, CallFunc_IsValid_ReturnValue_4) == 0x00018C, "Member 'BP_DeveloperAdminCam_C_ExecuteUbergraph_BP_DeveloperAdminCam::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.Server_DamageVehicle
// 0x0018 (0x0018 - 0x0000)
struct BP_DeveloperAdminCam_C_Server_DamageVehicle final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseDamage;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UDamageType>                DamageTypeClass;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_Server_DamageVehicle) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_Server_DamageVehicle");
static_assert(sizeof(BP_DeveloperAdminCam_C_Server_DamageVehicle) == 0x000018, "Wrong size on BP_DeveloperAdminCam_C_Server_DamageVehicle");
static_assert(offsetof(BP_DeveloperAdminCam_C_Server_DamageVehicle, DamagedActor) == 0x000000, "Member 'BP_DeveloperAdminCam_C_Server_DamageVehicle::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_Server_DamageVehicle, BaseDamage) == 0x000008, "Member 'BP_DeveloperAdminCam_C_Server_DamageVehicle::BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_Server_DamageVehicle, DamageTypeClass) == 0x000010, "Member 'BP_DeveloperAdminCam_C_Server_DamageVehicle::DamageTypeClass' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SERVER_SetTeam
// 0x0010 (0x0010 - 0x0000)
struct BP_DeveloperAdminCam_C_SERVER_SetTeam final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_SERVER_SetTeam) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_SERVER_SetTeam");
static_assert(sizeof(BP_DeveloperAdminCam_C_SERVER_SetTeam) == 0x000010, "Wrong size on BP_DeveloperAdminCam_C_SERVER_SetTeam");
static_assert(offsetof(BP_DeveloperAdminCam_C_SERVER_SetTeam, Actor) == 0x000000, "Member 'BP_DeveloperAdminCam_C_SERVER_SetTeam::Actor' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SERVER_SetTeam, Team) == 0x000008, "Member 'BP_DeveloperAdminCam_C_SERVER_SetTeam::Team' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.VehicleDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_DeveloperAdminCam_C_VehicleDestroyed final
{
public:
	class ASQVehicle*                             Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_VehicleDestroyed) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_VehicleDestroyed");
static_assert(sizeof(BP_DeveloperAdminCam_C_VehicleDestroyed) == 0x000008, "Wrong size on BP_DeveloperAdminCam_C_VehicleDestroyed");
static_assert(offsetof(BP_DeveloperAdminCam_C_VehicleDestroyed, Vehicle) == 0x000000, "Member 'BP_DeveloperAdminCam_C_VehicleDestroyed::Vehicle' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.Server_PossessSelection
// 0x0008 (0x0008 - 0x0000)
struct BP_DeveloperAdminCam_C_Server_PossessSelection final
{
public:
	class ASQSoldier*                             Soldier;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_Server_PossessSelection) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_Server_PossessSelection");
static_assert(sizeof(BP_DeveloperAdminCam_C_Server_PossessSelection) == 0x000008, "Wrong size on BP_DeveloperAdminCam_C_Server_PossessSelection");
static_assert(offsetof(BP_DeveloperAdminCam_C_Server_PossessSelection, Soldier) == 0x000000, "Member 'BP_DeveloperAdminCam_C_Server_PossessSelection::Soldier' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.Server_Destroy
// 0x0008 (0x0008 - 0x0000)
struct BP_DeveloperAdminCam_C_Server_Destroy final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_Server_Destroy) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_Server_Destroy");
static_assert(sizeof(BP_DeveloperAdminCam_C_Server_Destroy) == 0x000008, "Wrong size on BP_DeveloperAdminCam_C_Server_Destroy");
static_assert(offsetof(BP_DeveloperAdminCam_C_Server_Destroy, Actor) == 0x000000, "Member 'BP_DeveloperAdminCam_C_Server_Destroy::Actor' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.Client_ApplyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_DeveloperAdminCam_C_Client_ApplyDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USQVehicleComponent*                    Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3090[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DamageType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_Client_ApplyDamage) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_Client_ApplyDamage");
static_assert(sizeof(BP_DeveloperAdminCam_C_Client_ApplyDamage) == 0x000020, "Wrong size on BP_DeveloperAdminCam_C_Client_ApplyDamage");
static_assert(offsetof(BP_DeveloperAdminCam_C_Client_ApplyDamage, Actor) == 0x000000, "Member 'BP_DeveloperAdminCam_C_Client_ApplyDamage::Actor' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_Client_ApplyDamage, Component) == 0x000008, "Member 'BP_DeveloperAdminCam_C_Client_ApplyDamage::Component' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_Client_ApplyDamage, Damage) == 0x000010, "Member 'BP_DeveloperAdminCam_C_Client_ApplyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_Client_ApplyDamage, DamageType) == 0x000018, "Member 'BP_DeveloperAdminCam_C_Client_ApplyDamage::DamageType' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ClientSetMousemode
// 0x0001 (0x0001 - 0x0000)
struct BP_DeveloperAdminCam_C_ClientSetMousemode final
{
public:
	EMouseMode                                    NewMode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_ClientSetMousemode) == 0x000001, "Wrong alignment on BP_DeveloperAdminCam_C_ClientSetMousemode");
static_assert(sizeof(BP_DeveloperAdminCam_C_ClientSetMousemode) == 0x000001, "Wrong size on BP_DeveloperAdminCam_C_ClientSetMousemode");
static_assert(offsetof(BP_DeveloperAdminCam_C_ClientSetMousemode, NewMode) == 0x000000, "Member 'BP_DeveloperAdminCam_C_ClientSetMousemode::NewMode' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.OnActorPlaced
// 0x0008 (0x0008 - 0x0000)
struct BP_DeveloperAdminCam_C_OnActorPlaced final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_OnActorPlaced) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_OnActorPlaced");
static_assert(sizeof(BP_DeveloperAdminCam_C_OnActorPlaced) == 0x000008, "Wrong size on BP_DeveloperAdminCam_C_OnActorPlaced");
static_assert(offsetof(BP_DeveloperAdminCam_C_OnActorPlaced, Actor) == 0x000000, "Member 'BP_DeveloperAdminCam_C_OnActorPlaced::Actor' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_DeveloperAdminCam_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_DeveloperAdminCam_C_ReceiveEndPlay");
static_assert(sizeof(BP_DeveloperAdminCam_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_DeveloperAdminCam_C_ReceiveEndPlay");
static_assert(offsetof(BP_DeveloperAdminCam_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_DeveloperAdminCam_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SelectVehicle
// 0x0018 (0x0018 - 0x0000)
struct BP_DeveloperAdminCam_C_SelectVehicle final
{
public:
	class ASQVehicle*                             Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASQVehicle* Vehicle)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_DeveloperAdminCam_C_SelectVehicle) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_SelectVehicle");
static_assert(sizeof(BP_DeveloperAdminCam_C_SelectVehicle) == 0x000018, "Wrong size on BP_DeveloperAdminCam_C_SelectVehicle");
static_assert(offsetof(BP_DeveloperAdminCam_C_SelectVehicle, Vehicle) == 0x000000, "Member 'BP_DeveloperAdminCam_C_SelectVehicle::Vehicle' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SelectVehicle, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_DeveloperAdminCam_C_SelectVehicle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SelectDeployable
// 0x0008 (0x0008 - 0x0000)
struct BP_DeveloperAdminCam_C_SelectDeployable final
{
public:
	class ASQDeployable*                          Deployable;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_SelectDeployable) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_SelectDeployable");
static_assert(sizeof(BP_DeveloperAdminCam_C_SelectDeployable) == 0x000008, "Wrong size on BP_DeveloperAdminCam_C_SelectDeployable");
static_assert(offsetof(BP_DeveloperAdminCam_C_SelectDeployable, Deployable) == 0x000000, "Member 'BP_DeveloperAdminCam_C_SelectDeployable::Deployable' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SelectPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_DeveloperAdminCam_C_SelectPlayer final
{
public:
	class ASQSoldier*                             Soldier;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_SelectPlayer) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_SelectPlayer");
static_assert(sizeof(BP_DeveloperAdminCam_C_SelectPlayer) == 0x000008, "Wrong size on BP_DeveloperAdminCam_C_SelectPlayer");
static_assert(offsetof(BP_DeveloperAdminCam_C_SelectPlayer, Soldier) == 0x000000, "Member 'BP_DeveloperAdminCam_C_SelectPlayer::Soldier' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.On Selection Updated
// 0x0050 (0x0050 - 0x0000)
struct BP_DeveloperAdminCam_C_On_Selection_Updated final
{
public:
	class AActor*                                 Selected;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3091[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             K2Node_DynamicCast_AsSQSoldier;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3092[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployable*                          K2Node_DynamicCast_AsSQDeployable;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3093[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3094[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQVehicle*                             K2Node_DynamicCast_AsSQVehicle;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeveloperAdminCam_C_On_Selection_Updated) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_On_Selection_Updated");
static_assert(sizeof(BP_DeveloperAdminCam_C_On_Selection_Updated) == 0x000050, "Wrong size on BP_DeveloperAdminCam_C_On_Selection_Updated");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, Selected) == 0x000000, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::Selected' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, CallFunc_IsHovered_ReturnValue) == 0x000009, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, K2Node_DynamicCast_AsSQSoldier) == 0x000010, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::K2Node_DynamicCast_AsSQSoldier' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, K2Node_DynamicCast_AsSQDeployable) == 0x000020, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::K2Node_DynamicCast_AsSQDeployable' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, K2Node_DynamicCast_AsSQVehicle) == 0x000040, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::K2Node_DynamicCast_AsSQVehicle' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selection_Updated, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_DeveloperAdminCam_C_On_Selection_Updated::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.On Selected Destroyed
// 0x0010 (0x0010 - 0x0000)
struct BP_DeveloperAdminCam_C_On_Selected_Destroyed final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeveloperAdminCam_C_On_Selected_Destroyed) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_On_Selected_Destroyed");
static_assert(sizeof(BP_DeveloperAdminCam_C_On_Selected_Destroyed) == 0x000010, "Wrong size on BP_DeveloperAdminCam_C_On_Selected_Destroyed");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selected_Destroyed, Actor) == 0x000000, "Member 'BP_DeveloperAdminCam_C_On_Selected_Destroyed::Actor' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_On_Selected_Destroyed, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_DeveloperAdminCam_C_On_Selected_Destroyed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.OnActorTrackStart
// 0x0008 (0x0008 - 0x0000)
struct BP_DeveloperAdminCam_C_OnActorTrackStart final
{
public:
	class AActor*                                 TrackedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_OnActorTrackStart) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_OnActorTrackStart");
static_assert(sizeof(BP_DeveloperAdminCam_C_OnActorTrackStart) == 0x000008, "Wrong size on BP_DeveloperAdminCam_C_OnActorTrackStart");
static_assert(offsetof(BP_DeveloperAdminCam_C_OnActorTrackStart, TrackedActor) == 0x000000, "Member 'BP_DeveloperAdminCam_C_OnActorTrackStart::TrackedActor' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.ApplyDamageToVehicle
// 0x0018 (0x0018 - 0x0000)
struct BP_DeveloperAdminCam_C_ApplyDamageToVehicle final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3095[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Type;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_ApplyDamageToVehicle) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_ApplyDamageToVehicle");
static_assert(sizeof(BP_DeveloperAdminCam_C_ApplyDamageToVehicle) == 0x000018, "Wrong size on BP_DeveloperAdminCam_C_ApplyDamageToVehicle");
static_assert(offsetof(BP_DeveloperAdminCam_C_ApplyDamageToVehicle, ActorRef) == 0x000000, "Member 'BP_DeveloperAdminCam_C_ApplyDamageToVehicle::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ApplyDamageToVehicle, Amount) == 0x000008, "Member 'BP_DeveloperAdminCam_C_ApplyDamageToVehicle::Amount' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_ApplyDamageToVehicle, Type) == 0x000010, "Member 'BP_DeveloperAdminCam_C_ApplyDamageToVehicle::Type' has a wrong offset!");

// Function BP_DeveloperAdminCam.BP_DeveloperAdminCam_C.SetTeam
// 0x0038 (0x0038 - 0x0000)
struct BP_DeveloperAdminCam_C_SetTeam final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3096[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQDeployable*                          K2Node_DynamicCast_AsSQDeployable;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3097[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQPawn*                                K2Node_DynamicCast_AsSQPawn;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESQTeam                                       Temp_byte_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       Temp_byte_Variable_2;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3098[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESQTeam                                       K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeveloperAdminCam_C_SetTeam) == 0x000008, "Wrong alignment on BP_DeveloperAdminCam_C_SetTeam");
static_assert(sizeof(BP_DeveloperAdminCam_C_SetTeam) == 0x000038, "Wrong size on BP_DeveloperAdminCam_C_SetTeam");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, Actor) == 0x000000, "Member 'BP_DeveloperAdminCam_C_SetTeam::Actor' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, Temp_byte_Variable) == 0x000008, "Member 'BP_DeveloperAdminCam_C_SetTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, K2Node_DynamicCast_AsSQDeployable) == 0x000010, "Member 'BP_DeveloperAdminCam_C_SetTeam::K2Node_DynamicCast_AsSQDeployable' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DeveloperAdminCam_C_SetTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, K2Node_DynamicCast_AsSQPawn) == 0x000020, "Member 'BP_DeveloperAdminCam_C_SetTeam::K2Node_DynamicCast_AsSQPawn' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_DeveloperAdminCam_C_SetTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, Temp_byte_Variable_1) == 0x000029, "Member 'BP_DeveloperAdminCam_C_SetTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, Temp_byte_Variable_2) == 0x00002A, "Member 'BP_DeveloperAdminCam_C_SetTeam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, Temp_int_Variable) == 0x00002C, "Member 'BP_DeveloperAdminCam_C_SetTeam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeveloperAdminCam_C_SetTeam, K2Node_Select_Default) == 0x000030, "Member 'BP_DeveloperAdminCam_C_SetTeam::K2Node_Select_Default' has a wrong offset!");

}


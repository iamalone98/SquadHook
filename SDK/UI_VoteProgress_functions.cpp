#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_VoteProgress

#include "Basic.hpp"

#include "UI_VoteProgress_classes.hpp"
#include "UI_VoteProgress_parameters.hpp"


namespace SDK
{

// Function UI_VoteProgress.UI_VoteProgress_C.RequestMapInfo__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UUI_VoteProgress_C::RequestMapInfo__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "RequestMapInfo__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_VoteProgress.UI_VoteProgress_C.RequestFactionInfo__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UUI_VoteProgress_C::RequestFactionInfo__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "RequestFactionInfo__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_VoteProgress.UI_VoteProgress_C.ExecuteUbergraph_UI_VoteProgress
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_VoteProgress_C::ExecuteUbergraph_UI_VoteProgress(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "ExecuteUbergraph_UI_VoteProgress");

	Params::UI_VoteProgress_C_ExecuteUbergraph_UI_VoteProgress Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteProgress.UI_VoteProgress_C.BndEvt__UI_VoteProgress_FactionInfo_K2Node_ComponentBoundEvent_1_InfoClicked__DelegateSignature
// (BlueprintEvent)

void UUI_VoteProgress_C::BndEvt__UI_VoteProgress_FactionInfo_K2Node_ComponentBoundEvent_1_InfoClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "BndEvt__UI_VoteProgress_FactionInfo_K2Node_ComponentBoundEvent_1_InfoClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_VoteProgress.UI_VoteProgress_C.BndEvt__UI_VoteProgress_MapInfo_K2Node_ComponentBoundEvent_0_InfoClicked__DelegateSignature
// (BlueprintEvent)

void UUI_VoteProgress_C::BndEvt__UI_VoteProgress_MapInfo_K2Node_ComponentBoundEvent_0_InfoClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "BndEvt__UI_VoteProgress_MapInfo_K2Node_ComponentBoundEvent_0_InfoClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_VoteProgress.UI_VoteProgress_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_VoteProgress_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_VoteProgress.UI_VoteProgress_C.UpdateTexts
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_VoteProgress_C::UpdateTexts(TArray<class FText>& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "UpdateTexts");

	Params::UI_VoteProgress_C_UpdateTexts Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);

	InText = std::move(Parms.InText);
}


// Function UI_VoteProgress.UI_VoteProgress_C.UpdateSubtexts
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_VoteProgress_C::UpdateSubtexts(TArray<class FText>& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "UpdateSubtexts");

	Params::UI_VoteProgress_C_UpdateSubtexts Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);

	InText = std::move(Parms.InText);
}


// Function UI_VoteProgress.UI_VoteProgress_C.MarkActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_VoteProgress_C::MarkActive(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "MarkActive");

	Params::UI_VoteProgress_C_MarkActive Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteProgress.UI_VoteProgress_C.MakeTextActive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_VoteProgress_C::MakeTextActive(class UTextBlock* Text, bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "MakeTextActive");

	Params::UI_VoteProgress_C_MakeTextActive Parms{};

	Parms.Text = Text;
	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteProgress.UI_VoteProgress_C.MakeTextGrayed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Grayed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTextBlock*                       InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_VoteProgress_C::MakeTextGrayed(bool Grayed, class UTextBlock* InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "MakeTextGrayed");

	Params::UI_VoteProgress_C_MakeTextGrayed Parms{};

	Parms.Grayed = Grayed;
	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_VoteProgress.UI_VoteProgress_C.GetSubtext
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             OutSubtext                                             (Parm, OutParm)

void UUI_VoteProgress_C::GetSubtext(int32 Param_Index, class FText* OutSubtext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "GetSubtext");

	Params::UI_VoteProgress_C_GetSubtext Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (OutSubtext != nullptr)
		*OutSubtext = std::move(Parms.OutSubtext);
}


// Function UI_VoteProgress.UI_VoteProgress_C.ShowMapInfoButton
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_VoteProgress_C::ShowMapInfoButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "ShowMapInfoButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_VoteProgress.UI_VoteProgress_C.ShowFactionInfoButton
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_VoteProgress_C::ShowFactionInfoButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_VoteProgress_C", "ShowFactionInfoButton");

	UObject::ProcessEvent(Func, nullptr);
}

}


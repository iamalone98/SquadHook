#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ModTooltip

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_ModTooltip.W_ModTooltip_C.ExecuteUbergraph_W_ModTooltip
// 0x0060 (0x0060 - 0x0000)
struct W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1771[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0008(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip) == 0x000008, "Wrong alignment on W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip");
static_assert(sizeof(W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip) == 0x000060, "Wrong size on W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip");
static_assert(offsetof(W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip, EntryPoint) == 0x000000, "Member 'W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip, CallFunc_Conv_StringToText_ReturnValue) == 0x000008, "Member 'W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip, K2Node_Event_MyGeometry) == 0x000020, "Member 'W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip, K2Node_Event_InDeltaTime) == 0x000058, "Member 'W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip, CallFunc_IsHovered_ReturnValue) == 0x00005C, "Member 'W_ModTooltip_C_ExecuteUbergraph_W_ModTooltip::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function W_ModTooltip.W_ModTooltip_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_ModTooltip_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ModTooltip_C_Tick) == 0x000004, "Wrong alignment on W_ModTooltip_C_Tick");
static_assert(sizeof(W_ModTooltip_C_Tick) == 0x00003C, "Wrong size on W_ModTooltip_C_Tick");
static_assert(offsetof(W_ModTooltip_C_Tick, MyGeometry) == 0x000000, "Member 'W_ModTooltip_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Tick, InDeltaTime) == 0x000038, "Member 'W_ModTooltip_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_ModTooltip.W_ModTooltip_C.Display Mods
// 0x0020 (0x0020 - 0x0000)
struct W_ModTooltip_C_Display_Mods final
{
public:
	class UW_ModTooltipItem_C*                    CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1772[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ModTooltip_C_Display_Mods) == 0x000008, "Wrong alignment on W_ModTooltip_C_Display_Mods");
static_assert(sizeof(W_ModTooltip_C_Display_Mods) == 0x000020, "Wrong size on W_ModTooltip_C_Display_Mods");
static_assert(offsetof(W_ModTooltip_C_Display_Mods, CallFunc_Create_ReturnValue) == 0x000000, "Member 'W_ModTooltip_C_Display_Mods::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Display_Mods, Temp_int_Variable) == 0x000008, "Member 'W_ModTooltip_C_Display_Mods::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Display_Mods, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_ModTooltip_C_Display_Mods::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Display_Mods, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'W_ModTooltip_C_Display_Mods::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Display_Mods, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'W_ModTooltip_C_Display_Mods::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Display_Mods, CallFunc_AddChildToWrapBox_ReturnValue) == 0x000018, "Member 'W_ModTooltip_C_Display_Mods::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");

// Function W_ModTooltip.W_ModTooltip_C.Get_TB_Whitelist_Text_0
// 0x00A8 (0x00A8 - 0x0000)
struct W_ModTooltip_C_Get_TB_Whitelist_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1773[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1774[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	bool                                          CallFunc_Is_Modded_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Whitelisted_Is_Whitelisted;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1775[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0090(0x0018)()
};
static_assert(alignof(W_ModTooltip_C_Get_TB_Whitelist_Text_0) == 0x000008, "Wrong alignment on W_ModTooltip_C_Get_TB_Whitelist_Text_0");
static_assert(sizeof(W_ModTooltip_C_Get_TB_Whitelist_Text_0) == 0x0000A8, "Wrong size on W_ModTooltip_C_Get_TB_Whitelist_Text_0");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, ReturnValue) == 0x000000, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, Temp_bool_Variable) == 0x000018, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, Temp_text_Variable) == 0x000020, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, Temp_bool_Variable_1) == 0x000038, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, Temp_text_Variable_1) == 0x000040, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, Temp_text_Variable_2) == 0x000058, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, CallFunc_Is_Modded_ReturnValue) == 0x000070, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::CallFunc_Is_Modded_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, CallFunc_Is_Whitelisted_Is_Whitelisted) == 0x000071, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::CallFunc_Is_Whitelisted_Is_Whitelisted' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, K2Node_Select_Default) == 0x000078, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Get_TB_Whitelist_Text_0, K2Node_Select_Default_1) == 0x000090, "Member 'W_ModTooltip_C_Get_TB_Whitelist_Text_0::K2Node_Select_Default_1' has a wrong offset!");

// Function W_ModTooltip.W_ModTooltip_C.Is Whitelisted
// 0x0001 (0x0001 - 0x0000)
struct W_ModTooltip_C_Is_Whitelisted final
{
public:
	bool                                          Param_Is_Whitelisted;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ModTooltip_C_Is_Whitelisted) == 0x000001, "Wrong alignment on W_ModTooltip_C_Is_Whitelisted");
static_assert(sizeof(W_ModTooltip_C_Is_Whitelisted) == 0x000001, "Wrong size on W_ModTooltip_C_Is_Whitelisted");
static_assert(offsetof(W_ModTooltip_C_Is_Whitelisted, Param_Is_Whitelisted) == 0x000000, "Member 'W_ModTooltip_C_Is_Whitelisted::Param_Is_Whitelisted' has a wrong offset!");

// Function W_ModTooltip.W_ModTooltip_C.Is Modded
// 0x0001 (0x0001 - 0x0000)
struct W_ModTooltip_C_Is_Modded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_ModTooltip_C_Is_Modded) == 0x000001, "Wrong alignment on W_ModTooltip_C_Is_Modded");
static_assert(sizeof(W_ModTooltip_C_Is_Modded) == 0x000001, "Wrong size on W_ModTooltip_C_Is_Modded");
static_assert(offsetof(W_ModTooltip_C_Is_Modded, ReturnValue) == 0x000000, "Member 'W_ModTooltip_C_Is_Modded::ReturnValue' has a wrong offset!");

// Function W_ModTooltip.W_ModTooltip_C.Set Position
// 0x0090 (0x0090 - 0x0000)
struct W_ModTooltip_C_Set_Position final
{
public:
	bool                                          L_Mouse_Bottom_Screen;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Mouse_Right_screen;                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1776[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1777[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1778[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1779[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_177A[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ModTooltip_C_Set_Position) == 0x000008, "Wrong alignment on W_ModTooltip_C_Set_Position");
static_assert(sizeof(W_ModTooltip_C_Set_Position) == 0x000090, "Wrong size on W_ModTooltip_C_Set_Position");
static_assert(offsetof(W_ModTooltip_C_Set_Position, L_Mouse_Bottom_Screen) == 0x000000, "Member 'W_ModTooltip_C_Set_Position::L_Mouse_Bottom_Screen' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, L_Mouse_Right_screen) == 0x000001, "Member 'W_ModTooltip_C_Set_Position::L_Mouse_Right_screen' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, Temp_bool_Variable) == 0x000002, "Member 'W_ModTooltip_C_Set_Position::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, Temp_float_Variable) == 0x000004, "Member 'W_ModTooltip_C_Set_Position::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, Temp_float_Variable_1) == 0x000008, "Member 'W_ModTooltip_C_Set_Position::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, Temp_bool_Variable_1) == 0x00000C, "Member 'W_ModTooltip_C_Set_Position::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, Temp_float_Variable_2) == 0x000010, "Member 'W_ModTooltip_C_Set_Position::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, Temp_float_Variable_3) == 0x000014, "Member 'W_ModTooltip_C_Set_Position::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_GetViewportScale_ReturnValue) == 0x000018, "Member 'W_ModTooltip_C_Set_Position::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_GetViewportScale_ReturnValue_1) == 0x00001C, "Member 'W_ModTooltip_C_Set_Position::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'W_ModTooltip_C_Set_Position::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, K2Node_Select_Default) == 0x000024, "Member 'W_ModTooltip_C_Set_Position::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, K2Node_Select_Default_1) == 0x000028, "Member 'W_ModTooltip_C_Set_Position::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_GetViewportSize_ReturnValue) == 0x00002C, "Member 'W_ModTooltip_C_Set_Position::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'W_ModTooltip_C_Set_Position::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00003C, "Member 'W_ModTooltip_C_Set_Position::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_BreakVector2D_X) == 0x000044, "Member 'W_ModTooltip_C_Set_Position::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'W_ModTooltip_C_Set_Position::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_GetOwningPlayer_ReturnValue) == 0x000050, "Member 'W_ModTooltip_C_Set_Position::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_GetMousePosition_LocationX) == 0x000058, "Member 'W_ModTooltip_C_Set_Position::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_GetMousePosition_LocationY) == 0x00005C, "Member 'W_ModTooltip_C_Set_Position::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_GetMousePosition_ReturnValue) == 0x000060, "Member 'W_ModTooltip_C_Set_Position::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000061, "Member 'W_ModTooltip_C_Set_Position::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_MakeVector2D_ReturnValue_1) == 0x000064, "Member 'W_ModTooltip_C_Set_Position::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x00006C, "Member 'W_ModTooltip_C_Set_Position::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000074, "Member 'W_ModTooltip_C_Set_Position::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'W_ModTooltip_C_Set_Position::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_BreakVector2D_Y_1) == 0x00007C, "Member 'W_ModTooltip_C_Set_Position::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_Add_FloatFloat_ReturnValue) == 0x000080, "Member 'W_ModTooltip_C_Set_Position::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ModTooltip_C_Set_Position, CallFunc_MakeVector2D_ReturnValue_2) == 0x000084, "Member 'W_ModTooltip_C_Set_Position::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_SeedingPhaseStatusText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_SeedingPhaseStatusText.UMG_SeedingPhaseStatusText_C
// 0x0080 (0x02E8 - 0x0268)
class UUMG_SeedingPhaseStatusText_C final : public USQUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Blinking;                                          // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                BorderMain;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Clock;                                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           LiveVerticalBox;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PreLiveVerticalBox;                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        SeedState;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SeedVerticalBox;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_Countdown;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_GameLive;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TB_PlayerCount;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TimeToStart;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WaitingForPlayers;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_GameStateSquad_Seed_C*              SeedGameState;                                     // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           UpdateTimer;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialized;                                      // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DC7[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartAnimUnderTimeLeft;                            // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UMG_SeedingPhaseStatusText(int32 EntryPoint);
	void Construct();
	void PlayerThresholdUpdated();
	void OnInitialized();
	void PlayerJoinedOrLeft(class APlayerState* Player);
	void GameIsLive();
	void CountdownStateUpdated(bool Is_Active, float Time_Left);
	void UpdatePlayersCount(int32 CurrentPlayers, int32 MaxPlayers);
	void UpdateCountdownTimer();
	void BindToGameState();
	void UnbindFromGameState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_SeedingPhaseStatusText_C">();
	}
	static class UUMG_SeedingPhaseStatusText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_SeedingPhaseStatusText_C>();
	}
};
static_assert(alignof(UUMG_SeedingPhaseStatusText_C) == 0x000008, "Wrong alignment on UUMG_SeedingPhaseStatusText_C");
static_assert(sizeof(UUMG_SeedingPhaseStatusText_C) == 0x0002E8, "Wrong size on UUMG_SeedingPhaseStatusText_C");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, UberGraphFrame) == 0x000268, "Member 'UUMG_SeedingPhaseStatusText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, Blinking) == 0x000270, "Member 'UUMG_SeedingPhaseStatusText_C::Blinking' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, BorderMain) == 0x000278, "Member 'UUMG_SeedingPhaseStatusText_C::BorderMain' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, Clock) == 0x000280, "Member 'UUMG_SeedingPhaseStatusText_C::Clock' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, LiveVerticalBox) == 0x000288, "Member 'UUMG_SeedingPhaseStatusText_C::LiveVerticalBox' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, PreLiveVerticalBox) == 0x000290, "Member 'UUMG_SeedingPhaseStatusText_C::PreLiveVerticalBox' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, SeedState) == 0x000298, "Member 'UUMG_SeedingPhaseStatusText_C::SeedState' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, SeedVerticalBox) == 0x0002A0, "Member 'UUMG_SeedingPhaseStatusText_C::SeedVerticalBox' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, TB_Countdown) == 0x0002A8, "Member 'UUMG_SeedingPhaseStatusText_C::TB_Countdown' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, TB_GameLive) == 0x0002B0, "Member 'UUMG_SeedingPhaseStatusText_C::TB_GameLive' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, TB_PlayerCount) == 0x0002B8, "Member 'UUMG_SeedingPhaseStatusText_C::TB_PlayerCount' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, TimeToStart) == 0x0002C0, "Member 'UUMG_SeedingPhaseStatusText_C::TimeToStart' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, WaitingForPlayers) == 0x0002C8, "Member 'UUMG_SeedingPhaseStatusText_C::WaitingForPlayers' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, SeedGameState) == 0x0002D0, "Member 'UUMG_SeedingPhaseStatusText_C::SeedGameState' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, UpdateTimer) == 0x0002D8, "Member 'UUMG_SeedingPhaseStatusText_C::UpdateTimer' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, bInitialized) == 0x0002E0, "Member 'UUMG_SeedingPhaseStatusText_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UUMG_SeedingPhaseStatusText_C, StartAnimUnderTimeLeft) == 0x0002E4, "Member 'UUMG_SeedingPhaseStatusText_C::StartAnimUnderTimeLeft' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BMP1_AT3

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BMP1_AT3.BP_BMP1_AT3_C.ExecuteUbergraph_BP_BMP1_AT3
// 0x0018 (0x0018 - 0x0000)
struct BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimations_TripodAnimTime;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimations_WeaponAnimTime;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Origin;                               // 0x000C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3) == 0x000004, "Wrong alignment on BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3");
static_assert(sizeof(BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3) == 0x000018, "Wrong size on BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3");
static_assert(offsetof(BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3, EntryPoint) == 0x000000, "Member 'BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3, CallFunc_PlayAnimations_TripodAnimTime) == 0x000004, "Member 'BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3::CallFunc_PlayAnimations_TripodAnimTime' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3, CallFunc_PlayAnimations_WeaponAnimTime) == 0x000008, "Member 'BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3::CallFunc_PlayAnimations_WeaponAnimTime' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3, K2Node_Event_Origin) == 0x00000C, "Member 'BP_BMP1_AT3_C_ExecuteUbergraph_BP_BMP1_AT3::K2Node_Event_Origin' has a wrong offset!");

// Function BP_BMP1_AT3.BP_BMP1_AT3_C.BlueprintOnFire
// 0x000C (0x000C - 0x0000)
struct BP_BMP1_AT3_C_BlueprintOnFire final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BMP1_AT3_C_BlueprintOnFire) == 0x000004, "Wrong alignment on BP_BMP1_AT3_C_BlueprintOnFire");
static_assert(sizeof(BP_BMP1_AT3_C_BlueprintOnFire) == 0x00000C, "Wrong size on BP_BMP1_AT3_C_BlueprintOnFire");
static_assert(offsetof(BP_BMP1_AT3_C_BlueprintOnFire, Origin) == 0x000000, "Member 'BP_BMP1_AT3_C_BlueprintOnFire::Origin' has a wrong offset!");

// Function BP_BMP1_AT3.BP_BMP1_AT3_C.PlayAnimations
// 0x0080 (0x0080 - 0x0000)
struct BP_BMP1_AT3_C_PlayAnimations final
{
public:
	class ASQSoldier*                             Soldier;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           WeaponAnim;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           TripodAnim;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TripodAnimTime;                                    // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeaponAnimTime;                                    // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             LocalSoldier;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeaponPlayTime;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TripodPlayTime;                                    // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40F4[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40F5[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwnerPawn_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BMP1_Turret_INS_C*                  K2Node_DynamicCast_AsBP_BMP1_Turret_INS;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40F6[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F7[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASQSoldier*                             CallFunc_GetSoldier_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BMP1_AT3_C_PlayAnimations) == 0x000008, "Wrong alignment on BP_BMP1_AT3_C_PlayAnimations");
static_assert(sizeof(BP_BMP1_AT3_C_PlayAnimations) == 0x000080, "Wrong size on BP_BMP1_AT3_C_PlayAnimations");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, Soldier) == 0x000000, "Member 'BP_BMP1_AT3_C_PlayAnimations::Soldier' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, WeaponAnim) == 0x000008, "Member 'BP_BMP1_AT3_C_PlayAnimations::WeaponAnim' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, TripodAnim) == 0x000010, "Member 'BP_BMP1_AT3_C_PlayAnimations::TripodAnim' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, TripodAnimTime) == 0x000018, "Member 'BP_BMP1_AT3_C_PlayAnimations::TripodAnimTime' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, WeaponAnimTime) == 0x00001C, "Member 'BP_BMP1_AT3_C_PlayAnimations::WeaponAnimTime' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, LocalSoldier) == 0x000020, "Member 'BP_BMP1_AT3_C_PlayAnimations::LocalSoldier' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, WeaponPlayTime) == 0x000028, "Member 'BP_BMP1_AT3_C_PlayAnimations::WeaponPlayTime' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, TripodPlayTime) == 0x00002C, "Member 'BP_BMP1_AT3_C_PlayAnimations::TripodPlayTime' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_GetPlayLength_ReturnValue) == 0x000034, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_GetOwnerPawn_ReturnValue) == 0x000040, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_GetOwnerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, K2Node_DynamicCast_AsBP_BMP1_Turret_INS) == 0x000048, "Member 'BP_BMP1_AT3_C_PlayAnimations::K2Node_DynamicCast_AsBP_BMP1_Turret_INS' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_BMP1_AT3_C_PlayAnimations::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_IsValid_ReturnValue_3) == 0x000051, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_GetAnimInstance_ReturnValue) == 0x000058, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_Montage_Play_ReturnValue) == 0x000060, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000068, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_GetSoldier_ReturnValue) == 0x000070, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_GetSoldier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BMP1_AT3_C_PlayAnimations, CallFunc_Montage_Play_ReturnValue_1) == 0x000078, "Member 'BP_BMP1_AT3_C_PlayAnimations::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");

}


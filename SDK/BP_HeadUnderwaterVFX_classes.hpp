#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HeadUnderwaterVFX

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Squad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HeadUnderwaterVFX.BP_HeadUnderwaterVFX_C
// 0x0040 (0x05E0 - 0x05A0)
class UBP_HeadUnderwaterVFX_C final : public USQLocalCameraEffectHandler
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ASQPlayerController*                    PlayerController;                                  // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x05B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x05BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ripple_Time_On_Screen;                             // 0x05C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Large_Droplet_Fade_Time;                           // 0x05C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Droplet_Fade_Time;                                 // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanUpdate;                                         // 0x05CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F12[0x3];                                     // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASQSoldier*                             Soldier;                                           // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     ParentMaterial;                                    // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HeadUnderwaterVFX(int32 EntryPoint);
	void BP_ApplyCameraEffect(float DeltaTime, class ASQSoldier* SoldierToApplyTo);
	void BP_InitCameraEffect(class ASQPlayerController* InPlayerController);
	void Get_FX_Max_Time(float* Max_Time);
	bool CanStartUpdate(class ASQSoldier* Param_Soldier);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HeadUnderwaterVFX_C">();
	}
	static class UBP_HeadUnderwaterVFX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HeadUnderwaterVFX_C>();
	}
};
static_assert(alignof(UBP_HeadUnderwaterVFX_C) == 0x000010, "Wrong alignment on UBP_HeadUnderwaterVFX_C");
static_assert(sizeof(UBP_HeadUnderwaterVFX_C) == 0x0005E0, "Wrong size on UBP_HeadUnderwaterVFX_C");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, UberGraphFrame) == 0x0005A0, "Member 'UBP_HeadUnderwaterVFX_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, PlayerController) == 0x0005A8, "Member 'UBP_HeadUnderwaterVFX_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, Mid) == 0x0005B0, "Member 'UBP_HeadUnderwaterVFX_C::Mid' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, Time) == 0x0005B8, "Member 'UBP_HeadUnderwaterVFX_C::Time' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, Delta_Time) == 0x0005BC, "Member 'UBP_HeadUnderwaterVFX_C::Delta_Time' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, Ripple_Time_On_Screen) == 0x0005C0, "Member 'UBP_HeadUnderwaterVFX_C::Ripple_Time_On_Screen' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, Large_Droplet_Fade_Time) == 0x0005C4, "Member 'UBP_HeadUnderwaterVFX_C::Large_Droplet_Fade_Time' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, Droplet_Fade_Time) == 0x0005C8, "Member 'UBP_HeadUnderwaterVFX_C::Droplet_Fade_Time' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, CanUpdate) == 0x0005CC, "Member 'UBP_HeadUnderwaterVFX_C::CanUpdate' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, Soldier) == 0x0005D0, "Member 'UBP_HeadUnderwaterVFX_C::Soldier' has a wrong offset!");
static_assert(offsetof(UBP_HeadUnderwaterVFX_C, ParentMaterial) == 0x0005D8, "Member 'UBP_HeadUnderwaterVFX_C::ParentMaterial' has a wrong offset!");

}

